
set(ENABLE_NAYUKI_PORTABLE ON CACHE BOOL "Enable the Nayuki portable FFT processor (MIT)")

if (ENABLE_NAYUKI_PORTABLE)
list(APPEND FFT_PROCESSORS "nayuki-portable")
endif(ENABLE_NAYUKI_PORTABLE)

find_package(OpenSSL REQUIRED)

include_directories("include")

# include the fft processors in the build process
add_subdirectory(fft_processors)


add_library(tfhe_superaic_core SHARED)

target_link_libraries(tfhe_superaic_core 
PUBLIC
    tfhe-fft-nayuki-portable
    ${OPENSSL_LIBRARIES}
)

target_sources(tfhe_superaic_core
PRIVATE
    tfhe_superaic_torus.cpp include/tfhe_superaic_torus.h include/tfhe_generic_templates.h include/tfhe.h
    numeric-functions.cpp
    autogenerated.cpp
    lweparams.cpp include/lweparams.h
    lwekey.cpp include/lwekey.h
    lwesamples.cpp include/lwesamples.h
    lwe-functions.cpp include/lwe-functions.h
    lwekeyswitch.cpp include/lwekeyswitch.h
    polynomials.cpp include/polynomials.h
    toruspolynomial-functions.cpp
    multiplication.cpp include/polynomials_arithmetic.h include/lagrangehalfc_arithmetic.h
    tlwe.cpp include/tlwe.h
    tlwe-functions.cpp include/tlwe_functions.h
    tlwe-fft-operations.cpp 
    tgsw.cpp include/tgsw.h
    lwebootstrappingkey.cpp include/lwebootstrappingkey.h
    tgsw-functions.cpp include/tgsw_functions.h
    tgsw-fft-operations.cpp
    tfhe_gate_bootstrapping_structures.cpp include/tfhe_gate_bootstrapping_structures.h
    tfhe_gate_bootstrapping.cpp 
    boot-gates.cpp 
    tfhe_garbage_collector.cpp include/tfhe_garbage_collector.h
    lwe-bootstrapping-functions.cpp include/tfhe_gate_bootstrapping_functions.h
    lwe-bootstrapping-functions-fft.cpp
    lwe.cpp
    lwe-keyswitch-functions.cpp
    tfhe_io.cpp include/tfhe_io.h
    tfhe_generic_streams.cpp include/tfhe_generic_streams.h
    tfhe_package.cpp include/tfhe_package.h
    tfhe_session.cpp include/tfhe_session.h
    include/classic_PBS_parameters.h
    message_functions.cpp include/message_functions.h
)

target_include_directories(tfhe_superaic_core
PUBLIC
    include
PRIVATE
    $(CMAKE_CURRENT_LIST_DIR)
)

