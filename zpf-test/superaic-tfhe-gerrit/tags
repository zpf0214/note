!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_EXTRA_DESCRIPTION!Automake	canonicalizedName	/Include canonicalized object name like libctags_a/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!Asm	properties	/properties (req, vararg for parameters)/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FIELD_DESCRIPTION!ObjectiveC	category	/category attached to the class/
!_TAG_FIELD_DESCRIPTION!ObjectiveC	protocols	/protocols that the class (or category) confirms to/
!_TAG_FIELD_DESCRIPTION!Python	nameref	/the original name for the tag/
!_TAG_FIELD_DESCRIPTION!Thrift	target	/the target language specified at "namespace"/
!_TAG_FIELD_DESCRIPTION!Thrift	throws	/throws list of function/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!Asm	d,define	/defines/
!_TAG_KIND_DESCRIPTION!Asm	l,label	/labels/
!_TAG_KIND_DESCRIPTION!Asm	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Asm	t,type	/types (structs and records)/
!_TAG_KIND_DESCRIPTION!Autoconf	c,condition	/automake conditions/
!_TAG_KIND_DESCRIPTION!Autoconf	d,definition	/definitions/
!_TAG_KIND_DESCRIPTION!Autoconf	e,optenable	/options specified with --enable-.../
!_TAG_KIND_DESCRIPTION!Autoconf	m,macro	/autoconf macros/
!_TAG_KIND_DESCRIPTION!Autoconf	p,package	/packages/
!_TAG_KIND_DESCRIPTION!Autoconf	s,subst	/substitution keys/
!_TAG_KIND_DESCRIPTION!Autoconf	t,template	/templates/
!_TAG_KIND_DESCRIPTION!Autoconf	w,optwith	/options specified with --with-.../
!_TAG_KIND_DESCRIPTION!Automake	D,data	/datum/
!_TAG_KIND_DESCRIPTION!Automake	L,library	/libraries/
!_TAG_KIND_DESCRIPTION!Automake	M,man	/manuals/
!_TAG_KIND_DESCRIPTION!Automake	P,program	/programs/
!_TAG_KIND_DESCRIPTION!Automake	S,script	/scripts/
!_TAG_KIND_DESCRIPTION!Automake	T,ltlibrary	/ltlibraries/
!_TAG_KIND_DESCRIPTION!Automake	c,condition	/conditions/
!_TAG_KIND_DESCRIPTION!Automake	d,directory	/directories/
!_TAG_KIND_DESCRIPTION!Automake	s,subdir	/subdirs/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	M,module	/modules/
!_TAG_KIND_DESCRIPTION!C++	P,partition	/partitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!CMake	D,option	/options specified with -D/
!_TAG_KIND_DESCRIPTION!CMake	f,function	/functions/
!_TAG_KIND_DESCRIPTION!CMake	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!CMake	p,project	/projects/
!_TAG_KIND_DESCRIPTION!CMake	t,target	/targets/
!_TAG_KIND_DESCRIPTION!CMake	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Diff	d,deletedFile	/deleted files/
!_TAG_KIND_DESCRIPTION!Diff	h,hunk	/hunks/
!_TAG_KIND_DESCRIPTION!Diff	m,modifiedFile	/modified files/
!_TAG_KIND_DESCRIPTION!Diff	n,newFile	/newly created files/
!_TAG_KIND_DESCRIPTION!Iniconf	k,key	/keys/
!_TAG_KIND_DESCRIPTION!Iniconf	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Java	a,annotation	/annotation declarations/
!_TAG_KIND_DESCRIPTION!Java	c,class	/classes/
!_TAG_KIND_DESCRIPTION!Java	e,enumConstant	/enum constants/
!_TAG_KIND_DESCRIPTION!Java	f,field	/fields/
!_TAG_KIND_DESCRIPTION!Java	g,enum	/enum types/
!_TAG_KIND_DESCRIPTION!Java	i,interface	/interfaces/
!_TAG_KIND_DESCRIPTION!Java	m,method	/methods/
!_TAG_KIND_DESCRIPTION!Java	p,package	/packages/
!_TAG_KIND_DESCRIPTION!M4	I,macrofile	/macro files/
!_TAG_KIND_DESCRIPTION!M4	d,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	h,hashtag	/hashtags/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_KIND_DESCRIPTION!ObjectiveC	C,category	/categories/
!_TAG_KIND_DESCRIPTION!ObjectiveC	E,field	/Object field/
!_TAG_KIND_DESCRIPTION!ObjectiveC	I,implementation	/class implementation/
!_TAG_KIND_DESCRIPTION!ObjectiveC	M,macro	/A preprocessor macro/
!_TAG_KIND_DESCRIPTION!ObjectiveC	P,protocol	/Protocol/
!_TAG_KIND_DESCRIPTION!ObjectiveC	c,class	/Class' method/
!_TAG_KIND_DESCRIPTION!ObjectiveC	e,enum	/An enumeration/
!_TAG_KIND_DESCRIPTION!ObjectiveC	f,function	/A function/
!_TAG_KIND_DESCRIPTION!ObjectiveC	i,interface	/class interface/
!_TAG_KIND_DESCRIPTION!ObjectiveC	m,method	/Object's method/
!_TAG_KIND_DESCRIPTION!ObjectiveC	p,property	/A property/
!_TAG_KIND_DESCRIPTION!ObjectiveC	s,struct	/A type structure/
!_TAG_KIND_DESCRIPTION!ObjectiveC	t,typedef	/A type alias/
!_TAG_KIND_DESCRIPTION!ObjectiveC	v,var	/Global variable/
!_TAG_KIND_DESCRIPTION!Protobuf	D,protodef	/.proto definition/
!_TAG_KIND_DESCRIPTION!Protobuf	G,group	/groups/
!_TAG_KIND_DESCRIPTION!Protobuf	e,enumerator	/enum constants/
!_TAG_KIND_DESCRIPTION!Protobuf	f,field	/fields/
!_TAG_KIND_DESCRIPTION!Protobuf	g,enum	/enum types/
!_TAG_KIND_DESCRIPTION!Protobuf	m,message	/messages/
!_TAG_KIND_DESCRIPTION!Protobuf	o,oneof	/oneof names/
!_TAG_KIND_DESCRIPTION!Protobuf	p,package	/packages/
!_TAG_KIND_DESCRIPTION!Protobuf	r,rpc	/RPC methods/
!_TAG_KIND_DESCRIPTION!Protobuf	s,service	/services/
!_TAG_KIND_DESCRIPTION!Python	I,namespace	/name referring a module defined in other file/
!_TAG_KIND_DESCRIPTION!Python	Y,unknown	/name referring a class\/variable\/function\/module defined in other module/
!_TAG_KIND_DESCRIPTION!Python	c,class	/classes/
!_TAG_KIND_DESCRIPTION!Python	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Python	i,module	/modules/
!_TAG_KIND_DESCRIPTION!Python	m,member	/class members/
!_TAG_KIND_DESCRIPTION!Python	v,variable	/variables/
!_TAG_KIND_DESCRIPTION!Sh	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!Sh	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Sh	h,heredoc	/label for here document/
!_TAG_KIND_DESCRIPTION!Sh	s,script	/script files/
!_TAG_KIND_DESCRIPTION!Tcl	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!Tcl	p,procedure	/procedures/
!_TAG_KIND_DESCRIPTION!Thrift	C,const	/constants/
!_TAG_KIND_DESCRIPTION!Thrift	T,thriftFile	/thrift files/
!_TAG_KIND_DESCRIPTION!Thrift	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!Thrift	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Thrift	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!Thrift	m,member	/members/
!_TAG_KIND_DESCRIPTION!Thrift	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!Thrift	s,struct	/structs/
!_TAG_KIND_DESCRIPTION!Thrift	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!Thrift	u,union	/unions/
!_TAG_KIND_DESCRIPTION!Thrift	v,service	/services/
!_TAG_KIND_DESCRIPTION!Thrift	x,exception	/exceptions/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!Asm	1.0	/current.age/
!_TAG_PARSER_VERSION!Autoconf	0.0	/current.age/
!_TAG_PARSER_VERSION!Automake	1.1	/current.age/
!_TAG_PARSER_VERSION!C	1.1	/current.age/
!_TAG_PARSER_VERSION!C++	1.1	/current.age/
!_TAG_PARSER_VERSION!CMake	0.0	/current.age/
!_TAG_PARSER_VERSION!Diff	0.0	/current.age/
!_TAG_PARSER_VERSION!Iniconf	0.0	/current.age/
!_TAG_PARSER_VERSION!Java	0.0	/current.age/
!_TAG_PARSER_VERSION!M4	0.0	/current.age/
!_TAG_PARSER_VERSION!Make	1.1	/current.age/
!_TAG_PARSER_VERSION!Markdown	1.1	/current.age/
!_TAG_PARSER_VERSION!ObjectiveC	0.0	/current.age/
!_TAG_PARSER_VERSION!Protobuf	0.0	/current.age/
!_TAG_PARSER_VERSION!Python	0.0	/current.age/
!_TAG_PARSER_VERSION!Sh	0.0	/current.age/
!_TAG_PARSER_VERSION!Tcl	0.0	/current.age/
!_TAG_PARSER_VERSION!Thrift	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/root/note/zpf-test/superaic-tfhe-gerrit/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/b6d1cacac/
!_TAG_ROLE_DESCRIPTION!Autoconf!optenable	cmdline	/specified in a configure command line/
!_TAG_ROLE_DESCRIPTION!Autoconf!optwith	cmdline	/specified in a configure command line/
!_TAG_ROLE_DESCRIPTION!Automake!condition	branched	/used for branching/
!_TAG_ROLE_DESCRIPTION!Automake!directory	data	/directory for DATA primary/
!_TAG_ROLE_DESCRIPTION!Automake!directory	library	/directory for LIBRARIES primary/
!_TAG_ROLE_DESCRIPTION!Automake!directory	ltlibrary	/directory for LTLIBRARIES primary/
!_TAG_ROLE_DESCRIPTION!Automake!directory	man	/directory for MANS primary/
!_TAG_ROLE_DESCRIPTION!Automake!directory	program	/directory for PROGRAMS primary/
!_TAG_ROLE_DESCRIPTION!Automake!directory	script	/directory for SCRIPTS primary/
!_TAG_ROLE_DESCRIPTION!C!function	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C!struct	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C++!header	exported	/exported with "exported imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!header	imported	/imported with "imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C++!module	imported	/imported with "imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!module	partOwner	/used for specifying a partition/
!_TAG_ROLE_DESCRIPTION!C++!partition	imported	/imported with "imported ..."/
!_TAG_ROLE_DESCRIPTION!Java!package	imported	/imported package/
!_TAG_ROLE_DESCRIPTION!M4!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!M4!macrofile	included	/included macro/
!_TAG_ROLE_DESCRIPTION!M4!macrofile	sincluded	/silently included macro/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
!_TAG_ROLE_DESCRIPTION!Protobuf!message	extension	/extending the message/
!_TAG_ROLE_DESCRIPTION!Protobuf!protodef	imported	/imported/
!_TAG_ROLE_DESCRIPTION!Python!module	imported	/imported modules/
!_TAG_ROLE_DESCRIPTION!Python!module	indirectlyImported	/module imported in alternative name/
!_TAG_ROLE_DESCRIPTION!Python!module	namespace	/namespace from where classes\/variables\/functions are imported/
!_TAG_ROLE_DESCRIPTION!Python!unknown	imported	/imported from the other module/
!_TAG_ROLE_DESCRIPTION!Python!unknown	indirectlyImported	/classes\/variables\/functions\/modules imported in alternative name/
!_TAG_ROLE_DESCRIPTION!Sh!heredoc	endmarker	/end marker/
!_TAG_ROLE_DESCRIPTION!Sh!script	loaded	/loaded/
!_TAG_ROLE_DESCRIPTION!Thrift!thriftFile	included	/included file/
$(FUSED_GTEST_ALL_CC)	src/tests/googletest/googletest/scripts/test/Makefile	/^$(FUSED_GTEST_ALL_CC) :$/;"	t
$(FUSED_GTEST_H)	src/tests/googletest/googletest/scripts/test/Makefile	/^$(FUSED_GTEST_H) :$/;"	t
$(VERBOSE).SILENT	buildotests/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(VERBOSE).SILENT	buildotests/driver/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(VERBOSE).SILENT	buildotests/examples/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(VERBOSE).SILENT	buildotests/libtfhe-superaic-acc/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(VERBOSE).SILENT	buildotests/libtfhe-superaic-client/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(VERBOSE).SILENT	buildotests/libtfhe-superaic-core/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(VERBOSE).SILENT	buildotests/libtfhe-superaic-core/fft_processors/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(VERBOSE).SILENT	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(VERBOSE).SILENT	buildotests/libtfhe-superaic-server/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(VERBOSE).SILENT	buildotests/tests/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(VERBOSE).SILENT	buildotests/tests/googletest/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(VERBOSE).SILENT	buildotests/tests/googletest/googlemock/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(VERBOSE).SILENT	buildotests/tests/googletest/googlemock/gtest/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(subdirs)	src/tests/googletest/googlemock/Makefile.am	/^SUBDIRS = $(subdirs)$/;"	s
$(test_fused_gtest_test_SOURCES)	src/tests/googletest/googletest/Makefile.am	/^$(test_fused_gtest_test_SOURCES): fused-gtest$/;"	t
$(test_gmock_fused_test_SOURCES)	src/tests/googletest/googlemock/Makefile.am	/^$(test_gmock_fused_test_SOURCES): fused-gmock-internal$/;"	t
-1,4 +1,4	src/muduo/patches/backport.diff	/^@@ -1,4 +1,4 @@$/;"	h	modifiedFile:a/examples/idleconnection/CMakeLists.txt
-1,5 +1,8	src/muduo/patches/MacOSX.diff	/^@@ -1,5 +1,8 @@$/;"	h	modifiedFile:a/muduo/base/tests/LogFile_test.cc
-1,6 +1,5	src/muduo/patches/MacOSX.diff	/^@@ -1,6 +1,5 @@$/;"	h	modifiedFile:a/examples/socks4a/tcprelay.cc
-10,7 +10,7	src/muduo/patches/backport.diff	/^@@ -10,7 +10,7 @@ target_link_libraries(blockingqueue_test muduo_base)$/;"	h	modifiedFile:a/muduo/base/tests/CMakeLists.txt
-102,6 +102,9	src/muduo/patches/MacOSX.diff	/^@@ -102,6 +102,9 @@ void Channel::handleEventWithGuard(Timestamp receiveTime)$/;"	h	modifiedFile:a/muduo/net/Channel.cc
-108,12 +103,13	src/muduo/patches/backport.diff	/^@@ -108,12 +103,13 @@ void EventLoop::loop()$/;"	h	modifiedFile:a/muduo/net/EventLoop.cc
-11,14 +11,15	src/muduo/patches/MacOSX.diff	/^@@ -11,14 +11,15 @@ endif()$/;"	h	modifiedFile:a/CMakeLists.txt
-110,12 +103,13	src/muduo/patches/MacOSX.diff	/^@@ -110,12 +103,13 @@ void EventLoop::loop()$/;"	h	modifiedFile:a/muduo/net/EventLoop.cc
-110,13 +113,8	src/muduo/patches/MacOSX.diff	/^@@ -110,13 +113,8 @@ void sockets::listenOrDie(int sockfd)$/;"	h	modifiedFile:a/muduo/net/SocketsOps.cc
-12,7 +12,28	src/muduo/patches/MacOSX.diff	/^@@ -12,7 +12,28 @@$/;"	h	modifiedFile:a/muduo/net/Endian.h
-12,7 +12,7	src/muduo/patches/MacOSX.diff	/^@@ -12,7 +12,7 @@$/;"	h	modifiedFile:a/examples/protobuf/rpcbalancer/balancer_raw.cc
-129,11 +78,19	src/muduo/patches/backport.diff	/^@@ -129,11 +78,19 @@ void TimerQueue::cancel(TimerId timerId)$/;"	h	modifiedFile:a/muduo/net/TimerQueue.cc
-13,6 +13,7	src/muduo/patches/backport.diff	/^@@ -13,6 +13,7 @@$/;"	h	modifiedFile:a/muduo/net/Endian.h
-130,7 +130,7	src/muduo/patches/backport.diff	/^@@ -130,7 +130,7 @@ class EventLoop : boost::noncopyable$/;"	h	modifiedFile:a/muduo/net/EventLoop.h
-135,8 +138,10	src/muduo/patches/MacOSX.diff	/^@@ -135,8 +138,10 @@ string Channel::eventsToString(int fd, int ev)$/;"	h	modifiedFile:a/muduo/net/Channel.cc
-146,11 +93,19	src/muduo/patches/MacOSX.diff	/^@@ -146,11 +93,19 @@ void TimerQueue::cancel(TimerId timerId)$/;"	h	modifiedFile:a/muduo/net/TimerQueue.cc
-15,10 +15,12	src/muduo/patches/MacOSX.diff	/^@@ -15,10 +15,12 @@$/;"	h	modifiedFile:a/muduo/base/Thread.cc
-156,7 +156,7	src/muduo/patches/MacOSX.diff	/^@@ -156,7 +156,7 @@ class EventLoop : boost::noncopyable$/;"	h	modifiedFile:a/muduo/net/EventLoop.h
-157,11 +114,10	src/muduo/patches/backport.diff	/^@@ -157,11 +114,10 @@ void TimerQueue::cancelInLoop(TimerId timerId)$/;"	h	modifiedFile:a/muduo/net/TimerQueue.cc
-16,10 +16,10	src/muduo/patches/MacOSX.diff	/^@@ -16,10 +16,10 @@ set(base_SRCS$/;"	h	modifiedFile:a/muduo/base/CMakeLists.txt
-16,6 +16,9	src/muduo/patches/MacOSX.diff	/^@@ -16,6 +16,9 @@ using namespace muduo::net;$/;"	h	modifiedFile:a/muduo/net/poller/DefaultPoller.cc
-16,7 +16,6	src/muduo/patches/MacOSX.diff	/^@@ -16,7 +16,6 @@ set(net_SRCS$/;"	h	modifiedFile:a/muduo/net/CMakeLists.txt
-16,8 +16,6	src/muduo/patches/backport.diff	/^@@ -16,8 +16,6 @@$/;"	h	modifiedFile:a/muduo/net/TimerQueue.cc
-17,18 +17,26	src/muduo/patches/MacOSX.diff	/^@@ -17,18 +17,26 @@$/;"	h	modifiedFile:a/muduo/net/SocketsOps.cc
-17,7 +17,12	src/muduo/patches/MacOSX.diff	/^@@ -17,7 +17,12 @@ const size_t frameLen = 2*sizeof(int64_t);$/;"	h	modifiedFile:a/examples/roundtrip/roundtrip_udp.cc
-17,9 +17,7	src/muduo/patches/backport.diff	/^@@ -17,9 +17,7 @@$/;"	h	modifiedFile:a/muduo/net/InetAddress.cc
-174,11 +129,10	src/muduo/patches/MacOSX.diff	/^@@ -174,11 +129,10 @@ void TimerQueue::cancelInLoop(TimerId timerId)$/;"	h	modifiedFile:a/muduo/net/TimerQueue.cc
-18,7 +18,8	src/muduo/patches/MacOSX.diff	/^@@ -18,7 +18,8 @@$/;"	h	modifiedFile:a/muduo/net/EventLoop.cc
-18,7 +18,8	src/muduo/patches/backport.diff	/^@@ -18,7 +18,8 @@$/;"	h	modifiedFile:a/muduo/net/EventLoop.cc
-19,10 +19,10	src/muduo/patches/MacOSX.diff	/^@@ -19,10 +19,10 @@$/;"	h	modifiedFile:a/muduo/net/InetAddress.cc
-19,8 +19,6	src/muduo/patches/MacOSX.diff	/^@@ -19,8 +19,6 @@$/;"	h	modifiedFile:a/muduo/net/TimerQueue.cc
-2,6 +2,8	src/muduo/patches/MacOSX.diff	/^@@ -2,6 +2,8 @@$/;"	h	modifiedFile:a/muduo/base/tests/GzipFile_test.cc
-2,7 +2,7	src/muduo/patches/armlinux.diff	/^@@ -2,7 +2,7 @@$/;"	h	modifiedFile:a/muduo/base/tests/CMakeLists.txt
-21,6 +21,10	src/muduo/patches/backport.diff	/^@@ -21,6 +21,10 @@ const int Channel::kNoneEvent = 0;$/;"	h	modifiedFile:a/muduo/net/Channel.cc
-21,7 +21,7	src/muduo/patches/armlinux.diff	/^@@ -21,7 +21,7 @@ set(CXX_FLAGS$/;"	h	modifiedFile:a/CMakeLists.txt
-215,22 +211,19	src/muduo/patches/backport.diff	/^@@ -215,22 +211,19 @@ void EventLoop::abortNotInLoopThread()$/;"	h	modifiedFile:a/muduo/net/EventLoop.cc
-225,11 +181,6	src/muduo/patches/backport.diff	/^@@ -225,11 +181,6 @@ void TimerQueue::reset(const std::vector<Entry>& expired, Timestamp now)$/;"	h	modifiedFile:a/muduo/net/TimerQueue.cc
-23,48 +24,38	src/muduo/patches/backport.diff	/^@@ -23,48 +24,38 @@ namespace sockets$/;"	h	modifiedFile:a/muduo/net/Endian.h
-24,4 +27,5	src/muduo/patches/MacOSX.diff	/^@@ -24,4 +27,5 @@ Poller* Poller::newDefaultPoller(EventLoop* loop)$/;"	h	modifiedFile:a/muduo/net/poller/DefaultPoller.cc
-24,6 +24,9	src/muduo/patches/MacOSX.diff	/^@@ -24,6 +24,9 @@ namespace sockets$/;"	h	modifiedFile:a/muduo/net/SocketsOps.h
-242,11 +196,6	src/muduo/patches/MacOSX.diff	/^@@ -242,11 +196,6 @@ void TimerQueue::reset(const std::vector<Entry>& expired, Timestamp now)$/;"	h	modifiedFile:a/muduo/net/TimerQueue.cc
-25,57 +23,15	src/muduo/patches/backport.diff	/^@@ -25,57 +23,15 @@ namespace net$/;"	h	modifiedFile:a/muduo/net/TimerQueue.cc
-25,6 +25,8	src/muduo/patches/backport.diff	/^@@ -25,6 +25,8 @@ namespace sockets$/;"	h	modifiedFile:a/muduo/net/SocketsOps.h
-26,7 +26,6	src/muduo/patches/backport.diff	/^@@ -26,7 +26,6 @@ using namespace muduo::net;$/;"	h	modifiedFile:a/muduo/net/poller/EPollPoller.cc
-27,13 +27,18	src/muduo/patches/MacOSX.diff	/^@@ -27,13 +27,18 @@ Socket::~Socket()$/;"	h	modifiedFile:a/muduo/net/Socket.cc
-27,16 +28,15	src/muduo/patches/MacOSX.diff	/^@@ -27,16 +28,15 @@ set(CXX_FLAGS$/;"	h	modifiedFile:a/CMakeLists.txt
-273,7 +267,7	src/muduo/patches/MacOSX.diff	/^@@ -273,7 +267,7 @@ void EventLoop::abortNotInLoopThread()$/;"	h	modifiedFile:a/muduo/net/EventLoop.cc
-28,57 +26,15	src/muduo/patches/MacOSX.diff	/^@@ -28,57 +26,15 @@ namespace net$/;"	h	modifiedFile:a/muduo/net/TimerQueue.cc
-283,7 +277,7	src/muduo/patches/MacOSX.diff	/^@@ -283,7 +277,7 @@ void EventLoop::wakeup()$/;"	h	modifiedFile:a/muduo/net/EventLoop.cc
-285,7 +285,7	src/muduo/patches/MacOSX.diff	/^@@ -285,7 +285,7 @@ struct tm TimeZone::toLocalTime(time_t seconds) const$/;"	h	modifiedFile:a/muduo/base/TimeZone.cc
-29,18 +30,6	src/muduo/patches/MacOSX.diff	/^@@ -29,18 +30,6 @@ __thread EventLoop* t_loopInThisThread = 0;$/;"	h	modifiedFile:a/muduo/net/EventLoop.cc
-29,18 +30,6	src/muduo/patches/backport.diff	/^@@ -29,18 +30,6 @@ __thread EventLoop* t_loopInThisThread = 0;$/;"	h	modifiedFile:a/muduo/net/EventLoop.cc
-31,7 +31,7	src/muduo/patches/armlinux.diff	/^@@ -31,7 +31,7 @@ if(CMAKE_BUILD_BITS EQUAL 32)$/;"	h	modifiedFile:a/CMakeLists.txt
-31,7 +31,7	src/muduo/patches/backport.diff	/^@@ -31,7 +31,7 @@ if(CMAKE_BUILD_BITS EQUAL 32)$/;"	h	modifiedFile:a/CMakeLists.txt
-35,10 +37,17	src/muduo/patches/MacOSX.diff	/^@@ -35,10 +37,17 @@ namespace CurrentThread$/;"	h	modifiedFile:a/muduo/base/Thread.cc
-36,7 +36,12	src/muduo/patches/MacOSX.diff	/^@@ -36,7 +36,12 @@ __thread time_t t_lastSecond;$/;"	h	modifiedFile:a/muduo/base/Logging.cc
-37,7 +37,9	src/muduo/patches/backport.diff	/^@@ -37,7 +37,9 @@ SA* sockaddr_cast(struct sockaddr_in* addr)$/;"	h	modifiedFile:a/muduo/net/SocketsOps.cc
-39,7 +38,7	src/muduo/patches/backport.diff	/^@@ -39,7 +38,7 @@ const int kDeleted = 2;$/;"	h	modifiedFile:a/muduo/net/poller/EPollPoller.cc
-4,6 +4,9	src/muduo/patches/MacOSX.diff	/^@@ -4,6 +4,9 @@$/;"	h	modifiedFile:a/muduo/base/tests/AsyncLogging_test.cc
-4,7 +4,7	src/muduo/patches/backport.diff	/^@@ -4,7 +4,7 @@$/;"	h	modifiedFile:a/muduo/base/Timestamp.cc
-43,7 +42,6	src/muduo/patches/MacOSX.diff	/^@@ -43,7 +42,6 @@ void onServerMessage(const TcpConnectionPtr& conn, Buffer* buf, Timestamp)$/;"	h	modifiedFile:a/examples/socks4a/tcprelay.cc
-45,6 +53,9	src/muduo/patches/MacOSX.diff	/^@@ -45,6 +53,9 @@ void setNonBlockAndCloseOnExec(int sockfd)$/;"	h	modifiedFile:a/muduo/net/SocketsOps.cc
-50,7 +39,6	src/muduo/patches/MacOSX.diff	/^@@ -50,7 +39,6 @@ class IgnoreSigPipe$/;"	h	modifiedFile:a/muduo/net/EventLoop.cc
-50,7 +39,6	src/muduo/patches/backport.diff	/^@@ -50,7 +39,6 @@ class IgnoreSigPipe$/;"	h	modifiedFile:a/muduo/net/EventLoop.cc
-51,6 +51,9	src/muduo/patches/backport.diff	/^@@ -51,6 +51,9 @@ class TimerQueue : boost::noncopyable$/;"	h	modifiedFile:a/muduo/net/TimerQueue.h
-54,12 +56,9	src/muduo/patches/backport.diff	/^@@ -54,12 +56,9 @@ void setNonBlockAndCloseOnExec(int sockfd)$/;"	h	modifiedFile:a/muduo/net/SocketsOps.cc
-56,6 +56,9	src/muduo/patches/MacOSX.diff	/^@@ -56,6 +56,9 @@ class TimerQueue : boost::noncopyable$/;"	h	modifiedFile:a/muduo/net/TimerQueue.h
-56,6 +61,9	src/muduo/patches/MacOSX.diff	/^@@ -56,6 +61,9 @@ bool Socket::getTcpInfoString(char* buf, int len) const$/;"	h	modifiedFile:a/muduo/net/Socket.cc
-6,13 +6,21	src/muduo/patches/MacOSX.diff	/^@@ -6,13 +6,21 @@$/;"	h	modifiedFile:a/muduo/base/Condition.cc
-60,8 +81,8	src/muduo/patches/MacOSX.diff	/^@@ -60,8 +81,8 @@ inline uint16_t networkToHost16(uint16_t net16)$/;"	h	modifiedFile:a/muduo/net/Endian.h
-61,8 +64,6	src/muduo/patches/backport.diff	/^@@ -61,8 +64,6 @@ class TimerQueue : boost::noncopyable$/;"	h	modifiedFile:a/muduo/net/TimerQueue.h
-64,8 +64,12	src/muduo/patches/MacOSX.diff	/^@@ -64,8 +64,12 @@ void FileUtil::AppendFile::flush()$/;"	h	modifiedFile:a/muduo/base/FileUtil.cc
-66,8 +69,6	src/muduo/patches/MacOSX.diff	/^@@ -66,8 +69,6 @@ class TimerQueue : boost::noncopyable$/;"	h	modifiedFile:a/muduo/net/TimerQueue.h
-67,13 +66,6	src/muduo/patches/backport.diff	/^@@ -67,13 +66,6 @@ int sockets::createNonblockingOrDie()$/;"	h	modifiedFile:a/muduo/net/SocketsOps.cc
-69,11 +57,15	src/muduo/patches/MacOSX.diff	/^@@ -69,11 +57,15 @@ EventLoop::EventLoop()$/;"	h	modifiedFile:a/muduo/net/EventLoop.cc
-69,11 +57,17	src/muduo/patches/backport.diff	/^@@ -69,11 +57,17 @@ EventLoop::EventLoop()$/;"	h	modifiedFile:a/muduo/net/EventLoop.cc
-70,9 +71,6	src/muduo/patches/backport.diff	/^@@ -70,9 +71,6 @@ class TimerQueue : boost::noncopyable$/;"	h	modifiedFile:a/muduo/net/TimerQueue.h
-71,7 +82,6	src/muduo/patches/MacOSX.diff	/^@@ -71,7 +82,6 @@ struct sockaddr_in* sockets::sockaddr_in_cast(struct sockaddr* addr)$/;"	h	modifiedFile:a/muduo/net/SocketsOps.cc
-75,9 +76,6	src/muduo/patches/MacOSX.diff	/^@@ -75,9 +76,6 @@ class TimerQueue : boost::noncopyable$/;"	h	modifiedFile:a/muduo/net/TimerQueue.h
-79,13 +89,6	src/muduo/patches/MacOSX.diff	/^@@ -79,13 +89,6 @@ int sockets::createNonblockingOrDie()$/;"	h	modifiedFile:a/muduo/net/SocketsOps.cc
-8,6 +8,7	src/muduo/patches/armlinux.diff	/^@@ -8,6 +8,7 @@$/;"	h	modifiedFile:a/muduo/base/Atomic.h
-8,7 +8,7	src/muduo/patches/MacOSX.diff	/^@@ -8,7 +8,7 @@$/;"	h	modifiedFile:a/muduo/base/TimeZone.cc
-80,9 +80,6	src/muduo/patches/MacOSX.diff	/^@@ -80,9 +80,6 @@ class Test$/;"	h	modifiedFile:a/muduo/base/tests/BlockingQueue_test.cc
-83,10 +83,15	src/muduo/patches/MacOSX.diff	/^@@ -83,10 +83,15 @@ bool InetAddress::resolve(StringArg hostname, InetAddress* out)$/;"	h	modifiedFile:a/muduo/net/InetAddress.cc
-83,10 +84,88	src/muduo/patches/armlinux.diff	/^@@ -83,10 +84,88 @@ class AtomicIntegerT : boost::noncopyable$/;"	h	modifiedFile:a/muduo/base/Atomic.h
-88,20 +44,13	src/muduo/patches/backport.diff	/^@@ -88,20 +44,13 @@ using namespace muduo::net::detail;$/;"	h	modifiedFile:a/muduo/net/TimerQueue.cc
-88,7 +97,9	src/muduo/patches/MacOSX.diff	/^@@ -88,7 +97,9 @@ struct ThreadData$/;"	h	modifiedFile:a/muduo/base/Thread.cc
-9,19 +9,19	src/muduo/patches/backport.diff	/^@@ -9,19 +9,19 @@ endif()$/;"	h	modifiedFile:a/CMakeLists.txt
-91,22 +47,13	src/muduo/patches/MacOSX.diff	/^@@ -91,22 +47,13 @@ using namespace muduo::net::detail;$/;"	h	modifiedFile:a/muduo/net/TimerQueue.cc
-92,8 +89,6	src/muduo/patches/MacOSX.diff	/^@@ -92,8 +89,6 @@ void testMove()$/;"	h	modifiedFile:a/muduo/base/tests/BlockingQueue_test.cc
-93,7 +87,8	src/muduo/patches/backport.diff	/^@@ -93,7 +87,8 @@ EventLoop::~EventLoop()$/;"	h	modifiedFile:a/muduo/net/EventLoop.cc
-95,7 +87,8	src/muduo/patches/MacOSX.diff	/^@@ -95,7 +87,8 @@ EventLoop::~EventLoop()$/;"	h	modifiedFile:a/muduo/net/EventLoop.cc
-98,13 +90,8	src/muduo/patches/backport.diff	/^@@ -98,13 +90,8 @@ void sockets::listenOrDie(int sockfd)$/;"	h	modifiedFile:a/muduo/net/SocketsOps.cc
A	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline Matcher<T> A() { return MakeMatcher(new internal::AnyMatcherImpl<T>()); }$/;"	f	namespace:testing	typeref:typename:Matcher<T>
A	src/tests/googletest/googletest/test/gtest-linked_ptr_test.cc	/^  A(): mynum(num++) { *history << "A" << mynum << " ctor\\n"; }$/;"	f	class:__anonf616d1f80111::A	file:
A	src/tests/googletest/googletest/test/gtest-linked_ptr_test.cc	/^class A {$/;"	c	namespace:__anonf616d1f80111	file:
A	src/tests/googletest/googletest/test/gtest_shuffle_test_.cc	/^class A : public Test {};$/;"	c	namespace:__anon91ff1dea0111	file:
A Case for Mock Turtles	src/tests/googletest/googlemock/docs/ForDummies.md	/^# A Case for Mock Turtles #$/;"	c
A Case for Mock Turtles	src/tests/googletest/googlemock/docs/v1_5/ForDummies.md	/^# A Case for Mock Turtles #$/;"	c
A Case for Mock Turtles	src/tests/googletest/googlemock/docs/v1_6/ForDummies.md	/^# A Case for Mock Turtles #$/;"	c
A Case for Mock Turtles	src/tests/googletest/googlemock/docs/v1_7/ForDummies.md	/^# A Case for Mock Turtles #$/;"	c
ACCELERATOR	src/libtfhe-superaic-acc/accs/libacc.h	/^class ACCELERATOR{$/;"	c
ACCESS	src/tests/googletest/googlemock/scripts/generator/cpp/keywords.py	/^ACCESS = set('public protected private friend'.split())$/;"	v
ACCTest	src/tests/ACC_test.cpp	/^    class ACCTest : public ::testing::Test {$/;"	c	namespace:__anonef2481d50111	file:
ACCTest	src/tests/FPGA_ACC_test.cpp	/^    class ACCTest : public ::testing::Test {$/;"	c	namespace:__anon88d438720111	file:
ACCTest	src/tests/QEMU_test.cpp	/^    class ACCTest : public ::testing::Test {$/;"	c	namespace:__anon4f389dc60111	file:
ACC_CPU	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    ACC_CPU,$/;"	e	enum:tfhe_superaic::TFHE_ACC::ACC_TYPE
ACC_FPGA	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    ACC_FPGA = 0,$/;"	e	enum:tfhe_superaic::TFHE_ACC::ACC_TYPE
ACC_INVALID_FILE	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    ACC_INVALID_FILE,       \/\/ 无法打开文件，可能的原因是：没有加载驱动，/;"	e	enum:tfhe_superaic::ACC_RESULT
ACC_INVALID_PARAM	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    ACC_INVALID_PARAM,      \/\/ 非法参数$/;"	e	enum:tfhe_superaic::ACC_RESULT
ACC_INVALID_RES	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    ACC_INVALID_RES,        \/\/ 资源没有准备好，可能的原因是：没有分配内存/;"	e	enum:tfhe_superaic::ACC_RESULT
ACC_NO_SESSION	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    ACC_NO_SESSION,         $/;"	e	enum:tfhe_superaic::ACC_RESULT
ACC_OK	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    ACC_OK = 0,$/;"	e	enum:tfhe_superaic::ACC_RESULT
ACC_QEMU	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    ACC_QEMU,$/;"	e	enum:tfhe_superaic::TFHE_ACC::ACC_TYPE
ACC_RESULT	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^enum ACC_RESULT{$/;"	g	namespace:tfhe_superaic
ACC_TIMEOUT	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    ACC_TIMEOUT,$/;"	e	enum:tfhe_superaic::ACC_RESULT
ACC_TYPE	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    enum ACC_TYPE{$/;"	g	class:tfhe_superaic::TFHE_ACC
ACC_UNKONW	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    ACC_UNKONW$/;"	e	enum:tfhe_superaic::TFHE_ACC::ACC_TYPE
ACLOCAL_AMFLAGS	src/tests/googletest/googletest/Makefile.am	/^ACLOCAL_AMFLAGS = -I m4$/;"	m
ACQUIRE	src/muduo/muduo/base/Mutex.h	/^  explicit MutexLockGuard(MutexLock& mutex) ACQUIRE(mutex)$/;"	f	class:muduo::MutexLockGuard	typeref:typename:MutexLock & mutex
ACQUIRE	src/muduo/muduo/base/Mutex.h	/^#define ACQUIRE(/;"	d
ACQUIRED_AFTER	src/muduo/muduo/base/Mutex.h	/^#define ACQUIRED_AFTER(/;"	d
ACQUIRED_BEFORE	src/muduo/muduo/base/Mutex.h	/^#define ACQUIRED_BEFORE(/;"	d
ACQUIRE_SHARED	src/muduo/muduo/base/Mutex.h	/^#define ACQUIRE_SHARED(/;"	d
ACTION	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define ACTION(/;"	d
ACTION	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^ACTION(DoFoo) {}$/;"	f	namespace:testing::gmock_generated_actions_test
ACTION	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^ACTION(IncrementArg1) { (*arg1)++; }$/;"	f	namespace:testing::gmock_generated_actions_test
ACTION	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^ACTION(IncrementArg2) {$/;"	f	namespace:testing::gmock_generated_actions_test
ACTION	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^ACTION(InvokeDummy) {$/;"	f	namespace:testing::gmock_generated_actions_test
ACTION	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^ACTION(InvokeDummy2) {$/;"	f	namespace:testing::gmock_generated_actions_test
ACTION	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^ACTION(OverloadedAction) { return arg0 ? arg1 : "hello"; }$/;"	f	namespace:testing::gmock_generated_actions_test
ACTION	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^ACTION(PlusTwo) { return arg0 + 2; }$/;"	f	namespace:testing::gmock_generated_actions_test
ACTION	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^ACTION(Return5) { return 5; }$/;"	f	namespace:testing::gmock_generated_actions_test
ACTION	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^ACTION(ReturnAddrOfConstBoolReferenceArg) {$/;"	f	namespace:testing::gmock_generated_actions_test
ACTION	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^ACTION(ReturnAddrOfIntReferenceArg) {$/;"	f	namespace:testing::gmock_generated_actions_test
ACTION	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^ACTION(ReturnSum) { return 0; }$/;"	f	namespace:testing::gmock_generated_actions_test
ACTION	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^ACTION(Sum) { return arg0 + arg1; }$/;"	f	namespace:testing::gmock_generated_actions_test::action_test
ACTION	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^ACTION(Sum2) {$/;"	f	namespace:testing::gmock_generated_actions_test
ACTION	src/tests/googletest/googlemock/test/gmock_link_test.h	/^ACTION(Return1) { return 1; }$/;"	f	namespace:__anond0ecb2020111
ACTION_P	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define ACTION_P(/;"	d
ACTION_P	src/tests/googletest/googlemock/include/gmock/gmock-more-actions.h	/^ACTION_P(ReturnPointee, pointer) { return *pointer; }$/;"	f	namespace:testing
ACTION_P	src/tests/googletest/googlemock/include/gmock/gmock-more-actions.h	/^ACTION_P(Throw, exception) { throw exception; }$/;"	f	namespace:testing
ACTION_P	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^ACTION_P(DoFoo, p) {}$/;"	f	namespace:testing::gmock_generated_actions_test
ACTION_P	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^ACTION_P(OverloadedAction, default_value) {$/;"	f	namespace:testing::gmock_generated_actions_test
ACTION_P	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^ACTION_P(Plus, n) { return arg0 + n; }$/;"	f	namespace:testing::gmock_generated_actions_test
ACTION_P	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^ACTION_P(Plus1, x) { return x; }$/;"	f	namespace:testing::gmock_generated_actions_test
ACTION_P	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^ACTION_P(ReturnSum, x) { return x; }$/;"	f	namespace:testing::gmock_generated_actions_test
ACTION_P	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^ACTION_P(TypedPlus, n) {$/;"	f	namespace:testing::gmock_generated_actions_test
ACTION_P	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^ACTION_P(Delete, ptr) { delete ptr; }$/;"	f	namespace:__anon6b6cf3b20111
ACTION_P	src/tests/googletest/googlemock/test/gmock_link_test.h	/^ACTION_P(ReturnArgument, ret_value) { return ret_value; }$/;"	f	namespace:__anond0ecb2020211
ACTION_P10	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define ACTION_P10(/;"	d
ACTION_P10	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^ACTION_P10(Plus, p0, p1, p2, p3, p4, p5, p6, p7, p8, last_param) {$/;"	f	namespace:testing::gmock_generated_actions_test
ACTION_P10	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^ACTION_P10(Plus10, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {$/;"	f	namespace:testing::gmock_generated_actions_test
ACTION_P2	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define ACTION_P2(/;"	d
ACTION_P2	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^ACTION_P2(DoFoo, p0, p1) {}$/;"	f	namespace:testing::gmock_generated_actions_test
ACTION_P2	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^ACTION_P2(OverloadedAction, true_value, false_value) {$/;"	f	namespace:testing::gmock_generated_actions_test
ACTION_P2	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^ACTION_P2(PadArgument, prefix, suffix) {$/;"	f	namespace:testing::gmock_generated_actions_test
ACTION_P2	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^ACTION_P2(Plus2, x, y) { return x + y; }$/;"	f	namespace:testing::gmock_generated_actions_test
ACTION_P2	src/tests/googletest/googlemock/test/gmock_link_test.h	/^ACTION_P2(ReturnEqualsEitherOf, first, second) {$/;"	f	namespace:__anond0ecb2020311
ACTION_P3	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define ACTION_P3(/;"	d
ACTION_P3	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^ACTION_P3(ConcatImpl, a, b, c) {$/;"	f	namespace:testing::gmock_generated_actions_test
ACTION_P3	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^ACTION_P3(Plus, m, n, k) { return arg0 + m + n + k; }$/;"	f	namespace:testing::gmock_generated_actions_test
ACTION_P3	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^ACTION_P3(Plus3, x, y, z) { return x + y + z; }$/;"	f	namespace:testing::gmock_generated_actions_test
ACTION_P4	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define ACTION_P4(/;"	d
ACTION_P4	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^ACTION_P4(Plus, p0, p1, p2, p3) { return arg0 + p0 + p1 + p2 + p3; }$/;"	f	namespace:testing::gmock_generated_actions_test
ACTION_P5	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define ACTION_P5(/;"	d
ACTION_P5	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^ACTION_P5(Plus, p0, p1, p2, p3, p4) { return arg0 + p0 + p1 + p2 + p3 + p4; }$/;"	f	namespace:testing::gmock_generated_actions_test
ACTION_P6	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define ACTION_P6(/;"	d
ACTION_P6	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^ACTION_P6(Plus, p0, p1, p2, p3, p4, p5) {$/;"	f	namespace:testing::gmock_generated_actions_test
ACTION_P7	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define ACTION_P7(/;"	d
ACTION_P7	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^ACTION_P7(Plus, p0, p1, p2, p3, p4, p5, p6) {$/;"	f	namespace:testing::gmock_generated_actions_test
ACTION_P8	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define ACTION_P8(/;"	d
ACTION_P8	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^ACTION_P8(Plus, p0, p1, p2, p3, p4, p5, p6, p7) {$/;"	f	namespace:testing::gmock_generated_actions_test
ACTION_P9	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define ACTION_P9(/;"	d
ACTION_P9	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^ACTION_P9(Plus, p0, p1, p2, p3, p4, p5, p6, p7, p8) {$/;"	f	namespace:testing::gmock_generated_actions_test
ACTION_TEMPLATE	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define ACTION_TEMPLATE(/;"	d
ACTION_TEMPLATE	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^ACTION_TEMPLATE(InvokeArgument,$/;"	f	namespace:testing
ACTION_TEMPLATE	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^ACTION_TEMPLATE(ReturnNew,$/;"	f	namespace:testing
ACTION_TEMPLATE	src/tests/googletest/googlemock/include/gmock/gmock-more-actions.h	/^ACTION_TEMPLATE(DeleteArg,$/;"	f	namespace:testing
ACTION_TEMPLATE	src/tests/googletest/googlemock/include/gmock/gmock-more-actions.h	/^ACTION_TEMPLATE(ReturnArg,$/;"	f	namespace:testing
ACTION_TEMPLATE	src/tests/googletest/googlemock/include/gmock/gmock-more-actions.h	/^ACTION_TEMPLATE(SaveArg,$/;"	f	namespace:testing
ACTION_TEMPLATE	src/tests/googletest/googlemock/include/gmock/gmock-more-actions.h	/^ACTION_TEMPLATE(SaveArgPointee,$/;"	f	namespace:testing
ACTION_TEMPLATE	src/tests/googletest/googlemock/include/gmock/gmock-more-actions.h	/^ACTION_TEMPLATE(SetArgReferee,$/;"	f	namespace:testing
ACTION_TEMPLATE	src/tests/googletest/googlemock/include/gmock/gmock-more-actions.h	/^ACTION_TEMPLATE(SetArrayArgument,$/;"	f	namespace:testing
ACTION_TEMPLATE	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^ACTION_TEMPLATE(CreateNew,$/;"	f	namespace:testing::gmock_generated_actions_test
ACTION_TEMPLATE	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^ACTION_TEMPLATE(MyDeleteArg,$/;"	f	namespace:testing::gmock_generated_actions_test
ACTION_TEMPLATE	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^ACTION_TEMPLATE(ReturnGiant,$/;"	f	namespace:testing::gmock_generated_actions_test
ACTION_TEMPLATE	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^ACTION_TEMPLATE(ReturnSmartPointer,$/;"	f	namespace:testing::gmock_generated_actions_test
ACTION_TEMPLATE	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^ACTION_TEMPLATE(ReturnSum,$/;"	f	namespace:testing::gmock_generated_actions_test
ACTIVE_TESTS	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^ACTIVE_TESTS = [$/;"	v
ACTIVE_TESTS	src/tests/googletest/googletest/test/gtest_shuffle_test.py	/^ACTIVE_TESTS = []$/;"	v
ACX_PTHREAD	src/tests/googletest/googletest/m4/acx_pthread.m4	/^AC_DEFUN([ACX_PTHREAD], [$/;"	m
AClass	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  AClass() : n_(0) {}$/;"	f	class:testing::gmock_matchers_test::AClass	file:
AClass	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^class AClass {$/;"	c	namespace:testing::gmock_matchers_test	file:
ADD_FAILURE	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define ADD_FAILURE(/;"	d
ADD_FAILURE_AT	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define ADD_FAILURE_AT(/;"	d
ALL	src/tests/googletest/googlemock/scripts/generator/cpp/keywords.py	/^ALL = TYPES | TYPE_MODIFIERS | ACCESS | CASTS | OTHERS | OTHER_TYPES | CONTROL | EXCEPTION | LOO/;"	v
ALL_TESTS	src/tests/googletest/googletest/test/gtest_shuffle_test.py	/^ALL_TESTS = []$/;"	v
ALSO_RUN_DISABED_TESTS_FLAG	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^ALSO_RUN_DISABED_TESTS_FLAG = 'gtest_also_run_disabled_tests'$/;"	v
AM_CPPFLAGS	src/tests/googletest/googlemock/Makefile.am	/^AM_CPPFLAGS = $(GTEST_CPPFLAGS) -I$(srcdir)\/include$/;"	m
AM_CPPFLAGS	src/tests/googletest/googletest/Makefile.am	/^AM_CPPFLAGS = -I$(srcdir) -I$(srcdir)\/include$/;"	m
AM_CXXFLAGS	src/tests/googletest/googlemock/Makefile.am	/^  AM_CXXFLAGS = @PTHREAD_CFLAGS@ -DGTEST_HAS_PTHREAD=1$/;"	m
AM_CXXFLAGS	src/tests/googletest/googletest/Makefile.am	/^  AM_CXXFLAGS = -DGTEST_HAS_PTHREAD=0$/;"	m
AM_CXXFLAGS	src/tests/googletest/googletest/Makefile.am	/^  AM_CXXFLAGS = @PTHREAD_CFLAGS@ -DGTEST_HAS_PTHREAD=1$/;"	m
AM_LDFLAGS	src/tests/googletest/googlemock/Makefile.am	/^AM_LDFLAGS = $(GTEST_LDFLAGS)$/;"	m
AM_LIBS	src/tests/googletest/googlemock/Makefile.am	/^  AM_LIBS = @PTHREAD_LIBS@$/;"	m
AM_LIBS	src/tests/googletest/googletest/Makefile.am	/^  AM_LIBS = @PTHREAD_LIBS@$/;"	m
ARCHITECTURE_ID	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#   define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#  define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#  define ARCHITECTURE_ID$/;"	d	file:
ARCHITECTURE_ID	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define ARCHITECTURE_ID$/;"	d	file:
ASSERT_ANY_THROW	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define ASSERT_ANY_THROW(/;"	d
ASSERT_CAPABILITY	src/muduo/muduo/base/Mutex.h	/^#define ASSERT_CAPABILITY(/;"	d
ASSERT_DEATH	src/tests/googletest/googletest/include/gtest/gtest-death-test.h	/^# define ASSERT_DEATH(/;"	d
ASSERT_DEATH_IF_SUPPORTED	src/tests/googletest/googletest/include/gtest/gtest-death-test.h	/^# define ASSERT_DEATH_IF_SUPPORTED(/;"	d
ASSERT_DEBUG_DEATH	src/tests/googletest/googletest/include/gtest/gtest-death-test.h	/^#  define ASSERT_DEBUG_DEATH(/;"	d
ASSERT_DOUBLE_EQ	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define ASSERT_DOUBLE_EQ(/;"	d
ASSERT_EQ	src/tests/googletest/googletest/include/gtest/gtest.h	/^# define ASSERT_EQ(val1, val2) GTEST_ASSERT_EQ(/;"	d
ASSERT_EXIT	src/tests/googletest/googletest/include/gtest/gtest-death-test.h	/^# define ASSERT_EXIT(/;"	d
ASSERT_FALSE	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define ASSERT_FALSE(/;"	d
ASSERT_FLOAT_EQ	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define ASSERT_FLOAT_EQ(/;"	d
ASSERT_GE	src/tests/googletest/googletest/include/gtest/gtest.h	/^# define ASSERT_GE(val1, val2) GTEST_ASSERT_GE(/;"	d
ASSERT_GT	src/tests/googletest/googletest/include/gtest/gtest.h	/^# define ASSERT_GT(val1, val2) GTEST_ASSERT_GT(/;"	d
ASSERT_HRESULT_FAILED	src/tests/googletest/googletest/include/gtest/gtest.h	/^# define ASSERT_HRESULT_FAILED(/;"	d
ASSERT_HRESULT_SUCCEEDED	src/tests/googletest/googletest/include/gtest/gtest.h	/^# define ASSERT_HRESULT_SUCCEEDED(/;"	d
ASSERT_LE	src/tests/googletest/googletest/include/gtest/gtest.h	/^# define ASSERT_LE(val1, val2) GTEST_ASSERT_LE(/;"	d
ASSERT_LT	src/tests/googletest/googletest/include/gtest/gtest.h	/^# define ASSERT_LT(val1, val2) GTEST_ASSERT_LT(/;"	d
ASSERT_NE	src/tests/googletest/googletest/include/gtest/gtest.h	/^# define ASSERT_NE(val1, val2) GTEST_ASSERT_NE(/;"	d
ASSERT_NEAR	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define ASSERT_NEAR(/;"	d
ASSERT_NO_FATAL_FAILURE	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define ASSERT_NO_FATAL_FAILURE(/;"	d
ASSERT_NO_THROW	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define ASSERT_NO_THROW(/;"	d
ASSERT_PRED1	src/tests/googletest/googletest/include/gtest/gtest_pred_impl.h	/^#define ASSERT_PRED1(/;"	d
ASSERT_PRED1Test	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate1Test ASSERT_PRED1Test;$/;"	t	typeref:typename:Predicate1Test	file:
ASSERT_PRED2	src/tests/googletest/googletest/include/gtest/gtest_pred_impl.h	/^#define ASSERT_PRED2(/;"	d
ASSERT_PRED2Test	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate2Test ASSERT_PRED2Test;$/;"	t	typeref:typename:Predicate2Test	file:
ASSERT_PRED3	src/tests/googletest/googletest/include/gtest/gtest_pred_impl.h	/^#define ASSERT_PRED3(/;"	d
ASSERT_PRED3Test	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate3Test ASSERT_PRED3Test;$/;"	t	typeref:typename:Predicate3Test	file:
ASSERT_PRED4	src/tests/googletest/googletest/include/gtest/gtest_pred_impl.h	/^#define ASSERT_PRED4(/;"	d
ASSERT_PRED4Test	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate4Test ASSERT_PRED4Test;$/;"	t	typeref:typename:Predicate4Test	file:
ASSERT_PRED5	src/tests/googletest/googletest/include/gtest/gtest_pred_impl.h	/^#define ASSERT_PRED5(/;"	d
ASSERT_PRED5Test	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate5Test ASSERT_PRED5Test;$/;"	t	typeref:typename:Predicate5Test	file:
ASSERT_PRED_FORMAT1	src/tests/googletest/googletest/include/gtest/gtest_pred_impl.h	/^#define ASSERT_PRED_FORMAT1(/;"	d
ASSERT_PRED_FORMAT1Test	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate1Test ASSERT_PRED_FORMAT1Test;$/;"	t	typeref:typename:Predicate1Test	file:
ASSERT_PRED_FORMAT2	src/tests/googletest/googletest/include/gtest/gtest_pred_impl.h	/^#define ASSERT_PRED_FORMAT2(/;"	d
ASSERT_PRED_FORMAT2Test	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate2Test ASSERT_PRED_FORMAT2Test;$/;"	t	typeref:typename:Predicate2Test	file:
ASSERT_PRED_FORMAT3	src/tests/googletest/googletest/include/gtest/gtest_pred_impl.h	/^#define ASSERT_PRED_FORMAT3(/;"	d
ASSERT_PRED_FORMAT3Test	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate3Test ASSERT_PRED_FORMAT3Test;$/;"	t	typeref:typename:Predicate3Test	file:
ASSERT_PRED_FORMAT4	src/tests/googletest/googletest/include/gtest/gtest_pred_impl.h	/^#define ASSERT_PRED_FORMAT4(/;"	d
ASSERT_PRED_FORMAT4Test	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate4Test ASSERT_PRED_FORMAT4Test;$/;"	t	typeref:typename:Predicate4Test	file:
ASSERT_PRED_FORMAT5	src/tests/googletest/googletest/include/gtest/gtest_pred_impl.h	/^#define ASSERT_PRED_FORMAT5(/;"	d
ASSERT_PRED_FORMAT5Test	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate5Test ASSERT_PRED_FORMAT5Test;$/;"	t	typeref:typename:Predicate5Test	file:
ASSERT_SHARED_CAPABILITY	src/muduo/muduo/base/Mutex.h	/^#define ASSERT_SHARED_CAPABILITY(/;"	d
ASSERT_STRCASEEQ	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define ASSERT_STRCASEEQ(/;"	d
ASSERT_STRCASENE	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define ASSERT_STRCASENE(/;"	d
ASSERT_STREQ	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define ASSERT_STREQ(/;"	d
ASSERT_STRNE	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define ASSERT_STRNE(/;"	d
ASSERT_THAT	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^#define ASSERT_THAT(/;"	d
ASSERT_THROW	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define ASSERT_THROW(/;"	d
ASSERT_TRUE	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define ASSERT_TRUE(/;"	d
AStruct	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  AStruct() : x(0), y(1.0), z(5), p(NULL) {}$/;"	f	struct:testing::gmock_matchers_test::AStruct	file:
AStruct	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  AStruct(const AStruct& rhs)$/;"	f	struct:testing::gmock_matchers_test::AStruct	file:
AStruct	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^struct AStruct {$/;"	s	namespace:testing::gmock_matchers_test	file:
ATypeParamDeathTest	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^class ATypeParamDeathTest : public testing::Test {$/;"	c	file:
ATypedDeathTest	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^class ATypedDeathTest : public testing::Test {$/;"	c	file:
Abort	src/tests/googletest/googletest/src/gtest-death-test.cc	/^void DeathTestImpl::Abort(AbortReason reason) {$/;"	f	class:testing::internal::DeathTestImpl	typeref:typename:void
Abort	src/tests/googletest/googletest/src/gtest-port.cc	/^void Abort() {$/;"	f	namespace:testing::internal::posix	typeref:typename:void
Abort	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  virtual void Abort(AbortReason reason) {$/;"	f	class:MockDeathTest	typeref:typename:void	file:
AbortArgument	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  DeathTest::AbortReason AbortArgument(int n) const {$/;"	f	class:MockDeathTestFactory	typeref:typename:DeathTest::AbortReason	file:
AbortCalls	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  size_t AbortCalls() const { return abort_args_.size(); }$/;"	f	class:MockDeathTestFactory	typeref:typename:size_t	file:
AbortReason	src/tests/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h	/^  enum AbortReason {$/;"	g	class:testing::internal::DeathTest
AbstractRpcServer	src/tests/googletest/googlemock/scripts/upload.py	/^class AbstractRpcServer(object):$/;"	c
AbstractRpcServer	src/tests/googletest/googletest/scripts/upload.py	/^class AbstractRpcServer(object):$/;"	c
AbstractSocketWriter	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  class AbstractSocketWriter {$/;"	c	class:testing::internal::StreamingListener
Acceptor	src/muduo/muduo/net/Acceptor.cc	/^Acceptor::Acceptor(EventLoop* loop, const InetAddress& listenAddr, bool reuseport)$/;"	f	class:Acceptor
Acceptor	src/muduo/muduo/net/Acceptor.h	/^class Acceptor : noncopyable$/;"	c	namespace:muduo::net
Accumulate	src/tests/googletest/googletest/test/gtest_unittest.cc	/^static void Accumulate(int n) { g_sum += n; }$/;"	f	namespace:__anonf780395f0111	typeref:typename:void	file:
Action	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  Action() : impl_(NULL) {}$/;"	f	class:testing::Action
Action	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  Action(const Action& action) : impl_(action.impl_) {}$/;"	f	class:testing::Action
Action	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  explicit Action(ActionInterface<F>* impl) : impl_(impl) {}$/;"	f	class:testing::Action
Action	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^Action<To>::Action(const Action<From>& from)$/;"	f	class:testing::Action
Action	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^class Action {$/;"	c	namespace:testing
ActionAdaptor	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  explicit ActionAdaptor(const Action<F2>& from) : impl_(from.impl_) {}$/;"	f	class:testing::internal::ActionAdaptor
ActionAdaptor	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^class ActionAdaptor : public ActionInterface<F1> {$/;"	c	namespace:testing::internal
ActionHelper	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^class ActionHelper {$/;"	c	namespace:testing::internal
ActionInterface	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  ActionInterface() {}$/;"	f	class:testing::ActionInterface
ActionInterface	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^class ActionInterface {$/;"	c	namespace:testing
ActionResultHolder	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  ActionResultHolder() {}$/;"	f	class:testing::internal::ActionResultHolder
ActionResultHolder	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  explicit ActionResultHolder(Wrapper result)$/;"	f	class:testing::internal::ActionResultHolder
ActionResultHolder	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^class ActionResultHolder : public UntypedActionResultHolderBase {$/;"	c	namespace:testing::internal
ActionResultHolder	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^class ActionResultHolder<void> : public UntypedActionResultHolderBase {$/;"	c	namespace:testing::internal
Actions	src/tests/googletest/googlemock/docs/CheatSheet.md	/^# Actions #$/;"	c
Actions	src/tests/googletest/googlemock/docs/v1_5/CheatSheet.md	/^# Actions #$/;"	c
Actions	src/tests/googletest/googlemock/docs/v1_6/CheatSheet.md	/^# Actions #$/;"	c
Actions	src/tests/googletest/googlemock/docs/v1_7/CheatSheet.md	/^# Actions #$/;"	c
Actions: What Should It Do?	src/tests/googletest/googlemock/docs/ForDummies.md	/^## Actions: What Should It Do? ##$/;"	s	chapter:Setting Expectations
Actions: What Should It Do?	src/tests/googletest/googlemock/docs/v1_5/ForDummies.md	/^## Actions: What Should It Do? ##$/;"	s	chapter:Setting Expectations
Actions: What Should It Do?	src/tests/googletest/googlemock/docs/v1_6/ForDummies.md	/^## Actions: What Should It Do? ##$/;"	s	chapter:Setting Expectations
Actions: What Should It Do?	src/tests/googletest/googlemock/docs/v1_7/ForDummies.md	/^## Actions: What Should It Do? ##$/;"	s	chapter:Setting Expectations
ActiveTimer	src/muduo/muduo/net/TimerQueue.h	/^  typedef std::pair<Timer*, int64_t> ActiveTimer;$/;"	t	class:muduo::net::TimerQueue	typeref:typename:std::pair<Timer *,int64_t>
ActiveTimerSet	src/muduo/muduo/net/TimerQueue.h	/^  typedef std::set<ActiveTimer> ActiveTimerSet;$/;"	t	class:muduo::net::TimerQueue	typeref:typename:std::set<ActiveTimer>
AdHocTest	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^void AdHocTest() {$/;"	f	typeref:typename:void
Adapters for Matchers	src/tests/googletest/googlemock/docs/CheatSheet.md	/^## Adapters for Matchers ##$/;"	s	chapter:Matchers
Adapters for Matchers	src/tests/googletest/googlemock/docs/v1_5/CheatSheet.md	/^## Adapters for Matchers ##$/;"	s	chapter:Matchers
Adapters for Matchers	src/tests/googletest/googlemock/docs/v1_6/CheatSheet.md	/^## Adapters for Matchers ##$/;"	s	chapter:Matchers
Adapters for Matchers	src/tests/googletest/googlemock/docs/v1_7/CheatSheet.md	/^## Adapters for Matchers ##$/;"	s	chapter:Matchers
Add the Framework to Your Project	src/tests/googletest/googletest/docs/V1_5_XcodeGuide.md	/^# Add the Framework to Your Project #$/;"	c
Add the Framework to Your Project	src/tests/googletest/googletest/docs/V1_6_XcodeGuide.md	/^# Add the Framework to Your Project #$/;"	c
Add the Framework to Your Project	src/tests/googletest/googletest/docs/V1_7_XcodeGuide.md	/^# Add the Framework to Your Project #$/;"	c
Add the Framework to Your Project	src/tests/googletest/googletest/docs/XcodeGuide.md	/^# Add the Framework to Your Project #$/;"	c
AddArgument	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  void AddArgument(const char* argument) {$/;"	f	class:testing::internal::Arguments	typeref:typename:void	file:
AddArguments	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  void AddArguments(const ::std::vector<Str>& arguments) {$/;"	f	class:testing::internal::Arguments	typeref:typename:void	file:
AddEnvironment	src/tests/googletest/googletest/src/gtest.cc	/^Environment* UnitTest::AddEnvironment(Environment* env) {$/;"	f	class:testing::UnitTest	typeref:typename:Environment *
AddExpectation	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^void Sequence::AddExpectation(const Expectation& expectation) const {$/;"	f	class:testing::Sequence	typeref:typename:void
AddFailure	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^  static void AddFailure(FailureMode failure) {$/;"	f	class:ExpectFailureTest	typeref:typename:void	file:
AddFailure	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static void AddFailure(FailureMode failure) {$/;"	f	class:__anonf780395f0111::ScopedFakeTestPartResultReporterTest	typeref:typename:void	file:
AddFailureHelper	src/tests/googletest/googletest/test/gtest_unittest.cc	/^void AddFailureHelper(bool* aborted) {$/;"	f	namespace:__anonf780395f0311	typeref:typename:void
AddFailureInOtherThread	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^  static void AddFailureInOtherThread(FailureMode failure) {$/;"	f	class:ExpectFailureWithThreadsTest	typeref:typename:void	file:
AddFailureInOtherThread	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static void AddFailureInOtherThread(FailureMode failure) {$/;"	f	class:__anonf780395f0111::ScopedFakeTestPartResultReporterWithThreadsTest	typeref:typename:void	file:
AddFatalFailure	src/tests/googletest/googletest/test/gtest_unittest.cc	/^static void AddFatalFailure() {$/;"	f	namespace:__anonf780395f0111	typeref:typename:void	file:
AddGlobalTestEnvironment	src/tests/googletest/googletest/include/gtest/gtest.h	/^inline Environment* AddGlobalTestEnvironment(Environment* env) {$/;"	f	namespace:testing	typeref:typename:Environment *
AddNewExpectation	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  TypedExpectation<F>& AddNewExpectation(const char* file, int line,$/;"	f	class:testing::internal::FunctionMockerBase	typeref:typename:TypedExpectation<F> &
AddNewOnCallSpec	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  OnCallSpec<F>& AddNewOnCallSpec($/;"	f	class:testing::internal::FunctionMockerBase	typeref:typename:OnCallSpec<F> &
AddNonfatalFailure	src/tests/googletest/googletest/test/gtest_unittest.cc	/^static void AddNonfatalFailure() {$/;"	f	namespace:__anonf780395f0111	typeref:typename:void	file:
AddParameter	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^        def AddParameter(end):$/;"	f	member:TypeConverter.ToParameters	file:
AddRef	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^struct AddRef { typedef T& type; };  \/\/ NOLINT$/;"	s	namespace:std::tr1::gtest_internal
AddRef	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^struct AddRef<T&> { typedef T& type; };  \/\/ NOLINT$/;"	s	namespace:std::tr1::gtest_internal
AddReference	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^struct AddReference { typedef T& type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
AddReference	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^struct AddReference<T&> { typedef T& type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
AddTestCaseInstantiation	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  int AddTestCaseInstantiation(const std::string& instantiation_name,$/;"	f	class:testing::internal::ParameterizedTestCaseInfo	typeref:typename:int
AddTestInfo	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  void AddTestInfo(Test::SetUpTestCaseFunc set_up_tc,$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:void
AddTestInfo	src/tests/googletest/googletest/src/gtest.cc	/^void TestCase::AddTestInfo(TestInfo * test_info) {$/;"	f	class:testing::TestCase	typeref:typename:void
AddTestName	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  bool AddTestName(const char* file, int line, const char* case_name,$/;"	f	class:testing::internal::TypedTestCasePState	typeref:typename:bool
AddTestPartResult	src/tests/googletest/googletest/src/gtest.cc	/^void TestResult::AddTestPartResult(const TestPartResult& test_part_result) {$/;"	f	class:testing::TestResult	typeref:typename:void
AddTestPartResult	src/tests/googletest/googletest/src/gtest.cc	/^void UnitTest::AddTestPartResult($/;"	f	class:testing::UnitTest	typeref:typename:void
AddTestPattern	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  void AddTestPattern(const char* test_case_name,$/;"	f	class:testing::internal::ParameterizedTestCaseInfo	typeref:typename:void
AddTwo	src/tests/googletest/googletest/test/gtest-port_test.cc	/^void AddTwo(int* param) { *param += 2; }$/;"	f	namespace:testing::internal	typeref:typename:void
AddType	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^        def AddType(templated_types):$/;"	f	member:TypeConverter.ToType	file:
Adding Traces to Assertions	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^## Adding Traces to Assertions ##$/;"	s	chapter:Using Assertions in Sub-routines
Adding Traces to Assertions	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^## Adding Traces to Assertions ##$/;"	s	chapter:Using Assertions in Sub-routines
Adding Traces to Assertions	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^## Adding Traces to Assertions ##$/;"	s	chapter:Using Assertions in Sub-routines
Adding Traces to Assertions	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^## Adding Traces to Assertions ##$/;"	s	chapter:Using Assertions in Sub-routines
AdjustForParameterizedTests	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^  def AdjustForParameterizedTests(self, tests_to_run):$/;"	m	class:GTestFilterUnitTest
AdlTag	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^struct AdlTag {};$/;"	s	namespace:testing::internal::invoke_argument
Advance	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator	typeref:typename:void
Advance	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator	typeref:typename:void
Advance	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator	typeref:typename:void
Advance	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator	typeref:typename:void
Advance	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator	typeref:typename:void
Advance	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator	typeref:typename:void
Advance	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator	typeref:typename:void
Advance	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator	typeref:typename:void
Advance	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator	typeref:typename:void
Advance	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::RangeGenerator::Iterator	typeref:typename:void
Advance	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator	typeref:typename:void
Advanced Usages	src/tests/googletest/googlemock/docs/DesignDoc.md	/^## Advanced Usages ##$/;"	s	chapter:Macros for Defining Actions
After	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  TypedExpectation& After(const ExpectationSet& s) {$/;"	f	class:testing::internal::TypedExpectation	typeref:typename:TypedExpectation &
After	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  TypedExpectation& After(const ExpectationSet& s1, const ExpectationSet& s2) {$/;"	f	class:testing::internal::TypedExpectation	typeref:typename:TypedExpectation &
After	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  TypedExpectation& After(const ExpectationSet& s1, const ExpectationSet& s2,$/;"	f	class:testing::internal::TypedExpectation	typeref:typename:TypedExpectation &
All Expectations Are Sticky (Unless Said Otherwise)	src/tests/googletest/googlemock/docs/ForDummies.md	/^## All Expectations Are Sticky (Unless Said Otherwise) ##$/;"	s	chapter:Setting Expectations
All Expectations Are Sticky (Unless Said Otherwise)	src/tests/googletest/googlemock/docs/v1_5/ForDummies.md	/^## All Expectations Are Sticky (Unless Said Otherwise) ##$/;"	s	chapter:Setting Expectations
All Expectations Are Sticky (Unless Said Otherwise)	src/tests/googletest/googlemock/docs/v1_6/ForDummies.md	/^## All Expectations Are Sticky (Unless Said Otherwise) ##$/;"	s	chapter:Setting Expectations
All Expectations Are Sticky (Unless Said Otherwise)	src/tests/googletest/googlemock/docs/v1_7/ForDummies.md	/^## All Expectations Are Sticky (Unless Said Otherwise) ##$/;"	s	chapter:Setting Expectations
AllArgs	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline InnerMatcher AllArgs(const InnerMatcher& matcher) { return matcher; }$/;"	f	namespace:testing	typeref:typename:InnerMatcher
AllArgsHelper	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  AllArgsHelper() {}$/;"	f	class:testing::gmock_matchers_test::AllArgsHelper	file:
AllArgsHelper	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^class AllArgsHelper {$/;"	c	namespace:testing::gmock_matchers_test	file:
AllOf	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^AllOf(M1 m1, M2 m2) {$/;"	f	namespace:testing	typeref:typename:internal::AllOfResult2<M1,M2>::type
AllOf	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^AllOf(M1 m1, M2 m2, M3 m3) {$/;"	f	namespace:testing	typeref:typename:internal::AllOfResult3<M1,M2,M3>::type
AllOf	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^AllOf(M1 m1, M2 m2, M3 m3, M4 m4) {$/;"	f	namespace:testing	typeref:typename:internal::AllOfResult4<M1,M2,M3,M4>::type
AllOf	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^AllOf(M1 m1, M2 m2, M3 m3, M4 m4, M5 m5) {$/;"	f	namespace:testing	typeref:typename:internal::AllOfResult5<M1,M2,M3,M4,M5>::type
AllOf	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^AllOf(M1 m1, M2 m2, M3 m3, M4 m4, M5 m5, M6 m6) {$/;"	f	namespace:testing	typeref:typename:internal::AllOfResult6<M1,M2,M3,M4,M5,M6>::type
AllOf	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^AllOf(M1 m1, M2 m2, M3 m3, M4 m4, M5 m5, M6 m6, M7 m7) {$/;"	f	namespace:testing	typeref:typename:internal::AllOfResult7<M1,M2,M3,M4,M5,M6,M7>::type
AllOf	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^AllOf(M1 m1, M2 m2, M3 m3, M4 m4, M5 m5, M6 m6, M7 m7, M8 m8) {$/;"	f	namespace:testing	typeref:typename:internal::AllOfResult8<M1,M2,M3,M4,M5,M6,M7,M8>::type
AllOf	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^AllOf(M1 m1, M2 m2, M3 m3, M4 m4, M5 m5, M6 m6, M7 m7, M8 m8, M9 m9) {$/;"	f	namespace:testing	typeref:typename:internal::AllOfResult9<M1,M2,M3,M4,M5,M6,M7,M8,M9>::type
AllOf	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^AllOf(M1 m1, M2 m2, M3 m3, M4 m4, M5 m5, M6 m6, M7 m7, M8 m8, M9 m9, M10 m10) {$/;"	f	namespace:testing	typeref:typename:internal::AllOfResult10<M1,M2,M3,M4,M5,M6,M7,M8,M9,M10>::type
AllOf	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline internal::AllOfMatcher<Args...> AllOf(const Args&... matchers) {$/;"	f	namespace:testing	typeref:typename:internal::AllOfMatcher<Args...>
AllOf	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^bool AllOf(const T1& t1, const T2& t2) { return true; }$/;"	f	namespace:__anoncaf4ae130111::adl_test	typeref:typename:bool
AllOfMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^using AllOfMatcher = VariadicMatcher<BothOfMatcherImpl, Args...>;$/;"	t	namespace:testing::internal	typeref:typename:VariadicMatcher<BothOfMatcherImpl,Args...>
AllOfMatches	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^void AllOfMatches(int num, const Matcher<int>& m) {$/;"	f	namespace:testing::gmock_matchers_test	typeref:typename:void
AllOfResult1	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^struct AllOfResult1 {$/;"	s	namespace:testing::internal
AllOfResult10	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^struct AllOfResult10 {$/;"	s	namespace:testing::internal
AllOfResult2	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^struct AllOfResult2 {$/;"	s	namespace:testing::internal
AllOfResult3	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^struct AllOfResult3 {$/;"	s	namespace:testing::internal
AllOfResult4	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^struct AllOfResult4 {$/;"	s	namespace:testing::internal
AllOfResult5	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^struct AllOfResult5 {$/;"	s	namespace:testing::internal
AllOfResult6	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^struct AllOfResult6 {$/;"	s	namespace:testing::internal
AllOfResult7	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^struct AllOfResult7 {$/;"	s	namespace:testing::internal
AllOfResult8	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^struct AllOfResult8 {$/;"	s	namespace:testing::internal
AllOfResult9	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^struct AllOfResult9 {$/;"	s	namespace:testing::internal
AllPrerequisitesAreSatisfied	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^bool ExpectationBase::AllPrerequisitesAreSatisfied() const$/;"	f	class:testing::internal::ExpectationBase	typeref:typename:bool
AllowLeak	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^void Mock::AllowLeak(const void* mock_obj)$/;"	f	class:testing::Mock	typeref:typename:void
AllowUninterestingCalls	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^void Mock::AllowUninterestingCalls(const void* mock_obj)$/;"	f	class:testing::Mock	typeref:typename:void
AllowsGenericStreaming	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^class AllowsGenericStreaming {};$/;"	c	namespace:testing::gtest_printers_test	file:
AllowsGenericStreamingAndImplicitConversionTemplate	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^class AllowsGenericStreamingAndImplicitConversionTemplate {$/;"	c	namespace:testing::gtest_printers_test	file:
AllowsGenericStreamingTemplate	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^class AllowsGenericStreamingTemplate {};$/;"	c	namespace:testing::gtest_printers_test	file:
AlmostEquals	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  bool AlmostEquals(const FloatingPoint& rhs) const {$/;"	f	class:testing::internal::FloatingPoint	typeref:typename:bool
AlsoRunDisabledTests	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static Flags AlsoRunDisabledTests(bool also_run_disabled_tests) {$/;"	f	struct:testing::Flags	typeref:typename:Flags	file:
AlsoRunDisabledTestsFlag	src/tests/googletest/googletest/test/gtest_shuffle_test.py	/^def AlsoRunDisabledTestsFlag():$/;"	f
Alternative to Mocking Concrete Classes	src/tests/googletest/googlemock/docs/CookBook.md	/^## Alternative to Mocking Concrete Classes ##$/;"	s	chapter:Creating Mock Classes
Alternative to Mocking Concrete Classes	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Alternative to Mocking Concrete Classes ##$/;"	s	chapter:Creating Mock Classes
Alternative to Mocking Concrete Classes	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Alternative to Mocking Concrete Classes ##$/;"	s	chapter:Creating Mock Classes
Alternative to Mocking Concrete Classes	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Alternative to Mocking Concrete Classes ##$/;"	s	chapter:Creating Mock Classes
AlwaysFalse	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^inline bool AlwaysFalse() { return !AlwaysTrue(); }$/;"	f	namespace:testing::internal	typeref:typename:bool
AlwaysTrue	src/tests/googletest/googletest/src/gtest.cc	/^bool AlwaysTrue() {$/;"	f	namespace:testing::internal	typeref:typename:bool
AmbiguousCastTypes	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^struct AmbiguousCastTypes {$/;"	s	namespace:testing::gmock_matchers_test	file:
An	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline Matcher<T> An() { return A<T>(); }$/;"	f	namespace:testing	typeref:typename:Matcher<T>
AnalyzeElements	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  MatchMatrix AnalyzeElements(ElementIter elem_first, ElementIter elem_last,$/;"	f	class:testing::internal::UnorderedElementsAreMatcherImpl	typeref:typename:MatchMatrix
AnonymousEnum	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^enum AnonymousEnum {$/;"	g	file:
AnotherSubClassOfTest	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class AnotherSubClassOfTest : public Test {};$/;"	c	namespace:__anonf780395f0111	file:
AnsiToUtf16	src/tests/googletest/googletest/src/gtest.cc	/^LPCWSTR String::AnsiToUtf16(const char* ansi) {$/;"	f	class:testing::internal::String	typeref:typename:LPCWSTR
Answer	src/muduo/examples/protobuf/codec/query.proto	/^message Answer {$/;"	m	package:muduo
AnswerPtr	src/muduo/examples/protobuf/codec/client.cc	/^typedef std::shared_ptr<muduo::Answer> AnswerPtr;$/;"	t	typeref:typename:std::shared_ptr<muduo::Answer>	file:
AnswerPtr	src/muduo/examples/protobuf/codec/dispatcher_test.cc	/^typedef std::shared_ptr<muduo::Answer> AnswerPtr;$/;"	t	typeref:typename:std::shared_ptr<muduo::Answer>	file:
AnswerPtr	src/muduo/examples/protobuf/codec/server.cc	/^typedef std::shared_ptr<muduo::Answer> AnswerPtr;$/;"	t	typeref:typename:std::shared_ptr<muduo::Answer>	file:
AnyEq	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^struct AnyEq {$/;"	s	namespace:testing::internal
AnyGe	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^struct AnyGe {$/;"	s	namespace:testing::internal
AnyGt	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^struct AnyGt {$/;"	s	namespace:testing::internal
AnyLe	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^struct AnyLe {$/;"	s	namespace:testing::internal
AnyLt	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^struct AnyLt {$/;"	s	namespace:testing::internal
AnyMatcherImpl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class AnyMatcherImpl : public MatcherInterface<T> {$/;"	c	namespace:testing::internal
AnyNe	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^struct AnyNe {$/;"	s	namespace:testing::internal
AnyNumber	src/tests/googletest/googlemock/src/gmock-cardinalities.cc	/^GTEST_API_ Cardinality AnyNumber() { return AtLeast(0); }$/;"	f	namespace:testing	typeref:typename:GTEST_API_ Cardinality
AnyOf	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^AnyOf(M1 m1, M2 m2) {$/;"	f	namespace:testing	typeref:typename:internal::AnyOfResult2<M1,M2>::type
AnyOf	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^AnyOf(M1 m1, M2 m2, M3 m3) {$/;"	f	namespace:testing	typeref:typename:internal::AnyOfResult3<M1,M2,M3>::type
AnyOf	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^AnyOf(M1 m1, M2 m2, M3 m3, M4 m4) {$/;"	f	namespace:testing	typeref:typename:internal::AnyOfResult4<M1,M2,M3,M4>::type
AnyOf	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^AnyOf(M1 m1, M2 m2, M3 m3, M4 m4, M5 m5) {$/;"	f	namespace:testing	typeref:typename:internal::AnyOfResult5<M1,M2,M3,M4,M5>::type
AnyOf	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^AnyOf(M1 m1, M2 m2, M3 m3, M4 m4, M5 m5, M6 m6) {$/;"	f	namespace:testing	typeref:typename:internal::AnyOfResult6<M1,M2,M3,M4,M5,M6>::type
AnyOf	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^AnyOf(M1 m1, M2 m2, M3 m3, M4 m4, M5 m5, M6 m6, M7 m7) {$/;"	f	namespace:testing	typeref:typename:internal::AnyOfResult7<M1,M2,M3,M4,M5,M6,M7>::type
AnyOf	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^AnyOf(M1 m1, M2 m2, M3 m3, M4 m4, M5 m5, M6 m6, M7 m7, M8 m8) {$/;"	f	namespace:testing	typeref:typename:internal::AnyOfResult8<M1,M2,M3,M4,M5,M6,M7,M8>::type
AnyOf	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^AnyOf(M1 m1, M2 m2, M3 m3, M4 m4, M5 m5, M6 m6, M7 m7, M8 m8, M9 m9) {$/;"	f	namespace:testing	typeref:typename:internal::AnyOfResult9<M1,M2,M3,M4,M5,M6,M7,M8,M9>::type
AnyOf	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^AnyOf(M1 m1, M2 m2, M3 m3, M4 m4, M5 m5, M6 m6, M7 m7, M8 m8, M9 m9, M10 m10) {$/;"	f	namespace:testing	typeref:typename:internal::AnyOfResult10<M1,M2,M3,M4,M5,M6,M7,M8,M9,M10>::type
AnyOf	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline internal::AnyOfMatcher<Args...> AnyOf(const Args&... matchers) {$/;"	f	namespace:testing	typeref:typename:internal::AnyOfMatcher<Args...>
AnyOf	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^AnyOf(const T1& t1, const T2& t2) { return true; }$/;"	f	namespace:__anoncaf4ae130111::adl_test	typeref:typename:bool
AnyOfMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^using AnyOfMatcher = VariadicMatcher<EitherOfMatcherImpl, Args...>;$/;"	t	namespace:testing::internal	typeref:typename:VariadicMatcher<EitherOfMatcherImpl,Args...>
AnyOfMatches	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^void AnyOfMatches(int num, const Matcher<int>& m) {$/;"	f	namespace:testing::gmock_matchers_test	typeref:typename:void
AnyOfResult1	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^struct AnyOfResult1 {$/;"	s	namespace:testing::internal
AnyOfResult10	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^struct AnyOfResult10 {$/;"	s	namespace:testing::internal
AnyOfResult2	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^struct AnyOfResult2 {$/;"	s	namespace:testing::internal
AnyOfResult3	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^struct AnyOfResult3 {$/;"	s	namespace:testing::internal
AnyOfResult4	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^struct AnyOfResult4 {$/;"	s	namespace:testing::internal
AnyOfResult5	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^struct AnyOfResult5 {$/;"	s	namespace:testing::internal
AnyOfResult6	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^struct AnyOfResult6 {$/;"	s	namespace:testing::internal
AnyOfResult7	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^struct AnyOfResult7 {$/;"	s	namespace:testing::internal
AnyOfResult8	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^struct AnyOfResult8 {$/;"	s	namespace:testing::internal
AnyOfResult9	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^struct AnyOfResult9 {$/;"	s	namespace:testing::internal
AnythingMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class AnythingMatcher {$/;"	c	namespace:testing::internal
Append	src/tests/googletest/googletest/scripts/pump.py	/^  def Append(self, s):$/;"	m	class:Output
Append	src/tests/googletest/googletest/src/gtest-test-part.cc	/^void TestPartResultArray::Append(const TestPartResult& result) {$/;"	f	class:testing::TestPartResultArray	typeref:typename:void
Append	src/tests/googletest/googletest/src/gtest.cc	/^void TestEventListeners::Append(TestEventListener* listener) {$/;"	f	class:testing::TestEventListeners	typeref:typename:void
Append	src/tests/googletest/googletest/src/gtest.cc	/^void TestEventRepeater::Append(TestEventListener *listener) {$/;"	f	class:testing::internal::TestEventRepeater	typeref:typename:void
AppendFile	src/muduo/muduo/base/FileUtil.cc	/^FileUtil::AppendFile::AppendFile(StringArg filename)$/;"	f	class:FileUtil::AppendFile
AppendFile	src/muduo/muduo/base/FileUtil.h	/^class AppendFile : noncopyable$/;"	c	namespace:muduo::FileUtil
AppendMessage	src/tests/googletest/googletest/include/gtest/gtest.h	/^  void AppendMessage(const Message& a_message) {$/;"	f	class:testing::AssertionResult	typeref:typename:void
AppendUserMessage	src/tests/googletest/googletest/src/gtest.cc	/^std::string AppendUserMessage(const std::string& gtest_msg,$/;"	f	namespace:testing::internal	typeref:typename:std::string
ArgList	src/muduo/muduo/net/inspect/Inspector.h	/^  typedef std::vector<string> ArgList;$/;"	t	class:muduo::net::Inspector	typeref:typename:std::vector<string>
ArgTuple	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    typedef ::testing::tuple<T, Second> ArgTuple;$/;"	t	class:testing::internal::BoundSecondMatcher::Impl	typeref:typename:::testing::tuple<T,Second>
Args	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^      typename internal::DecayArray<T10>::type> Args;$/;"	t	function:testing::ElementsAre
Args	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^      typename internal::DecayArray<T10>::type> Args;$/;"	t	function:testing::UnorderedElementsAre
Args	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^      typename internal::DecayArray<T1>::type> Args;$/;"	t	function:testing::ElementsAre	typeref:typename:::testing::tuple<typename internal::DecayArray<T1>::type>
Args	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^      typename internal::DecayArray<T1>::type> Args;$/;"	t	function:testing::UnorderedElementsAre	typeref:typename:::testing::tuple<typename internal::DecayArray<T1>::type>
Args	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^      typename internal::DecayArray<T2>::type> Args;$/;"	t	function:testing::ElementsAre	typeref:typename:::testing::tuple<typename internal::DecayArray<T1>::type,typename internal::DecayArray<T2>::type>
Args	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^      typename internal::DecayArray<T2>::type> Args;$/;"	t	function:testing::UnorderedElementsAre	typeref:typename:::testing::tuple<typename internal::DecayArray<T1>::type,typename internal::DecayArray<T2>::type>
Args	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^      typename internal::DecayArray<T3>::type> Args;$/;"	t	function:testing::ElementsAre
Args	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^      typename internal::DecayArray<T3>::type> Args;$/;"	t	function:testing::UnorderedElementsAre
Args	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^      typename internal::DecayArray<T4>::type> Args;$/;"	t	function:testing::ElementsAre
Args	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^      typename internal::DecayArray<T4>::type> Args;$/;"	t	function:testing::UnorderedElementsAre
Args	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^      typename internal::DecayArray<T5>::type> Args;$/;"	t	function:testing::ElementsAre
Args	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^      typename internal::DecayArray<T5>::type> Args;$/;"	t	function:testing::UnorderedElementsAre
Args	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^      typename internal::DecayArray<T6>::type> Args;$/;"	t	function:testing::ElementsAre
Args	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^      typename internal::DecayArray<T6>::type> Args;$/;"	t	function:testing::UnorderedElementsAre
Args	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^      typename internal::DecayArray<T7>::type> Args;$/;"	t	function:testing::ElementsAre
Args	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^      typename internal::DecayArray<T7>::type> Args;$/;"	t	function:testing::UnorderedElementsAre
Args	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^      typename internal::DecayArray<T8>::type> Args;$/;"	t	function:testing::ElementsAre
Args	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^      typename internal::DecayArray<T8>::type> Args;$/;"	t	function:testing::UnorderedElementsAre
Args	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^      typename internal::DecayArray<T9>::type> Args;$/;"	t	function:testing::ElementsAre
Args	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^      typename internal::DecayArray<T9>::type> Args;$/;"	t	function:testing::UnorderedElementsAre
Args	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^  typedef ::testing::tuple<> Args;$/;"	t	function:testing::ElementsAre	typeref:typename:::testing::tuple<>
Args	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^  typedef ::testing::tuple<> Args;$/;"	t	function:testing::UnorderedElementsAre	typeref:typename:::testing::tuple<>
Args	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^Args(const InnerMatcher& matcher) {$/;"	f	namespace:testing	typeref:typename:internal::ArgsMatcher<InnerMatcher,k1,k2,k3,k4,k5,k6,k7,k8,k9,k10>
Args	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^Args(const InnerMatcher& matcher) {$/;"	f	namespace:testing	typeref:typename:internal::ArgsMatcher<InnerMatcher,k1,k2,k3,k4,k5,k6,k7,k8,k9>
Args	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^Args(const InnerMatcher& matcher) {$/;"	f	namespace:testing	typeref:typename:internal::ArgsMatcher<InnerMatcher,k1,k2,k3,k4,k5,k6,k7,k8>
Args	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^Args(const InnerMatcher& matcher) {$/;"	f	namespace:testing	typeref:typename:internal::ArgsMatcher<InnerMatcher,k1,k2,k3,k4,k5,k6,k7>
Args	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^Args(const InnerMatcher& matcher) {$/;"	f	namespace:testing	typeref:typename:internal::ArgsMatcher<InnerMatcher,k1,k2,k3,k4,k5,k6>
Args	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^Args(const InnerMatcher& matcher) {$/;"	f	namespace:testing	typeref:typename:internal::ArgsMatcher<InnerMatcher,k1,k2,k3,k4,k5>
Args	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^Args(const InnerMatcher& matcher) {$/;"	f	namespace:testing	typeref:typename:internal::ArgsMatcher<InnerMatcher,k1,k2,k3,k4>
Args	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^Args(const InnerMatcher& matcher) {$/;"	f	namespace:testing	typeref:typename:internal::ArgsMatcher<InnerMatcher,k1,k2,k3>
Args	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^Args(const InnerMatcher& matcher) {$/;"	f	namespace:testing	typeref:typename:internal::ArgsMatcher<InnerMatcher,k1,k2>
Args	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^Args(const InnerMatcher& matcher) {$/;"	f	namespace:testing	typeref:typename:internal::ArgsMatcher<InnerMatcher,k1>
Args	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^Args(const InnerMatcher& matcher) {$/;"	f	namespace:testing	typeref:typename:internal::ArgsMatcher<InnerMatcher>
ArgsMatcher	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^  explicit ArgsMatcher(const InnerMatcher& inner_matcher)$/;"	f	class:testing::internal::ArgsMatcher
ArgsMatcher	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^class ArgsMatcher {$/;"	c	namespace:testing::internal
ArgsMatcherImpl	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^  explicit ArgsMatcherImpl(const InnerMatcher& inner_matcher)$/;"	f	class:testing::internal::ArgsMatcherImpl
ArgsMatcherImpl	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^class ArgsMatcherImpl : public MatcherInterface<ArgsTuple> {$/;"	c	namespace:testing::internal
Argument1	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef A1 Argument1;$/;"	t	struct:testing::internal::Function	typeref:typename:A1
Argument10	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef A10 Argument10;$/;"	t	struct:testing::internal::Function	typeref:typename:A10
Argument2	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef A2 Argument2;$/;"	t	struct:testing::internal::Function	typeref:typename:A2
Argument3	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef A3 Argument3;$/;"	t	struct:testing::internal::Function	typeref:typename:A3
Argument4	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef A4 Argument4;$/;"	t	struct:testing::internal::Function	typeref:typename:A4
Argument5	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef A5 Argument5;$/;"	t	struct:testing::internal::Function	typeref:typename:A5
Argument6	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef A6 Argument6;$/;"	t	struct:testing::internal::Function	typeref:typename:A6
Argument7	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef A7 Argument7;$/;"	t	struct:testing::internal::Function	typeref:typename:A7
Argument8	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef A8 Argument8;$/;"	t	struct:testing::internal::Function	typeref:typename:A8
Argument9	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef A9 Argument9;$/;"	t	struct:testing::internal::Function	typeref:typename:A9
ArgumentMatcherTuple	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^      ArgumentMatcherTuple;$/;"	t	class:testing::internal::MockSpec	typeref:typename:internal::Function<F>::ArgumentMatcherTuple
ArgumentMatcherTuple	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  typedef typename Function<F>::ArgumentMatcherTuple ArgumentMatcherTuple;$/;"	t	class:testing::internal::FunctionMockerBase	typeref:typename:Function<F>::ArgumentMatcherTuple
ArgumentMatcherTuple	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  typedef typename Function<F>::ArgumentMatcherTuple ArgumentMatcherTuple;$/;"	t	class:testing::internal::OnCallSpec	typeref:typename:Function<F>::ArgumentMatcherTuple
ArgumentMatcherTuple	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  typedef typename Function<F>::ArgumentMatcherTuple ArgumentMatcherTuple;$/;"	t	class:testing::internal::TypedExpectation	typeref:typename:Function<F>::ArgumentMatcherTuple
ArgumentMatcherTuple	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef typename MatcherTuple<ArgumentTuple>::type ArgumentMatcherTuple;$/;"	t	struct:testing::internal::Function	typeref:typename:MatcherTuple<ArgumentTuple>::type
ArgumentTuple	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    typedef typename Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::internal::DoBothAction::Impl	typeref:typename:Function<F>::ArgumentTuple
ArgumentTuple	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    typedef typename Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::internal::ReturnAction::Impl	typeref:typename:Function<F>::ArgumentTuple
ArgumentTuple	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    typedef typename Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::internal::ReturnRefAction::Impl	typeref:typename:Function<F>::ArgumentTuple
ArgumentTuple	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    typedef typename Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::internal::ReturnRefOfCopyAction::Impl	typeref:typename:Function<F>::ArgumentTuple
ArgumentTuple	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    typedef typename internal::Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::PolymorphicAction::MonomorphicImpl	typeref:typename:internal::Function<F>::ArgumentTuple
ArgumentTuple	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    typedef typename internal::Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::internal::IgnoreResultAction::Impl	typeref:typename:internal::Function<F>::ArgumentTuple
ArgumentTuple	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  typedef typename internal::Function<F1>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::internal::ActionAdaptor	typeref:typename:internal::Function<F1>::ArgumentTuple
ArgumentTuple	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  typedef typename internal::Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::Action	typeref:typename:internal::Function<F>::ArgumentTuple
ArgumentTuple	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  typedef typename internal::Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::ActionInterface	typeref:typename:internal::Function<F>::ArgumentTuple
ArgumentTuple	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^    typedef typename Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::internal::WithArgsAction::Impl	typeref:typename:Function<F>::ArgumentTuple
ArgumentTuple	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^  typedef typename internal::Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::internal::FunctionMocker	typeref:typename:internal::Function<F>::ArgumentTuple
ArgumentTuple	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  typedef typename Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::internal::FunctionMockerBase	typeref:typename:Function<F>::ArgumentTuple
ArgumentTuple	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  typedef typename Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::internal::OnCallSpec	typeref:typename:Function<F>::ArgumentTuple
ArgumentTuple	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  typedef typename Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::internal::TypedExpectation	typeref:typename:Function<F>::ArgumentTuple
ArgumentTuple	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  typedef typename internal::Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::internal::MockSpec	typeref:typename:internal::Function<F>::ArgumentTuple
ArgumentTuple	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^      A10> ArgumentTuple;$/;"	t	struct:testing::internal::Function	typeref:typename:::testing::tuple<A1,A2,A3,A4,A5,A6,A7,A8,A9,A10>
ArgumentTuple	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef ::testing::tuple<> ArgumentTuple;$/;"	t	struct:testing::internal::Function	typeref:typename:::testing::tuple<>
ArgumentTuple	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef ::testing::tuple<A1, A2, A3, A4, A5, A6, A7, A8, A9> ArgumentTuple;$/;"	t	struct:testing::internal::Function	typeref:typename:::testing::tuple<A1,A2,A3,A4,A5,A6,A7,A8,A9>
ArgumentTuple	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef ::testing::tuple<A1, A2, A3, A4, A5, A6, A7, A8> ArgumentTuple;$/;"	t	struct:testing::internal::Function	typeref:typename:::testing::tuple<A1,A2,A3,A4,A5,A6,A7,A8>
ArgumentTuple	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef ::testing::tuple<A1, A2, A3, A4, A5, A6, A7> ArgumentTuple;$/;"	t	struct:testing::internal::Function	typeref:typename:::testing::tuple<A1,A2,A3,A4,A5,A6,A7>
ArgumentTuple	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef ::testing::tuple<A1, A2, A3, A4, A5, A6> ArgumentTuple;$/;"	t	struct:testing::internal::Function	typeref:typename:::testing::tuple<A1,A2,A3,A4,A5,A6>
ArgumentTuple	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef ::testing::tuple<A1, A2, A3, A4, A5> ArgumentTuple;$/;"	t	struct:testing::internal::Function	typeref:typename:::testing::tuple<A1,A2,A3,A4,A5>
ArgumentTuple	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef ::testing::tuple<A1, A2, A3, A4> ArgumentTuple;$/;"	t	struct:testing::internal::Function	typeref:typename:::testing::tuple<A1,A2,A3,A4>
ArgumentTuple	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef ::testing::tuple<A1, A2, A3> ArgumentTuple;$/;"	t	struct:testing::internal::Function	typeref:typename:::testing::tuple<A1,A2,A3>
ArgumentTuple	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef ::testing::tuple<A1, A2> ArgumentTuple;$/;"	t	struct:testing::internal::Function	typeref:typename:::testing::tuple<A1,A2>
ArgumentTuple	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef ::testing::tuple<A1> ArgumentTuple;$/;"	t	struct:testing::internal::Function	typeref:typename:::testing::tuple<A1>
Arguments	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  Arguments() {$/;"	f	class:testing::internal::Arguments	file:
Arguments	src/tests/googletest/googletest/src/gtest-death-test.cc	/^class Arguments {$/;"	c	namespace:testing::internal	file:
Argv	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  char* const* Argv() {$/;"	f	class:testing::internal::Arguments	typeref:typename:char * const *	file:
Arity	src/tests/googletest/googletest/scripts/gen_gtest_pred_impl.py	/^def Arity(n):$/;"	f
Array	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  typedef int Array[2];$/;"	t	function:TEST	typeref:typename:int[2]	file:
ArrayAsVector	src/tests/googletest/googletest/src/gtest.cc	/^std::vector<std::string> ArrayAsVector(const char* const (&array)[kSize]) {$/;"	f	namespace:testing	typeref:typename:std::vector<std::string>
ArrayAwareFind	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^Iter ArrayAwareFind(Iter begin, Iter end, const Element& elem) {$/;"	f	namespace:testing::internal	typeref:typename:Iter
ArrayEq	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^bool ArrayEq(const T* lhs, size_t size, const U* rhs) {$/;"	f	namespace:testing::internal	typeref:typename:bool
ArrayEq	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^inline bool ArrayEq(const T& lhs, const U& rhs) { return lhs == rhs; }$/;"	f	namespace:testing::internal	typeref:typename:bool
ArrayEq	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^inline bool ArrayEq(const T(&lhs)[N], const U(&rhs)[N]) {$/;"	f	namespace:testing::internal	typeref:typename:bool
As a Shared Library (DLL)	src/tests/googletest/googlemock/README.md	/^### As a Shared Library (DLL) ###$/;"	S	section:Getting Started
As a Shared Library (DLL)	src/tests/googletest/googletest/README.md	/^### As a Shared Library (DLL) ###$/;"	S
AsBits	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  static RawType AsBits(T value) {$/;"	f	class:testing::gmock_matchers_test::FloatingPointTest	typeref:typename:RawType	file:
AsStdFunction	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^  std::function<R()> AsStdFunction() {$/;"	f	class:testing::MockFunction	typeref:typename:std::function<R ()>
AsStdFunction	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^  std::function<R(A0)> AsStdFunction() {$/;"	f	class:testing::MockFunction	typeref:typename:std::function<R (A0)>
AsStdFunction	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^  std::function<R(A0, A1)> AsStdFunction() {$/;"	f	class:testing::MockFunction	typeref:typename:std::function<R (A0,A1)>
AsStdFunction	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^  std::function<R(A0, A1, A2)> AsStdFunction() {$/;"	f	class:testing::MockFunction	typeref:typename:std::function<R (A0,A1,A2)>
AsStdFunction	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^  std::function<R(A0, A1, A2, A3)> AsStdFunction() {$/;"	f	class:testing::MockFunction	typeref:typename:std::function<R (A0,A1,A2,A3)>
AsStdFunction	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^  std::function<R(A0, A1, A2, A3, A4)> AsStdFunction() {$/;"	f	class:testing::MockFunction	typeref:typename:std::function<R (A0,A1,A2,A3,A4)>
AsStdFunction	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^  std::function<R(A0, A1, A2, A3, A4, A5)> AsStdFunction() {$/;"	f	class:testing::MockFunction	typeref:typename:std::function<R (A0,A1,A2,A3,A4,A5)>
AsStdFunction	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^  std::function<R(A0, A1, A2, A3, A4, A5, A6)> AsStdFunction() {$/;"	f	class:testing::MockFunction	typeref:typename:std::function<R (A0,A1,A2,A3,A4,A5,A6)>
AsStdFunction	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^  std::function<R(A0, A1, A2, A3, A4, A5, A6, A7)> AsStdFunction() {$/;"	f	class:testing::MockFunction	typeref:typename:std::function<R (A0,A1,A2,A3,A4,A5,A6,A7)>
AsStdFunction	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^  std::function<R(A0, A1, A2, A3, A4, A5, A6, A7, A8)> AsStdFunction() {$/;"	f	class:testing::MockFunction	typeref:typename:std::function<R (A0,A1,A2,A3,A4,A5,A6,A7,A8)>
AsStdFunction	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^  std::function<R(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9)> AsStdFunction() {$/;"	f	class:testing::MockFunction	typeref:typename:std::function<R (A0,A1,A2,A3,A4,A5,A6,A7,A8,A9)>
Assert	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^inline void Assert(bool condition, const char* file, int line) {$/;"	f	namespace:testing::internal	typeref:typename:void
Assert	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^inline void Assert(bool condition, const char* file, int line,$/;"	f	namespace:testing::internal	typeref:typename:void
Assert	src/tests/googletest/googletest/test/gtest_uninitialized_test.py	/^def Assert(condition):$/;"	f
AssertDebugDeathHelper	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^void AssertDebugDeathHelper(bool* aborted) {$/;"	f	typeref:typename:void
AssertEq	src/tests/googletest/googletest/test/gtest_env_var_test.py	/^def AssertEq(expected, actual):$/;"	f
AssertEq	src/tests/googletest/googletest/test/gtest_uninitialized_test.py	/^def AssertEq(expected, actual):$/;"	f
AssertEquivalentNodes	src/tests/googletest/googletest/test/gtest_xml_test_utils.py	/^  def AssertEquivalentNodes(self, expected_node, actual_node):$/;"	m	class:GTestXMLTestCase
AssertHeld	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  void AssertHeld() const {$/;"	f	class:testing::internal::MutexBase	typeref:typename:void
AssertHeld	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  void AssertHeld() const {}$/;"	f	class:testing::internal::Mutex	typeref:typename:void
AssertHeld	src/tests/googletest/googletest/src/gtest-port.cc	/^void Mutex::AssertHeld() {$/;"	f	class:testing::internal::Mutex	typeref:typename:void
AssertHelper	src/tests/googletest/googletest/include/gtest/gtest.h	/^class GTEST_API_ AssertHelper {$/;"	c	namespace:testing::internal
AssertHelper	src/tests/googletest/googletest/src/gtest.cc	/^AssertHelper::AssertHelper(TestPartResult::Type type,$/;"	f	class:testing::internal::AssertHelper
AssertHelperData	src/tests/googletest/googletest/include/gtest/gtest.h	/^    AssertHelperData(TestPartResult::Type t,$/;"	f	struct:testing::internal::AssertHelper::AssertHelperData
AssertHelperData	src/tests/googletest/googletest/include/gtest/gtest.h	/^  struct AssertHelperData {$/;"	s	class:testing::internal::AssertHelper
AssertIsEven	src/tests/googletest/googletest/test/gtest_unittest.cc	/^AssertionResult AssertIsEven(const char* expr, int n) {$/;"	f	namespace:__anonf780395f0111	typeref:typename:AssertionResult
AssertIsEvenFunctor	src/tests/googletest/googletest/test/gtest_unittest.cc	/^struct AssertIsEvenFunctor {$/;"	s	namespace:__anonf780395f0111	file:
AssertNoFatalFailureIgnoresFailuresInOtherThreads	src/tests/googletest/googletest/test/gtest_stress_test.cc	/^void AssertNoFatalFailureIgnoresFailuresInOtherThreads() {$/;"	f	namespace:testing::__anon9be581a20111	typeref:typename:void
AssertPartitionIsValid	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^  def AssertPartitionIsValid(self, set_var, list_of_sets):$/;"	m	class:GTestFilterUnitTest
AssertPred1Helper	src/tests/googletest/googletest/include/gtest/gtest_pred_impl.h	/^AssertionResult AssertPred1Helper(const char* pred_text,$/;"	f	typeref:typename:AssertionResult
AssertPred2Helper	src/tests/googletest/googletest/include/gtest/gtest_pred_impl.h	/^AssertionResult AssertPred2Helper(const char* pred_text,$/;"	f	typeref:typename:AssertionResult
AssertPred3Helper	src/tests/googletest/googletest/include/gtest/gtest_pred_impl.h	/^AssertionResult AssertPred3Helper(const char* pred_text,$/;"	f	typeref:typename:AssertionResult
AssertPred4Helper	src/tests/googletest/googletest/include/gtest/gtest_pred_impl.h	/^AssertionResult AssertPred4Helper(const char* pred_text,$/;"	f	typeref:typename:AssertionResult
AssertPred5Helper	src/tests/googletest/googletest/include/gtest/gtest_pred_impl.h	/^AssertionResult AssertPred5Helper(const char* pred_text,$/;"	f	typeref:typename:AssertionResult
AssertSetEqual	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^  def AssertSetEqual(self, lhs, rhs):$/;"	m	class:GTestFilterUnitTest
AssertSpecProperty	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  void AssertSpecProperty(bool property,$/;"	f	class:testing::internal::ExpectationBase	typeref:typename:void
AssertSpecProperty	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  void AssertSpecProperty(bool property,$/;"	f	class:testing::internal::UntypedOnCallSpecBase	typeref:typename:void
AssertStringArrayEq	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static void AssertStringArrayEq(size_t size1, CharType** array1,$/;"	f	class:testing::InitGoogleTestTest	typeref:typename:void	file:
AssertSumIsEven4	src/tests/googletest/googletest/test/gtest_unittest.cc	/^AssertionResult AssertSumIsEven4($/;"	f	namespace:__anonf780395f0111	typeref:typename:AssertionResult
AssertSumIsEven5Functor	src/tests/googletest/googletest/test/gtest_unittest.cc	/^struct AssertSumIsEven5Functor {$/;"	s	namespace:__anonf780395f0111	file:
AssertTypeEq	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct AssertTypeEq<T, T> {$/;"	s	namespace:testing::internal
Asserting on Subroutines	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^### Asserting on Subroutines ###$/;"	S	section:Using Assertions in Sub-routines""Propagating Fatal Failures
Asserting on Subroutines	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^### Asserting on Subroutines ###$/;"	S	section:Using Assertions in Sub-routines""Propagating Fatal Failures
Asserting on Subroutines	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^### Asserting on Subroutines ###$/;"	S	section:Using Assertions in Sub-routines""Propagating Fatal Failures
Asserting on Subroutines	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^### Asserting on Subroutines ###$/;"	S	section:Using Assertions in Sub-routines""Propagating Fatal Failures
Assertion Placement	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^## Assertion Placement ##$/;"	s	chapter:More Assertions
Assertion Placement	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^## Assertion Placement ##$/;"	s	chapter:More Assertions
Assertion Placement	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^## Assertion Placement ##$/;"	s	chapter:More Assertions
Assertion Placement	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^## Assertion Placement ##$/;"	s	chapter:More Assertions
AssertionFailure	src/tests/googletest/googletest/src/gtest.cc	/^AssertionResult AssertionFailure() {$/;"	f	namespace:testing	typeref:typename:AssertionResult
AssertionFailure	src/tests/googletest/googletest/src/gtest.cc	/^AssertionResult AssertionFailure(const Message& message) {$/;"	f	namespace:testing	typeref:typename:AssertionResult
AssertionResult	src/tests/googletest/googletest/include/gtest/gtest.h	/^  explicit AssertionResult($/;"	f	class:testing::AssertionResult
AssertionResult	src/tests/googletest/googletest/include/gtest/gtest.h	/^class GTEST_API_ AssertionResult {$/;"	c	namespace:testing
AssertionResult	src/tests/googletest/googletest/src/gtest.cc	/^AssertionResult::AssertionResult(const AssertionResult& other)$/;"	f	class:testing::AssertionResult
AssertionResult	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class AssertionResult {};$/;"	c	namespace:my_namespace::testing	file:
AssertionSuccess	src/tests/googletest/googletest/src/gtest.cc	/^AssertionResult AssertionSuccess() {$/;"	f	namespace:testing	typeref:typename:AssertionResult
Assertions	src/tests/googletest/googletest/docs/Primer.md	/^# Assertions #$/;"	c
Assertions	src/tests/googletest/googletest/docs/V1_5_Primer.md	/^# Assertions #$/;"	c
Assertions	src/tests/googletest/googletest/docs/V1_6_Primer.md	/^# Assertions #$/;"	c
Assertions	src/tests/googletest/googletest/docs/V1_7_Primer.md	/^# Assertions #$/;"	c
Assign	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^PolymorphicAction<internal::AssignAction<T1, T2> > Assign(T1* ptr, T2 val) {$/;"	f	namespace:testing	typeref:typename:PolymorphicAction<internal::AssignAction<T1,T2>>
AssignAction	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  AssignAction(T1* ptr, T2 value) : ptr_(ptr), value_(value) {}$/;"	f	class:testing::internal::AssignAction
AssignAction	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^class AssignAction {$/;"	c	namespace:testing::internal
AssumeRole	src/tests/googletest/googletest/src/gtest-death-test.cc	/^DeathTest::TestRole ExecDeathTest::AssumeRole() {$/;"	f	class:testing::internal::ExecDeathTest	typeref:typename:DeathTest::TestRole
AssumeRole	src/tests/googletest/googletest/src/gtest-death-test.cc	/^DeathTest::TestRole NoExecDeathTest::AssumeRole() {$/;"	f	class:testing::internal::NoExecDeathTest	typeref:typename:DeathTest::TestRole
AssumeRole	src/tests/googletest/googletest/src/gtest-death-test.cc	/^DeathTest::TestRole WindowsDeathTest::AssumeRole() {$/;"	f	class:testing::internal::WindowsDeathTest	typeref:typename:DeathTest::TestRole
AssumeRole	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  virtual TestRole AssumeRole() {$/;"	f	class:MockDeathTest	typeref:typename:TestRole	file:
AssumeRoleCalls	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  int AssumeRoleCalls() const { return assume_role_calls_; }$/;"	f	class:MockDeathTestFactory	typeref:typename:int	file:
AstBuilder	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^class AstBuilder(object):$/;"	c
AsyncLogging	src/muduo/muduo/base/AsyncLogging.cc	/^AsyncLogging::AsyncLogging(const string& basename,$/;"	f	class:AsyncLogging
AsyncLogging	src/muduo/muduo/base/AsyncLogging.h	/^class AsyncLogging : noncopyable$/;"	c	namespace:muduo
AtEnd	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator	typeref:typename:bool
AtEnd	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator	typeref:typename:bool
AtEnd	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator	typeref:typename:bool
AtEnd	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator	typeref:typename:bool
AtEnd	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator	typeref:typename:bool
AtEnd	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator	typeref:typename:bool
AtEnd	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator	typeref:typename:bool
AtEnd	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator	typeref:typename:bool
AtEnd	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator	typeref:typename:bool
AtLeast	src/tests/googletest/googlemock/src/gmock-cardinalities.cc	/^GTEST_API_ Cardinality AtLeast(int n) { return Between(n, INT_MAX); }$/;"	f	namespace:testing	typeref:typename:GTEST_API_ Cardinality
AtMost	src/tests/googletest/googlemock/src/gmock-cardinalities.cc	/^GTEST_API_ Cardinality AtMost(int n) { return Between(0, n); }$/;"	f	namespace:testing	typeref:typename:GTEST_API_ Cardinality
AtomMatchesChar	src/tests/googletest/googletest/src/gtest-port.cc	/^bool AtomMatchesChar(bool escaped, char pattern_char, char ch) {$/;"	f	namespace:testing::internal	typeref:typename:bool
AtomicCounterWithMutex	src/tests/googletest/googletest/test/gtest-port_test.cc	/^  explicit AtomicCounterWithMutex(Mutex* mutex) :$/;"	f	class:testing::internal::AtomicCounterWithMutex	file:
AtomicCounterWithMutex	src/tests/googletest/googletest/test/gtest-port_test.cc	/^class AtomicCounterWithMutex {$/;"	c	namespace:testing::internal	file:
AtomicInt32	src/muduo/muduo/base/Atomic.h	/^typedef detail::AtomicIntegerT<int32_t> AtomicInt32;$/;"	t	namespace:muduo	typeref:typename:detail::AtomicIntegerT<int32_t>
AtomicInt64	src/muduo/muduo/base/Atomic.h	/^typedef detail::AtomicIntegerT<int64_t> AtomicInt64;$/;"	t	namespace:muduo	typeref:typename:detail::AtomicIntegerT<int64_t>
AtomicIntegerT	src/muduo/muduo/base/Atomic.h	/^  AtomicIntegerT()$/;"	f	class:muduo::detail::AtomicIntegerT
AtomicIntegerT	src/muduo/muduo/base/Atomic.h	/^class AtomicIntegerT : noncopyable$/;"	c	namespace:muduo::detail
AutoHandle	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^class GTEST_API_ AutoHandle {$/;"	c	namespace:testing::internal
AutoHandle	src/tests/googletest/googletest/src/gtest-port.cc	/^AutoHandle::AutoHandle()$/;"	f	class:testing::internal::AutoHandle
AutoHandle	src/tests/googletest/googletest/src/gtest-port.cc	/^AutoHandle::AutoHandle(Handle handle)$/;"	f	class:testing::internal::AutoHandle
Avoiding Macro Name Clashes	src/tests/googletest/googletest/README.md	/^### Avoiding Macro Name Clashes ###$/;"	S
B	src/tests/googletest/googletest/test/gtest-linked_ptr_test.cc	/^  B() { *history << "B" << mynum << " ctor\\n"; }$/;"	f	class:__anonf616d1f80111::B	file:
B	src/tests/googletest/googletest/test/gtest-linked_ptr_test.cc	/^class B : public A {$/;"	c	namespace:__anonf616d1f80111	file:
BINARY_OUTPUT	src/tests/googletest/googletest/test/gtest_catch_exceptions_test.py	/^  BINARY_OUTPUT = gtest_test_utils.Subprocess([EXE_PATH], env=environ).output$/;"	v
BOOST_AUTO_TEST_CASE	src/muduo/examples/sudoku/stat_unittest.cc	/^BOOST_AUTO_TEST_CASE(testSudokuStatFuzz)$/;"	f
BOOST_AUTO_TEST_CASE	src/muduo/examples/sudoku/stat_unittest.cc	/^BOOST_AUTO_TEST_CASE(testSudokuStatJumpAhead5)$/;"	f
BOOST_AUTO_TEST_CASE	src/muduo/examples/sudoku/stat_unittest.cc	/^BOOST_AUTO_TEST_CASE(testSudokuStatJumpAhead59)$/;"	f
BOOST_AUTO_TEST_CASE	src/muduo/examples/sudoku/stat_unittest.cc	/^BOOST_AUTO_TEST_CASE(testSudokuStatJumpAhead60)$/;"	f
BOOST_AUTO_TEST_CASE	src/muduo/examples/sudoku/stat_unittest.cc	/^BOOST_AUTO_TEST_CASE(testSudokuStatJumpBack3)$/;"	f
BOOST_AUTO_TEST_CASE	src/muduo/examples/sudoku/stat_unittest.cc	/^BOOST_AUTO_TEST_CASE(testSudokuStatNextSecond)$/;"	f
BOOST_AUTO_TEST_CASE	src/muduo/examples/sudoku/stat_unittest.cc	/^BOOST_AUTO_TEST_CASE(testSudokuStatSameSecond)$/;"	f
BOOST_AUTO_TEST_CASE	src/muduo/muduo/base/tests/LogStream_test.cc	/^BOOST_AUTO_TEST_CASE(testFormatIEC)$/;"	f
BOOST_AUTO_TEST_CASE	src/muduo/muduo/base/tests/LogStream_test.cc	/^BOOST_AUTO_TEST_CASE(testFormatSI)$/;"	f
BOOST_AUTO_TEST_CASE	src/muduo/muduo/base/tests/LogStream_test.cc	/^BOOST_AUTO_TEST_CASE(testLogStreamBooleans)$/;"	f
BOOST_AUTO_TEST_CASE	src/muduo/muduo/base/tests/LogStream_test.cc	/^BOOST_AUTO_TEST_CASE(testLogStreamFloats)$/;"	f
BOOST_AUTO_TEST_CASE	src/muduo/muduo/base/tests/LogStream_test.cc	/^BOOST_AUTO_TEST_CASE(testLogStreamFmts)$/;"	f
BOOST_AUTO_TEST_CASE	src/muduo/muduo/base/tests/LogStream_test.cc	/^BOOST_AUTO_TEST_CASE(testLogStreamIntegerLimits)$/;"	f
BOOST_AUTO_TEST_CASE	src/muduo/muduo/base/tests/LogStream_test.cc	/^BOOST_AUTO_TEST_CASE(testLogStreamIntegers)$/;"	f
BOOST_AUTO_TEST_CASE	src/muduo/muduo/base/tests/LogStream_test.cc	/^BOOST_AUTO_TEST_CASE(testLogStreamLong)$/;"	f
BOOST_AUTO_TEST_CASE	src/muduo/muduo/base/tests/LogStream_test.cc	/^BOOST_AUTO_TEST_CASE(testLogStreamStrings)$/;"	f
BOOST_AUTO_TEST_CASE	src/muduo/muduo/base/tests/LogStream_test.cc	/^BOOST_AUTO_TEST_CASE(testLogStreamVoid)$/;"	f
BOOST_AUTO_TEST_CASE	src/muduo/muduo/net/http/tests/HttpRequest_unittest.cc	/^BOOST_AUTO_TEST_CASE(testParseRequestAllInOne)$/;"	f
BOOST_AUTO_TEST_CASE	src/muduo/muduo/net/http/tests/HttpRequest_unittest.cc	/^BOOST_AUTO_TEST_CASE(testParseRequestEmptyHeaderValue)$/;"	f
BOOST_AUTO_TEST_CASE	src/muduo/muduo/net/http/tests/HttpRequest_unittest.cc	/^BOOST_AUTO_TEST_CASE(testParseRequestInTwoPieces)$/;"	f
BOOST_AUTO_TEST_CASE	src/muduo/muduo/net/tests/Buffer_unittest.cc	/^BOOST_AUTO_TEST_CASE(testBufferAppendRetrieve)$/;"	f
BOOST_AUTO_TEST_CASE	src/muduo/muduo/net/tests/Buffer_unittest.cc	/^BOOST_AUTO_TEST_CASE(testBufferFindEOL)$/;"	f
BOOST_AUTO_TEST_CASE	src/muduo/muduo/net/tests/Buffer_unittest.cc	/^BOOST_AUTO_TEST_CASE(testBufferGrow)$/;"	f
BOOST_AUTO_TEST_CASE	src/muduo/muduo/net/tests/Buffer_unittest.cc	/^BOOST_AUTO_TEST_CASE(testBufferInsideGrow)$/;"	f
BOOST_AUTO_TEST_CASE	src/muduo/muduo/net/tests/Buffer_unittest.cc	/^BOOST_AUTO_TEST_CASE(testBufferPrepend)$/;"	f
BOOST_AUTO_TEST_CASE	src/muduo/muduo/net/tests/Buffer_unittest.cc	/^BOOST_AUTO_TEST_CASE(testBufferReadInt)$/;"	f
BOOST_AUTO_TEST_CASE	src/muduo/muduo/net/tests/Buffer_unittest.cc	/^BOOST_AUTO_TEST_CASE(testBufferShrink)$/;"	f
BOOST_AUTO_TEST_CASE	src/muduo/muduo/net/tests/Buffer_unittest.cc	/^BOOST_AUTO_TEST_CASE(testMove)$/;"	f
BOOST_AUTO_TEST_CASE	src/muduo/muduo/net/tests/InetAddress_unittest.cc	/^BOOST_AUTO_TEST_CASE(testInet6Address)$/;"	f
BOOST_AUTO_TEST_CASE	src/muduo/muduo/net/tests/InetAddress_unittest.cc	/^BOOST_AUTO_TEST_CASE(testInetAddress)$/;"	f
BOOST_AUTO_TEST_CASE	src/muduo/muduo/net/tests/InetAddress_unittest.cc	/^BOOST_AUTO_TEST_CASE(testInetAddressResolve)$/;"	f
BOOST_AUTO_TEST_CASE	src/muduo/muduo/net/tests/ZlibStream_unittest.cc	/^BOOST_AUTO_TEST_CASE(testZlibOutputStream)$/;"	f
BOOST_AUTO_TEST_CASE	src/muduo/muduo/net/tests/ZlibStream_unittest.cc	/^BOOST_AUTO_TEST_CASE(testZlibOutputStream1)$/;"	f
BOOST_AUTO_TEST_CASE	src/muduo/muduo/net/tests/ZlibStream_unittest.cc	/^BOOST_AUTO_TEST_CASE(testZlibOutputStream2)$/;"	f
BOOST_AUTO_TEST_CASE	src/muduo/muduo/net/tests/ZlibStream_unittest.cc	/^BOOST_AUTO_TEST_CASE(testZlibOutputStream3)$/;"	f
BOOST_AUTO_TEST_CASE	src/muduo/muduo/net/tests/ZlibStream_unittest.cc	/^BOOST_AUTO_TEST_CASE(testZlibOutputStream4)$/;"	f
BOOST_AUTO_TEST_CASE	src/muduo/muduo/net/tests/ZlibStream_unittest.cc	/^BOOST_AUTO_TEST_CASE(testZlibOutputStream5)$/;"	f
BOOST_TEST_DYN_LINK	src/muduo/examples/sudoku/stat_unittest.cc	/^#define BOOST_TEST_DYN_LINK$/;"	d	file:
BOOST_TEST_DYN_LINK	src/muduo/muduo/base/tests/LogStream_test.cc	/^#define BOOST_TEST_DYN_LINK$/;"	d	file:
BOOST_TEST_DYN_LINK	src/muduo/muduo/net/http/tests/HttpRequest_unittest.cc	/^#define BOOST_TEST_DYN_LINK$/;"	d	file:
BOOST_TEST_DYN_LINK	src/muduo/muduo/net/tests/Buffer_unittest.cc	/^#define BOOST_TEST_DYN_LINK$/;"	d	file:
BOOST_TEST_DYN_LINK	src/muduo/muduo/net/tests/InetAddress_unittest.cc	/^#define BOOST_TEST_DYN_LINK$/;"	d	file:
BOOST_TEST_DYN_LINK	src/muduo/muduo/net/tests/ZlibStream_unittest.cc	/^#define BOOST_TEST_DYN_LINK$/;"	d	file:
BOOST_TEST_MAIN	src/muduo/examples/sudoku/stat_unittest.cc	/^#define BOOST_TEST_MAIN$/;"	d	file:
BOOST_TEST_MAIN	src/muduo/muduo/base/tests/LogStream_test.cc	/^#define BOOST_TEST_MAIN$/;"	d	file:
BOOST_TEST_MAIN	src/muduo/muduo/net/http/tests/HttpRequest_unittest.cc	/^#define BOOST_TEST_MAIN$/;"	d	file:
BOOST_TEST_MAIN	src/muduo/muduo/net/tests/Buffer_unittest.cc	/^#define BOOST_TEST_MAIN$/;"	d	file:
BOOST_TEST_MAIN	src/muduo/muduo/net/tests/InetAddress_unittest.cc	/^#define BOOST_TEST_MAIN$/;"	d	file:
BOOST_TEST_MAIN	src/muduo/muduo/net/tests/ZlibStream_unittest.cc	/^#define BOOST_TEST_MAIN$/;"	d	file:
BOOST_TR1_DETAIL_CONFIG_HPP_INCLUDED	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#  define BOOST_TR1_DETAIL_CONFIG_HPP_INCLUDED$/;"	d
BREAK_ON_FAILURE_ENV_VAR	src/tests/googletest/googletest/test/gtest_break_on_failure_unittest.py	/^BREAK_ON_FAILURE_ENV_VAR = 'GTEST_BREAK_ON_FAILURE'$/;"	v
BREAK_ON_FAILURE_FLAG	src/tests/googletest/googletest/test/gtest_break_on_failure_unittest.py	/^BREAK_ON_FAILURE_FLAG = 'gtest_break_on_failure'$/;"	v
BUFSIZE	src/muduo/examples/wordcount/slowsink.py	/^BUFSIZE = int(bps\/10) # sleep 100ms at full speed$/;"	v
BUILD_GMOCK	src/tests/googletest/CMakeLists.txt	/^option(BUILD_GMOCK "Builds the googlemock subproject" ON)$/;"	D
BUILD_GTEST	src/tests/googletest/CMakeLists.txt	/^option(BUILD_GTEST "Builds the googletest subproject" OFF)$/;"	D
BUILD_SHARED_LIBS	src/tests/googletest/googlemock/CMakeLists.txt	/^option(BUILD_SHARED_LIBS "Build shared libraries (DLLs)." OFF)$/;"	D
BUILD_SHARED_LIBS	src/tests/googletest/googletest/CMakeLists.txt	/^option(BUILD_SHARED_LIBS "Build shared libraries (DLLs)." OFF)$/;"	D
BackUp	src/muduo/muduo/net/protobuf/BufferStream.h	/^  virtual void BackUp(int count) \/\/ override$/;"	f	class:muduo::net::BufferOutputStream	typeref:typename:void
BackendSession	src/muduo/examples/protobuf/rpcbalancer/balancer.cc	/^  BackendSession(EventLoop* loop, const InetAddress& backendAddr, const string& name)$/;"	f	class:BackendSession	file:
BackendSession	src/muduo/examples/protobuf/rpcbalancer/balancer.cc	/^class BackendSession : noncopyable$/;"	c	file:
BackendSession	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^  BackendSession(EventLoop* loop, const InetAddress& backendAddr, const string& name)$/;"	f	class:BackendSession	file:
BackendSession	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^class BackendSession : noncopyable$/;"	c	file:
BacktrackingBPMTest	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^class BacktrackingBPMTest : public ::testing::Test { };$/;"	c	namespace:testing::gmock_matchers_test	file:
BacktrackingMaxBPMState	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  explicit BacktrackingMaxBPMState(const Graph* g) : graph_(g) { }$/;"	f	class:testing::gmock_matchers_test::__anon745c08170311::BacktrackingMaxBPMState	file:
BacktrackingMaxBPMState	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^class BacktrackingMaxBPMState {$/;"	c	namespace:testing::gmock_matchers_test::__anon745c08170311	file:
Balancer	src/muduo/examples/protobuf/rpcbalancer/balancer.cc	/^  Balancer(EventLoop* loop,$/;"	f	class:Balancer	file:
Balancer	src/muduo/examples/protobuf/rpcbalancer/balancer.cc	/^class Balancer : noncopyable$/;"	c	file:
Balancer	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^  Balancer(EventLoop* loop,$/;"	f	class:Balancer	file:
Balancer	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^class Balancer : noncopyable$/;"	c	file:
Bar	src/muduo/muduo/base/tests/Exception_test.cc	/^class Bar$/;"	c	file:
Bar	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  int Bar() const { return 1; }$/;"	f	class:__anonf780395f0311::Foo	typeref:typename:int	file:
BarEnvironment	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^class BarEnvironment : public testing::Environment {$/;"	c	file:
Base	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^struct Base {$/;"	s	namespace:__anon550198f10111	file:
Base	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^class Base {};$/;"	c	namespace:testing::internal::__anonf4b2defb0111	file:
Base	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  Base() {}$/;"	f	class:testing::gmock_matchers_test::Base	file:
Base	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^class Base {$/;"	c	namespace:testing::gmock_matchers_test	file:
Base	src/tests/googletest/googlemock/test/gmock_stress_test.cc	/^  explicit Base(int a_x) : x_(a_x) {}$/;"	f	class:testing::__anonc83180760111::Base	file:
Base	src/tests/googletest/googlemock/test/gmock_stress_test.cc	/^class Base {$/;"	c	namespace:testing::__anonc83180760111	file:
Base	src/tests/googletest/googletest/test/gtest-port_test.cc	/^  Base() : member_(0) {}$/;"	f	class:testing::internal::Base	file:
Base	src/tests/googletest/googletest/test/gtest-port_test.cc	/^  explicit Base(int n) : member_(n) {}$/;"	f	class:testing::internal::Base	file:
Base	src/tests/googletest/googletest/test/gtest-port_test.cc	/^class Base {$/;"	c	namespace:testing::internal	file:
Base	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  explicit Base(int an_x) : x_(an_x) {}$/;"	f	class:Base	file:
Base	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class Base {$/;"	c	file:
BaseGenerator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator	typeref:typename:const ParamGeneratorInterface<ParamType> *
BaseGenerator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator	typeref:typename:const ParamGeneratorInterface<ParamType> *
BaseGenerator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator	typeref:typename:const ParamGeneratorInterface<ParamType> *
BaseGenerator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator	typeref:typename:const ParamGeneratorInterface<ParamType> *
BaseGenerator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator	typeref:typename:const ParamGeneratorInterface<ParamType> *
BaseGenerator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator	typeref:typename:const ParamGeneratorInterface<ParamType> *
BaseGenerator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator	typeref:typename:const ParamGeneratorInterface<ParamType> *
BaseGenerator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator	typeref:typename:const ParamGeneratorInterface<ParamType> *
BaseGenerator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator	typeref:typename:const ParamGeneratorInterface<ParamType> *
BaseGenerator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^    virtual const ParamGeneratorInterface<T>* BaseGenerator() const {$/;"	f	class:testing::internal::RangeGenerator::Iterator	typeref:typename:const ParamGeneratorInterface<T> *
BaseGenerator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^    virtual const ParamGeneratorInterface<T>* BaseGenerator() const {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator	typeref:typename:const ParamGeneratorInterface<T> *
Basic Assertions	src/tests/googletest/googletest/docs/Primer.md	/^## Basic Assertions ##$/;"	s	chapter:Assertions
Basic Assertions	src/tests/googletest/googletest/docs/V1_5_Primer.md	/^## Basic Assertions ##$/;"	s	chapter:Assertions
Basic Assertions	src/tests/googletest/googletest/docs/V1_6_Primer.md	/^## Basic Assertions ##$/;"	s	chapter:Assertions
Basic Assertions	src/tests/googletest/googletest/docs/V1_7_Primer.md	/^## Basic Assertions ##$/;"	s	chapter:Assertions
Basic Concepts	src/tests/googletest/googletest/docs/Primer.md	/^# Basic Concepts #$/;"	c
Basic Concepts	src/tests/googletest/googletest/docs/V1_5_Primer.md	/^# Basic Concepts #$/;"	c
Basic Concepts	src/tests/googletest/googletest/docs/V1_6_Primer.md	/^# Basic Concepts #$/;"	c
Basic Concepts	src/tests/googletest/googletest/docs/V1_7_Primer.md	/^# Basic Concepts #$/;"	c
BasicNarrowIoManip	src/tests/googletest/googletest/include/gtest/gtest-message.h	/^  typedef std::ostream& (*BasicNarrowIoManip)(std::ostream&);$/;"	t	class:testing::Message	typeref:typename:std::ostream & (*)(std::ostream &)
BeautifyCode	src/tests/googletest/googletest/scripts/pump.py	/^def BeautifyCode(string):$/;"	f
Begin	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator10	typeref:typename:ParamIteratorInterface<ParamType> *
Begin	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator2	typeref:typename:ParamIteratorInterface<ParamType> *
Begin	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator3	typeref:typename:ParamIteratorInterface<ParamType> *
Begin	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator4	typeref:typename:ParamIteratorInterface<ParamType> *
Begin	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator5	typeref:typename:ParamIteratorInterface<ParamType> *
Begin	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator6	typeref:typename:ParamIteratorInterface<ParamType> *
Begin	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator7	typeref:typename:ParamIteratorInterface<ParamType> *
Begin	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator8	typeref:typename:ParamIteratorInterface<ParamType> *
Begin	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator9	typeref:typename:ParamIteratorInterface<ParamType> *
Begin	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  virtual ParamIteratorInterface<T>* Begin() const {$/;"	f	class:testing::internal::RangeGenerator	typeref:typename:ParamIteratorInterface<T> *
Begin	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  virtual ParamIteratorInterface<T>* Begin() const {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator	typeref:typename:ParamIteratorInterface<T> *
BeginEndDistanceIs	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^BeginEndDistanceIs(const DistanceMatcher& distance_matcher) {$/;"	f	namespace:testing	typeref:typename:internal::BeginEndDistanceIsMatcher<DistanceMatcher>
BeginEndDistanceIsMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit BeginEndDistanceIsMatcher(const DistanceMatcher& distance_matcher)$/;"	f	class:testing::internal::BeginEndDistanceIsMatcher
BeginEndDistanceIsMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class BeginEndDistanceIsMatcher {$/;"	c	namespace:testing::internal
Bench	src/muduo/muduo/base/tests/BlockingQueue_bench.cc	/^  Bench(int numThreads)$/;"	f	class:Bench	file:
Bench	src/muduo/muduo/base/tests/BlockingQueue_bench.cc	/^class Bench$/;"	c	file:
Bench	src/muduo/muduo/base/tests/BlockingQueue_bench2.cc	/^  Bench(int numThreads)$/;"	f	class:Bench	file:
Bench	src/muduo/muduo/base/tests/BlockingQueue_bench2.cc	/^class Bench$/;"	c	file:
Bench	src/muduo/muduo/base/tests/Thread_bench.cc	/^  Bench(int numThreads)$/;"	f	class:Bench	file:
Bench	src/muduo/muduo/base/tests/Thread_bench.cc	/^class Bench$/;"	c	file:
Between	src/tests/googletest/googlemock/src/gmock-cardinalities.cc	/^GTEST_API_ Cardinality Between(int min, int max) {$/;"	f	namespace:testing	typeref:typename:GTEST_API_ Cardinality
BetweenCardinalityImpl	src/tests/googletest/googlemock/src/gmock-cardinalities.cc	/^  BetweenCardinalityImpl(int min, int max)$/;"	f	class:testing::__anon97b0a8450111::BetweenCardinalityImpl	file:
BetweenCardinalityImpl	src/tests/googletest/googlemock/src/gmock-cardinalities.cc	/^class BetweenCardinalityImpl : public CardinalityInterface {$/;"	c	namespace:testing::__anon97b0a8450111	file:
Bg	src/libtfhe-superaic-core/include/tgsw.h	/^    const int32_t Bg;\/\/\/< decomposition base (must be a power of 2)$/;"	m	struct:TGswParams	typeref:typename:const int32_t
Bgbit	src/libtfhe-superaic-core/include/tgsw.h	/^    const int32_t Bgbit;\/\/\/< log_2(Bg)$/;"	m	struct:TGswParams	typeref:typename:const int32_t
Bgbit_bk	src/tests/bootstrapping_classic_PBS_parameters_test.cpp	/^    const int32_t Bgbit_bk = M8_PARAM.tgsw_Bgbit;$/;"	v	namespace:__anon8153b4f20111	typeref:typename:const int32_t
Bgbit_bk	src/tests/bootstrapping_direct_test.cpp	/^    const int32_t Bgbit_bk = 10;$/;"	v	namespace:__anon560166140111	typeref:typename:const int32_t
Bgbit_bk	src/tests/bootstrapping_test.cpp	/^    const int32_t Bgbit_bk = 10;$/;"	v	namespace:__anonf36cd29a0111	typeref:typename:const int32_t
Bgbit_bk	src/tests/macros_decrypt_with_plaintext_modulus_macros.cpp	/^    const int32_t Bgbit_bk = M8_PARAM.tgsw_Bgbit;$/;"	v	namespace:__anon478224cd0111	typeref:typename:const int32_t
Bgbit_bk	src/tests/macros_modSwitch_with_plaintext_modulus_macros.cpp	/^    const int32_t Bgbit_bk = M8_PARAM.tgsw_Bgbit;$/;"	v	namespace:__anon4cdaee640111	typeref:typename:const int32_t
Bgbit_bk	src/tests/ops_add.cpp	/^    const int32_t Bgbit_bk = M8_PARAM.tgsw_Bgbit;$/;"	v	namespace:__anonb1f413890111	typeref:typename:const int32_t
Bgbit_bk	src/tests/ops_add_with_carry.cpp	/^    const int32_t Bgbit_bk = M8_PARAM.tgsw_Bgbit;$/;"	v	namespace:__anon662e63c40111	typeref:typename:const int32_t
Bgbit_bk	src/tests/small_size_test.cpp	/^    const int32_t Bgbit_bk = 10;$/;"	v	namespace:__anon9baab4410111	typeref:typename:const int32_t
Bgbit_bk	src/tests/zpf_for_bootstrap_detail.cpp	/^    const int32_t Bgbit_bk = M8_PARAM.tgsw_Bgbit;$/;"	v	namespace:__anonc07144f40111	typeref:typename:const int32_t
Bgbit_bsk	src/tests/decrypt_with_plaintext_modulus.cpp	/^    const int32_t Bgbit_bsk = M8_PARAM.tgsw_Bgbit;$/;"	v	namespace:__anondb55d4a50111	typeref:typename:const int32_t
Big	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^  Big() { memset(array, 0, sizeof(array)); }$/;"	f	struct:testing::gtest_printers_test::Big	file:
Big	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^struct Big {$/;"	s	namespace:testing::gtest_printers_test	file:
BigTuple	src/tests/googletest/googletest/test/gtest-tuple_test.cc	/^  typedef tuple<int, int, int, int, int, int, int, int, int, int> BigTuple;$/;"	t	class:__anona47613760111::BigTupleTest	typeref:typename:tuple<int,int,int,int,int,int,int,int,int,int>	file:
BigTupleTest	src/tests/googletest/googletest/test/gtest-tuple_test.cc	/^  BigTupleTest() :$/;"	f	class:__anona47613760111::BigTupleTest	file:
BigTupleTest	src/tests/googletest/googletest/test/gtest-tuple_test.cc	/^class BigTupleTest : public testing::Test {$/;"	c	namespace:__anona47613760111	file:
BiggestConvertible	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  typedef unsigned __int64 BiggestConvertible;$/;"	t	function:testing::internal::ParseNaturalNumber	typeref:typename:unsigned __int64
BiggestConvertible	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  typedef unsigned long long BiggestConvertible;  \/\/ NOLINT$/;"	t	function:testing::internal::ParseNaturalNumber	typeref:typename:unsigned long long
BiggestInt	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^typedef __int64 BiggestInt;$/;"	t	namespace:testing::internal	typeref:typename:__int64
BiggestInt	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^typedef long long BiggestInt;  \/\/ NOLINT$/;"	t	namespace:testing::internal	typeref:typename:long long
BiggestIntConvertible	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^class BiggestIntConvertible {$/;"	c	file:
BiggestParsable	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^typedef unsigned __int64 BiggestParsable;$/;"	t	typeref:typename:unsigned __int64	file:
BiggestParsable	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^typedef unsigned long long BiggestParsable;$/;"	t	typeref:typename:unsigned long long	file:
BiggestSignedParsable	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^typedef signed __int64 BiggestSignedParsable;$/;"	t	typeref:typename:signed __int64	file:
BiggestSignedParsable	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^typedef signed long long BiggestSignedParsable;$/;"	t	typeref:typename:signed long long	file:
Binary	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^const char* Binary(const char* input, short n) { return input + n; }  \/\/ NOLINT$/;"	f	namespace:testing::gmock_generated_actions_test	typeref:typename:const char *
Binary	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^  std::string Binary(const std::string& str, char c) const { return str + c; }$/;"	f	class:testing::gmock_more_actions_test::Foo	typeref:typename:std::string	file:
Binary	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^const char* Binary(const char* input, short n) { return input + n; }  \/\/ NOLINT$/;"	f	namespace:testing::gmock_more_actions_test	typeref:typename:const char *
Binary Comparison	src/tests/googletest/googletest/docs/Primer.md	/^## Binary Comparison ##$/;"	s	chapter:Assertions
Binary Comparison	src/tests/googletest/googletest/docs/V1_5_Primer.md	/^## Binary Comparison ##$/;"	s	chapter:Assertions
Binary Comparison	src/tests/googletest/googletest/docs/V1_6_Primer.md	/^## Binary Comparison ##$/;"	s	chapter:Assertions
Binary Comparison	src/tests/googletest/googletest/docs/V1_7_Primer.md	/^## Binary Comparison ##$/;"	s	chapter:Assertions
Bind	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  struct Bind {$/;"	s	struct:testing::internal::TemplateSel
BipartiteNonSquareTest	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^class BipartiteNonSquareTest$/;"	c	namespace:testing::gmock_matchers_test	file:
BipartiteRandomTest	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^class BipartiteRandomTest$/;"	c	namespace:testing::gmock_matchers_test	file:
BipartiteTest	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^class BipartiteTest : public ::testing::TestWithParam<int> { };$/;"	c	namespace:testing::gmock_matchers_test	file:
Bits	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  typedef typename Floating::Bits Bits;$/;"	t	class:testing::gmock_matchers_test::FloatingPointTest	typeref:typename:Floating::Bits	file:
Bits	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  typedef typename TypeWithSize<sizeof(RawType)>::UInt Bits;$/;"	t	class:testing::internal::FloatingPoint
Bits	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  typedef typename Floating::Bits Bits;$/;"	t	class:__anonf780395f0111::FloatingPointTest	typeref:typename:Floating::Bits	file:
BlockRecomposer	docs/rustops/BlockRecomposer.md	/^# BlockRecomposer$/;"	c
BlockingQueue	src/muduo/muduo/base/BlockingQueue.h	/^  BlockingQueue()$/;"	f	class:muduo::BlockingQueue
BlockingQueue	src/muduo/muduo/base/BlockingQueue.h	/^class BlockingQueue : noncopyable$/;"	c	namespace:muduo
BoilerPlate	src/muduo/muduo/net/boilerplate.h	/^class BoilerPlate : noncopyable$/;"	c	namespace:muduo::net
Bool	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^inline internal::ParamGenerator<bool> Bool() {$/;"	f	namespace:testing	typeref:typename:internal::ParamGenerator<bool>
Bool	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  explicit Bool(int val) : value(val != 0) {}$/;"	f	struct:Bool	file:
Bool	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^struct Bool {$/;"	s	file:
BoolFromGTestEnv	src/tests/googletest/googletest/src/gtest-port.cc	/^bool BoolFromGTestEnv(const char* flag, bool default_value) {$/;"	f	namespace:testing::internal	typeref:typename:bool
BoolResetter	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^  explicit BoolResetter(bool* value) : value_(value) {}$/;"	f	class:testing::gmock_generated_actions_test::BoolResetter	file:
BoolResetter	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^class BoolResetter {$/;"	c	namespace:testing::gmock_generated_actions_test	file:
BooleanConstant	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^struct BooleanConstant {};$/;"	s	namespace:testing::internal
BothOfMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  BothOfMatcher(Matcher1 matcher1, Matcher2 matcher2)$/;"	f	class:testing::internal::BothOfMatcher
BothOfMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class BothOfMatcher {$/;"	c	namespace:testing::internal
BothOfMatcherImpl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  BothOfMatcherImpl(const Matcher<T>& matcher1, const Matcher<T>& matcher2)$/;"	f	class:testing::internal::BothOfMatcherImpl
BothOfMatcherImpl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class BothOfMatcherImpl : public MatcherInterface<T> {$/;"	c	namespace:testing::internal
BoundSecondMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  BoundSecondMatcher(const Tuple2Matcher& tm, const Second& second)$/;"	f	class:testing::internal::BoundSecondMatcher
BoundSecondMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class BoundSecondMatcher {$/;"	c	namespace:testing::internal
BoundedBlockingQueue	src/muduo/muduo/base/BoundedBlockingQueue.h	/^  explicit BoundedBlockingQueue(int maxSize)$/;"	f	class:muduo::BoundedBlockingQueue
BoundedBlockingQueue	src/muduo/muduo/base/BoundedBlockingQueue.h	/^class BoundedBlockingQueue : noncopyable$/;"	c	namespace:muduo
Branch (cpp98/cpp11/cpp17) and version of muduo?	src/muduo/.github/issue_template.md	/^## Branch (cpp98\/cpp11\/cpp17) and version of muduo?$/;"	s
BranchFiles	src/tests/googletest/googletest/scripts/release_docs.py	/^  def BranchFiles(self):$/;"	m	class:WikiBrancher
BreakOnFailure	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static Flags BreakOnFailure(bool break_on_failure) {$/;"	f	struct:testing::Flags	typeref:typename:Flags	file:
BreakTime	src/muduo/muduo/base/TimeZone.cc	/^DateTime BreakTime(int64_t t)$/;"	f	namespace:muduo::detail	typeref:typename:DateTime
Bucket	src/muduo/examples/idleconnection/echo.h	/^  typedef std::unordered_set<EntryPtr> Bucket;$/;"	t	class:EchoServer	typeref:typename:std::unordered_set<EntryPtr>
Buffer	src/muduo/muduo/base/AsyncLogging.h	/^  typedef muduo::detail::FixedBuffer<muduo::detail::kLargeBuffer> Buffer;$/;"	t	class:muduo::AsyncLogging	typeref:typename:muduo::detail::FixedBuffer<muduo::detail::kLargeBuffer>
Buffer	src/muduo/muduo/base/LogStream.h	/^  typedef detail::FixedBuffer<detail::kSmallBuffer> Buffer;$/;"	t	class:muduo::LogStream	typeref:typename:detail::FixedBuffer<detail::kSmallBuffer>
Buffer	src/muduo/muduo/net/Buffer.h	/^  explicit Buffer(size_t initialSize = kInitialSize)$/;"	f	class:muduo::net::Buffer
Buffer	src/muduo/muduo/net/Buffer.h	/^class Buffer : public muduo::copyable$/;"	c	namespace:muduo::net
BufferOutputStream	src/muduo/muduo/net/protobuf/BufferStream.h	/^  BufferOutputStream(Buffer* buf)$/;"	f	class:muduo::net::BufferOutputStream
BufferOutputStream	src/muduo/muduo/net/protobuf/BufferStream.h	/^class BufferOutputStream : public google::protobuf::io::ZeroCopyOutputStream$/;"	c	namespace:muduo::net
BufferPtr	src/muduo/muduo/base/AsyncLogging.h	/^  typedef BufferVector::value_type BufferPtr;$/;"	t	class:muduo::AsyncLogging	typeref:typename:BufferVector::value_type
BufferVector	src/muduo/muduo/base/AsyncLogging.h	/^  typedef std::vector<std::unique_ptr<Buffer>> BufferVector;$/;"	t	class:muduo::AsyncLogging	typeref:typename:std::vector<std::unique_ptr<Buffer>>
Build	src/tests/googletest/googletest/README.md	/^#### Build ####$/;"	t	subsection:Generic Build Instructions
Build and Go	src/tests/googletest/googletest/docs/V1_5_XcodeGuide.md	/^# Build and Go #$/;"	c
Build and Go	src/tests/googletest/googletest/docs/V1_6_XcodeGuide.md	/^# Build and Go #$/;"	c
Build and Go	src/tests/googletest/googletest/docs/V1_7_XcodeGuide.md	/^# Build and Go #$/;"	c
Build and Go	src/tests/googletest/googletest/docs/XcodeGuide.md	/^# Build and Go #$/;"	c
BuildList	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static ListType BuildList(const Head& matcher, const Tail&... tail) {$/;"	f	struct:testing::internal::MatcherList	typeref:typename:ListType
BuildList	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static ListType BuildList(const Matcher1& matcher1,$/;"	f	struct:testing::internal::MatcherList	typeref:typename:ListType
BuilderFromSource	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^def BuilderFromSource(source, filename):$/;"	f
Building Google Mock	src/tests/googletest/googlemock/README.md	/^### Building Google Mock ###$/;"	S	section:Getting Started
BuiltInDefaultValue	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^class BuiltInDefaultValue {$/;"	c	namespace:testing::internal
BuiltInDefaultValue	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^class BuiltInDefaultValue<T*> {$/;"	c	namespace:testing::internal
BuiltInDefaultValue	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^class BuiltInDefaultValue<const T> {$/;"	c	namespace:testing::internal
BuiltInDefaultValueGetter	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^struct BuiltInDefaultValueGetter {$/;"	s	namespace:testing::internal
BuiltInDefaultValueGetter	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^struct BuiltInDefaultValueGetter<T, false> {$/;"	s	namespace:testing::internal
But I don't like calling my entire test case FOODeathTest when it contains both death tests and non-death tests. What do I do?	src/tests/googletest/googletest/docs/FAQ.md	/^## But I don't like calling my entire test case FOODeathTest when it contains both death tests a/;"	s
But I don't like calling my entire test case FOODeathTest when it contains both death tests and non-death tests. What do I do?	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## But I don't like calling my entire test case FOODeathTest when it contains both death tests a/;"	s
But I don't like calling my entire test case FOODeathTest when it contains both death tests and non-death tests. What do I do?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## But I don't like calling my entire test case FOODeathTest when it contains both death tests a/;"	s
But I don't like calling my entire test case FOODeathTest when it contains both death tests and non-death tests. What do I do?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## But I don't like calling my entire test case FOODeathTest when it contains both death tests a/;"	s
ByConstRef	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^bool ByConstRef(const std::string& s) { return s == "Hi"; }$/;"	f	namespace:testing::gmock_generated_actions_test	typeref:typename:bool
ByConstRef	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^bool ByConstRef(const std::string& s) { return s == "Hi"; }$/;"	f	namespace:testing::gmock_more_actions_test	typeref:typename:bool
ByMove	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^internal::ByMoveWrapper<R> ByMove(R x) {$/;"	f	namespace:testing	typeref:typename:internal::ByMoveWrapper<R>
ByMoveWrapper	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  explicit ByMoveWrapper(T value) : payload(internal::move(value)) {}$/;"	f	struct:testing::internal::ByMoveWrapper
ByMoveWrapper	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^struct ByMoveWrapper {$/;"	s	namespace:testing::internal
ByNonConstRef	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^std::string ByNonConstRef(std::string& s) { return s += "+"; }  \/\/ NOLINT$/;"	f	namespace:testing::gmock_generated_actions_test	typeref:typename:std::string
ByNonConstRef	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^std::string ByNonConstRef(std::string& s) { return s += "+"; }  \/\/ NOLINT$/;"	f	namespace:testing::gmock_more_actions_test	typeref:typename:std::string
ByRef	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^inline internal::ReferenceWrapper<T> ByRef(T& l_value) {  \/\/ NOLINT$/;"	f	namespace:testing	typeref:typename:internal::ReferenceWrapper<T>
ByRef	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^struct ByRef { typedef const T& type; };  \/\/ NOLINT$/;"	s	namespace:std::tr1::gtest_internal
ByRef	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^struct ByRef<T&> { typedef T& type; };  \/\/ NOLINT$/;"	s	namespace:std::tr1::gtest_internal
ByteCount	src/muduo/muduo/net/protobuf/BufferStream.h	/^  virtual int64_t ByteCount() const \/\/ override$/;"	f	class:muduo::net::BufferOutputStream	typeref:typename:int64_t
ByteSizeConsistencyError	src/muduo/muduo/net/protorpc/google-inl.h	/^void ByteSizeConsistencyError(int byte_size_before_serialization,$/;"	f	typeref:typename:void
CAN_GENERATE_GOLDEN_FILE	src/tests/googletest/googletest/test/gtest_output_test.py	/^CAN_GENERATE_GOLDEN_FILE = (SUPPORTS_DEATH_TESTS and$/;"	v
CAN_PASS_EMPTY_ENV	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^CAN_PASS_EMPTY_ENV = eval(child.output)$/;"	v
CAN_TEST_EMPTY_FILTER	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^CAN_TEST_EMPTY_FILTER = (CAN_PASS_EMPTY_ENV and CAN_UNSET_ENV)$/;"	v
CAN_UNSET_ENV	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^CAN_UNSET_ENV = eval(child.output)$/;"	v
CAPABILITY	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    enum CAPABILITY{$/;"	g	class:tfhe_superaic::TFHE_ACC
CAPABILITY	src/muduo/muduo/base/Mutex.h	/^#define CAPABILITY(/;"	d
CAPABILITY_FIX_POLYNOMIAL_MUL	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^        CAPABILITY_FIX_POLYNOMIAL_MUL , \/\/ 固定长度多项式乘法$/;"	e	enum:tfhe_superaic::TFHE_ACC::CAPABILITY
CAPABILITY_NONE	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^        CAPABILITY_NONE,$/;"	e	enum:tfhe_superaic::TFHE_ACC::CAPABILITY
CAPABILITY_PBS	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^        CAPABILITY_PBS,                     \/\/ 全功能bootstap$/;"	e	enum:tfhe_superaic::TFHE_ACC::CAPABILITY
CASTS	src/tests/googletest/googlemock/scripts/generator/cpp/keywords.py	/^CASTS = set('static_cast const_cast dynamic_cast reinterpret_cast'.split())$/;"	v
CATCH_EXCEPTIONS_ENV_VAR	src/tests/googletest/googletest/test/gtest_break_on_failure_unittest.py	/^CATCH_EXCEPTIONS_ENV_VAR = 'GTEST_CATCH_EXCEPTIONS'$/;"	v
CATCH_EXCEPTIONS_ENV_VAR_NAME	src/tests/googletest/googletest/test/gtest_output_test.py	/^CATCH_EXCEPTIONS_ENV_VAR_NAME = 'GTEST_CATCH_EXCEPTIONS'$/;"	v
CC	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^class CC {$/;"	c	namespace:__anon6b6cf3b20111	file:
CC_FLAG	src/tests/googletest/googlemock/scripts/upload_gmock.py	/^CC_FLAG = '--cc='$/;"	v
CC_FLAG	src/tests/googletest/googletest/scripts/upload_gtest.py	/^CC_FLAG = '--cc='$/;"	v
CHECK_NOTNULL	src/muduo/muduo/base/Logging.h	/^#define CHECK_NOTNULL(/;"	d
CIstream	src/libtfhe-superaic-core/include/tfhe_generic_streams.h	/^    CIstream(FILE *F) : F(F) {}$/;"	f	class:CIstream
CIstream	src/libtfhe-superaic-core/include/tfhe_generic_streams.h	/^class CIstream : public Istream {$/;"	c
CLEANFILES	src/tests/googletest/googlemock/Makefile.am	/^CLEANFILES = core$/;"	m
CLEANFILES	src/tests/googletest/googletest/Makefile.am	/^CLEANFILES = core$/;"	m
CMAKE_AR	buildotests/CMakeFiles/3.16.3/CMakeASMCompiler.cmake	/^set(CMAKE_AR "\/usr\/bin\/ar")$/;"	v
CMAKE_AR	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_AR "\/usr\/bin\/ar")$/;"	v
CMAKE_AR	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_AR "\/usr\/bin\/ar")$/;"	v
CMAKE_ASM_COMPILER	buildotests/CMakeFiles/3.16.3/CMakeASMCompiler.cmake	/^set(CMAKE_ASM_COMPILER "\/usr\/bin\/cc")$/;"	v
CMAKE_ASM_COMPILER_AR	buildotests/CMakeFiles/3.16.3/CMakeASMCompiler.cmake	/^set(CMAKE_ASM_COMPILER_AR "\/usr\/bin\/gcc-ar")$/;"	v
CMAKE_ASM_COMPILER_ARG1	buildotests/CMakeFiles/3.16.3/CMakeASMCompiler.cmake	/^set(CMAKE_ASM_COMPILER_ARG1 "")$/;"	v
CMAKE_ASM_COMPILER_ENV_VAR	buildotests/CMakeFiles/3.16.3/CMakeASMCompiler.cmake	/^set(CMAKE_ASM_COMPILER_ENV_VAR "ASM")$/;"	v
CMAKE_ASM_COMPILER_ID	buildotests/CMakeFiles/3.16.3/CMakeASMCompiler.cmake	/^set(CMAKE_ASM_COMPILER_ID "GNU")$/;"	v
CMAKE_ASM_COMPILER_LOADED	buildotests/CMakeFiles/3.16.3/CMakeASMCompiler.cmake	/^set(CMAKE_ASM_COMPILER_LOADED 1)$/;"	v
CMAKE_ASM_COMPILER_RANLIB	buildotests/CMakeFiles/3.16.3/CMakeASMCompiler.cmake	/^set(CMAKE_ASM_COMPILER_RANLIB "\/usr\/bin\/gcc-ranlib")$/;"	v
CMAKE_ASM_COMPILER_VERSION	buildotests/CMakeFiles/3.16.3/CMakeASMCompiler.cmake	/^set(CMAKE_ASM_COMPILER_VERSION "")$/;"	v
CMAKE_ASM_IGNORE_EXTENSIONS	buildotests/CMakeFiles/3.16.3/CMakeASMCompiler.cmake	/^set(CMAKE_ASM_IGNORE_EXTENSIONS h;H;o;O;obj;OBJ;def;DEF;rc;RC)$/;"	v
CMAKE_ASM_LINKER_PREFERENCE	buildotests/CMakeFiles/3.16.3/CMakeASMCompiler.cmake	/^set(CMAKE_ASM_LINKER_PREFERENCE 0)$/;"	v
CMAKE_BINARY_DIR	buildotests/Makefile	/^CMAKE_BINARY_DIR = \/root\/note\/zpf-test\/superaic-tfhe-gerrit\/buildotests$/;"	m
CMAKE_BINARY_DIR	buildotests/driver/Makefile	/^CMAKE_BINARY_DIR = \/root\/note\/zpf-test\/superaic-tfhe-gerrit\/buildotests$/;"	m
CMAKE_BINARY_DIR	buildotests/examples/Makefile	/^CMAKE_BINARY_DIR = \/root\/note\/zpf-test\/superaic-tfhe-gerrit\/buildotests$/;"	m
CMAKE_BINARY_DIR	buildotests/libtfhe-superaic-acc/Makefile	/^CMAKE_BINARY_DIR = \/root\/note\/zpf-test\/superaic-tfhe-gerrit\/buildotests$/;"	m
CMAKE_BINARY_DIR	buildotests/libtfhe-superaic-client/Makefile	/^CMAKE_BINARY_DIR = \/root\/note\/zpf-test\/superaic-tfhe-gerrit\/buildotests$/;"	m
CMAKE_BINARY_DIR	buildotests/libtfhe-superaic-core/Makefile	/^CMAKE_BINARY_DIR = \/root\/note\/zpf-test\/superaic-tfhe-gerrit\/buildotests$/;"	m
CMAKE_BINARY_DIR	buildotests/libtfhe-superaic-core/fft_processors/Makefile	/^CMAKE_BINARY_DIR = \/root\/note\/zpf-test\/superaic-tfhe-gerrit\/buildotests$/;"	m
CMAKE_BINARY_DIR	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^CMAKE_BINARY_DIR = \/root\/note\/zpf-test\/superaic-tfhe-gerrit\/buildotests$/;"	m
CMAKE_BINARY_DIR	buildotests/libtfhe-superaic-server/Makefile	/^CMAKE_BINARY_DIR = \/root\/note\/zpf-test\/superaic-tfhe-gerrit\/buildotests$/;"	m
CMAKE_BINARY_DIR	buildotests/tests/Makefile	/^CMAKE_BINARY_DIR = \/root\/note\/zpf-test\/superaic-tfhe-gerrit\/buildotests$/;"	m
CMAKE_BINARY_DIR	buildotests/tests/googletest/Makefile	/^CMAKE_BINARY_DIR = \/root\/note\/zpf-test\/superaic-tfhe-gerrit\/buildotests$/;"	m
CMAKE_BINARY_DIR	buildotests/tests/googletest/googlemock/Makefile	/^CMAKE_BINARY_DIR = \/root\/note\/zpf-test\/superaic-tfhe-gerrit\/buildotests$/;"	m
CMAKE_BINARY_DIR	buildotests/tests/googletest/googlemock/gtest/Makefile	/^CMAKE_BINARY_DIR = \/root\/note\/zpf-test\/superaic-tfhe-gerrit\/buildotests$/;"	m
CMAKE_BUILD_TYPE	src/muduo/CMakeLists.txt	/^  set(CMAKE_BUILD_TYPE "Release")$/;"	v
CMAKE_C11_COMPILE_FEATURES	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C11_COMPILE_FEATURES "c_std_11;c_static_assert")$/;"	v
CMAKE_C90_COMPILE_FEATURES	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C90_COMPILE_FEATURES "c_std_90;c_function_prototypes")$/;"	v
CMAKE_C99_COMPILE_FEATURES	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C99_COMPILE_FEATURES "c_std_99;c_restrict;c_variadic_macros")$/;"	v
CMAKE_CL_SHOWINCLUDES_PREFIX	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_C_CL_SHOWINCLUDES_PREFIX}")$/;"	v
CMAKE_CL_SHOWINCLUDES_PREFIX	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_CXX_CL_SHOWINCLUDES_PREFIX}")$/;"	v
CMAKE_COMMAND	buildotests/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	buildotests/driver/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	buildotests/examples/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	buildotests/libtfhe-superaic-acc/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	buildotests/libtfhe-superaic-client/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	buildotests/libtfhe-superaic-core/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	buildotests/libtfhe-superaic-core/fft_processors/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	buildotests/libtfhe-superaic-server/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	buildotests/tests/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	buildotests/tests/googletest/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	buildotests/tests/googletest/googlemock/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	buildotests/tests/googletest/googlemock/gtest/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMPILER_IS_CYGWIN	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_COMPILER_IS_CYGWIN )$/;"	v
CMAKE_COMPILER_IS_CYGWIN	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_COMPILER_IS_CYGWIN )$/;"	v
CMAKE_COMPILER_IS_GNUCC	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_COMPILER_IS_GNUCC 1)$/;"	v
CMAKE_COMPILER_IS_GNUCXX	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_COMPILER_IS_GNUCXX 1)$/;"	v
CMAKE_COMPILER_IS_MINGW	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_COMPILER_IS_MINGW )$/;"	v
CMAKE_COMPILER_IS_MINGW	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_COMPILER_IS_MINGW )$/;"	v
CMAKE_COMPILER_OPTS	Makefile	/^CMAKE_COMPILER_OPTS=$/;"	m
CMAKE_CROSSCOMPILING	buildotests/CMakeFiles/3.16.3/CMakeSystem.cmake	/^set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	buildotests/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	buildotests/driver/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	buildotests/examples/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	buildotests/libtfhe-superaic-acc/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	buildotests/libtfhe-superaic-client/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	buildotests/libtfhe-superaic-core/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	buildotests/libtfhe-superaic-core/fft_processors/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	buildotests/libtfhe-superaic-core/fft_processors/nayuki/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	buildotests/libtfhe-superaic-server/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	buildotests/tests/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	buildotests/tests/googletest/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	buildotests/tests/googletest/googlemock/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	buildotests/tests/googletest/googlemock/gtest/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CXX11_COMPILE_FEATURES	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX11_COMPILE_FEATURES "cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_att/;"	v
CMAKE_CXX14_COMPILE_FEATURES	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX14_COMPILE_FEATURES "cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_de/;"	v
CMAKE_CXX17_COMPILE_FEATURES	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX17_COMPILE_FEATURES "cxx_std_17")$/;"	v
CMAKE_CXX20_COMPILE_FEATURES	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX20_COMPILE_FEATURES "cxx_std_20")$/;"	v
CMAKE_CXX98_COMPILE_FEATURES	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX98_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters")$/;"	v
CMAKE_CXX_ABI_COMPILED	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_ABI_COMPILED TRUE)$/;"	v
CMAKE_CXX_CL_SHOWINCLUDES_PREFIX	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX "")$/;"	v
CMAKE_CXX_COMPILER	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER "\/usr\/bin\/c++")$/;"	v
CMAKE_CXX_COMPILER_ABI	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ABI "ELF")$/;"	v
CMAKE_CXX_COMPILER_AR	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_AR "\/usr\/bin\/gcc-ar-9")$/;"	v
CMAKE_CXX_COMPILER_ARG1	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ARG1 "")$/;"	v
CMAKE_CXX_COMPILER_ENV_VAR	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ENV_VAR "CXX")$/;"	v
CMAKE_CXX_COMPILER_FRONTEND_VARIANT	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_FRONTEND_VARIANT "")$/;"	v
CMAKE_CXX_COMPILER_ID	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ID "GNU")$/;"	v
CMAKE_CXX_COMPILER_ID	buildotests/examples/CMakeFiles/client_only.dir/DependInfo.cmake	/^set(CMAKE_CXX_COMPILER_ID "GNU")$/;"	v
CMAKE_CXX_COMPILER_ID	buildotests/examples/CMakeFiles/comparebits.dir/DependInfo.cmake	/^set(CMAKE_CXX_COMPILER_ID "GNU")$/;"	v
CMAKE_CXX_COMPILER_ID	buildotests/examples/CMakeFiles/server_with_driver.dir/DependInfo.cmake	/^set(CMAKE_CXX_COMPILER_ID "GNU")$/;"	v
CMAKE_CXX_COMPILER_ID	buildotests/examples/CMakeFiles/server_without_driver.dir/DependInfo.cmake	/^set(CMAKE_CXX_COMPILER_ID "GNU")$/;"	v
CMAKE_CXX_COMPILER_ID	buildotests/libtfhe-superaic-acc/CMakeFiles/tfhe_superaic_acc.dir/DependInfo.cmake	/^set(CMAKE_CXX_COMPILER_ID "GNU")$/;"	v
CMAKE_CXX_COMPILER_ID	buildotests/libtfhe-superaic-core/CMakeFiles/tfhe_superaic_core.dir/DependInfo.cmake	/^set(CMAKE_CXX_COMPILER_ID "GNU")$/;"	v
CMAKE_CXX_COMPILER_ID	buildotests/libtfhe-superaic-core/fft_processors/nayuki/CMakeFiles/tfhe-fft-nayuki-portable.dir/DependInfo.cmake	/^set(CMAKE_CXX_COMPILER_ID "GNU")$/;"	v
CMAKE_CXX_COMPILER_ID	buildotests/libtfhe-superaic-server/CMakeFiles/tfhe_superaic_server.dir/DependInfo.cmake	/^set(CMAKE_CXX_COMPILER_ID "GNU")$/;"	v
CMAKE_CXX_COMPILER_ID	buildotests/tests/CMakeFiles/decrypt_with_plaintext_modulus.dir/DependInfo.cmake	/^set(CMAKE_CXX_COMPILER_ID "GNU")$/;"	v
CMAKE_CXX_COMPILER_ID	buildotests/tests/CMakeFiles/macros_decrypt_with_plaintext_modulus_macros.dir/DependInfo.cmake	/^set(CMAKE_CXX_COMPILER_ID "GNU")$/;"	v
CMAKE_CXX_COMPILER_ID	buildotests/tests/googletest/googlemock/CMakeFiles/gmock.dir/DependInfo.cmake	/^set(CMAKE_CXX_COMPILER_ID "GNU")$/;"	v
CMAKE_CXX_COMPILER_ID	buildotests/tests/googletest/googlemock/CMakeFiles/gmock_main.dir/DependInfo.cmake	/^set(CMAKE_CXX_COMPILER_ID "GNU")$/;"	v
CMAKE_CXX_COMPILER_ID	buildotests/tests/googletest/googlemock/gtest/CMakeFiles/gtest.dir/DependInfo.cmake	/^set(CMAKE_CXX_COMPILER_ID "GNU")$/;"	v
CMAKE_CXX_COMPILER_ID	buildotests/tests/googletest/googlemock/gtest/CMakeFiles/gtest_main.dir/DependInfo.cmake	/^set(CMAKE_CXX_COMPILER_ID "GNU")$/;"	v
CMAKE_CXX_COMPILER_ID_RUN	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ID_RUN 1)$/;"	v
CMAKE_CXX_COMPILER_LOADED	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_LOADED 1)$/;"	v
CMAKE_CXX_COMPILER_RANLIB	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_RANLIB "\/usr\/bin\/gcc-ranlib-9")$/;"	v
CMAKE_CXX_COMPILER_VERSION	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_VERSION "9.4.0")$/;"	v
CMAKE_CXX_COMPILER_VERSION_INTERNAL	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_VERSION_INTERNAL "")$/;"	v
CMAKE_CXX_COMPILER_WORKS	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_WORKS TRUE)$/;"	v
CMAKE_CXX_COMPILER_WRAPPER	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_WRAPPER "")$/;"	v
CMAKE_CXX_COMPILE_FEATURES	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters;cxx_std_11;cxx_alias/;"	v
CMAKE_CXX_FLAGS_DEBUG	src/muduo/CMakeLists.txt	/^set(CMAKE_CXX_FLAGS_DEBUG "-O0")$/;"	v
CMAKE_CXX_FLAGS_RELEASE	src/muduo/CMakeLists.txt	/^set(CMAKE_CXX_FLAGS_RELEASE "-O2 -DNDEBUG")$/;"	v
CMAKE_CXX_IGNORE_EXTENSIONS	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC)$/;"	v
CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES "\/usr\/include\/c++\/9;\/usr\/include\/x86_64-linux-/;"	v
CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES "\/usr\/lib\/gcc\/x86_64-linux-gnu\/9;\/usr\/lib\/x86_64/;"	v
CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "")$/;"	v
CMAKE_CXX_IMPLICIT_LINK_LIBRARIES	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES "stdc++;m;gcc_s;gcc;c;gcc_s;gcc")$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	buildotests/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	buildotests/driver/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	buildotests/examples/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	buildotests/libtfhe-superaic-acc/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	buildotests/libtfhe-superaic-client/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	buildotests/libtfhe-superaic-core/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	buildotests/libtfhe-superaic-core/fft_processors/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	buildotests/libtfhe-superaic-core/fft_processors/nayuki/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	buildotests/libtfhe-superaic-server/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	buildotests/tests/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	buildotests/tests/googletest/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	buildotests/tests/googletest/googlemock/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	buildotests/tests/googletest/googlemock/gtest/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	buildotests/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	buildotests/driver/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	buildotests/examples/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	buildotests/libtfhe-superaic-acc/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	buildotests/libtfhe-superaic-client/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	buildotests/libtfhe-superaic-core/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	buildotests/libtfhe-superaic-core/fft_processors/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	buildotests/libtfhe-superaic-core/fft_processors/nayuki/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	buildotests/libtfhe-superaic-server/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	buildotests/tests/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	buildotests/tests/googletest/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	buildotests/tests/googletest/googlemock/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	buildotests/tests/googletest/googlemock/gtest/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_LIBRARY_ARCHITECTURE	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_LIBRARY_ARCHITECTURE "x86_64-linux-gnu")$/;"	v
CMAKE_CXX_LINKER_PREFERENCE	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_LINKER_PREFERENCE 30)$/;"	v
CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1)$/;"	v
CMAKE_CXX_PLATFORM_ID	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_PLATFORM_ID "Linux")$/;"	v
CMAKE_CXX_SIMULATE_ID	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_SIMULATE_ID "")$/;"	v
CMAKE_CXX_SIMULATE_VERSION	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_SIMULATE_VERSION "")$/;"	v
CMAKE_CXX_SIZEOF_DATA_PTR	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_SIZEOF_DATA_PTR "8")$/;"	v
CMAKE_CXX_SOURCE_FILE_EXTENSIONS	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;m;mm;CPP)$/;"	v
CMAKE_CXX_STANDARD	src/CMakeLists.txt	/^set(CMAKE_CXX_STANDARD 17)$/;"	v
CMAKE_CXX_STANDARD_COMPUTED_DEFAULT	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT "14")$/;"	v
CMAKE_CXX_TARGET_INCLUDE_PATH	buildotests/examples/CMakeFiles/client_only.dir/DependInfo.cmake	/^set(CMAKE_CXX_TARGET_INCLUDE_PATH$/;"	v
CMAKE_CXX_TARGET_INCLUDE_PATH	buildotests/examples/CMakeFiles/comparebits.dir/DependInfo.cmake	/^set(CMAKE_CXX_TARGET_INCLUDE_PATH$/;"	v
CMAKE_CXX_TARGET_INCLUDE_PATH	buildotests/examples/CMakeFiles/server_with_driver.dir/DependInfo.cmake	/^set(CMAKE_CXX_TARGET_INCLUDE_PATH$/;"	v
CMAKE_CXX_TARGET_INCLUDE_PATH	buildotests/examples/CMakeFiles/server_without_driver.dir/DependInfo.cmake	/^set(CMAKE_CXX_TARGET_INCLUDE_PATH$/;"	v
CMAKE_CXX_TARGET_INCLUDE_PATH	buildotests/libtfhe-superaic-acc/CMakeFiles/tfhe_superaic_acc.dir/DependInfo.cmake	/^set(CMAKE_CXX_TARGET_INCLUDE_PATH$/;"	v
CMAKE_CXX_TARGET_INCLUDE_PATH	buildotests/libtfhe-superaic-core/CMakeFiles/tfhe_superaic_core.dir/DependInfo.cmake	/^set(CMAKE_CXX_TARGET_INCLUDE_PATH$/;"	v
CMAKE_CXX_TARGET_INCLUDE_PATH	buildotests/libtfhe-superaic-core/fft_processors/nayuki/CMakeFiles/tfhe-fft-nayuki-portable.dir/DependInfo.cmake	/^set(CMAKE_CXX_TARGET_INCLUDE_PATH$/;"	v
CMAKE_CXX_TARGET_INCLUDE_PATH	buildotests/libtfhe-superaic-server/CMakeFiles/tfhe_superaic_server.dir/DependInfo.cmake	/^set(CMAKE_CXX_TARGET_INCLUDE_PATH$/;"	v
CMAKE_CXX_TARGET_INCLUDE_PATH	buildotests/tests/CMakeFiles/decrypt_with_plaintext_modulus.dir/DependInfo.cmake	/^set(CMAKE_CXX_TARGET_INCLUDE_PATH$/;"	v
CMAKE_CXX_TARGET_INCLUDE_PATH	buildotests/tests/CMakeFiles/macros_decrypt_with_plaintext_modulus_macros.dir/DependInfo.cmake	/^set(CMAKE_CXX_TARGET_INCLUDE_PATH$/;"	v
CMAKE_CXX_TARGET_INCLUDE_PATH	buildotests/tests/googletest/googlemock/CMakeFiles/gmock.dir/DependInfo.cmake	/^set(CMAKE_CXX_TARGET_INCLUDE_PATH$/;"	v
CMAKE_CXX_TARGET_INCLUDE_PATH	buildotests/tests/googletest/googlemock/CMakeFiles/gmock_main.dir/DependInfo.cmake	/^set(CMAKE_CXX_TARGET_INCLUDE_PATH$/;"	v
CMAKE_CXX_TARGET_INCLUDE_PATH	buildotests/tests/googletest/googlemock/gtest/CMakeFiles/gtest.dir/DependInfo.cmake	/^set(CMAKE_CXX_TARGET_INCLUDE_PATH$/;"	v
CMAKE_CXX_TARGET_INCLUDE_PATH	buildotests/tests/googletest/googlemock/gtest/CMakeFiles/gtest_main.dir/DependInfo.cmake	/^set(CMAKE_CXX_TARGET_INCLUDE_PATH$/;"	v
CMAKE_CXX_VISIBILITY_PRESET	src/tests/googletest/googletest/CMakeLists.txt	/^  set(CMAKE_CXX_VISIBILITY_PRESET hidden)$/;"	v
CMAKE_C_ABI_COMPILED	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_ABI_COMPILED TRUE)$/;"	v
CMAKE_C_CL_SHOWINCLUDES_PREFIX	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_CL_SHOWINCLUDES_PREFIX "")$/;"	v
CMAKE_C_COMPILER	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER "\/usr\/bin\/cc")$/;"	v
CMAKE_C_COMPILER_ABI	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ABI "ELF")$/;"	v
CMAKE_C_COMPILER_AR	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_AR "\/usr\/bin\/gcc-ar-9")$/;"	v
CMAKE_C_COMPILER_ARG1	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ARG1 "")$/;"	v
CMAKE_C_COMPILER_ENV_VAR	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ENV_VAR "CC")$/;"	v
CMAKE_C_COMPILER_FRONTEND_VARIANT	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_FRONTEND_VARIANT "")$/;"	v
CMAKE_C_COMPILER_ID	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ID "GNU")$/;"	v
CMAKE_C_COMPILER_ID	buildotests/libtfhe-superaic-client/CMakeFiles/tfhe_superaic_client.dir/DependInfo.cmake	/^set(CMAKE_C_COMPILER_ID "GNU")$/;"	v
CMAKE_C_COMPILER_ID	buildotests/libtfhe-superaic-core/CMakeFiles/tfhe_superaic_core.dir/DependInfo.cmake	/^set(CMAKE_C_COMPILER_ID "GNU")$/;"	v
CMAKE_C_COMPILER_ID	buildotests/libtfhe-superaic-core/fft_processors/nayuki/CMakeFiles/tfhe-fft-nayuki-portable.dir/DependInfo.cmake	/^set(CMAKE_C_COMPILER_ID "GNU")$/;"	v
CMAKE_C_COMPILER_ID_RUN	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ID_RUN 1)$/;"	v
CMAKE_C_COMPILER_LOADED	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_LOADED 1)$/;"	v
CMAKE_C_COMPILER_RANLIB	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_RANLIB "\/usr\/bin\/gcc-ranlib-9")$/;"	v
CMAKE_C_COMPILER_VERSION	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_VERSION "9.4.0")$/;"	v
CMAKE_C_COMPILER_VERSION_INTERNAL	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_VERSION_INTERNAL "")$/;"	v
CMAKE_C_COMPILER_WORKS	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_WORKS TRUE)$/;"	v
CMAKE_C_COMPILER_WRAPPER	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_WRAPPER "")$/;"	v
CMAKE_C_COMPILE_FEATURES	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILE_FEATURES "c_std_90;c_function_prototypes;c_std_99;c_restrict;c_variadic_macr/;"	v
CMAKE_C_IGNORE_EXTENSIONS	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_IGNORE_EXTENSIONS h;H;o;O;obj;OBJ;def;DEF;rc;RC)$/;"	v
CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES "\/usr\/lib\/gcc\/x86_64-linux-gnu\/9\/include;\/usr\/l/;"	v
CMAKE_C_IMPLICIT_LINK_DIRECTORIES	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_IMPLICIT_LINK_DIRECTORIES "\/usr\/lib\/gcc\/x86_64-linux-gnu\/9;\/usr\/lib\/x86_64-l/;"	v
CMAKE_C_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "")$/;"	v
CMAKE_C_IMPLICIT_LINK_LIBRARIES	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_IMPLICIT_LINK_LIBRARIES "gcc;gcc_s;c;gcc;gcc_s")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	buildotests/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	buildotests/driver/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	buildotests/examples/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	buildotests/libtfhe-superaic-acc/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	buildotests/libtfhe-superaic-client/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	buildotests/libtfhe-superaic-core/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	buildotests/libtfhe-superaic-core/fft_processors/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	buildotests/libtfhe-superaic-core/fft_processors/nayuki/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	buildotests/libtfhe-superaic-server/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	buildotests/tests/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	buildotests/tests/googletest/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	buildotests/tests/googletest/googlemock/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	buildotests/tests/googletest/googlemock/gtest/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	buildotests/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	buildotests/driver/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	buildotests/examples/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	buildotests/libtfhe-superaic-acc/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	buildotests/libtfhe-superaic-client/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	buildotests/libtfhe-superaic-core/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	buildotests/libtfhe-superaic-core/fft_processors/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	buildotests/libtfhe-superaic-core/fft_processors/nayuki/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	buildotests/libtfhe-superaic-server/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	buildotests/tests/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	buildotests/tests/googletest/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	buildotests/tests/googletest/googlemock/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	buildotests/tests/googletest/googlemock/gtest/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_LIBRARY_ARCHITECTURE	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_LIBRARY_ARCHITECTURE "x86_64-linux-gnu")$/;"	v
CMAKE_C_LINKER_PREFERENCE	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_LINKER_PREFERENCE 10)$/;"	v
CMAKE_C_PLATFORM_ID	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_PLATFORM_ID "Linux")$/;"	v
CMAKE_C_SIMULATE_ID	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_SIMULATE_ID "")$/;"	v
CMAKE_C_SIMULATE_VERSION	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_SIMULATE_VERSION "")$/;"	v
CMAKE_C_SIZEOF_DATA_PTR	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_SIZEOF_DATA_PTR "8")$/;"	v
CMAKE_C_SOURCE_FILE_EXTENSIONS	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_SOURCE_FILE_EXTENSIONS c;m)$/;"	v
CMAKE_C_STANDARD_COMPUTED_DEFAULT	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_STANDARD_COMPUTED_DEFAULT "11")$/;"	v
CMAKE_C_TARGET_INCLUDE_PATH	buildotests/libtfhe-superaic-client/CMakeFiles/tfhe_superaic_client.dir/DependInfo.cmake	/^set(CMAKE_C_TARGET_INCLUDE_PATH$/;"	v
CMAKE_C_TARGET_INCLUDE_PATH	buildotests/libtfhe-superaic-core/CMakeFiles/tfhe_superaic_core.dir/DependInfo.cmake	/^set(CMAKE_C_TARGET_INCLUDE_PATH$/;"	v
CMAKE_C_TARGET_INCLUDE_PATH	buildotests/libtfhe-superaic-core/fft_processors/nayuki/CMakeFiles/tfhe-fft-nayuki-portable.dir/DependInfo.cmake	/^set(CMAKE_C_TARGET_INCLUDE_PATH$/;"	v
CMAKE_DEPENDS_CHECK_C	buildotests/libtfhe-superaic-client/CMakeFiles/tfhe_superaic_client.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_CHECK_C$/;"	v
CMAKE_DEPENDS_CHECK_C	buildotests/libtfhe-superaic-core/CMakeFiles/tfhe_superaic_core.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_CHECK_C$/;"	v
CMAKE_DEPENDS_CHECK_C	buildotests/libtfhe-superaic-core/fft_processors/nayuki/CMakeFiles/tfhe-fft-nayuki-portable.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_CHECK_C$/;"	v
CMAKE_DEPENDS_CHECK_CXX	buildotests/examples/CMakeFiles/client_only.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_CHECK_CXX$/;"	v
CMAKE_DEPENDS_CHECK_CXX	buildotests/examples/CMakeFiles/comparebits.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_CHECK_CXX$/;"	v
CMAKE_DEPENDS_CHECK_CXX	buildotests/examples/CMakeFiles/server_with_driver.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_CHECK_CXX$/;"	v
CMAKE_DEPENDS_CHECK_CXX	buildotests/examples/CMakeFiles/server_without_driver.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_CHECK_CXX$/;"	v
CMAKE_DEPENDS_CHECK_CXX	buildotests/libtfhe-superaic-acc/CMakeFiles/tfhe_superaic_acc.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_CHECK_CXX$/;"	v
CMAKE_DEPENDS_CHECK_CXX	buildotests/libtfhe-superaic-core/CMakeFiles/tfhe_superaic_core.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_CHECK_CXX$/;"	v
CMAKE_DEPENDS_CHECK_CXX	buildotests/libtfhe-superaic-core/fft_processors/nayuki/CMakeFiles/tfhe-fft-nayuki-portable.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_CHECK_CXX$/;"	v
CMAKE_DEPENDS_CHECK_CXX	buildotests/libtfhe-superaic-server/CMakeFiles/tfhe_superaic_server.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_CHECK_CXX$/;"	v
CMAKE_DEPENDS_CHECK_CXX	buildotests/tests/CMakeFiles/decrypt_with_plaintext_modulus.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_CHECK_CXX$/;"	v
CMAKE_DEPENDS_CHECK_CXX	buildotests/tests/CMakeFiles/macros_decrypt_with_plaintext_modulus_macros.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_CHECK_CXX$/;"	v
CMAKE_DEPENDS_CHECK_CXX	buildotests/tests/googletest/googlemock/CMakeFiles/gmock.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_CHECK_CXX$/;"	v
CMAKE_DEPENDS_CHECK_CXX	buildotests/tests/googletest/googlemock/CMakeFiles/gmock_main.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_CHECK_CXX$/;"	v
CMAKE_DEPENDS_CHECK_CXX	buildotests/tests/googletest/googlemock/gtest/CMakeFiles/gtest.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_CHECK_CXX$/;"	v
CMAKE_DEPENDS_CHECK_CXX	buildotests/tests/googletest/googlemock/gtest/CMakeFiles/gtest_main.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_CHECK_CXX$/;"	v
CMAKE_DEPENDS_GENERATOR	buildotests/CMakeFiles/Makefile.cmake	/^set(CMAKE_DEPENDS_GENERATOR "Unix Makefiles")$/;"	v
CMAKE_DEPENDS_LANGUAGES	buildotests/examples/CMakeFiles/client_only.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	buildotests/examples/CMakeFiles/comparebits.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	buildotests/examples/CMakeFiles/server_with_driver.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	buildotests/examples/CMakeFiles/server_without_driver.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	buildotests/libtfhe-superaic-acc/CMakeFiles/tfhe_superaic_acc.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	buildotests/libtfhe-superaic-client/CMakeFiles/tfhe_superaic_client.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	buildotests/libtfhe-superaic-core/CMakeFiles/tfhe_superaic_core.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	buildotests/libtfhe-superaic-core/fft_processors/nayuki/CMakeFiles/tfhe-fft-nayuki-portable.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	buildotests/libtfhe-superaic-server/CMakeFiles/tfhe_superaic_server.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	buildotests/tests/CMakeFiles/decrypt_with_plaintext_modulus.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	buildotests/tests/CMakeFiles/macros_decrypt_with_plaintext_modulus_macros.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	buildotests/tests/googletest/googlemock/CMakeFiles/gmock.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	buildotests/tests/googletest/googlemock/CMakeFiles/gmock_main.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	buildotests/tests/googletest/googlemock/gtest/CMakeFiles/gtest.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	buildotests/tests/googletest/googlemock/gtest/CMakeFiles/gtest_main.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPEND_INFO_FILES	buildotests/CMakeFiles/Makefile.cmake	/^set(CMAKE_DEPEND_INFO_FILES$/;"	v
CMAKE_DTESTS_OPTS	Makefile	/^CMAKE_DTESTS_OPTS=${CMAKE_COMPILER_OPTS} -DCMAKE_BUILD_TYPE=debug ${CMAKE_TESTS_OPTS}$/;"	m
CMAKE_FORCE_UNIX_PATHS	buildotests/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_FORCE_UNIX_PATHS	buildotests/driver/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_FORCE_UNIX_PATHS	buildotests/examples/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_FORCE_UNIX_PATHS	buildotests/libtfhe-superaic-acc/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_FORCE_UNIX_PATHS	buildotests/libtfhe-superaic-client/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_FORCE_UNIX_PATHS	buildotests/libtfhe-superaic-core/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_FORCE_UNIX_PATHS	buildotests/libtfhe-superaic-core/fft_processors/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_FORCE_UNIX_PATHS	buildotests/libtfhe-superaic-core/fft_processors/nayuki/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_FORCE_UNIX_PATHS	buildotests/libtfhe-superaic-server/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_FORCE_UNIX_PATHS	buildotests/tests/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_FORCE_UNIX_PATHS	buildotests/tests/googletest/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_FORCE_UNIX_PATHS	buildotests/tests/googletest/googlemock/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_FORCE_UNIX_PATHS	buildotests/tests/googletest/googlemock/gtest/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_FTESTS_OPTS	Makefile	/^CMAKE_FTESTS_OPTS=${CMAKE_COMPILER_OPTS} -DCMAKE_BUILD_TYPE=optim ${CMAKE_TESTS_OPTS} -DENABLE_F/;"	m
CMAKE_Fortran_TARGET_MODULE_DIR	buildotests/examples/CMakeFiles/client_only.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	buildotests/examples/CMakeFiles/comparebits.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	buildotests/examples/CMakeFiles/server_with_driver.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	buildotests/examples/CMakeFiles/server_without_driver.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	buildotests/libtfhe-superaic-acc/CMakeFiles/tfhe_superaic_acc.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	buildotests/libtfhe-superaic-client/CMakeFiles/tfhe_superaic_client.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	buildotests/libtfhe-superaic-core/CMakeFiles/tfhe_superaic_core.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	buildotests/libtfhe-superaic-core/fft_processors/nayuki/CMakeFiles/tfhe-fft-nayuki-portable.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	buildotests/libtfhe-superaic-server/CMakeFiles/tfhe_superaic_server.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	buildotests/tests/CMakeFiles/decrypt_with_plaintext_modulus.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	buildotests/tests/CMakeFiles/macros_decrypt_with_plaintext_modulus_macros.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	buildotests/tests/googletest/googlemock/CMakeFiles/gmock.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	buildotests/tests/googletest/googlemock/CMakeFiles/gmock_main.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	buildotests/tests/googletest/googlemock/gtest/CMakeFiles/gtest.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	buildotests/tests/googletest/googlemock/gtest/CMakeFiles/gtest_main.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_HOST_SYSTEM	buildotests/CMakeFiles/3.16.3/CMakeSystem.cmake	/^set(CMAKE_HOST_SYSTEM "Linux-5.15.167.4-microsoft-standard-WSL2")$/;"	v
CMAKE_HOST_SYSTEM_NAME	buildotests/CMakeFiles/3.16.3/CMakeSystem.cmake	/^set(CMAKE_HOST_SYSTEM_NAME "Linux")$/;"	v
CMAKE_HOST_SYSTEM_PROCESSOR	buildotests/CMakeFiles/3.16.3/CMakeSystem.cmake	/^set(CMAKE_HOST_SYSTEM_PROCESSOR "x86_64")$/;"	v
CMAKE_HOST_SYSTEM_VERSION	buildotests/CMakeFiles/3.16.3/CMakeSystem.cmake	/^set(CMAKE_HOST_SYSTEM_VERSION "5.15.167.4-microsoft-standard-WSL2")$/;"	v
CMAKE_INSTALL_COMPONENT	buildotests/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	buildotests/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_COMPONENT	buildotests/driver/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	buildotests/driver/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_COMPONENT	buildotests/examples/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	buildotests/examples/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_COMPONENT	buildotests/libtfhe-superaic-acc/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	buildotests/libtfhe-superaic-acc/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_COMPONENT	buildotests/libtfhe-superaic-client/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	buildotests/libtfhe-superaic-client/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_COMPONENT	buildotests/libtfhe-superaic-core/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	buildotests/libtfhe-superaic-core/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_COMPONENT	buildotests/libtfhe-superaic-core/fft_processors/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	buildotests/libtfhe-superaic-core/fft_processors/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_COMPONENT	buildotests/libtfhe-superaic-core/fft_processors/nayuki/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	buildotests/libtfhe-superaic-core/fft_processors/nayuki/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_COMPONENT	buildotests/libtfhe-superaic-server/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	buildotests/libtfhe-superaic-server/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_COMPONENT	buildotests/tests/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	buildotests/tests/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_COMPONENT	buildotests/tests/googletest/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	buildotests/tests/googletest/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_COMPONENT	buildotests/tests/googletest/googlemock/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	buildotests/tests/googletest/googlemock/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_COMPONENT	buildotests/tests/googletest/googlemock/gtest/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	buildotests/tests/googletest/googlemock/gtest/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_CONFIG_NAME	buildotests/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "optim")$/;"	v
CMAKE_INSTALL_CONFIG_NAME	buildotests/driver/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "optim")$/;"	v
CMAKE_INSTALL_CONFIG_NAME	buildotests/examples/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "optim")$/;"	v
CMAKE_INSTALL_CONFIG_NAME	buildotests/libtfhe-superaic-acc/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "optim")$/;"	v
CMAKE_INSTALL_CONFIG_NAME	buildotests/libtfhe-superaic-client/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "optim")$/;"	v
CMAKE_INSTALL_CONFIG_NAME	buildotests/libtfhe-superaic-core/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "optim")$/;"	v
CMAKE_INSTALL_CONFIG_NAME	buildotests/libtfhe-superaic-core/fft_processors/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "optim")$/;"	v
CMAKE_INSTALL_CONFIG_NAME	buildotests/libtfhe-superaic-core/fft_processors/nayuki/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "optim")$/;"	v
CMAKE_INSTALL_CONFIG_NAME	buildotests/libtfhe-superaic-server/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "optim")$/;"	v
CMAKE_INSTALL_CONFIG_NAME	buildotests/tests/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "optim")$/;"	v
CMAKE_INSTALL_CONFIG_NAME	buildotests/tests/googletest/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "optim")$/;"	v
CMAKE_INSTALL_CONFIG_NAME	buildotests/tests/googletest/googlemock/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "optim")$/;"	v
CMAKE_INSTALL_CONFIG_NAME	buildotests/tests/googletest/googlemock/gtest/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "optim")$/;"	v
CMAKE_INSTALL_MANIFEST	buildotests/cmake_install.cmake	/^  set(CMAKE_INSTALL_MANIFEST "install_manifest.txt")$/;"	v
CMAKE_INSTALL_MANIFEST	buildotests/cmake_install.cmake	/^  set(CMAKE_INSTALL_MANIFEST "install_manifest_${CMAKE_INSTALL_COMPONENT}.txt")$/;"	v
CMAKE_INSTALL_PREFIX	buildotests/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_PREFIX	buildotests/driver/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_PREFIX	buildotests/examples/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_PREFIX	buildotests/libtfhe-superaic-acc/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_PREFIX	buildotests/libtfhe-superaic-client/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_PREFIX	buildotests/libtfhe-superaic-core/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_PREFIX	buildotests/libtfhe-superaic-core/fft_processors/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_PREFIX	buildotests/libtfhe-superaic-core/fft_processors/nayuki/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_PREFIX	buildotests/libtfhe-superaic-server/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_PREFIX	buildotests/tests/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_PREFIX	buildotests/tests/googletest/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_PREFIX	buildotests/tests/googletest/googlemock/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_PREFIX	buildotests/tests/googletest/googlemock/gtest/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	buildotests/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "1")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	buildotests/driver/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "1")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	buildotests/examples/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "1")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	buildotests/libtfhe-superaic-acc/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "1")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	buildotests/libtfhe-superaic-client/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "1")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	buildotests/libtfhe-superaic-core/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "1")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	buildotests/libtfhe-superaic-core/fft_processors/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "1")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	buildotests/libtfhe-superaic-core/fft_processors/nayuki/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "1")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	buildotests/libtfhe-superaic-server/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "1")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	buildotests/tests/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "1")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	buildotests/tests/googletest/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "1")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	buildotests/tests/googletest/googlemock/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "1")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	buildotests/tests/googletest/googlemock/gtest/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "1")$/;"	v
CMAKE_INTERNAL_PLATFORM_ABI	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_C_COMPILER_ABI}")$/;"	v
CMAKE_INTERNAL_PLATFORM_ABI	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_CXX_COMPILER_ABI}")$/;"	v
CMAKE_LIBRARY_ARCHITECTURE	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^  set(CMAKE_LIBRARY_ARCHITECTURE "x86_64-linux-gnu")$/;"	v
CMAKE_LIBRARY_ARCHITECTURE	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^  set(CMAKE_LIBRARY_ARCHITECTURE "x86_64-linux-gnu")$/;"	v
CMAKE_LINKER	buildotests/CMakeFiles/3.16.3/CMakeASMCompiler.cmake	/^set(CMAKE_LINKER "\/usr\/bin\/ld")$/;"	v
CMAKE_LINKER	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_LINKER "\/usr\/bin\/ld")$/;"	v
CMAKE_LINKER	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_LINKER "\/usr\/bin\/ld")$/;"	v
CMAKE_MAKEFILE_DEPENDS	buildotests/CMakeFiles/Makefile.cmake	/^set(CMAKE_MAKEFILE_DEPENDS$/;"	v
CMAKE_MAKEFILE_OUTPUTS	buildotests/CMakeFiles/Makefile.cmake	/^set(CMAKE_MAKEFILE_OUTPUTS$/;"	v
CMAKE_MAKEFILE_PRODUCTS	buildotests/CMakeFiles/Makefile.cmake	/^set(CMAKE_MAKEFILE_PRODUCTS$/;"	v
CMAKE_MT	buildotests/CMakeFiles/3.16.3/CMakeASMCompiler.cmake	/^set(CMAKE_MT "")$/;"	v
CMAKE_MT	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_MT "")$/;"	v
CMAKE_MT	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_MT "")$/;"	v
CMAKE_MTESTS_OPTS	Makefile	/^CMAKE_MTESTS_OPTS=${CMAKE_COMPILER_OPTS} -DCMAKE_BUILD_TYPE=debug ${CMAKE_TESTS_OPTS} -DENABLE_M/;"	m
CMAKE_OTESTS_OPTS	Makefile	/^CMAKE_OTESTS_OPTS=${CMAKE_COMPILER_OPTS} -DCMAKE_BUILD_TYPE=optim ${CMAKE_TESTS_OPTS}$/;"	m
CMAKE_QTESTS_OPTS	Makefile	/^CMAKE_QTESTS_OPTS=${CMAKE_COMPILER_OPTS} -DCMAKE_BUILD_TYPE=debug ${CMAKE_TESTS_OPTS} -DENABLE_Q/;"	m
CMAKE_RANLIB	buildotests/CMakeFiles/3.16.3/CMakeASMCompiler.cmake	/^set(CMAKE_RANLIB "\/usr\/bin\/ranlib")$/;"	v
CMAKE_RANLIB	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_RANLIB "\/usr\/bin\/ranlib")$/;"	v
CMAKE_RANLIB	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_RANLIB "\/usr\/bin\/ranlib")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	buildotests/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/root\/note\/zpf-test\/superaic-tfhe-gerrit\/buildotests")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	buildotests/driver/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/root\/note\/zpf-test\/superaic-tfhe-gerrit\/buildotests")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	buildotests/examples/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/root\/note\/zpf-test\/superaic-tfhe-gerrit\/buildotests")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	buildotests/libtfhe-superaic-acc/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/root\/note\/zpf-test\/superaic-tfhe-gerrit\/buildotests")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	buildotests/libtfhe-superaic-client/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/root\/note\/zpf-test\/superaic-tfhe-gerrit\/buildotests")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	buildotests/libtfhe-superaic-core/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/root\/note\/zpf-test\/superaic-tfhe-gerrit\/buildotests")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	buildotests/libtfhe-superaic-core/fft_processors/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/root\/note\/zpf-test\/superaic-tfhe-gerrit\/buildotests")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	buildotests/libtfhe-superaic-core/fft_processors/nayuki/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/root\/note\/zpf-test\/superaic-tfhe-gerrit\/buildotests")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	buildotests/libtfhe-superaic-server/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/root\/note\/zpf-test\/superaic-tfhe-gerrit\/buildotests")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	buildotests/tests/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/root\/note\/zpf-test\/superaic-tfhe-gerrit\/buildotests")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	buildotests/tests/googletest/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/root\/note\/zpf-test\/superaic-tfhe-gerrit\/buildotests")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	buildotests/tests/googletest/googlemock/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/root\/note\/zpf-test\/superaic-tfhe-gerrit\/buildotests")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	buildotests/tests/googletest/googlemock/gtest/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/root\/note\/zpf-test\/superaic-tfhe-gerrit\/buildotests")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	buildotests/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/root\/note\/zpf-test\/superaic-tfhe-gerrit\/src")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	buildotests/driver/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/root\/note\/zpf-test\/superaic-tfhe-gerrit\/src")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	buildotests/examples/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/root\/note\/zpf-test\/superaic-tfhe-gerrit\/src")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	buildotests/libtfhe-superaic-acc/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/root\/note\/zpf-test\/superaic-tfhe-gerrit\/src")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	buildotests/libtfhe-superaic-client/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/root\/note\/zpf-test\/superaic-tfhe-gerrit\/src")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	buildotests/libtfhe-superaic-core/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/root\/note\/zpf-test\/superaic-tfhe-gerrit\/src")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	buildotests/libtfhe-superaic-core/fft_processors/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/root\/note\/zpf-test\/superaic-tfhe-gerrit\/src")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	buildotests/libtfhe-superaic-core/fft_processors/nayuki/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/root\/note\/zpf-test\/superaic-tfhe-gerrit\/src")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	buildotests/libtfhe-superaic-server/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/root\/note\/zpf-test\/superaic-tfhe-gerrit\/src")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	buildotests/tests/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/root\/note\/zpf-test\/superaic-tfhe-gerrit\/src")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	buildotests/tests/googletest/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/root\/note\/zpf-test\/superaic-tfhe-gerrit\/src")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	buildotests/tests/googletest/googlemock/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/root\/note\/zpf-test\/superaic-tfhe-gerrit\/src")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	buildotests/tests/googletest/googlemock/gtest/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/root\/note\/zpf-test\/superaic-tfhe-gerrit\/src")$/;"	v
CMAKE_SIZEOF_VOID_P	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^  set(CMAKE_SIZEOF_VOID_P "${CMAKE_C_SIZEOF_DATA_PTR}")$/;"	v
CMAKE_SIZEOF_VOID_P	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^  set(CMAKE_SIZEOF_VOID_P "${CMAKE_CXX_SIZEOF_DATA_PTR}")$/;"	v
CMAKE_SOURCE_DIR	buildotests/Makefile	/^CMAKE_SOURCE_DIR = \/root\/note\/zpf-test\/superaic-tfhe-gerrit\/src$/;"	m
CMAKE_SOURCE_DIR	buildotests/driver/Makefile	/^CMAKE_SOURCE_DIR = \/root\/note\/zpf-test\/superaic-tfhe-gerrit\/src$/;"	m
CMAKE_SOURCE_DIR	buildotests/examples/Makefile	/^CMAKE_SOURCE_DIR = \/root\/note\/zpf-test\/superaic-tfhe-gerrit\/src$/;"	m
CMAKE_SOURCE_DIR	buildotests/libtfhe-superaic-acc/Makefile	/^CMAKE_SOURCE_DIR = \/root\/note\/zpf-test\/superaic-tfhe-gerrit\/src$/;"	m
CMAKE_SOURCE_DIR	buildotests/libtfhe-superaic-client/Makefile	/^CMAKE_SOURCE_DIR = \/root\/note\/zpf-test\/superaic-tfhe-gerrit\/src$/;"	m
CMAKE_SOURCE_DIR	buildotests/libtfhe-superaic-core/Makefile	/^CMAKE_SOURCE_DIR = \/root\/note\/zpf-test\/superaic-tfhe-gerrit\/src$/;"	m
CMAKE_SOURCE_DIR	buildotests/libtfhe-superaic-core/fft_processors/Makefile	/^CMAKE_SOURCE_DIR = \/root\/note\/zpf-test\/superaic-tfhe-gerrit\/src$/;"	m
CMAKE_SOURCE_DIR	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^CMAKE_SOURCE_DIR = \/root\/note\/zpf-test\/superaic-tfhe-gerrit\/src$/;"	m
CMAKE_SOURCE_DIR	buildotests/libtfhe-superaic-server/Makefile	/^CMAKE_SOURCE_DIR = \/root\/note\/zpf-test\/superaic-tfhe-gerrit\/src$/;"	m
CMAKE_SOURCE_DIR	buildotests/tests/Makefile	/^CMAKE_SOURCE_DIR = \/root\/note\/zpf-test\/superaic-tfhe-gerrit\/src$/;"	m
CMAKE_SOURCE_DIR	buildotests/tests/googletest/Makefile	/^CMAKE_SOURCE_DIR = \/root\/note\/zpf-test\/superaic-tfhe-gerrit\/src$/;"	m
CMAKE_SOURCE_DIR	buildotests/tests/googletest/googlemock/Makefile	/^CMAKE_SOURCE_DIR = \/root\/note\/zpf-test\/superaic-tfhe-gerrit\/src$/;"	m
CMAKE_SOURCE_DIR	buildotests/tests/googletest/googlemock/gtest/Makefile	/^CMAKE_SOURCE_DIR = \/root\/note\/zpf-test\/superaic-tfhe-gerrit\/src$/;"	m
CMAKE_SYSTEM	buildotests/CMakeFiles/3.16.3/CMakeSystem.cmake	/^set(CMAKE_SYSTEM "Linux-5.15.167.4-microsoft-standard-WSL2")$/;"	v
CMAKE_SYSTEM_LOADED	buildotests/CMakeFiles/3.16.3/CMakeSystem.cmake	/^set(CMAKE_SYSTEM_LOADED 1)$/;"	v
CMAKE_SYSTEM_NAME	buildotests/CMakeFiles/3.16.3/CMakeSystem.cmake	/^set(CMAKE_SYSTEM_NAME "Linux")$/;"	v
CMAKE_SYSTEM_PROCESSOR	buildotests/CMakeFiles/3.16.3/CMakeSystem.cmake	/^set(CMAKE_SYSTEM_PROCESSOR "x86_64")$/;"	v
CMAKE_SYSTEM_VERSION	buildotests/CMakeFiles/3.16.3/CMakeSystem.cmake	/^set(CMAKE_SYSTEM_VERSION "5.15.167.4-microsoft-standard-WSL2")$/;"	v
CMAKE_TARGET_DEFINITIONS_C	buildotests/libtfhe-superaic-client/CMakeFiles/tfhe_superaic_client.dir/DependInfo.cmake	/^set(CMAKE_TARGET_DEFINITIONS_C$/;"	v
CMAKE_TARGET_DEFINITIONS_C	buildotests/libtfhe-superaic-core/CMakeFiles/tfhe_superaic_core.dir/DependInfo.cmake	/^set(CMAKE_TARGET_DEFINITIONS_C$/;"	v
CMAKE_TARGET_DEFINITIONS_C	buildotests/libtfhe-superaic-core/fft_processors/nayuki/CMakeFiles/tfhe-fft-nayuki-portable.dir/DependInfo.cmake	/^set(CMAKE_TARGET_DEFINITIONS_C$/;"	v
CMAKE_TARGET_DEFINITIONS_CXX	buildotests/examples/CMakeFiles/client_only.dir/DependInfo.cmake	/^set(CMAKE_TARGET_DEFINITIONS_CXX$/;"	v
CMAKE_TARGET_DEFINITIONS_CXX	buildotests/examples/CMakeFiles/comparebits.dir/DependInfo.cmake	/^set(CMAKE_TARGET_DEFINITIONS_CXX$/;"	v
CMAKE_TARGET_DEFINITIONS_CXX	buildotests/examples/CMakeFiles/server_with_driver.dir/DependInfo.cmake	/^set(CMAKE_TARGET_DEFINITIONS_CXX$/;"	v
CMAKE_TARGET_DEFINITIONS_CXX	buildotests/examples/CMakeFiles/server_without_driver.dir/DependInfo.cmake	/^set(CMAKE_TARGET_DEFINITIONS_CXX$/;"	v
CMAKE_TARGET_DEFINITIONS_CXX	buildotests/libtfhe-superaic-acc/CMakeFiles/tfhe_superaic_acc.dir/DependInfo.cmake	/^set(CMAKE_TARGET_DEFINITIONS_CXX$/;"	v
CMAKE_TARGET_DEFINITIONS_CXX	buildotests/libtfhe-superaic-core/CMakeFiles/tfhe_superaic_core.dir/DependInfo.cmake	/^set(CMAKE_TARGET_DEFINITIONS_CXX$/;"	v
CMAKE_TARGET_DEFINITIONS_CXX	buildotests/libtfhe-superaic-core/fft_processors/nayuki/CMakeFiles/tfhe-fft-nayuki-portable.dir/DependInfo.cmake	/^set(CMAKE_TARGET_DEFINITIONS_CXX$/;"	v
CMAKE_TARGET_DEFINITIONS_CXX	buildotests/libtfhe-superaic-server/CMakeFiles/tfhe_superaic_server.dir/DependInfo.cmake	/^set(CMAKE_TARGET_DEFINITIONS_CXX$/;"	v
CMAKE_TARGET_DEFINITIONS_CXX	buildotests/tests/CMakeFiles/decrypt_with_plaintext_modulus.dir/DependInfo.cmake	/^set(CMAKE_TARGET_DEFINITIONS_CXX$/;"	v
CMAKE_TARGET_DEFINITIONS_CXX	buildotests/tests/CMakeFiles/macros_decrypt_with_plaintext_modulus_macros.dir/DependInfo.cmake	/^set(CMAKE_TARGET_DEFINITIONS_CXX$/;"	v
CMAKE_TARGET_DEFINITIONS_CXX	buildotests/tests/googletest/googlemock/CMakeFiles/gmock.dir/DependInfo.cmake	/^set(CMAKE_TARGET_DEFINITIONS_CXX$/;"	v
CMAKE_TARGET_DEFINITIONS_CXX	buildotests/tests/googletest/googlemock/CMakeFiles/gmock_main.dir/DependInfo.cmake	/^set(CMAKE_TARGET_DEFINITIONS_CXX$/;"	v
CMAKE_TARGET_DEFINITIONS_CXX	buildotests/tests/googletest/googlemock/gtest/CMakeFiles/gtest.dir/DependInfo.cmake	/^set(CMAKE_TARGET_DEFINITIONS_CXX$/;"	v
CMAKE_TARGET_DEFINITIONS_CXX	buildotests/tests/googletest/googlemock/gtest/CMakeFiles/gtest_main.dir/DependInfo.cmake	/^set(CMAKE_TARGET_DEFINITIONS_CXX$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	buildotests/examples/CMakeFiles/client_only.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	buildotests/examples/CMakeFiles/comparebits.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	buildotests/examples/CMakeFiles/server_with_driver.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	buildotests/examples/CMakeFiles/server_without_driver.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	buildotests/libtfhe-superaic-acc/CMakeFiles/tfhe_superaic_acc.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	buildotests/libtfhe-superaic-client/CMakeFiles/tfhe_superaic_client.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	buildotests/libtfhe-superaic-core/CMakeFiles/tfhe_superaic_core.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	buildotests/libtfhe-superaic-core/fft_processors/nayuki/CMakeFiles/tfhe-fft-nayuki-portable.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	buildotests/libtfhe-superaic-server/CMakeFiles/tfhe_superaic_server.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	buildotests/tests/CMakeFiles/decrypt_with_plaintext_modulus.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	buildotests/tests/CMakeFiles/macros_decrypt_with_plaintext_modulus_macros.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	buildotests/tests/googletest/googlemock/CMakeFiles/gmock.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	buildotests/tests/googletest/googlemock/CMakeFiles/gmock_main.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	buildotests/tests/googletest/googlemock/gtest/CMakeFiles/gtest.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	buildotests/tests/googletest/googlemock/gtest/CMakeFiles/gtest_main.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TESTS_OPTS	Makefile	/^CMAKE_TESTS_OPTS=-DENABLE_TESTS=on $/;"	m
CMAKE_VISIBILITY_INLINES_HIDDEN	src/tests/googletest/googletest/CMakeLists.txt	/^  set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)$/;"	v
CMux	docs/code_note.md	/^ ## CMux$/;"	s	chapter:TGsw
COLOR_DEFAULT	src/tests/googletest/googletest/src/gtest.cc	/^  COLOR_DEFAULT,$/;"	e	enum:testing::internal::GTestColor	file:
COLOR_ENV_VAR	src/tests/googletest/googletest/test/gtest_color_test.py	/^COLOR_ENV_VAR = 'GTEST_COLOR'$/;"	v
COLOR_FLAG	src/tests/googletest/googletest/test/gtest_color_test.py	/^COLOR_FLAG = 'gtest_color'$/;"	v
COLOR_GREEN	src/tests/googletest/googletest/src/gtest.cc	/^  COLOR_GREEN,$/;"	e	enum:testing::internal::GTestColor	file:
COLOR_RED	src/tests/googletest/googletest/src/gtest.cc	/^  COLOR_RED,$/;"	e	enum:testing::internal::GTestColor	file:
COLOR_YELLOW	src/tests/googletest/googletest/src/gtest.cc	/^  COLOR_YELLOW$/;"	e	enum:testing::internal::GTestColor	file:
COMMAND	src/tests/googletest/googlemock/test/gmock_output_test.py	/^COMMAND = [PROGRAM_PATH, '--gtest_stack_trace_depth=0', '--gtest_print_time=0']$/;"	v
COMMAND	src/tests/googletest/googletest/test/gtest_color_test.py	/^COMMAND = gtest_test_utils.GetTestExecutablePath('gtest_color_test_')$/;"	v
COMMAND	src/tests/googletest/googletest/test/gtest_env_var_test.py	/^COMMAND = gtest_test_utils.GetTestExecutablePath('gtest_env_var_test_')$/;"	v
COMMAND	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^COMMAND = gtest_test_utils.GetTestExecutablePath('gtest_filter_unittest_')$/;"	v
COMMAND	src/tests/googletest/googletest/test/gtest_shuffle_test.py	/^COMMAND = gtest_test_utils.GetTestExecutablePath('gtest_shuffle_test_')$/;"	v
COMMAND	src/tests/googletest/googletest/test/gtest_uninitialized_test.py	/^COMMAND = gtest_test_utils.GetTestExecutablePath('gtest_uninitialized_test_')$/;"	v
COMMAND_LIST_TESTS	src/tests/googletest/googletest/test/gtest_output_test.py	/^COMMAND_LIST_TESTS = ({}, [PROGRAM_PATH, '--gtest_list_tests'])$/;"	v
COMMAND_WITH_COLOR	src/tests/googletest/googletest/test/gtest_output_test.py	/^COMMAND_WITH_COLOR = ({}, [PROGRAM_PATH, '--gtest_color=yes'])$/;"	v
COMMAND_WITH_DISABLED	src/tests/googletest/googletest/test/gtest_output_test.py	/^COMMAND_WITH_DISABLED = ($/;"	v
COMMAND_WITH_SHARDING	src/tests/googletest/googletest/test/gtest_output_test.py	/^COMMAND_WITH_SHARDING = ($/;"	v
COMMAND_WITH_TIME	src/tests/googletest/googletest/test/gtest_output_test.py	/^COMMAND_WITH_TIME = ({}, [PROGRAM_PATH,$/;"	v
COMPILER_ID	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_ID /;"	d	file:
COMPILER_ID	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_ID /;"	d	file:
COMPILER_VERSION_INTERNAL	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_INTERNAL	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_INTERNAL	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_INTERNAL	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_MAJOR	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^  # define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^  # define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MINOR	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^  # define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^  # define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_PATCH	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^  # define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#   define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^  # define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_TWEAK	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_TWEAK /;"	d	file:
COM_VER	src/libtfhe-superaic-core/tfhe_package.cpp	/^#define COM_VER /;"	d	file:
CONSTANT	src/tests/googletest/googlemock/scripts/generator/cpp/tokenize.py	/^CONSTANT = 'CONSTANT'$/;"	v
CONTROL	src/tests/googletest/googlemock/scripts/generator/cpp/keywords.py	/^CONTROL = set('case switch default if else return goto'.split())$/;"	v
CORE_CPP_ITESTS	src/tests/CMakeLists.txt	/^    set(CORE_CPP_ITESTS$/;"	v
COstream	src/libtfhe-superaic-core/include/tfhe_generic_streams.h	/^    COstream(FILE *F) : F(F) {}$/;"	f	class:COstream
COstream	src/libtfhe-superaic-core/include/tfhe_generic_streams.h	/^class COstream : public Ostream {$/;"	c
CPU_ACC	src/libtfhe-superaic-acc/accs/CPU-ser/acc_cpu_ser.cpp	/^CPU_ACC::CPU_ACC():$/;"	f	class:tfhe_superaic::CPU_ACC
CPU_ACC	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^class CPU_ACC: public TFHE_ACC{$/;"	c	namespace:tfhe_superaic
CStringEquals	src/tests/googletest/googletest/src/gtest.cc	/^bool String::CStringEquals(const char * lhs, const char * rhs) {$/;"	f	class:testing::internal::String	typeref:typename:bool
CURL	src/muduo/examples/curl/Curl.h	/^typedef void CURL;$/;"	t	typeref:typename:void
CURLM	src/muduo/examples/curl/Curl.h	/^typedef void CURLM;$/;"	t	typeref:typename:void
CXX_FLAGS	src/muduo/CMakeLists.txt	/^set(CXX_FLAGS$/;"	v
CXX_STD	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#      define CXX_STD /;"	d	file:
CXX_STD	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#    define CXX_STD /;"	d	file:
CXX_STD	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define CXX_STD /;"	d	file:
CYGWIN	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^  set(CYGWIN 1)$/;"	v
CYGWIN	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^  set(CYGWIN 1)$/;"	v
C_DIALECT	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#  define C_DIALECT /;"	d	file:
C_DIALECT	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#  define C_DIALECT$/;"	d	file:
C_DIALECT	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^# define C_DIALECT /;"	d	file:
CalculateEndIndex	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  static int CalculateEndIndex(const T& begin,$/;"	f	class:testing::internal::RangeGenerator	typeref:typename:int
CalculateOptimalEdits	src/tests/googletest/googletest/src/gtest.cc	/^std::vector<EditType> CalculateOptimalEdits($/;"	f	namespace:testing::internal::edit_distance	typeref:typename:std::vector<EditType>
CalculateOptimalEdits	src/tests/googletest/googletest/src/gtest.cc	/^std::vector<EditType> CalculateOptimalEdits(const std::vector<size_t>& left,$/;"	f	namespace:testing::internal::edit_distance	typeref:typename:std::vector<EditType>
CalculatePrimesUpTo	src/tests/googletest/googletest/samples/prime_tables.h	/^  void CalculatePrimesUpTo(int max) {$/;"	f	class:PreCalculatedPrimeTable	typeref:typename:void
CalculateTestLists	src/tests/googletest/googletest/test/gtest_shuffle_test.py	/^def CalculateTestLists():$/;"	f
CallMethod	src/muduo/muduo/net/protorpc/RpcChannel.cc	/^void RpcChannel::CallMethod(const ::google::protobuf::MethodDescriptor* method,$/;"	f	class:RpcChannel	typeref:typename:void
CallReaction	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^enum CallReaction {$/;"	g	namespace:testing::internal
CallThreadLocalGet	src/tests/googletest/googletest/test/gtest-port_test.cc	/^void CallThreadLocalGet(ThreadParam thread_local_param) {$/;"	f	namespace:testing::internal	typeref:typename:void
CallableStorageType	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef typename CallableTraits<Callable>::StorageType CallableStorageType;$/;"	t	class:testing::internal::ResultOfMatcher	typeref:typename:CallableTraits<Callable>::StorageType
CallableTraits	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^struct CallableTraits {$/;"	s	namespace:testing::internal
CallableTraits	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^struct CallableTraits<ResType(*)(ArgType)> {$/;"	s	namespace:testing::internal
Callback	src/muduo/examples/cdns/Resolver.h	/^  typedef std::function<void(const muduo::net::InetAddress&)> Callback;$/;"	t	class:cdns::Resolver
Callback	src/muduo/examples/fastcgi/fastcgi.h	/^                                muduo::net::Buffer*)> Callback;$/;"	t	class:FastCgiCodec
Callback	src/muduo/examples/protobuf/codec/dispatcher.h	/^class Callback : muduo::noncopyable$/;"	c
Callback	src/muduo/muduo/net/inspect/Inspector.h	/^  typedef std::function<string (HttpRequest::Method, const ArgList& args)> Callback;$/;"	t	class:muduo::net::Inspector
CallbackMap	src/muduo/examples/protobuf/codec/dispatcher.h	/^  typedef std::map<const google::protobuf::Descriptor*, std::shared_ptr<Callback> > CallbackMap;$/;"	t	class:ProtobufDispatcher	typeref:typename:std::map<const google::protobuf::Descriptor *,std::shared_ptr<Callback>>
CallbackMap	src/muduo/examples/protobuf/codec/dispatcher_lite.h	/^  typedef std::map<const google::protobuf::Descriptor*, ProtobufMessageCallback> CallbackMap;$/;"	t	class:ProtobufDispatcherLite	typeref:typename:std::map<const google::protobuf::Descriptor *,ProtobufMessageCallback>
CallbackT	src/muduo/examples/protobuf/codec/dispatcher.h	/^  CallbackT(const ProtobufMessageTCallback& callback)$/;"	f	class:CallbackT
CallbackT	src/muduo/examples/protobuf/codec/dispatcher.h	/^class CallbackT : public Callback$/;"	c
Can I derive a test fixture from another?	src/tests/googletest/googletest/docs/FAQ.md	/^## Can I derive a test fixture from another? ##$/;"	s
Can I derive a test fixture from another?	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## Can I derive a test fixture from another? ##$/;"	s
Can I derive a test fixture from another?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## Can I derive a test fixture from another? ##$/;"	s
Can I derive a test fixture from another?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## Can I derive a test fixture from another? ##$/;"	s
Can I mock a variadic function?	src/tests/googletest/googlemock/docs/FrequentlyAskedQuestions.md	/^## Can I mock a variadic function? ##$/;"	s
Can I mock a variadic function?	src/tests/googletest/googlemock/docs/v1_5/FrequentlyAskedQuestions.md	/^## Can I mock a variadic function? ##$/;"	s
Can I mock a variadic function?	src/tests/googletest/googlemock/docs/v1_6/FrequentlyAskedQuestions.md	/^## Can I mock a variadic function? ##$/;"	s
Can I mock a variadic function?	src/tests/googletest/googlemock/docs/v1_7/FrequentlyAskedQuestions.md	/^## Can I mock a variadic function? ##$/;"	s
Can I use Google Test on MinGW?	src/tests/googletest/googletest/docs/FAQ.md	/^## Can I use Google Test on MinGW? ##$/;"	s
Can I use Google Test on MinGW?	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## Can I use Google Test on MinGW? ##$/;"	s
Can I use Google Test on MinGW?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## Can I use Google Test on MinGW? ##$/;"	s
Can I use Google Test on MinGW?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## Can I use Google Test on MinGW? ##$/;"	s
CaptureStderr	src/tests/googletest/googletest/src/gtest-port.cc	/^void CaptureStderr() {$/;"	f	namespace:testing::internal	typeref:typename:void
CaptureStdout	src/tests/googletest/googletest/src/gtest-port.cc	/^void CaptureStdout() {$/;"	f	namespace:testing::internal	typeref:typename:void
CaptureStream	src/tests/googletest/googletest/src/gtest-port.cc	/^void CaptureStream(int fd, const char* stream_name, CapturedStream** stream) {$/;"	f	namespace:testing::internal	typeref:typename:void
CapturedStream	src/tests/googletest/googletest/src/gtest-port.cc	/^  explicit CapturedStream(int fd) : fd_(fd), uncaptured_fd_(dup(fd)) {$/;"	f	class:testing::internal::CapturedStream	file:
CapturedStream	src/tests/googletest/googletest/src/gtest-port.cc	/^class CapturedStream {$/;"	c	namespace:testing::internal	file:
Cardinalities	src/tests/googletest/googlemock/docs/CheatSheet.md	/^# Cardinalities #$/;"	c
Cardinalities	src/tests/googletest/googlemock/docs/v1_5/CheatSheet.md	/^# Cardinalities #$/;"	c
Cardinalities	src/tests/googletest/googlemock/docs/v1_6/CheatSheet.md	/^# Cardinalities #$/;"	c
Cardinalities	src/tests/googletest/googlemock/docs/v1_7/CheatSheet.md	/^# Cardinalities #$/;"	c
Cardinalities: How Many Times Will It Be Called?	src/tests/googletest/googlemock/docs/ForDummies.md	/^## Cardinalities: How Many Times Will It Be Called? ##$/;"	s	chapter:Setting Expectations
Cardinalities: How Many Times Will It Be Called?	src/tests/googletest/googlemock/docs/v1_5/ForDummies.md	/^## Cardinalities: How Many Times Will It Be Called? ##$/;"	s	chapter:Setting Expectations
Cardinalities: How Many Times Will It Be Called?	src/tests/googletest/googlemock/docs/v1_6/ForDummies.md	/^## Cardinalities: How Many Times Will It Be Called? ##$/;"	s	chapter:Setting Expectations
Cardinalities: How Many Times Will It Be Called?	src/tests/googletest/googlemock/docs/v1_7/ForDummies.md	/^## Cardinalities: How Many Times Will It Be Called? ##$/;"	s	chapter:Setting Expectations
Cardinality	src/tests/googletest/googlemock/include/gmock/gmock-cardinalities.h	/^  Cardinality() {}$/;"	f	class:testing::Cardinality
Cardinality	src/tests/googletest/googlemock/include/gmock/gmock-cardinalities.h	/^  explicit Cardinality(const CardinalityInterface* impl) : impl_(impl) {}$/;"	f	class:testing::Cardinality
Cardinality	src/tests/googletest/googlemock/include/gmock/gmock-cardinalities.h	/^class GTEST_API_ Cardinality {$/;"	c	namespace:testing
CardinalityInterface	src/tests/googletest/googlemock/include/gmock/gmock-cardinalities.h	/^class CardinalityInterface {$/;"	c	namespace:testing
CartesianProductGenerator10	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  CartesianProductGenerator10(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator10
CartesianProductGenerator10	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class CartesianProductGenerator10$/;"	c	namespace:testing::internal
CartesianProductGenerator2	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  CartesianProductGenerator2(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator2
CartesianProductGenerator2	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class CartesianProductGenerator2$/;"	c	namespace:testing::internal
CartesianProductGenerator3	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  CartesianProductGenerator3(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator3
CartesianProductGenerator3	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class CartesianProductGenerator3$/;"	c	namespace:testing::internal
CartesianProductGenerator4	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  CartesianProductGenerator4(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator4
CartesianProductGenerator4	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class CartesianProductGenerator4$/;"	c	namespace:testing::internal
CartesianProductGenerator5	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  CartesianProductGenerator5(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator5
CartesianProductGenerator5	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class CartesianProductGenerator5$/;"	c	namespace:testing::internal
CartesianProductGenerator6	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  CartesianProductGenerator6(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator6
CartesianProductGenerator6	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class CartesianProductGenerator6$/;"	c	namespace:testing::internal
CartesianProductGenerator7	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  CartesianProductGenerator7(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator7
CartesianProductGenerator7	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class CartesianProductGenerator7$/;"	c	namespace:testing::internal
CartesianProductGenerator8	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  CartesianProductGenerator8(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator8
CartesianProductGenerator8	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class CartesianProductGenerator8$/;"	c	namespace:testing::internal
CartesianProductGenerator9	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  CartesianProductGenerator9(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator9
CartesianProductGenerator9	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class CartesianProductGenerator9$/;"	c	namespace:testing::internal
CartesianProductHolder10	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^CartesianProductHolder10(const Generator1& g1, const Generator2& g2,$/;"	f	class:testing::internal::CartesianProductHolder10
CartesianProductHolder10	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class CartesianProductHolder10 {$/;"	c	namespace:testing::internal
CartesianProductHolder2	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^CartesianProductHolder2(const Generator1& g1, const Generator2& g2)$/;"	f	class:testing::internal::CartesianProductHolder2
CartesianProductHolder2	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class CartesianProductHolder2 {$/;"	c	namespace:testing::internal
CartesianProductHolder3	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^CartesianProductHolder3(const Generator1& g1, const Generator2& g2,$/;"	f	class:testing::internal::CartesianProductHolder3
CartesianProductHolder3	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class CartesianProductHolder3 {$/;"	c	namespace:testing::internal
CartesianProductHolder4	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^CartesianProductHolder4(const Generator1& g1, const Generator2& g2,$/;"	f	class:testing::internal::CartesianProductHolder4
CartesianProductHolder4	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class CartesianProductHolder4 {$/;"	c	namespace:testing::internal
CartesianProductHolder5	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^CartesianProductHolder5(const Generator1& g1, const Generator2& g2,$/;"	f	class:testing::internal::CartesianProductHolder5
CartesianProductHolder5	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class CartesianProductHolder5 {$/;"	c	namespace:testing::internal
CartesianProductHolder6	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^CartesianProductHolder6(const Generator1& g1, const Generator2& g2,$/;"	f	class:testing::internal::CartesianProductHolder6
CartesianProductHolder6	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class CartesianProductHolder6 {$/;"	c	namespace:testing::internal
CartesianProductHolder7	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^CartesianProductHolder7(const Generator1& g1, const Generator2& g2,$/;"	f	class:testing::internal::CartesianProductHolder7
CartesianProductHolder7	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class CartesianProductHolder7 {$/;"	c	namespace:testing::internal
CartesianProductHolder8	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^CartesianProductHolder8(const Generator1& g1, const Generator2& g2,$/;"	f	class:testing::internal::CartesianProductHolder8
CartesianProductHolder8	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class CartesianProductHolder8 {$/;"	c	namespace:testing::internal
CartesianProductHolder9	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^CartesianProductHolder9(const Generator1& g1, const Generator2& g2,$/;"	f	class:testing::internal::CartesianProductHolder9
CartesianProductHolder9	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class CartesianProductHolder9 {$/;"	c	namespace:testing::internal
Case	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  struct Case {$/;"	s	function:__anonf780395f0111::TEST	file:
CaseInsensitiveCStringEquals	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline bool CaseInsensitiveCStringEquals(const char* lhs, const char* rhs) {$/;"	f	namespace:testing::internal	typeref:typename:bool
CaseInsensitiveCStringEquals	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline bool CaseInsensitiveCStringEquals(const wchar_t* lhs,$/;"	f	namespace:testing::internal	typeref:typename:bool
CaseInsensitiveCStringEquals	src/tests/googletest/googletest/src/gtest.cc	/^bool String::CaseInsensitiveCStringEquals(const char * lhs, const char * rhs) {$/;"	f	class:testing::internal::String	typeref:typename:bool
CaseInsensitiveStringEquals	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^bool CaseInsensitiveStringEquals(const StringType& s1,$/;"	f	namespace:testing::internal	typeref:typename:bool
CaseInsensitiveWideCStringEquals	src/tests/googletest/googletest/src/gtest.cc	/^bool String::CaseInsensitiveWideCStringEquals(const wchar_t* lhs,$/;"	f	class:testing::internal::String	typeref:typename:bool
Cast	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static Matcher<T> Cast(const M& polymorphic_matcher_or_value) {$/;"	f	class:testing::internal::MatcherCastImpl	typeref:typename:Matcher<T>
Cast	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static Matcher<T> Cast(const Matcher<T>& matcher) { return matcher; }$/;"	f	class:testing::internal::MatcherCastImpl	typeref:typename:Matcher<T>
Cast	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static Matcher<T> Cast(const Matcher<U>& source_matcher) {$/;"	f	class:testing::internal::MatcherCastImpl	typeref:typename:Matcher<T>
Cast	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static inline Matcher<T> Cast(const M& polymorphic_matcher_or_value) {$/;"	f	class:testing::SafeMatcherCastImpl	typeref:typename:Matcher<T>
Cast	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static inline Matcher<T> Cast(const Matcher<U>& matcher) {$/;"	f	class:testing::SafeMatcherCastImpl	typeref:typename:Matcher<T>
CastAndAppendTransform	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^struct CastAndAppendTransform {$/;"	s	namespace:testing::internal
CastImpl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static Matcher<T> CastImpl(const M& polymorphic_matcher_or_value,$/;"	f	class:testing::internal::MatcherCastImpl	typeref:typename:Matcher<T>
CastImpl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static Matcher<T> CastImpl(const M& value, BooleanConstant<false>) {$/;"	f	class:testing::internal::MatcherCastImpl	typeref:typename:Matcher<T>
Castable	src/tests/googletest/googletest/test/gtest-port_test.cc	/^  explicit Castable(bool* converted) : converted_(converted) {}$/;"	f	class:testing::internal::Castable	file:
Castable	src/tests/googletest/googletest/test/gtest-port_test.cc	/^class Castable {$/;"	c	namespace:testing::internal	file:
Casting Matchers	src/tests/googletest/googlemock/docs/CookBook.md	/^## Casting Matchers ##$/;"	s	chapter:Using Matchers
Casting Matchers	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Casting Matchers ##$/;"	s	chapter:Using Matchers
Casting Matchers	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Casting Matchers ##$/;"	s	chapter:Using Matchers
Casting Matchers	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Casting Matchers ##$/;"	s	chapter:Using Matchers
CatchCxxExceptionsTest	src/tests/googletest/googletest/test/gtest_catch_exceptions_test.py	/^class CatchCxxExceptionsTest(gtest_test_utils.TestCase):$/;"	c
CatchExceptions	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static Flags CatchExceptions(bool catch_exceptions) {$/;"	f	struct:testing::Flags	typeref:typename:Flags	file:
CatchSehExceptionsTest	src/tests/googletest/googletest/test/gtest_catch_exceptions_test.py	/^  class CatchSehExceptionsTest(gtest_test_utils.TestCase):$/;"	c
Catching Failures	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^# Catching Failures #$/;"	c
Catching Failures	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^# Catching Failures #$/;"	c
Catching Failures	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^# Catching Failures #$/;"	c
Catching Failures	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^# Catching Failures #$/;"	c
Caveats	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^## Caveats ##$/;"	s	chapter:Death Tests
Caveats	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^## Caveats ##$/;"	s	chapter:Death Tests
Caveats	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^## Caveats ##$/;"	s	chapter:Death Tests
Caveats	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^## Caveats ##$/;"	s	chapter:Death Tests
ChDir	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^inline int ChDir(const char* dir) { return chdir(dir); }$/;"	f	namespace:testing::internal::posix	typeref:typename:int
ChangeToRootDir	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^void ChangeToRootDir() { posix::ChDir(GTEST_PATH_SEP_); }$/;"	f	typeref:typename:void
Changing a Mock Object's Behavior Based on the State	src/tests/googletest/googlemock/docs/CookBook.md	/^## Changing a Mock Object's Behavior Based on the State ##$/;"	s	chapter:Using Actions
Changing a Mock Object's Behavior Based on the State	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Changing a Mock Object's Behavior Based on the State ##$/;"	s	chapter:Using Actions
Changing a Mock Object's Behavior Based on the State	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Changing a Mock Object's Behavior Based on the State ##$/;"	s	chapter:Using Actions
Changing a Mock Object's Behavior Based on the State	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Changing a Mock Object's Behavior Based on the State ##$/;"	s	chapter:Using Actions
Channel	src/muduo/muduo/net/Channel.cc	/^Channel::Channel(EventLoop* loop, int fd__)$/;"	f	class:Channel
Channel	src/muduo/muduo/net/Channel.h	/^class Channel : noncopyable$/;"	c	namespace:muduo::net
ChannelList	src/muduo/examples/cdns/Resolver.h	/^  typedef std::map<int, std::unique_ptr<muduo::net::Channel>> ChannelList;$/;"	t	class:cdns::Resolver	typeref:typename:std::map<int,std::unique_ptr<muduo::net::Channel>>
ChannelList	src/muduo/muduo/net/EventLoop.h	/^  typedef std::vector<Channel*> ChannelList;$/;"	t	class:muduo::net::EventLoop	typeref:typename:std::vector<Channel * >
ChannelList	src/muduo/muduo/net/Poller.h	/^  typedef std::vector<Channel*> ChannelList;$/;"	t	class:muduo::net::Poller	typeref:typename:std::vector<Channel * >
ChannelMap	src/muduo/muduo/net/Poller.h	/^  typedef std::map<int, Channel*> ChannelMap;$/;"	t	class:muduo::net::Poller	typeref:typename:std::map<int,Channel * >
Char	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^inline char Char(char ch) { return ch; }$/;"	f	namespace:testing::gmock_generated_actions_test	typeref:typename:char
Char	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^inline char Char(char ch) { return ch; }$/;"	f	namespace:testing::gmock_more_actions_test	typeref:typename:char
CharFormat	src/tests/googletest/googletest/src/gtest-printers.cc	/^enum CharFormat {$/;"	g	namespace:testing::internal	file:
CharPtr	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^inline const char* CharPtr(const char* s) { return s; }$/;"	f	namespace:testing::gmock_generated_actions_test	typeref:typename:const char *
CharPtr	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^inline const char* CharPtr(const char* s) { return s; }$/;"	f	namespace:testing::gmock_more_actions_test	typeref:typename:const char *
ChargenClient	src/muduo/examples/simple/chargenclient/chargenclient.cc	/^  ChargenClient(EventLoop* loop, const InetAddress& listenAddr)$/;"	f	class:ChargenClient	file:
ChargenClient	src/muduo/examples/simple/chargenclient/chargenclient.cc	/^class ChargenClient : noncopyable$/;"	c	file:
ChargenServer	src/muduo/examples/simple/chargen/chargen.cc	/^ChargenServer::ChargenServer(EventLoop* loop,$/;"	f	class:ChargenServer
ChargenServer	src/muduo/examples/simple/chargen/chargen.h	/^class ChargenServer$/;"	c
Chars	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^  typedef std::vector<char> Chars;$/;"	t	function:testing::internal::__anonf4b2defb0111::TEST	typeref:typename:std::vector<char>	file:
CharsToIndices	src/tests/googletest/googletest/test/gtest_unittest.cc	/^std::vector<size_t> CharsToIndices(const std::string& str) {$/;"	f	namespace:__anonf780395f0111	typeref:typename:std::vector<size_t>
CharsToLines	src/tests/googletest/googletest/test/gtest_unittest.cc	/^std::vector<std::string> CharsToLines(const std::string& str) {$/;"	f	namespace:__anonf780395f0111	typeref:typename:std::vector<std::string>
ChatClient	src/muduo/examples/asio/chat/client.cc	/^  ChatClient(EventLoop* loop, const InetAddress& serverAddr)$/;"	f	class:ChatClient	file:
ChatClient	src/muduo/examples/asio/chat/client.cc	/^class ChatClient : noncopyable$/;"	c	file:
ChatClient	src/muduo/examples/asio/chat/loadtest.cc	/^  ChatClient(EventLoop* loop, const InetAddress& serverAddr)$/;"	f	class:ChatClient	file:
ChatClient	src/muduo/examples/asio/chat/loadtest.cc	/^class ChatClient : noncopyable$/;"	c	file:
ChatServer	src/muduo/examples/asio/chat/server.cc	/^  ChatServer(EventLoop* loop,$/;"	f	class:ChatServer	file:
ChatServer	src/muduo/examples/asio/chat/server.cc	/^class ChatServer : noncopyable$/;"	c	file:
ChatServer	src/muduo/examples/asio/chat/server_threaded.cc	/^  ChatServer(EventLoop* loop,$/;"	f	class:ChatServer	file:
ChatServer	src/muduo/examples/asio/chat/server_threaded.cc	/^class ChatServer : noncopyable$/;"	c	file:
ChatServer	src/muduo/examples/asio/chat/server_threaded_efficient.cc	/^  ChatServer(EventLoop* loop,$/;"	f	class:ChatServer	file:
ChatServer	src/muduo/examples/asio/chat/server_threaded_efficient.cc	/^class ChatServer : noncopyable$/;"	c	file:
ChatServer	src/muduo/examples/asio/chat/server_threaded_highperformance.cc	/^  ChatServer(EventLoop* loop,$/;"	f	class:ChatServer	file:
ChatServer	src/muduo/examples/asio/chat/server_threaded_highperformance.cc	/^class ChatServer : noncopyable$/;"	c	file:
Check	src/tests/googletest/googletest/test/gtest_environment_test.cc	/^void Check(bool condition, const char* msg) {$/;"	f	namespace:__anon7fd7f0f30111	typeref:typename:void
CheckActionCountIfNotDone	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^void ExpectationBase::CheckActionCountIfNotDone() const$/;"	f	class:testing::internal::ExpectationBase	typeref:typename:void
CheckCounts	src/tests/googletest/googletest/test/gtest_repeat_test.cc	/^void CheckCounts(int expected) {$/;"	f	namespace:__anon83eb3b5f0111	typeref:typename:void
CheckDestroyed	src/tests/googletest/googletest/test/gtest-port_test.cc	/^  bool CheckDestroyed() const {$/;"	f	class:testing::internal::DestructorCall	typeref:typename:bool	file:
CheckFlags	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static void CheckFlags(const Flags& expected) {$/;"	f	class:testing::InitGoogleTestTest	typeref:typename:void	file:
CheckForUnknownFiles	src/tests/googletest/googlemock/scripts/upload.py	/^  def CheckForUnknownFiles(self):$/;"	m	class:VersionControlSystem
CheckForUnknownFiles	src/tests/googletest/googletest/scripts/upload.py	/^  def CheckForUnknownFiles(self):$/;"	m	class:VersionControlSystem
CheckIsValid	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static void CheckIsValid(Functor \/* functor *\/) {}$/;"	f	struct:testing::internal::CallableTraits	typeref:typename:void
CheckIsValid	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static void CheckIsValid(ResType(*f)(ArgType)) {$/;"	f	struct:testing::internal::CallableTraits	typeref:typename:void
CheckNotNull	src/muduo/muduo/base/Logging.h	/^T* CheckNotNull(Logger::SourceFile file, int line, const char *names, T* ptr)$/;"	f	namespace:muduo	typeref:typename:T *
CheckPoints	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^struct CheckPoints {$/;"	s	file:
CheckTestFailureCount	src/tests/googletest/googletest/test/gtest_stress_test.cc	/^void CheckTestFailureCount(int expected_failures) {$/;"	f	namespace:testing::__anon9be581a20111	typeref:typename:void
CheckedDowncastToActualType	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^Derived* CheckedDowncastToActualType(Base* base) {$/;"	f	namespace:testing::internal	typeref:typename:Derived *
Checking Out the Source from Subversion	src/tests/googletest/googlemock/docs/DevGuide.md	/^## Checking Out the Source from Subversion ##$/;"	s	chapter:Working with the Code
Checking for Failures in the Current Test	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^### Checking for Failures in the Current Test ###$/;"	S	section:Using Assertions in Sub-routines""Propagating Fatal Failures
Checking for Failures in the Current Test	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^### Checking for Failures in the Current Test ###$/;"	S	section:Using Assertions in Sub-routines""Propagating Fatal Failures
Checking for Failures in the Current Test	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^### Checking for Failures in the Current Test ###$/;"	S	section:Using Assertions in Sub-routines""Propagating Fatal Failures
Checking for Failures in the Current Test	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^### Checking for Failures in the Current Test ###$/;"	S	section:Using Assertions in Sub-routines""Propagating Fatal Failures
Choosing a TR1 Tuple Library	src/tests/googletest/googlemock/README.md	/^### Choosing a TR1 Tuple Library ###$/;"	S	section:Getting Started
Choosing a TR1 Tuple Library	src/tests/googletest/googletest/README.md	/^### Choosing a TR1 Tuple Library ###$/;"	S
ChopLowBits	src/tests/googletest/googletest/src/gtest.cc	/^inline UInt32 ChopLowBits(UInt32* bits, int n) {$/;"	f	namespace:testing::internal	typeref:typename:UInt32
Class	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^class Class(_GenericDeclaration):$/;"	c
ClassUniqueToAlwaysTrue	src/tests/googletest/googletest/src/gtest.cc	/^class ClassUniqueToAlwaysTrue {};$/;"	c	namespace:testing::internal::__anon3f29b7680711	file:
ClassicPBSParameters	src/libtfhe-superaic-core/include/classic_PBS_parameters.h	/^struct ClassicPBSParameters{$/;"	s
ClassicPBSParameters	src/tests/classic_PBS_parameters.cpp	/^struct ClassicPBSParameters{$/;"	s	file:
Clause	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  enum Clause {$/;"	g	class:testing::internal::ExpectationBase
Clause	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  enum Clause {$/;"	g	class:testing::internal::UntypedOnCallSpecBase
Clear	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  static void Clear() {$/;"	f	class:testing::DefaultValue	typeref:typename:void
Clear	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  void Clear() { ss_.str(""); }$/;"	f	class:testing::StringMatchResultListener	typeref:typename:void
Clear	src/tests/googletest/googletest/samples/sample3-inl.h	/^  void Clear() {$/;"	f	class:Queue	typeref:typename:void
Clear	src/tests/googletest/googletest/src/gtest.cc	/^void TestResult::Clear() {$/;"	f	class:testing::TestResult	typeref:typename:void
ClearAdHocTestResult	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  void ClearAdHocTestResult() {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:void
ClearCurrentTestPartResults	src/tests/googletest/googletest/test/gtest_unittest.cc	/^static void ClearCurrentTestPartResults() {$/;"	f	namespace:__anonf780395f0111	typeref:typename:void	file:
ClearDefaultActionsLocked	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  virtual void ClearDefaultActionsLocked()$/;"	f	class:testing::internal::FunctionMockerBase	typeref:typename:void
ClearDefaultActionsLocked	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^void Mock::ClearDefaultActionsLocked(void* mock_obj)$/;"	f	class:testing::Mock	typeref:typename:void
ClearNonAdHocTestResult	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  void ClearNonAdHocTestResult() {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:void
ClearResult	src/tests/googletest/googletest/src/gtest.cc	/^void TestCase::ClearResult() {$/;"	f	class:testing::TestCase	typeref:typename:void
ClearTestCaseResult	src/tests/googletest/googletest/include/gtest/gtest.h	/^  static void ClearTestCaseResult(TestCase* test_case) {$/;"	f	class:testing::TestCase	typeref:typename:void
ClearTestPartResults	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  static void ClearTestPartResults(TestResult* test_result) {$/;"	f	class:testing::internal::TestResultAccessor	typeref:typename:void
ClearTestPartResults	src/tests/googletest/googletest/src/gtest.cc	/^void TestResult::ClearTestPartResults() {$/;"	f	class:testing::TestResult	typeref:typename:void
ClearTestResult	src/tests/googletest/googletest/include/gtest/gtest.h	/^  static void ClearTestResult(TestInfo* test_info) {$/;"	f	class:testing::TestInfo	typeref:typename:void
Client	src/muduo/examples/filetransfer/loadtest/Client.java	/^public class Client {$/;"	c
Client	src/muduo/examples/memcached/client/bench.cc	/^  Client(const string& name,$/;"	f	class:Client	file:
Client	src/muduo/examples/memcached/client/bench.cc	/^class Client : noncopyable$/;"	c	file:
Client	src/muduo/examples/pingpong/client.cc	/^  Client(EventLoop* loop,$/;"	f	class:Client	file:
Client	src/muduo/examples/pingpong/client.cc	/^class Client : noncopyable$/;"	c	file:
ClientKey	src/tests/classic_PBS_parameters.cpp	/^struct ClientKey{$/;"	s	file:
ClientLoginError	src/tests/googletest/googlemock/scripts/upload.py	/^class ClientLoginError(urllib2.HTTPError):$/;"	c
ClientLoginError	src/tests/googletest/googletest/scripts/upload.py	/^class ClientLoginError(urllib2.HTTPError):$/;"	c
Clone	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator	typeref:typename:ParamIteratorInterface<ParamType> *
Clone	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator	typeref:typename:ParamIteratorInterface<ParamType> *
Clone	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator	typeref:typename:ParamIteratorInterface<ParamType> *
Clone	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator	typeref:typename:ParamIteratorInterface<ParamType> *
Clone	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator	typeref:typename:ParamIteratorInterface<ParamType> *
Clone	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator	typeref:typename:ParamIteratorInterface<ParamType> *
Clone	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator	typeref:typename:ParamIteratorInterface<ParamType> *
Clone	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator	typeref:typename:ParamIteratorInterface<ParamType> *
Clone	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator	typeref:typename:ParamIteratorInterface<ParamType> *
Clone	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^    virtual ParamIteratorInterface<T>* Clone() const {$/;"	f	class:testing::internal::RangeGenerator::Iterator	typeref:typename:ParamIteratorInterface<T> *
Clone	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^    virtual ParamIteratorInterface<T>* Clone() const {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator	typeref:typename:ParamIteratorInterface<T> *
Clone	src/tests/googletest/googletest/scripts/pump.py	/^  def Clone(self):$/;"	m	class:Cursor
Clone	src/tests/googletest/googletest/scripts/pump.py	/^  def Clone(self):$/;"	m	class:Env
Clone	src/tests/googletest/googletest/scripts/pump.py	/^  def Clone(self):$/;"	m	class:Token
CloneCString	src/tests/googletest/googletest/samples/sample2.cc	/^const char* MyString::CloneCString(const char* a_c_string) {$/;"	f	class:MyString	typeref:typename:const char *
Close	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^inline int Close(int fd) { return close(fd); }$/;"	f	namespace:testing::internal::posix	typeref:typename:int
CloseCallback	src/muduo/muduo/net/Callbacks.h	/^typedef std::function<void (const TcpConnectionPtr&)> CloseCallback;$/;"	t	namespace:muduo::net
CloseConnection	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^    virtual void CloseConnection() {}$/;"	f	class:testing::internal::StreamingListener::AbstractSocketWriter	typeref:typename:void
CloseConnection	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^    void CloseConnection() {$/;"	f	class:testing::internal::StreamingListener::SocketWriter	typeref:typename:void
CmpHelperEQ	src/tests/googletest/googletest/include/gtest/gtest.h	/^AssertionResult CmpHelperEQ(const char* lhs_expression,$/;"	f	namespace:testing::internal	typeref:typename:AssertionResult
CmpHelperEQ	src/tests/googletest/googletest/src/gtest.cc	/^AssertionResult CmpHelperEQ(const char* lhs_expression,$/;"	f	namespace:testing::internal	typeref:typename:AssertionResult
CmpHelperEQFailure	src/tests/googletest/googletest/include/gtest/gtest.h	/^AssertionResult CmpHelperEQFailure(const char* lhs_expression,$/;"	f	namespace:testing::internal	typeref:typename:AssertionResult
CmpHelperFloatingPointEQ	src/tests/googletest/googletest/include/gtest/gtest.h	/^AssertionResult CmpHelperFloatingPointEQ(const char* lhs_expression,$/;"	f	namespace:testing::internal	typeref:typename:AssertionResult
CmpHelperOpFailure	src/tests/googletest/googletest/include/gtest/gtest.h	/^AssertionResult CmpHelperOpFailure(const char* expr1, const char* expr2,$/;"	f	namespace:testing::internal	typeref:typename:AssertionResult
CmpHelperSTRCASEEQ	src/tests/googletest/googletest/src/gtest.cc	/^AssertionResult CmpHelperSTRCASEEQ(const char* lhs_expression,$/;"	f	namespace:testing::internal	typeref:typename:AssertionResult
CmpHelperSTRCASENE	src/tests/googletest/googletest/src/gtest.cc	/^AssertionResult CmpHelperSTRCASENE(const char* s1_expression,$/;"	f	namespace:testing::internal	typeref:typename:AssertionResult
CmpHelperSTREQ	src/tests/googletest/googletest/src/gtest.cc	/^AssertionResult CmpHelperSTREQ(const char* lhs_expression,$/;"	f	namespace:testing::internal
CmpHelperSTREQ	src/tests/googletest/googletest/src/gtest.cc	/^AssertionResult CmpHelperSTREQ(const char* lhs_expression,$/;"	f	namespace:testing::internal	typeref:typename:AssertionResult
CmpHelperSTRNE	src/tests/googletest/googletest/src/gtest.cc	/^AssertionResult CmpHelperSTRNE(const char* s1_expression,$/;"	f	namespace:testing::internal	typeref:typename:AssertionResult
Code	src/tests/googletest/googletest/docs/PumpManual.md	/^## Code ##$/;"	s	chapter:Our Solution
Code	src/tests/googletest/googletest/docs/V1_5_PumpManual.md	/^## Code ##$/;"	s	chapter:Our Solution
Code	src/tests/googletest/googletest/docs/V1_6_PumpManual.md	/^## Code ##$/;"	s	chapter:Our Solution
Code	src/tests/googletest/googletest/docs/V1_7_PumpManual.md	/^## Code ##$/;"	s	chapter:Our Solution
CodeLocation	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  CodeLocation(const std::string& a_file, int a_line)$/;"	f	struct:testing::internal::CodeLocation
CodeLocation	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^struct CodeLocation {$/;"	s	namespace:testing::internal
CodeLocationForTESTF	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class CodeLocationForTESTF : public Test {$/;"	c	namespace:testing	file:
CodeLocationForTESTP	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class CodeLocationForTESTP : public TestWithParam<int> {$/;"	c	namespace:testing	file:
CodeLocationForTYPEDTEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class CodeLocationForTYPEDTEST : public Test {$/;"	c	namespace:testing	file:
CodeLocationForTYPEDTESTP	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class CodeLocationForTYPEDTESTP : public Test {$/;"	c	namespace:testing	file:
CodeNode	src/tests/googletest/googletest/scripts/pump.py	/^class CodeNode:$/;"	c
CodePointToUtf8	src/tests/googletest/googletest/src/gtest.cc	/^std::string CodePointToUtf8(UInt32 code_point) {$/;"	f	namespace:testing::internal	typeref:typename:std::string
Codec	src/muduo/examples/ace/logging/client.cc	/^typedef ProtobufCodecLiteT<LogRecord, logtag> Codec;$/;"	t	namespace:logging	typeref:typename:ProtobufCodecLiteT<LogRecord,logtag>	file:
Codec	src/muduo/examples/ace/logging/server.cc	/^typedef ProtobufCodecLiteT<LogRecord, logtag> Codec;$/;"	t	namespace:logging	typeref:typename:ProtobufCodecLiteT<LogRecord,logtag>	file:
CodecPtr	src/muduo/examples/fastcgi/fastcgi_test.cc	/^    typedef std::shared_ptr<FastCgiCodec> CodecPtr;$/;"	t	function:onConnection	typeref:typename:std::shared_ptr<FastCgiCodec>	file:
Coding Style	src/tests/googletest/googlemock/docs/DevGuide.md	/^## Coding Style ##$/;"	s	chapter:Contributing Code
Coding Style	src/tests/googletest/googletest/docs/DevGuide.md	/^## Coding Style ##$/;"	s	chapter:Contributing Code
Colored Terminal Output	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^### Colored Terminal Output ###$/;"	S	section:Running Test Programs: Advanced Options""Controlling Test Output
Colored Terminal Output	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^### Colored Terminal Output ###$/;"	S	section:Running Test Programs: Advanced Options""Controlling Test Output
Colored Terminal Output	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^### Colored Terminal Output ###$/;"	S	section:Running Test Programs: Advanced Options""Controlling Test Output
Colored Terminal Output	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^### Colored Terminal Output ###$/;"	S	section:Running Test Programs: Advanced Options""Controlling Test Output
ColoredPrintf	src/tests/googletest/googletest/src/gtest.cc	/^void ColoredPrintf(GTestColor color, const char* fmt, ...) {$/;"	f	namespace:testing::internal	typeref:typename:GTEST_ATTRIBUTE_PRINTF_ (2,3)void
Column	src/muduo/examples/sudoku/sudoku.cc	/^typedef Node Column;$/;"	t	typeref:typename:Node	file:
Combine	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    Generator10> Combine($/;"	f	namespace:testing	typeref:typename:internal::CartesianProductHolder10<Generator1,Generator2,Generator3,Generator4,Generator5,Generator6,Generator7,Generator8,Generator9,Generator10>
Combine	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    Generator4, Generator5, Generator6, Generator7, Generator8> Combine($/;"	f	namespace:testing	typeref:typename:internal::CartesianProductHolder8<Generator1,Generator2,Generator3,Generator4,Generator5,Generator6,Generator7,Generator8>
Combine	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    Generator4, Generator5, Generator6, Generator7> Combine($/;"	f	namespace:testing	typeref:typename:internal::CartesianProductHolder7<Generator1,Generator2,Generator3,Generator4,Generator5,Generator6,Generator7>
Combine	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    Generator4, Generator5, Generator6> Combine($/;"	f	namespace:testing	typeref:typename:internal::CartesianProductHolder6<Generator1,Generator2,Generator3,Generator4,Generator5,Generator6>
Combine	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    Generator4, Generator5> Combine($/;"	f	namespace:testing	typeref:typename:internal::CartesianProductHolder5<Generator1,Generator2,Generator3,Generator4,Generator5>
Combine	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    Generator4> Combine($/;"	f	namespace:testing	typeref:typename:internal::CartesianProductHolder4<Generator1,Generator2,Generator3,Generator4>
Combine	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    Generator9> Combine($/;"	f	namespace:testing	typeref:typename:internal::CartesianProductHolder9<Generator1,Generator2,Generator3,Generator4,Generator5,Generator6,Generator7,Generator8,Generator9>
Combine	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^internal::CartesianProductHolder2<Generator1, Generator2> Combine($/;"	f	namespace:testing	typeref:typename:internal::CartesianProductHolder2<Generator1,Generator2>
Combine	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^internal::CartesianProductHolder3<Generator1, Generator2, Generator3> Combine($/;"	f	namespace:testing	typeref:typename:internal::CartesianProductHolder3<Generator1,Generator2,Generator3>
Combining Actions	src/tests/googletest/googlemock/docs/CookBook.md	/^## Combining Actions ##$/;"	s	chapter:Using Actions
Combining Actions	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Combining Actions ##$/;"	s	chapter:Using Actions
Combining Actions	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Combining Actions ##$/;"	s	chapter:Using Actions
Combining Actions	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Combining Actions ##$/;"	s	chapter:Using Actions
Combining Matchers	src/tests/googletest/googlemock/docs/CookBook.md	/^## Combining Matchers ##$/;"	s	chapter:Using Matchers
Combining Matchers	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Combining Matchers ##$/;"	s	chapter:Using Matchers
Combining Matchers	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Combining Matchers ##$/;"	s	chapter:Using Matchers
Combining Matchers	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Combining Matchers ##$/;"	s	chapter:Using Matchers
CommandCallback	src/muduo/contrib/hiredis/Hiredis.h	/^  typedef std::function<void(Hiredis*, redisReply*)> CommandCallback;$/;"	t	class:hiredis::Hiredis
CommandList	src/muduo/muduo/net/inspect/Inspector.h	/^  typedef std::map<string, Callback> CommandList;$/;"	t	class:muduo::net::Inspector	typeref:typename:std::map<string,Callback>
CommentTest	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^class CommentTest : public TestWithParam<Unstreamable> {};$/;"	c	file:
CommonTest	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^  CommonTest() : value_(1) {}$/;"	f	class:CommonTest	file:
CommonTest	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^class CommonTest : public Test {$/;"	c	file:
Compare	src/tests/googletest/googletest/include/gtest/gtest.h	/^  static AssertionResult Compare($/;"	f	class:testing::internal::EqHelper	typeref:typename:AssertionResult
Compare	src/tests/googletest/googletest/include/gtest/gtest.h	/^  static AssertionResult Compare(const char* lhs_expression,$/;"	f	class:testing::internal::EqHelper	typeref:typename:AssertionResult
CompareAndIncrementCharPtrs	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static void CompareAndIncrementCharPtrs() {$/;"	f	class:__anonf780395f0111::SingleEvaluationTest	typeref:typename:void	file:
CompareAndIncrementInts	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static void CompareAndIncrementInts() {$/;"	f	class:__anonf780395f0111::SingleEvaluationTest	typeref:typename:void	file:
CompareLocalTime	src/muduo/muduo/base/TimeZone.cc	/^  struct CompareLocalTime$/;"	s	struct:TimeZone::Data	file:
CompareTestPartResult	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static void CompareTestPartResult(const TestPartResult& expected,$/;"	f	class:__anonf780395f0111::TestResultTest	typeref:typename:void	file:
CompareUtcTime	src/muduo/muduo/base/TimeZone.cc	/^  struct CompareUtcTime$/;"	s	struct:TimeZone::Data	file:
ComparisonBase	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit ComparisonBase(const Rhs& rhs) : rhs_(rhs) {}$/;"	f	class:testing::internal::ComparisonBase
ComparisonBase	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class ComparisonBase {$/;"	c	namespace:testing::internal
CompileAssert	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  struct CompileAssert {$/;"	s	namespace:testing::internal
CompileAssertTypesEqual	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^struct CompileAssertTypesEqual<T, T> {$/;"	s	namespace:testing::internal
Compiling from Source	src/tests/googletest/googlemock/docs/DevGuide.md	/^## Compiling from Source ##$/;"	s	chapter:Working with the Code
Compiling from Source	src/tests/googletest/googletest/docs/DevGuide.md	/^## Compiling from Source ##$/;"	s	chapter:Working with the Code
Composite Actions	src/tests/googletest/googlemock/docs/CheatSheet.md	/^## Composite Actions ##$/;"	s	chapter:Actions
Composite Actions	src/tests/googletest/googlemock/docs/v1_5/CheatSheet.md	/^## Composite Actions ##$/;"	s	chapter:Actions
Composite Actions	src/tests/googletest/googlemock/docs/v1_6/CheatSheet.md	/^## Composite Actions ##$/;"	s	chapter:Actions
Composite Actions	src/tests/googletest/googlemock/docs/v1_7/CheatSheet.md	/^## Composite Actions ##$/;"	s	chapter:Actions
Composite Matchers	src/tests/googletest/googlemock/docs/CheatSheet.md	/^## Composite Matchers ##$/;"	s	chapter:Matchers
Composite Matchers	src/tests/googletest/googlemock/docs/v1_5/CheatSheet.md	/^## Composite Matchers ##$/;"	s	chapter:Matchers
Composite Matchers	src/tests/googletest/googlemock/docs/v1_6/CheatSheet.md	/^## Composite Matchers ##$/;"	s	chapter:Matchers
Composite Matchers	src/tests/googletest/googlemock/docs/v1_7/CheatSheet.md	/^## Composite Matchers ##$/;"	s	chapter:Matchers
Compute	src/tests/googletest/googlemock/src/gmock-matchers.cc	/^  ElementMatcherPairs Compute() {$/;"	f	class:testing::internal::MaxBipartiteMatchState	typeref:typename:ElementMatcherPairs	file:
Compute	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  ElementMatcherPairs Compute() {$/;"	f	class:testing::gmock_matchers_test::__anon745c08170311::BacktrackingMaxBPMState	typeref:typename:ElementMatcherPairs	file:
ComputeCurrentValue	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator	typeref:typename:void
ComputeCurrentValue	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator	typeref:typename:void
ComputeCurrentValue	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator	typeref:typename:void
ComputeCurrentValue	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator	typeref:typename:void
ComputeCurrentValue	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator	typeref:typename:void
ComputeCurrentValue	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator	typeref:typename:void
ComputeCurrentValue	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator	typeref:typename:void
ComputeCurrentValue	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator	typeref:typename:void
ComputeCurrentValue	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator	typeref:typename:void
Concat	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^Concat(T1 a, int b, T2 c) {$/;"	f	namespace:testing::gmock_generated_actions_test	typeref:typename:ConcatImplActionP3<T1,int,T2>
Concat	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^Concat(const std::string& a, T1 b, T2 c) {$/;"	f	namespace:testing::gmock_generated_actions_test	typeref:typename:ConcatImplActionP3<std::string,T1,T2>
Concat10	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^std::string Concat10(const char* s1, const char* s2, const char* s3,$/;"	f	namespace:testing::gmock_generated_actions_test	typeref:typename:std::string
Concat10	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^  std::string Concat10(const char* s1, const char* s2, const char* s3,$/;"	f	class:testing::gmock_more_actions_test::Foo	typeref:typename:std::string	file:
Concat10	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^std::string Concat10(const char* s1, const char* s2, const char* s3,$/;"	f	namespace:testing::gmock_more_actions_test	typeref:typename:std::string
Concat4	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^std::string Concat4(const char* s1, const char* s2, const char* s3,$/;"	f	namespace:testing::gmock_generated_actions_test	typeref:typename:std::string
Concat4	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^std::string Concat4(const char* s1, const char* s2, const char* s3,$/;"	f	namespace:testing::gmock_more_actions_test	typeref:typename:std::string
Concat5	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^std::string Concat5(const char* s1, const char* s2, const char* s3,$/;"	f	namespace:testing::gmock_generated_actions_test	typeref:typename:std::string
Concat5	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^std::string Concat5(const char* s1, const char* s2, const char* s3,$/;"	f	namespace:testing::gmock_more_actions_test	typeref:typename:std::string
Concat6	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^std::string Concat6(const char* s1, const char* s2, const char* s3,$/;"	f	namespace:testing::gmock_generated_actions_test	typeref:typename:std::string
Concat6	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^std::string Concat6(const char* s1, const char* s2, const char* s3,$/;"	f	namespace:testing::gmock_more_actions_test	typeref:typename:std::string
Concat7	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^std::string Concat7(const char* s1, const char* s2, const char* s3,$/;"	f	namespace:testing::gmock_generated_actions_test	typeref:typename:std::string
Concat7	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^  std::string Concat7(const char* s1, const char* s2, const char* s3,$/;"	f	class:testing::gmock_more_actions_test::Foo	typeref:typename:std::string	file:
Concat7	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^std::string Concat7(const char* s1, const char* s2, const char* s3,$/;"	f	namespace:testing::gmock_more_actions_test	typeref:typename:std::string
Concat8	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^std::string Concat8(const char* s1, const char* s2, const char* s3,$/;"	f	namespace:testing::gmock_generated_actions_test	typeref:typename:std::string
Concat8	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^  std::string Concat8(const char* s1, const char* s2, const char* s3,$/;"	f	class:testing::gmock_more_actions_test::Foo	typeref:typename:std::string	file:
Concat8	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^std::string Concat8(const char* s1, const char* s2, const char* s3,$/;"	f	namespace:testing::gmock_more_actions_test	typeref:typename:std::string
Concat9	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^std::string Concat9(const char* s1, const char* s2, const char* s3,$/;"	f	namespace:testing::gmock_generated_actions_test	typeref:typename:std::string
Concat9	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^  std::string Concat9(const char* s1, const char* s2, const char* s3,$/;"	f	class:testing::gmock_more_actions_test::Foo	typeref:typename:std::string	file:
Concat9	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^std::string Concat9(const char* s1, const char* s2, const char* s3,$/;"	f	namespace:testing::gmock_more_actions_test	typeref:typename:std::string
ConcatPaths	src/tests/googletest/googletest/src/gtest-filepath.cc	/^FilePath FilePath::ConcatPaths(const FilePath& directory,$/;"	f	class:testing::internal::FilePath	typeref:typename:FilePath
ConcreteMessagePtr	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^  typedef std::shared_ptr<MSG> ConcreteMessagePtr;$/;"	t	class:muduo::net::ProtobufCodecLiteT	typeref:typename:std::shared_ptr<MSG>
Condition	src/muduo/muduo/base/Condition.h	/^  explicit Condition(MutexLock& mutex)$/;"	f	class:muduo::Condition
Condition	src/muduo/muduo/base/Condition.h	/^class Condition : noncopyable$/;"	c	namespace:muduo
ConfigureStreamingOutput	src/tests/googletest/googletest/src/gtest.cc	/^void UnitTestImpl::ConfigureStreamingOutput() {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:void
ConfigureXmlOutput	src/tests/googletest/googletest/src/gtest.cc	/^void UnitTestImpl::ConfigureXmlOutput() {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:void
ConnectCallback	src/muduo/contrib/hiredis/Hiredis.h	/^  typedef std::function<void(Hiredis*, int)> ConnectCallback;$/;"	t	class:hiredis::Hiredis
ConnectionCallback	src/muduo/examples/hub/pubsub.h	/^  typedef std::function<void (PubSubClient*)> ConnectionCallback;$/;"	t	class:pubsub::PubSubClient
ConnectionCallback	src/muduo/muduo/net/Callbacks.h	/^typedef std::function<void (const TcpConnectionPtr&)> ConnectionCallback;$/;"	t	namespace:muduo::net
ConnectionList	src/muduo/examples/asio/chat/server.cc	/^  typedef std::set<TcpConnectionPtr> ConnectionList;$/;"	t	class:ChatServer	typeref:typename:std::set<TcpConnectionPtr>	file:
ConnectionList	src/muduo/examples/asio/chat/server_threaded.cc	/^  typedef std::set<TcpConnectionPtr> ConnectionList;$/;"	t	class:ChatServer	typeref:typename:std::set<TcpConnectionPtr>	file:
ConnectionList	src/muduo/examples/asio/chat/server_threaded_efficient.cc	/^  typedef std::set<TcpConnectionPtr> ConnectionList;$/;"	t	class:ChatServer	typeref:typename:std::set<TcpConnectionPtr>	file:
ConnectionList	src/muduo/examples/asio/chat/server_threaded_highperformance.cc	/^  typedef std::set<TcpConnectionPtr> ConnectionList;$/;"	t	class:ChatServer	typeref:typename:std::set<TcpConnectionPtr>	file:
ConnectionListPtr	src/muduo/examples/asio/chat/server_threaded_efficient.cc	/^  typedef std::shared_ptr<ConnectionList> ConnectionListPtr;$/;"	t	class:ChatServer	typeref:typename:std::shared_ptr<ConnectionList>	file:
ConnectionMap	src/muduo/muduo/net/TcpServer.h	/^  typedef std::map<string, TcpConnectionPtr> ConnectionMap;$/;"	t	class:muduo::net::TcpServer	typeref:typename:std::map<string,TcpConnectionPtr>
ConnectionSubscription	src/muduo/examples/hub/hub.cc	/^typedef std::set<string> ConnectionSubscription;$/;"	t	namespace:pubsub	typeref:typename:std::set<string>	file:
Connector	src/muduo/muduo/net/Connector.cc	/^Connector::Connector(EventLoop* loop, const InetAddress& serverAddr)$/;"	f	class:Connector
Connector	src/muduo/muduo/net/Connector.h	/^class Connector : noncopyable,$/;"	c	namespace:muduo::net
ConnectorPtr	src/muduo/muduo/net/TcpClient.h	/^typedef std::shared_ptr<Connector> ConnectorPtr;$/;"	t	namespace:muduo::net	typeref:typename:std::shared_ptr<Connector>
ConservativeLowerBound	src/tests/googletest/googlemock/include/gmock/gmock-cardinalities.h	/^  int ConservativeLowerBound() const { return impl_->ConservativeLowerBound(); }$/;"	f	class:testing::Cardinality	typeref:typename:int
ConservativeLowerBound	src/tests/googletest/googlemock/include/gmock/gmock-cardinalities.h	/^  virtual int ConservativeLowerBound() const { return 0; }$/;"	f	class:testing::CardinalityInterface	typeref:typename:int
ConservativeLowerBound	src/tests/googletest/googlemock/src/gmock-cardinalities.cc	/^  virtual int ConservativeLowerBound() const { return min_; }$/;"	f	class:testing::__anon97b0a8450111::BetweenCardinalityImpl	typeref:typename:int	file:
ConservativeUpperBound	src/tests/googletest/googlemock/include/gmock/gmock-cardinalities.h	/^  int ConservativeUpperBound() const { return impl_->ConservativeUpperBound(); }$/;"	f	class:testing::Cardinality	typeref:typename:int
ConservativeUpperBound	src/tests/googletest/googlemock/include/gmock/gmock-cardinalities.h	/^  virtual int ConservativeUpperBound() const { return INT_MAX; }$/;"	f	class:testing::CardinalityInterface	typeref:typename:int
ConservativeUpperBound	src/tests/googletest/googlemock/src/gmock-cardinalities.cc	/^  virtual int ConservativeUpperBound() const { return max_; }$/;"	f	class:testing::__anon97b0a8450111::BetweenCardinalityImpl	typeref:typename:int	file:
Const	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^inline const T& Const(const T& x) { return x; }$/;"	f	namespace:testing	typeref:typename:const T &
ConstAndNonConstCastable	src/tests/googletest/googletest/test/gtest-port_test.cc	/^  ConstAndNonConstCastable(bool* converted, bool* const_converted)$/;"	f	class:testing::internal::ConstAndNonConstCastable	file:
ConstAndNonConstCastable	src/tests/googletest/googletest/test/gtest-port_test.cc	/^class ConstAndNonConstCastable {$/;"	c	namespace:testing::internal	file:
ConstCastable	src/tests/googletest/googletest/test/gtest-port_test.cc	/^  explicit ConstCastable(bool* converted) : converted_(converted) {}$/;"	f	class:testing::internal::ConstCastable	file:
ConstCastable	src/tests/googletest/googletest/test/gtest-port_test.cc	/^class ConstCastable {$/;"	c	namespace:testing::internal	file:
ConstCharPtr	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  ConstCharPtr(const char* str) : value(str) {}$/;"	f	struct:testing::internal::ConstCharPtr
ConstCharPtr	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^struct GTEST_API_ ConstCharPtr {$/;"	s	namespace:testing::internal
ConstItemPtr	src/muduo/examples/memcached/server/Item.h	/^typedef std::shared_ptr<const Item> ConstItemPtr;  \/\/ TODO: use unique_ptr$/;"	t	typeref:typename:std::shared_ptr<const Item>
ConstIter	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^    ConstIter(const Streamlike* s,$/;"	f	class:testing::gmock_matchers_test::Streamlike::ConstIter	file:
ConstIter	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  class ConstIter : public std::iterator<std::input_iterator_tag,$/;"	c	class:testing::gmock_matchers_test::Streamlike	file:
ConstPropagatingPtr	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  ConstPropagatingPtr() : val_() {}$/;"	f	class:testing::gmock_matchers_test::ConstPropagatingPtr	file:
ConstPropagatingPtr	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  ConstPropagatingPtr(const ConstPropagatingPtr& other) : val_(other.val_) {}$/;"	f	class:testing::gmock_matchers_test::ConstPropagatingPtr	file:
ConstPropagatingPtr	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  explicit ConstPropagatingPtr(T* t) : val_(t) {}$/;"	f	class:testing::gmock_matchers_test::ConstPropagatingPtr	file:
ConstPropagatingPtr	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^class ConstPropagatingPtr {$/;"	c	namespace:testing::gmock_matchers_test	file:
ConstReference	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^  static const_reference ConstReference($/;"	f	class:testing::internal::StlContainerView	typeref:typename:const_reference
ConstReference	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^  static const_reference ConstReference(const Element (&array)[N]) {$/;"	f	class:testing::internal::StlContainerView	typeref:typename:const_reference
ConstReference	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^  static const_reference ConstReference(const RawContainer& container) {$/;"	f	class:testing::internal::StlContainerView	typeref:typename:const_reference
Constructs	src/tests/googletest/googletest/docs/PumpManual.md	/^## Constructs ##$/;"	s	chapter:Our Solution
Constructs	src/tests/googletest/googletest/docs/V1_5_PumpManual.md	/^## Constructs ##$/;"	s	chapter:Our Solution
Constructs	src/tests/googletest/googletest/docs/V1_6_PumpManual.md	/^## Constructs ##$/;"	s	chapter:Our Solution
Constructs	src/tests/googletest/googletest/docs/V1_7_PumpManual.md	/^## Constructs ##$/;"	s	chapter:Our Solution
Container Matchers	src/tests/googletest/googlemock/docs/CheatSheet.md	/^## Container Matchers ##$/;"	s	chapter:Matchers
Container Matchers	src/tests/googletest/googlemock/docs/v1_5/CheatSheet.md	/^## Container Matchers ##$/;"	s	chapter:Matchers
Container Matchers	src/tests/googletest/googlemock/docs/v1_6/CheatSheet.md	/^## Container Matchers ##$/;"	s	chapter:Matchers
Container Matchers	src/tests/googletest/googlemock/docs/v1_7/CheatSheet.md	/^## Container Matchers ##$/;"	s	chapter:Matchers
ContainerEq	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    ContainerEq(const Container& rhs) {$/;"	f	namespace:testing	typeref:typename:PolymorphicMatcher<internal::ContainerEqMatcher<GTEST_REMOVE_CONST_ (Container)>>
ContainerEqMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit ContainerEqMatcher(const Container& expected)$/;"	f	class:testing::internal::ContainerEqMatcher
ContainerEqMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class ContainerEqMatcher {$/;"	c	namespace:testing::internal
ContainerEqTest	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^class ContainerEqTest : public testing::Test {};$/;"	c	namespace:testing::gmock_matchers_test	file:
ContainerEqTestTypes	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^    ContainerEqTestTypes;$/;"	t	namespace:testing::gmock_matchers_test	typeref:typename:testing::Types<set<int>,vector<size_t>,multiset<size_t>,list<int>>	file:
ContainerTest	src/tests/googletest/googletest/test/gtest-typed-test_test.h	/^class ContainerTest : public Test {$/;"	c
ContainerType	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  typedef typename ::std::vector<T> ContainerType;$/;"	t	class:testing::internal::ValuesInIteratorRangeGenerator	typeref:typename:::std::vector<T>
ContainerType	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  typedef ::std::vector<int> ContainerType;$/;"	t	function:TEST	typeref:typename:::std::vector<int>	file:
ContainerView	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^         GTEST_REMOVE_REFERENCE_AND_CONST_(Container)> ContainerView;$/;"	t	class:testing::internal::SizeIsMatcher::Impl
ContainerView	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^        GTEST_REMOVE_REFERENCE_AND_CONST_(Container)> ContainerView;$/;"	t	class:testing::internal::BeginEndDistanceIsMatcher::Impl
Contains	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline internal::ContainsMatcher<M> Contains(M matcher) {$/;"	f	namespace:testing	typeref:typename:internal::ContainsMatcher<M>
ContainsMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit ContainsMatcher(M m) : inner_matcher_(m) {}$/;"	f	class:testing::internal::ContainsMatcher
ContainsMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class ContainsMatcher {$/;"	c	namespace:testing::internal
ContainsMatcherImpl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit ContainsMatcherImpl(InnerMatcher inner_matcher)$/;"	f	class:testing::internal::ContainsMatcherImpl
ContainsMatcherImpl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class ContainsMatcherImpl : public QuantifierMatcherImpl<Container> {$/;"	c	namespace:testing::internal
ContainsRegex	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline PolymorphicMatcher<internal::MatchesRegexMatcher> ContainsRegex($/;"	f	namespace:testing	typeref:typename:PolymorphicMatcher<internal::MatchesRegexMatcher>
Context	src/muduo/examples/ace/ttcp/ttcp.cc	/^  Context()$/;"	f	struct:Context	file:
Context	src/muduo/examples/ace/ttcp/ttcp.cc	/^struct Context$/;"	s	file:
Contributing Code	src/tests/googletest/README.md	/^### Contributing Code ###$/;"	S	section:Google Test""Regenerating Source Files
Contributing Code	src/tests/googletest/googlemock/docs/DevGuide.md	/^# Contributing Code #$/;"	c
Contributing Code	src/tests/googletest/googletest/docs/DevGuide.md	/^# Contributing Code #$/;"	c
Contributing a Patch	src/tests/googletest/googlemock/README.md	/^#### Contributing a Patch ####$/;"	t	subsection:Getting Started""Developing Google Mock
Contributor License Agreements	src/tests/googletest/googlemock/docs/DevGuide.md	/^## Contributor License Agreements ##$/;"	s	chapter:Contributing Code
Contributor License Agreements	src/tests/googletest/googletest/docs/DevGuide.md	/^## Contributor License Agreements ##$/;"	s	chapter:Contributing Code
Controlling How Failures Are Reported	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^## Controlling How Failures Are Reported ##$/;"	s	chapter:Running Test Programs: Advanced Options
Controlling How Failures Are Reported	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^## Controlling How Failures Are Reported ##$/;"	s	chapter:Running Test Programs: Advanced Options
Controlling How Failures Are Reported	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^## Controlling How Failures Are Reported ##$/;"	s	chapter:Running Test Programs: Advanced Options
Controlling How Failures Are Reported	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^## Controlling How Failures Are Reported ##$/;"	s	chapter:Running Test Programs: Advanced Options
Controlling How Much Information Google Mock Prints	src/tests/googletest/googlemock/docs/CookBook.md	/^## Controlling How Much Information Google Mock Prints ##$/;"	s	chapter:Misc Recipes on Using Google Mock
Controlling How Much Information Google Mock Prints	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Controlling How Much Information Google Mock Prints ##$/;"	s	chapter:Misc Recipes on Using Google Mock
Controlling How Much Information Google Mock Prints	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Controlling How Much Information Google Mock Prints ##$/;"	s	chapter:Misc Recipes on Using Google Mock
Controlling How Much Information Google Mock Prints	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Controlling How Much Information Google Mock Prints ##$/;"	s	chapter:Misc Recipes on Using Google Mock
Controlling Test Output	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^## Controlling Test Output ##$/;"	s	chapter:Running Test Programs: Advanced Options
Controlling Test Output	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^## Controlling Test Output ##$/;"	s	chapter:Running Test Programs: Advanced Options
Controlling Test Output	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^## Controlling Test Output ##$/;"	s	chapter:Running Test Programs: Advanced Options
Controlling Test Output	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^## Controlling Test Output ##$/;"	s	chapter:Running Test Programs: Advanced Options
Controlling When an Expectation Retires	src/tests/googletest/googlemock/docs/CookBook.md	/^## Controlling When an Expectation Retires ##$/;"	s	chapter:Setting Expectations
Controlling When an Expectation Retires	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Controlling When an Expectation Retires ##$/;"	s	chapter:Setting Expectations
Controlling When an Expectation Retires	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Controlling When an Expectation Retires ##$/;"	s	chapter:Setting Expectations
Controlling When an Expectation Retires	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Controlling When an Expectation Retires ##$/;"	s	chapter:Setting Expectations
ConversionHelperBase	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class ConversionHelperBase {};$/;"	c	file:
ConversionHelperDerived	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class ConversionHelperDerived : public ConversionHelperBase {};$/;"	c	file:
ConvertFromPumpSource	src/tests/googletest/googletest/scripts/pump.py	/^def ConvertFromPumpSource(src_text):$/;"	f
ConvertIdentifierNameToWords	src/tests/googletest/googlemock/src/gmock-internal-utils.cc	/^GTEST_API_ string ConvertIdentifierNameToWords(const char* id_name) {$/;"	f	namespace:testing::internal	typeref:typename:GTEST_API_ string
ConvertibleFromAny	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  ConvertibleFromAny(int a_value) : value(a_value) {}$/;"	f	struct:testing::gmock_matchers_test::ConvertibleFromAny	file:
ConvertibleFromAny	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  explicit ConvertibleFromAny(const T& \/*a_value*\/) : value(-1) {$/;"	f	struct:testing::gmock_matchers_test::ConvertibleFromAny	file:
ConvertibleFromAny	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^struct ConvertibleFromAny {$/;"	s	namespace:testing::gmock_matchers_test	file:
ConvertibleToAssertionResult	src/tests/googletest/googletest/test/gtest_unittest.cc	/^struct ConvertibleToAssertionResult {$/;"	s	file:
ConvertibleToBool	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  explicit ConvertibleToBool(int number) : number_(number) {}$/;"	f	class:testing::gmock_matchers_test::ConvertibleToBool	file:
ConvertibleToBool	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^class ConvertibleToBool {$/;"	c	namespace:testing::gmock_matchers_test	file:
Copy	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^  static type Copy(const ::testing::tuple<ElementPointer, Size>& array) {$/;"	f	class:testing::internal::StlContainerView	typeref:typename:type
Copy	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^  static type Copy(const Element (&array)[N]) {$/;"	f	class:testing::internal::StlContainerView	typeref:typename:type
Copy	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^  static type Copy(const RawContainer& container) { return container; }$/;"	f	class:testing::internal::StlContainerView	typeref:typename:type
CopyArray	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^inline void CopyArray(const T& from, U* to) { *to = from; }$/;"	f	namespace:testing::internal	typeref:typename:void
CopyArray	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^inline void CopyArray(const T(&from)[N], U(*to)[N]) {$/;"	f	namespace:testing::internal	typeref:typename:void
CopyArray	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^void CopyArray(const T* from, size_t size, U* to) {$/;"	f	namespace:testing::internal	typeref:typename:void
CopyElements	src/tests/googletest/googlemock/include/gmock/gmock-more-actions.h	/^inline OutputIterator CopyElements(InputIterator first,$/;"	f	namespace:testing::internal	typeref:typename:OutputIterator
CopyToString	src/muduo/muduo/base/StringPiece.h	/^  void CopyToString(string* target) const {$/;"	f	class:muduo::StringPiece	typeref:typename:void
CountDownLatch	src/muduo/muduo/base/CountDownLatch.cc	/^CountDownLatch::CountDownLatch(int count)$/;"	f	class:CountDownLatch
CountDownLatch	src/muduo/muduo/base/CountDownLatch.h	/^class CountDownLatch : noncopyable$/;"	c	namespace:muduo
CountIf	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^inline int CountIf(const Container& c, Predicate predicate) {$/;"	f	namespace:testing::internal	typeref:typename:int
Counter	src/tests/googletest/googletest/samples/sample4.h	/^  Counter() : counter_(0) {}$/;"	f	class:Counter
Counter	src/tests/googletest/googletest/samples/sample4.h	/^class Counter {$/;"	c
CountingThreadFunc	src/tests/googletest/googletest/test/gtest-port_test.cc	/^void CountingThreadFunc(pair<AtomicCounterWithMutex*, int> param) {$/;"	f	namespace:testing::internal	typeref:typename:void
CpuTime	src/muduo/examples/procmon/procmon.cc	/^  struct CpuTime$/;"	s	class:Procmon	file:
CpuTime	src/muduo/muduo/base/ProcessInfo.h	/^    CpuTime() : userSeconds(0.0), systemSeconds(0.0) { }$/;"	f	struct:muduo::ProcessInfo::CpuTime
CpuTime	src/muduo/muduo/base/ProcessInfo.h	/^  struct CpuTime$/;"	s	namespace:muduo::ProcessInfo
Create	src/tests/googletest/googletest/src/gtest-death-test.cc	/^bool DeathTest::Create(const char* statement, const RE* regex,$/;"	f	class:testing::internal::DeathTest	typeref:typename:bool
Create	src/tests/googletest/googletest/src/gtest-death-test.cc	/^bool DefaultDeathTestFactory::Create(const char* statement, const RE* regex,$/;"	f	class:testing::internal::DefaultDeathTestFactory	typeref:typename:bool
Create	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^bool MockDeathTestFactory::Create(const char* \/*statement*\/,$/;"	f	class:MockDeathTestFactory	typeref:typename:bool
CreateCodePointFromUtf16SurrogatePair	src/tests/googletest/googletest/src/gtest.cc	/^inline UInt32 CreateCodePointFromUtf16SurrogatePair(wchar_t first,$/;"	f	namespace:testing::internal	typeref:typename:UInt32
CreateDirectoriesRecursively	src/tests/googletest/googletest/src/gtest-filepath.cc	/^bool FilePath::CreateDirectoriesRecursively() const {$/;"	f	class:testing::internal::FilePath	typeref:typename:bool
CreateFlagfile	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  internal::FilePath CreateFlagfile(const char* contents) {$/;"	f	class:testing::FlagfileTest	typeref:typename:internal::FilePath	file:
CreateFolder	src/tests/googletest/googletest/src/gtest-filepath.cc	/^bool FilePath::CreateFolder() const {$/;"	f	class:testing::internal::FilePath	typeref:typename:bool
CreateKey	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  static pthread_key_t CreateKey() {$/;"	f	class:testing::internal::ThreadLocal	typeref:typename:pthread_key_t
CreateMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static Matcher<T> CreateMatcher(const ListType& matchers) {$/;"	f	struct:testing::internal::MatcherList	typeref:typename:Matcher<T>
CreateOnTheFlyPrimeTable	src/tests/googletest/googletest/samples/sample7_unittest.cc	/^PrimeTable* CreateOnTheFlyPrimeTable() {$/;"	f	typeref:typename:PrimeTable *
CreatePreCalculatedPrimeTable	src/tests/googletest/googletest/samples/sample7_unittest.cc	/^PrimeTable* CreatePreCalculatedPrimeTable() {$/;"	f	typeref:typename:PrimeTable *
CreatePrimeTable	src/tests/googletest/googletest/samples/sample6_unittest.cc	/^PrimeTable* CreatePrimeTable<OnTheFlyPrimeTable>() {$/;"	f	typeref:typename:PrimeTable *
CreatePrimeTable	src/tests/googletest/googletest/samples/sample6_unittest.cc	/^PrimeTable* CreatePrimeTable<PreCalculatedPrimeTable>() {$/;"	f	typeref:typename:PrimeTable *
CreatePrimeTableFunc	src/tests/googletest/googletest/samples/sample7_unittest.cc	/^typedef PrimeTable* CreatePrimeTableFunc();$/;"	t	typeref:typename:PrimeTable * ()()	file:
CreateReturnType	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def CreateReturnType(self, return_type_seq):$/;"	m	class:TypeConverter
CreateTest	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  virtual Test* CreateTest() { return new TestClass; }$/;"	f	class:testing::internal::TestFactoryImpl	typeref:typename:Test *
CreateTest	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  virtual Test* CreateTest() {$/;"	f	class:testing::internal::ParameterizedTestFactory	typeref:typename:Test *
CreateTestFactory	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  virtual TestFactoryBase* CreateTestFactory(ParamType parameter) {$/;"	f	class:testing::internal::TestMetaFactory	typeref:typename:TestFactoryBase *
CreateTextFile	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^  void CreateTextFile(const char* filename) {$/;"	f	class:testing::internal::__anon077d0c590111::DirectoryCreationTest	typeref:typename:void	file:
CreateThread	src/tests/googletest/googletest/src/gtest-port.cc	/^  static HANDLE CreateThread(Runnable* runnable,$/;"	f	class:testing::internal::__anon142d171a0211::ThreadWithParamSupport	typeref:typename:HANDLE	file:
CreateUnifiedDiff	src/tests/googletest/googletest/src/gtest.cc	/^std::string CreateUnifiedDiff(const std::vector<std::string>& left,$/;"	f	namespace:testing::internal::edit_distance	typeref:typename:std::string
Creating Mock Classes	src/tests/googletest/googlemock/docs/CookBook.md	/^# Creating Mock Classes #$/;"	c
Creating Mock Classes	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^# Creating Mock Classes #$/;"	c
Creating Mock Classes	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^# Creating Mock Classes #$/;"	c
Creating Mock Classes	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^# Creating Mock Classes #$/;"	c
Creating Value-Parameterized Abstract Tests	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^## Creating Value-Parameterized Abstract Tests ##$/;"	s	chapter:Value Parameterized Tests
Creating Value-Parameterized Abstract Tests	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^## Creating Value-Parameterized Abstract Tests ##$/;"	s	chapter:Value Parameterized Tests
Creating Value-Parameterized Abstract Tests	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^## Creating Value-Parameterized Abstract Tests ##$/;"	s	chapter:Value Parameterized Tests
Creating Value-Parameterized Abstract Tests	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^## Creating Value-Parameterized Abstract Tests ##$/;"	s	chapter:Value Parameterized Tests
Curl	src/muduo/examples/curl/Curl.cc	/^Curl::Curl(EventLoop* loop)$/;"	f	class:Curl
Curl	src/muduo/examples/curl/Curl.h	/^class Curl : muduo::noncopyable$/;"	c	namespace:curl
Current	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator	typeref:typename:const ParamType *
Current	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator	typeref:typename:const ParamType *
Current	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator	typeref:typename:const ParamType *
Current	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator	typeref:typename:const ParamType *
Current	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator	typeref:typename:const ParamType *
Current	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator	typeref:typename:const ParamType *
Current	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator	typeref:typename:const ParamType *
Current	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator	typeref:typename:const ParamType *
Current	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator	typeref:typename:const ParamType *
Current	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^    virtual const T* Current() const { return &value_; }$/;"	f	class:testing::internal::RangeGenerator::Iterator	typeref:typename:const T *
Current	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^    virtual const T* Current() const {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator	typeref:typename:const T *
CurrentOsStackTraceExceptTop	src/tests/googletest/googletest/src/gtest.cc	/^std::string UnitTestImpl::CurrentOsStackTraceExceptTop(int skip_count) {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:std::string
CurrentStackTrace	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^  virtual std::string CurrentStackTrace(int max_depth, int skip_count) {$/;"	f	struct:testing::internal::__anonf4b2defb0111::MockStackTraceGetter	typeref:typename:std::string	file:
CurrentStackTrace	src/tests/googletest/googletest/src/gtest.cc	/^std::string OsStackTraceGetter::CurrentStackTrace(int \/*max_depth*\/,$/;"	f	class:testing::internal::OsStackTraceGetter	typeref:typename:std::string
CurrentTestInfoTest	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class CurrentTestInfoTest : public Test {$/;"	c	namespace:testing	file:
CurrentThread	src/muduo/muduo/base/CurrentThread.cc	/^namespace CurrentThread$/;"	n	namespace:muduo	file:
CurrentThread	src/muduo/muduo/base/CurrentThread.h	/^namespace CurrentThread$/;"	n	namespace:muduo
Cursor	src/tests/googletest/googletest/scripts/pump.py	/^class Cursor:$/;"	c
CustomFunctionNamingTest	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^class CustomFunctionNamingTest : public TestWithParam<std::string> {};$/;"	c	file:
CustomFunctorNamingTest	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^class CustomFunctorNamingTest : public TestWithParam<std::string> {};$/;"	c	file:
CustomIntegerNamingTest	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^class CustomIntegerNamingTest : public TestWithParam<int> {};$/;"	c	file:
CustomLambdaNamingTest	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^class CustomLambdaNamingTest : public TestWithParam<std::string> {};$/;"	c	file:
CustomParamNameFunction	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^inline std::string CustomParamNameFunction($/;"	f	typeref:typename:std::string
CustomParamNameFunctor	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^struct CustomParamNameFunctor {$/;"	s	file:
CustomStruct	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  explicit CustomStruct(int value) : x(value) {}$/;"	f	struct:CustomStruct	file:
CustomStruct	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^struct CustomStruct {$/;"	s	file:
CustomStructNamingTest	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^class CustomStructNamingTest : public TestWithParam<CustomStruct> {};$/;"	c	file:
CxxExceptionInConstructorTest	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^  CxxExceptionInConstructorTest() {$/;"	f	class:CxxExceptionInConstructorTest	file:
CxxExceptionInConstructorTest	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^class CxxExceptionInConstructorTest : public Test {$/;"	c	file:
CxxExceptionInDestructorTest	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^class CxxExceptionInDestructorTest : public Test {$/;"	c	file:
CxxExceptionInSetUpTest	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^class CxxExceptionInSetUpTest : public Test {$/;"	c	file:
CxxExceptionInSetUpTestCaseTest	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^  CxxExceptionInSetUpTestCaseTest() {$/;"	f	class:CxxExceptionInSetUpTestCaseTest	file:
CxxExceptionInSetUpTestCaseTest	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^class CxxExceptionInSetUpTestCaseTest : public Test {$/;"	c	file:
CxxExceptionInTearDownTest	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^class CxxExceptionInTearDownTest : public Test {$/;"	c	file:
CxxExceptionInTearDownTestCaseTest	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^class CxxExceptionInTearDownTestCaseTest : public Test {$/;"	c	file:
CxxExceptionInTestBodyTest	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^class CxxExceptionInTestBodyTest : public Test {$/;"	c	file:
Cygwin Requirements	src/tests/googletest/README.md	/^### Cygwin Requirements ###$/;"	S	section:Google Test""Requirements
DEATH_TESTS	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^  DEATH_TESTS = [$/;"	v
DEATH_TESTS	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^  DEATH_TESTS = []$/;"	v
DEATH_TEST_STYLE_FLAG	src/tests/googletest/googletest/test/gtest_help_test.py	/^DEATH_TEST_STYLE_FLAG = FLAG_PREFIX + 'death_test_style'$/;"	v
DEBUG	src/muduo/muduo/base/Logging.h	/^    DEBUG,$/;"	e	enum:muduo::Logger::LogLevel
DEBUG	src/tests/googletest/googlemock/scripts/generator/cpp/utils.py	/^DEBUG = True$/;"	v
DEC	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#define DEC(/;"	d	file:
DEC	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define DEC(/;"	d	file:
DEFAULT_GMOCK_ROOT_DIR	src/tests/googletest/googlemock/scripts/fuse_gmock_files.py	/^DEFAULT_GMOCK_ROOT_DIR = os.path.join(os.path.dirname(__file__), '..')$/;"	v
DEFAULT_GTEST_ROOT_DIR	src/tests/googletest/googletest/scripts/fuse_gtest_files.py	/^DEFAULT_GTEST_ROOT_DIR = os.path.join(os.path.dirname(__file__), '..')$/;"	v
DIED	src/tests/googletest/googletest/src/gtest-death-test.cc	/^enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };$/;"	e	enum:testing::internal::DeathTestOutcome	file:
DISABLED_TESTS	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^DISABLED_TESTS = [$/;"	v
DISABLED_TypedTest	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class DISABLED_TypedTest : public Test {$/;"	c	namespace:__anonf780395f0111	file:
DISABLED_TypedTestP	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class DISABLED_TypedTestP : public Test {$/;"	c	namespace:__anonf780395f0111	file:
DISTCLEANFILES	src/tests/googletest/googlemock/Makefile.am	/^DISTCLEANFILES = scripts\/gmock-config$/;"	m
DOT_DOT_REGEX	src/tests/googletest/googletest/scripts/pump.py	/^DOT_DOT_REGEX = re.compile(r'\\.\\.')$/;"	v
DRIVER_NAME	src/driver/tfhe_superaic_driver.h	/^#define DRIVER_NAME /;"	d
Data	src/muduo/muduo/base/TimeZone.cc	/^struct TimeZone::Data$/;"	s	class:TimeZone	file:
DataCallback	src/muduo/examples/curl/Curl.h	/^  typedef std::function<void(const char*, int)> DataCallback;$/;"	t	class:curl::Request
DataEvent	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/DataEvent.java	/^    public DataEvent(EventSource source, int whichClient, ChannelBuffer data) {$/;"	m	class:DataEvent
DataEvent	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/DataEvent.java	/^public class DataEvent extends Event {$/;"	c
Date	src/muduo/muduo/base/Date.cc	/^Date::Date(const struct tm& t)$/;"	f	class:Date
Date	src/muduo/muduo/base/Date.cc	/^Date::Date(int y, int m, int d)$/;"	f	class:Date
Date	src/muduo/muduo/base/Date.h	/^  Date()$/;"	f	class:muduo::Date
Date	src/muduo/muduo/base/Date.h	/^  explicit Date(int julianDayNum)$/;"	f	class:muduo::Date
Date	src/muduo/muduo/base/Date.h	/^class Date : public muduo::copyable$/;"	c	namespace:muduo
DateTime	src/muduo/muduo/base/TimeZone.cc	/^DateTime::DateTime(const struct tm& t)$/;"	f	class:DateTime
DateTime	src/muduo/muduo/base/TimeZone.h	/^  DateTime() {}$/;"	f	struct:muduo::DateTime
DateTime	src/muduo/muduo/base/TimeZone.h	/^  DateTime(int _year, int _month, int _day, int _hour, int _minute, int _second)$/;"	f	struct:muduo::DateTime
DateTime	src/muduo/muduo/base/TimeZone.h	/^struct DateTime$/;"	s	namespace:muduo
DaytimeServer	src/muduo/examples/simple/daytime/daytime.cc	/^DaytimeServer::DaytimeServer(EventLoop* loop,$/;"	f	class:DaytimeServer
DaytimeServer	src/muduo/examples/simple/daytime/daytime.h	/^class DaytimeServer$/;"	c
Death Test Styles	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^## Death Test Styles ##$/;"	s	chapter:Death Tests
Death Test Styles	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^## Death Test Styles ##$/;"	s	chapter:Death Tests
Death Test Styles	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^## Death Test Styles ##$/;"	s	chapter:Death Tests
Death Test Styles	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^## Death Test Styles ##$/;"	s	chapter:Death Tests
Death Tests	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^# Death Tests #$/;"	c
Death Tests	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^# Death Tests #$/;"	c
Death Tests	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^# Death Tests #$/;"	c
Death Tests	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^# Death Tests #$/;"	c
Death Tests And Threads	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^## Death Tests And Threads ##$/;"	s	chapter:Death Tests
Death Tests And Threads	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^## Death Tests And Threads ##$/;"	s	chapter:Death Tests
Death Tests And Threads	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^## Death Tests And Threads ##$/;"	s	chapter:Death Tests
Death Tests And Threads	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^## Death Tests And Threads ##$/;"	s	chapter:Death Tests
DeathTest	src/tests/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h	/^class GTEST_API_ DeathTest {$/;"	c	namespace:testing::internal
DeathTest	src/tests/googletest/googletest/src/gtest-death-test.cc	/^DeathTest::DeathTest() {$/;"	f	class:testing::internal::DeathTest
DeathTestAbort	src/tests/googletest/googletest/src/gtest-death-test.cc	/^void DeathTestAbort(const std::string& message) {$/;"	f	namespace:testing::internal	typeref:typename:void
DeathTestAndMultiThreadsTest	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^class DeathTestAndMultiThreadsTest : public testing::Test {$/;"	c	file:
DeathTestFactory	src/tests/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h	/^class DeathTestFactory {$/;"	c	namespace:testing::internal
DeathTestImpl	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  DeathTestImpl(const char* a_statement, const RE* a_regex)$/;"	f	class:testing::internal::DeathTestImpl	file:
DeathTestImpl	src/tests/googletest/googletest/src/gtest-death-test.cc	/^class DeathTestImpl : public DeathTest {$/;"	c	namespace:testing::internal	file:
DeathTestOutcome	src/tests/googletest/googletest/src/gtest-death-test.cc	/^enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };$/;"	g	namespace:testing::internal	file:
DeathTestSubroutine	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^void DeathTestSubroutine() {$/;"	f	typeref:typename:void
DeathTestThreadWarning	src/tests/googletest/googletest/src/gtest-death-test.cc	/^static std::string DeathTestThreadWarning(size_t thread_count) {$/;"	f	namespace:testing::internal	typeref:typename:std::string	file:
DeathTestUseFork	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static Flags DeathTestUseFork(bool death_test_use_fork) {$/;"	f	struct:testing::Flags	typeref:typename:Flags	file:
DebugString	src/tests/googletest/googlemock/src/gmock-matchers.cc	/^std::string MatchMatrix::DebugString() const {$/;"	f	class:testing::internal::MatchMatrix	typeref:typename:std::string
DecayArray	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^template <typename T, size_t N> struct DecayArray<T[N]> {$/;"	s	namespace:testing::internal
DecayArray	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^template <typename T> struct DecayArray { typedef T type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
DecayArray	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^template <typename T> struct DecayArray<T[]> {$/;"	s	namespace:testing::internal
DeclarationToParts	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def DeclarationToParts(self, parts, needs_name_removed):$/;"	m	class:TypeConverter
Default Action	src/tests/googletest/googlemock/docs/CheatSheet.md	/^## Default Action ##$/;"	s	chapter:Actions
Default Action	src/tests/googletest/googlemock/docs/v1_5/CheatSheet.md	/^## Default Action ##$/;"	s	chapter:Actions
Default Action	src/tests/googletest/googlemock/docs/v1_6/CheatSheet.md	/^## Default Action ##$/;"	s	chapter:Actions
Default Action	src/tests/googletest/googlemock/docs/v1_7/CheatSheet.md	/^## Default Action ##$/;"	s	chapter:Actions
DefaultDeathTestFactory	src/tests/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h	/^class DefaultDeathTestFactory : public DeathTestFactory {$/;"	c	namespace:testing::internal
DefaultGlobalTestPartResultReporter	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^class DefaultGlobalTestPartResultReporter$/;"	c	namespace:testing::internal
DefaultGlobalTestPartResultReporter	src/tests/googletest/googletest/src/gtest.cc	/^DefaultGlobalTestPartResultReporter::DefaultGlobalTestPartResultReporter($/;"	f	class:testing::internal::DefaultGlobalTestPartResultReporter
DefaultParamName	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^std::string DefaultParamName(const TestParamInfo<ParamType>& info) {$/;"	f	namespace:testing::internal	typeref:typename:std::string
DefaultPerThreadTestPartResultReporter	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^class DefaultPerThreadTestPartResultReporter$/;"	c	namespace:testing::internal
DefaultPerThreadTestPartResultReporter	src/tests/googletest/googletest/src/gtest.cc	/^DefaultPerThreadTestPartResultReporter::DefaultPerThreadTestPartResultReporter($/;"	f	class:testing::internal::DefaultPerThreadTestPartResultReporter
DefaultPrintNonContainerTo	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^void DefaultPrintNonContainerTo(const T& value, ::std::ostream* os) {$/;"	f	namespace:testing_internal	typeref:typename:void
DefaultPrintTo	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^void DefaultPrintTo(WrapPrinterType<kPrintContainer> \/* dummy *\/,$/;"	f	namespace:testing::internal	typeref:typename:void
DefaultPrintTo	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^void DefaultPrintTo(WrapPrinterType<kPrintFunctionPointer> \/* dummy *\/,$/;"	f	namespace:testing::internal	typeref:typename:void
DefaultPrintTo	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^void DefaultPrintTo(WrapPrinterType<kPrintOther> \/* dummy *\/,$/;"	f	namespace:testing::internal	typeref:typename:void
DefaultPrintTo	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^void DefaultPrintTo(WrapPrinterType<kPrintPointer> \/* dummy *\/,$/;"	f	namespace:testing::internal	typeref:typename:void
DefaultPrinterType	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^enum DefaultPrinterType {$/;"	g	namespace:testing::internal
DefaultValue	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^class DefaultValue {$/;"	c	namespace:testing
DefaultValue	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^class DefaultValue<T&> {$/;"	c	namespace:testing
DefaultValue	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^class DefaultValue<void> {$/;"	c	namespace:testing
DefaultValueHolderFactory	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^    DefaultValueHolderFactory() {}$/;"	f	class:testing::internal::ThreadLocal::DefaultValueHolderFactory
DefaultValueHolderFactory	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  class DefaultValueHolderFactory : public ValueHolderFactory {$/;"	c	class:testing::internal::ThreadLocal
Define	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^class Define(Node):$/;"	c
Defining Actions	src/tests/googletest/googlemock/docs/CheatSheet.md	/^## Defining Actions ##$/;"	s	chapter:Actions
Defining Actions	src/tests/googletest/googlemock/docs/v1_5/CheatSheet.md	/^## Defining Actions ##$/;"	s	chapter:Actions
Defining Actions	src/tests/googletest/googlemock/docs/v1_6/CheatSheet.md	/^## Defining Actions ##$/;"	s	chapter:Actions
Defining Actions	src/tests/googletest/googlemock/docs/v1_7/CheatSheet.md	/^## Defining Actions ##$/;"	s	chapter:Actions
Defining Event Listeners	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^## Defining Event Listeners ##$/;"	s	chapter:Extending Google Test by Handling Test Events
Defining Event Listeners	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^## Defining Event Listeners ##$/;"	s	chapter:Extending Google Test by Handling Test Events
Defining Event Listeners	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^## Defining Event Listeners ##$/;"	s	chapter:Extending Google Test by Handling Test Events
Defining Event Listeners	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^## Defining Event Listeners ##$/;"	s	chapter:Extending Google Test by Handling Test Events
Defining Matchers	src/tests/googletest/googlemock/docs/CheatSheet.md	/^## Defining Matchers ##$/;"	s	chapter:Matchers
Defining Matchers	src/tests/googletest/googlemock/docs/v1_5/CheatSheet.md	/^## Defining Matchers ##$/;"	s	chapter:Matchers
Defining Matchers	src/tests/googletest/googlemock/docs/v1_6/CheatSheet.md	/^## Defining Matchers ##$/;"	s	chapter:Matchers
Defining Matchers	src/tests/googletest/googlemock/docs/v1_7/CheatSheet.md	/^## Defining Matchers ##$/;"	s	chapter:Matchers
Defining a Mock Class	src/tests/googletest/googlemock/docs/CheatSheet.md	/^# Defining a Mock Class #$/;"	c
Defining a Mock Class	src/tests/googletest/googlemock/docs/v1_5/CheatSheet.md	/^# Defining a Mock Class #$/;"	c
Defining a Mock Class	src/tests/googletest/googlemock/docs/v1_6/CheatSheet.md	/^# Defining a Mock Class #$/;"	c
Defining a Mock Class	src/tests/googletest/googlemock/docs/v1_7/CheatSheet.md	/^# Defining a Mock Class #$/;"	c
Deinit	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^  void Deinit() {$/;"	f	class:FatalFailureInSetUpTest	typeref:typename:void	file:
Deinit	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^  void Deinit() {$/;"	f	class:NonFatalFailureInSetUpTest	typeref:typename:void	file:
Delegating Calls to a Fake	src/tests/googletest/googlemock/docs/CookBook.md	/^## Delegating Calls to a Fake ##$/;"	s	chapter:Creating Mock Classes
Delegating Calls to a Fake	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Delegating Calls to a Fake ##$/;"	s	chapter:Creating Mock Classes
Delegating Calls to a Fake	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Delegating Calls to a Fake ##$/;"	s	chapter:Creating Mock Classes
Delegating Calls to a Fake	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Delegating Calls to a Fake ##$/;"	s	chapter:Creating Mock Classes
Delegating Calls to a Parent Class	src/tests/googletest/googlemock/docs/CookBook.md	/^## Delegating Calls to a Parent Class ##$/;"	s	chapter:Creating Mock Classes
Delegating Calls to a Parent Class	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Delegating Calls to a Parent Class ##$/;"	s	chapter:Creating Mock Classes
Delegating Calls to a Parent Class	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Delegating Calls to a Parent Class ##$/;"	s	chapter:Creating Mock Classes
Delegating Calls to a Parent Class	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Delegating Calls to a Parent Class ##$/;"	s	chapter:Creating Mock Classes
Delegating Calls to a Real Object	src/tests/googletest/googlemock/docs/CookBook.md	/^## Delegating Calls to a Real Object ##$/;"	s	chapter:Creating Mock Classes
Delegating Calls to a Real Object	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Delegating Calls to a Real Object ##$/;"	s	chapter:Creating Mock Classes
Delegating Calls to a Real Object	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Delegating Calls to a Real Object ##$/;"	s	chapter:Creating Mock Classes
Delegating Calls to a Real Object	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Delegating Calls to a Real Object ##$/;"	s	chapter:Creating Mock Classes
Delete	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^class Delete(Expr):$/;"	c
Delete	src/tests/googletest/googlemock/test/gmock-nice-strict_test.cc	/^  void Delete() { delete this; }$/;"	f	class:testing::gmock_nice_strict_test::MockFoo	typeref:typename:void	file:
Delete	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^static void Delete(T* x) {$/;"	f	namespace:testing::internal	typeref:typename:void
DeleteFilesAndDir	src/tests/googletest/googletest/test/gtest_xml_outfiles_test.py	/^  def DeleteFilesAndDir(self):$/;"	m	class:GTestXMLOutFilesTest
DeleteSelf_	src/tests/googletest/googletest/include/gtest/gtest.h	/^  void DeleteSelf_() { delete this; }$/;"	f	class:testing::Test	typeref:typename:void
DeleteThreadLocalValue	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^extern "C" inline void DeleteThreadLocalValue(void* value_holder) {$/;"	f	namespace:testing::internal	typeref:typename:void
Deleter	src/muduo/muduo/base/ThreadLocalSingleton.h	/^    Deleter()$/;"	f	class:muduo::ThreadLocalSingleton::Deleter
Deleter	src/muduo/muduo/base/ThreadLocalSingleton.h	/^  class Deleter$/;"	c	class:muduo::ThreadLocalSingleton
DeletionTester	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^  explicit DeletionTester(bool* is_deleted)$/;"	f	class:testing::gmock_more_actions_test::DeletionTester	file:
DeletionTester	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^class DeletionTester {$/;"	c	namespace:testing::gmock_more_actions_test	file:
DemuxServer	src/muduo/examples/multiplexer/demux.cc	/^  DemuxServer(EventLoop* loop, const InetAddress& listenAddr, const InetAddress& socksAddr)$/;"	f	class:DemuxServer	file:
DemuxServer	src/muduo/examples/multiplexer/demux.cc	/^class DemuxServer : noncopyable$/;"	c	file:
Dequeue	src/tests/googletest/googletest/samples/sample3-inl.h	/^  E* Dequeue() {$/;"	f	class:Queue	typeref:typename:E *
Derived	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^struct Derived : public Base {$/;"	s	namespace:__anon550198f10111	file:
Derived	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^class Derived : public Base {};$/;"	c	namespace:testing::internal::__anonf4b2defb0111	file:
Derived	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  Derived() : Base() {}$/;"	f	class:testing::gmock_matchers_test::Derived	file:
Derived	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^class Derived : public Base {$/;"	c	namespace:testing::gmock_matchers_test	file:
Derived	src/tests/googletest/googletest/test/gtest-port_test.cc	/^  explicit Derived(int n) : Base(n) {}$/;"	f	class:testing::internal::Derived	file:
Derived	src/tests/googletest/googletest/test/gtest-port_test.cc	/^class Derived : public Base {$/;"	c	namespace:testing::internal	file:
Derived1	src/tests/googletest/googlemock/test/gmock_stress_test.cc	/^  Derived1(int a_x, int a_y) : Base(a_x), y_(a_y) {}$/;"	f	class:testing::__anonc83180760111::Derived1	file:
Derived1	src/tests/googletest/googlemock/test/gmock_stress_test.cc	/^class Derived1 : public Base {$/;"	c	namespace:testing::__anonc83180760111	file:
Derived2	src/tests/googletest/googlemock/test/gmock_stress_test.cc	/^  Derived2(int a_x, int a_z) : Base(a_x), z_(a_z) {}$/;"	f	class:testing::__anonc83180760111::Derived2	file:
Derived2	src/tests/googletest/googlemock/test/gmock_stress_test.cc	/^class Derived2 : public Base {$/;"	c	namespace:testing::__anonc83180760111	file:
DerivedClass	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^class DerivedClass : public AClass {$/;"	c	namespace:testing::gmock_matchers_test	file:
DerivedStruct	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^struct DerivedStruct : public AStruct {$/;"	s	namespace:testing::gmock_matchers_test	file:
DerivedSub1	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  class DerivedSub1 : public VirtualDerived {};$/;"	c	struct:testing::gmock_matchers_test::AmbiguousCastTypes	file:
DerivedSub2	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  class DerivedSub2 : public VirtualDerived {};$/;"	c	struct:testing::gmock_matchers_test::AmbiguousCastTypes	file:
DerivedTest	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^class DerivedTest : public CommonTest<T> {$/;"	c	file:
Desc	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static const char* Desc() { return "a pair where the first < the second"; }$/;"	f	class:testing::internal::Lt2Matcher	typeref:typename:const char *
Desc	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static const char* Desc() { return "a pair where the first <= the second"; }$/;"	f	class:testing::internal::Le2Matcher	typeref:typename:const char *
Desc	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static const char* Desc() { return "a pair where the first > the second"; }$/;"	f	class:testing::internal::Gt2Matcher	typeref:typename:const char *
Desc	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static const char* Desc() { return "a pair where the first >= the second"; }$/;"	f	class:testing::internal::Ge2Matcher	typeref:typename:const char *
Desc	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static const char* Desc() { return "an equal pair"; }$/;"	f	class:testing::internal::Eq2Matcher	typeref:typename:const char *
Desc	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static const char* Desc() { return "an unequal pair"; }$/;"	f	class:testing::internal::Ne2Matcher	typeref:typename:const char *
Desc	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static const char* Desc() { return "is <"; }$/;"	f	class:testing::internal::LtMatcher	typeref:typename:const char *
Desc	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static const char* Desc() { return "is <="; }$/;"	f	class:testing::internal::LeMatcher	typeref:typename:const char *
Desc	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static const char* Desc() { return "is >"; }$/;"	f	class:testing::internal::GtMatcher	typeref:typename:const char *
Desc	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static const char* Desc() { return "is >="; }$/;"	f	class:testing::internal::GeMatcher	typeref:typename:const char *
Desc	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static const char* Desc() { return "is equal to"; }$/;"	f	class:testing::internal::EqMatcher	typeref:typename:const char *
Desc	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static const char* Desc() { return "isn't equal to"; }$/;"	f	class:testing::internal::NeMatcher	typeref:typename:const char *
Describe	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^std::string Describe(const Matcher<T>& m) {$/;"	f	namespace:__anoncaf4ae130111	typeref:typename:std::string
Describe	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^std::string Describe(const Matcher<T>& m) {$/;"	f	namespace:testing::gmock_matchers_test	typeref:typename:std::string
DescribeActualCallCountTo	src/tests/googletest/googlemock/src/gmock-cardinalities.cc	/^void Cardinality::DescribeActualCallCountTo(int actual_call_count,$/;"	f	class:testing::Cardinality	typeref:typename:void
DescribeCallCountTo	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^void ExpectationBase::DescribeCallCountTo(::std::ostream* os) const$/;"	f	class:testing::internal::ExpectationBase	typeref:typename:void
DescribeDefaultActionTo	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  void DescribeDefaultActionTo(const ArgumentTuple& args,$/;"	f	class:testing::internal::FunctionMockerBase	typeref:typename:void
DescribeLocationTo	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  void DescribeLocationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::ExpectationBase	typeref:typename:void
DescribeNegation	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^std::string DescribeNegation(const Matcher<T>& m) {$/;"	f	namespace:__anoncaf4ae130111	typeref:typename:std::string
DescribeNegation	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^std::string DescribeNegation(const Matcher<T>& m) {$/;"	f	namespace:testing::gmock_matchers_test	typeref:typename:std::string
DescribeNegationTo	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^  virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::ArgsMatcherImpl	typeref:typename:void
DescribeNegationTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::PolymorphicMatcher::MonomorphicImpl	typeref:typename:void
DescribeNegationTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::BeginEndDistanceIsMatcher::Impl	typeref:typename:void
DescribeNegationTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::ComparisonBase::Impl	typeref:typename:void
DescribeNegationTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::FloatingEqMatcher::Impl	typeref:typename:void
DescribeNegationTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::MatcherCastImpl::Impl	typeref:typename:void
DescribeNegationTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::PairMatchBase::Impl	typeref:typename:void
DescribeNegationTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::PointeeMatcher::Impl	typeref:typename:void
DescribeNegationTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::PointwiseMatcher::Impl	typeref:typename:void
DescribeNegationTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::RefMatcher::Impl	typeref:typename:void
DescribeNegationTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::ResultOfMatcher::Impl	typeref:typename:void
DescribeNegationTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::SizeIsMatcher::Impl	typeref:typename:void
DescribeNegationTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::WhenSortedByMatcher::Impl	typeref:typename:void
DescribeNegationTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::MatcherDescriberInterface	typeref:typename:void
DescribeNegationTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::AnyMatcherImpl	typeref:typename:void
DescribeNegationTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::BothOfMatcherImpl	typeref:typename:void
DescribeNegationTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::ContainsMatcherImpl	typeref:typename:void
DescribeNegationTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::EachMatcherImpl	typeref:typename:void
DescribeNegationTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::EitherOfMatcherImpl	typeref:typename:void
DescribeNegationTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::ElementsAreMatcherImpl	typeref:typename:void
DescribeNegationTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::KeyMatcherImpl	typeref:typename:void
DescribeNegationTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::NotMatcherImpl	typeref:typename:void
DescribeNegationTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::PairMatcherImpl	typeref:typename:void
DescribeNegationTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::UnorderedElementsAreMatcherImpl	typeref:typename:void
DescribeNegationTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::ContainerEqMatcher	typeref:typename:void
DescribeNegationTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::EndsWithMatcher	typeref:typename:void
DescribeNegationTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::FieldMatcher	typeref:typename:void
DescribeNegationTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::HasSubstrMatcher	typeref:typename:void
DescribeNegationTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::IsNullMatcher	typeref:typename:void
DescribeNegationTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::MatcherBase	typeref:typename:void
DescribeNegationTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::MatchesRegexMatcher	typeref:typename:void
DescribeNegationTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::NotNullMatcher	typeref:typename:void
DescribeNegationTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::PropertyMatcher	typeref:typename:void
DescribeNegationTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::StartsWithMatcher	typeref:typename:void
DescribeNegationTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::StrEqualityMatcher	typeref:typename:void
DescribeNegationTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::TrulyMatcher	typeref:typename:void
DescribeNegationTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::WhenDynamicCastToMatcherBase	typeref:typename:void
DescribeNegationTo	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  void DescribeNegationTo(ostream* os) const {$/;"	f	class:testing::gmock_matchers_test::DivisibleByImpl	typeref:typename:void	file:
DescribeNegationTo	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  void DescribeNegationTo(ostream* os) const {$/;"	f	class:testing::gmock_matchers_test::IsHalfOfMatcher	typeref:typename:void	file:
DescribeNegationTo	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  void DescribeNegationTo(ostream* os) const {$/;"	f	class:testing::gmock_matchers_test::PolymorphicIsEvenImpl	typeref:typename:void	file:
DescribeNegationTo	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  void DescribeNegationTo(ostream* os) const {$/;"	f	class:testing::gmock_matchers_test::ReferencesBarOrIsZeroImpl	typeref:typename:void	file:
DescribeNegationToImpl	src/tests/googletest/googlemock/src/gmock-matchers.cc	/^void UnorderedElementsAreMatcherImplBase::DescribeNegationToImpl($/;"	f	class:testing::internal::UnorderedElementsAreMatcherImplBase	typeref:typename:void
DescribeTo	src/tests/googletest/googlemock/include/gmock/gmock-cardinalities.h	/^  void DescribeTo(::std::ostream* os) const { impl_->DescribeTo(os); }$/;"	f	class:testing::Cardinality	typeref:typename:void
DescribeTo	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^  virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::ArgsMatcherImpl	typeref:typename:void
DescribeTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::PolymorphicMatcher::MonomorphicImpl	typeref:typename:void
DescribeTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::BeginEndDistanceIsMatcher::Impl	typeref:typename:void
DescribeTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::BoundSecondMatcher::Impl	typeref:typename:void
DescribeTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::ComparisonBase::Impl	typeref:typename:void
DescribeTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::FloatingEqMatcher::Impl	typeref:typename:void
DescribeTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::MatcherCastImpl::Impl	typeref:typename:void
DescribeTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::PairMatchBase::Impl	typeref:typename:void
DescribeTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::PointeeMatcher::Impl	typeref:typename:void
DescribeTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::PointwiseMatcher::Impl	typeref:typename:void
DescribeTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::RefMatcher::Impl	typeref:typename:void
DescribeTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::ResultOfMatcher::Impl	typeref:typename:void
DescribeTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::SizeIsMatcher::Impl	typeref:typename:void
DescribeTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::WhenSortedByMatcher::Impl	typeref:typename:void
DescribeTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  virtual void DescribeTo(::std::ostream* os) const { *os << "is anything"; }$/;"	f	class:testing::internal::AnyMatcherImpl	typeref:typename:void
DescribeTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::BothOfMatcherImpl	typeref:typename:void
DescribeTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::ContainsMatcherImpl	typeref:typename:void
DescribeTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::EachMatcherImpl	typeref:typename:void
DescribeTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::EitherOfMatcherImpl	typeref:typename:void
DescribeTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::ElementsAreMatcherImpl	typeref:typename:void
DescribeTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::KeyMatcherImpl	typeref:typename:void
DescribeTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::NotMatcherImpl	typeref:typename:void
DescribeTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::PairMatcherImpl	typeref:typename:void
DescribeTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::UnorderedElementsAreMatcherImpl	typeref:typename:void
DescribeTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  void DescribeTo(::std::ostream* os) const { *os << "is NULL"; }$/;"	f	class:testing::internal::IsNullMatcher	typeref:typename:void
DescribeTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  void DescribeTo(::std::ostream* os) const { *os << "isn't NULL"; }$/;"	f	class:testing::internal::NotNullMatcher	typeref:typename:void
DescribeTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  void DescribeTo(::std::ostream* os) const { impl_->DescribeTo(os); }$/;"	f	class:testing::internal::MatcherBase	typeref:typename:void
DescribeTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::ContainerEqMatcher	typeref:typename:void
DescribeTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::EndsWithMatcher	typeref:typename:void
DescribeTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::FieldMatcher	typeref:typename:void
DescribeTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::HasSubstrMatcher	typeref:typename:void
DescribeTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::MatchesRegexMatcher	typeref:typename:void
DescribeTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::PropertyMatcher	typeref:typename:void
DescribeTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::StartsWithMatcher	typeref:typename:void
DescribeTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::StrEqualityMatcher	typeref:typename:void
DescribeTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::TrulyMatcher	typeref:typename:void
DescribeTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::WhenDynamicCastToMatcherBase	typeref:typename:void
DescribeTo	src/tests/googletest/googlemock/src/gmock-cardinalities.cc	/^void BetweenCardinalityImpl::DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::__anon97b0a8450111::BetweenCardinalityImpl	typeref:typename:void
DescribeTo	src/tests/googletest/googlemock/test/gmock-cardinalities_test.cc	/^  virtual void DescribeTo(::std::ostream* ss) const {$/;"	f	class:__anon3d3befdc0111::EvenCardinality	typeref:typename:void	file:
DescribeTo	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^  virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:__anoncaf4ae130111::GreaterThanMatcher	typeref:typename:void	file:
DescribeTo	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^  virtual void DescribeTo(::std::ostream* os) const {}$/;"	f	class:__anoncaf4ae130111::LessThanMatcher	typeref:typename:void	file:
DescribeTo	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  virtual void DescribeTo(ostream* os) const {$/;"	f	class:testing::gmock_matchers_test::EvenMatcherImpl	typeref:typename:void	file:
DescribeTo	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  virtual void DescribeTo(ostream* os) const {$/;"	f	class:testing::gmock_matchers_test::GreaterThanMatcher	typeref:typename:void	file:
DescribeTo	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  virtual void DescribeTo(ostream* os) const {$/;"	f	class:testing::gmock_matchers_test::NewEvenMatcherImpl	typeref:typename:void	file:
DescribeTo	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  void DescribeTo(ostream* os) const { *os << "g_bar or zero"; }$/;"	f	class:testing::gmock_matchers_test::ReferencesBarOrIsZeroImpl	typeref:typename:void	file:
DescribeTo	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  void DescribeTo(ostream* os) const { *os << "is even"; }$/;"	f	class:testing::gmock_matchers_test::PolymorphicIsEvenImpl	typeref:typename:void	file:
DescribeTo	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  void DescribeTo(ostream* os) const {$/;"	f	class:testing::gmock_matchers_test::DivisibleByImpl	typeref:typename:void	file:
DescribeTo	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  void DescribeTo(ostream* os) const {$/;"	f	class:testing::gmock_matchers_test::IsHalfOfMatcher	typeref:typename:void	file:
DescribeTo	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^  virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:__anon6b6cf3b20111::EvenNumberCardinality	typeref:typename:void	file:
DescribeToHelper	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  void DescribeToHelper(bool expect_eq, ::std::ostream* os) const {$/;"	f	class:testing::internal::StrEqualityMatcher	typeref:typename:void
DescribeToImpl	src/tests/googletest/googlemock/src/gmock-matchers.cc	/^void UnorderedElementsAreMatcherImplBase::DescribeToImpl($/;"	f	class:testing::internal::UnorderedElementsAreMatcherImplBase	typeref:typename:void
DestinationType	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^class DestinationType {};$/;"	c	namespace:__anon550198f10111	file:
DestructorCall	src/tests/googletest/googletest/test/gtest-port_test.cc	/^  DestructorCall() {$/;"	f	class:testing::internal::DestructorCall	file:
DestructorCall	src/tests/googletest/googletest/test/gtest-port_test.cc	/^class DestructorCall {$/;"	c	namespace:testing::internal	file:
DestructorTracker	src/tests/googletest/googletest/test/gtest-port_test.cc	/^  DestructorTracker() : index_(GetNewIndex()) {}$/;"	f	class:testing::internal::DestructorTracker	file:
DestructorTracker	src/tests/googletest/googletest/test/gtest-port_test.cc	/^  DestructorTracker(const DestructorTracker& \/* rhs *\/)$/;"	f	class:testing::internal::DestructorTracker	file:
DestructorTracker	src/tests/googletest/googletest/test/gtest-port_test.cc	/^class DestructorTracker {$/;"	c	namespace:testing::internal	file:
Developing Google Mock	src/tests/googletest/googlemock/README.md	/^### Developing Google Mock ###$/;"	S	section:Getting Started
Developing Google Test	src/tests/googletest/googletest/README.md	/^## Developing Google Test ##$/;"	s
Diagnose	src/tests/googletest/googlemock/scripts/gmock_doctor.py	/^def Diagnose(msg):$/;"	f
DieIf	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^void DieIf(bool should_die) {$/;"	f	typeref:typename:void
DieIf	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^void DieIf(bool should_die) {$/;"	f	typeref:typename:void
DieIfLessThan	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^bool DieIfLessThan(int x, int y) {$/;"	f	typeref:typename:bool
DieInDebugElse12	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^int DieInDebugElse12(int* sideeffect) {$/;"	f	typeref:typename:int
DieInside	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^void DieInside(const ::std::string& function) {$/;"	f	typeref:typename:void
DieWithEmbeddedNul	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^void DieWithEmbeddedNul() {$/;"	f	typeref:typename:void
DieWithMessage	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^void DieWithMessage(const ::std::string& message) {$/;"	f	typeref:typename:void
DirectoryCreationTest	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^class DirectoryCreationTest : public Test {$/;"	c	namespace:testing::internal::__anon077d0c590111	file:
DirectoryExists	src/tests/googletest/googletest/src/gtest-filepath.cc	/^bool FilePath::DirectoryExists() const {$/;"	f	class:testing::internal::FilePath	typeref:typename:bool
DisableSigprofActionAndTimer	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^void DisableSigprofActionAndTimer(struct sigaction* old_signal_action) {$/;"	f	typeref:typename:void
DisabledTest	src/tests/googletest/googletest/test/gtest_xml_output_unittest_.cc	/^class DisabledTest : public Test {$/;"	c	file:
DisabledTestsTest	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class DisabledTestsTest : public Test {$/;"	c	namespace:__anonf780395f0111	file:
Disabling Catching Test-Thrown Exceptions	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^### Disabling Catching Test-Thrown Exceptions ###$/;"	S	section:Running Test Programs: Advanced Options""Controlling How Failures Are Reported
Disabling Catching Test-Thrown Exceptions	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^### Disabling Catching Test-Thrown Exceptions ###$/;"	S	section:Running Test Programs: Advanced Options""Controlling How Failures Are Reported
Disabling Catching Test-Thrown Exceptions	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^### Disabling Catching Test-Thrown Exceptions ###$/;"	S	section:Running Test Programs: Advanced Options""Controlling How Failures Are Reported
Disallowing Unexpected Calls	src/tests/googletest/googlemock/docs/CookBook.md	/^## Disallowing Unexpected Calls ##$/;"	s	chapter:Setting Expectations
Disallowing Unexpected Calls	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Disallowing Unexpected Calls ##$/;"	s	chapter:Setting Expectations
Disallowing Unexpected Calls	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Disallowing Unexpected Calls ##$/;"	s	chapter:Setting Expectations
Disallowing Unexpected Calls	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Disallowing Unexpected Calls ##$/;"	s	chapter:Setting Expectations
DiscardClient	src/muduo/examples/netty/discard/client.cc	/^  DiscardClient(EventLoop* loop, const InetAddress& listenAddr, int size)$/;"	f	class:DiscardClient	file:
DiscardClient	src/muduo/examples/netty/discard/client.cc	/^class DiscardClient : noncopyable$/;"	c	file:
DiscardServer	src/muduo/examples/netty/discard/server.cc	/^  DiscardServer(EventLoop* loop, const InetAddress& listenAddr)$/;"	f	class:DiscardServer	file:
DiscardServer	src/muduo/examples/netty/discard/server.cc	/^class DiscardServer$/;"	c	file:
DiscardServer	src/muduo/examples/simple/discard/discard.cc	/^DiscardServer::DiscardServer(EventLoop* loop,$/;"	f	class:DiscardServer
DiscardServer	src/muduo/examples/simple/discard/discard.h	/^class DiscardServer$/;"	c
DisconnectCallback	src/muduo/contrib/hiredis/Hiredis.h	/^  typedef std::function<void(Hiredis*, int)> DisconnectCallback;$/;"	t	class:hiredis::Hiredis
DistanceBetweenSignAndMagnitudeNumbers	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  static Bits DistanceBetweenSignAndMagnitudeNumbers(const Bits &sam1,$/;"	f	class:testing::internal::FloatingPoint	typeref:typename:Bits
DistanceType	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^        DistanceType;$/;"	t	class:testing::internal::BeginEndDistanceIsMatcher::Impl	typeref:typename:std::iterator_traits<typename ContainerView::type::const_iterator>::difference_type
Distributing Test Functions to Multiple Machines	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^## Distributing Test Functions to Multiple Machines ##$/;"	s	chapter:Running Test Programs: Advanced Options
Distributing Test Functions to Multiple Machines	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^## Distributing Test Functions to Multiple Machines ##$/;"	s	chapter:Running Test Programs: Advanced Options
Distributing Test Functions to Multiple Machines	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^## Distributing Test Functions to Multiple Machines ##$/;"	s	chapter:Running Test Programs: Advanced Options
Distributing Test Functions to Multiple Machines	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^## Distributing Test Functions to Multiple Machines ##$/;"	s	chapter:Running Test Programs: Advanced Options
DivisibleBy	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^PolymorphicMatcher<DivisibleByImpl> DivisibleBy(int n) {$/;"	f	namespace:testing::gmock_matchers_test	typeref:typename:PolymorphicMatcher<DivisibleByImpl>
DivisibleByImpl	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  explicit DivisibleByImpl(int a_divider) : divider_(a_divider) {}$/;"	f	class:testing::gmock_matchers_test::DivisibleByImpl	file:
DivisibleByImpl	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^class DivisibleByImpl {$/;"	c	namespace:testing::gmock_matchers_test	file:
DoAll	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^DoAll(Action1 a1, Action2 a2) {$/;"	f	namespace:testing	typeref:typename:internal::DoBothAction<Action1,Action2>
DoAll	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^DoAll(Action1 a1, Action2 a2, Action3 a3) {$/;"	f	namespace:testing	typeref:typename:internal::DoBothAction<Action1,internal::DoBothAction<Action2,Action3>>
DoAll	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^DoAll(Action1 a1, Action2 a2, Action3 a3, Action4 a4) {$/;"	f	namespace:testing	typeref:typename:internal::DoBothAction<Action1,internal::DoBothAction<Action2,internal::DoBothAction<Action3,Action4>>>
DoAll	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^DoAll(Action1 a1, Action2 a2, Action3 a3, Action4 a4, Action5 a5) {$/;"	f	namespace:testing	typeref:typename:internal::DoBothAction<Action1,internal::DoBothAction<Action2,internal::DoBothAction<Action3,internal::DoBothAction<Action4,Action5>>>>
DoAll	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^DoAll(Action1 a1, Action2 a2, Action3 a3, Action4 a4, Action5 a5, Action6 a6) {$/;"	f	namespace:testing
DoAll	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^DoAll(Action1 a1, Action2 a2, Action3 a3, Action4 a4, Action5 a5, Action6 a6,$/;"	f	namespace:testing
DoAssertNoFatalFailureOnFails	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  void DoAssertNoFatalFailureOnFails() {$/;"	f	class:__anonf780395f0111::NoFatalFailureTest	typeref:typename:void	file:
DoBothAction	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  DoBothAction(Action1 action1, Action2 action2)$/;"	f	class:testing::internal::DoBothAction
DoBothAction	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^class DoBothAction {$/;"	c	namespace:testing::internal
DoDefault	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^inline internal::DoDefaultAction DoDefault() {$/;"	f	namespace:testing	typeref:typename:internal::DoDefaultAction
DoDefaultAction	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^class DoDefaultAction {$/;"	c	namespace:testing::internal
DoExpectNoFatalFailureOnFails	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  void DoExpectNoFatalFailureOnFails() {$/;"	f	class:__anonf780395f0111::NoFatalFailureTest	typeref:typename:void	file:
Does Google Test support running tests in parallel?	src/tests/googletest/googletest/docs/FAQ.md	/^## Does Google Test support running tests in parallel? ##$/;"	s
Does Google Test support running tests in parallel?	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## Does Google Test support running tests in parallel? ##$/;"	s
Does Google Test support running tests in parallel?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## Does Google Test support running tests in parallel? ##$/;"	s
Does Google Test support running tests in parallel?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## Does Google Test support running tests in parallel? ##$/;"	s
DoesNotAbortHelper	src/tests/googletest/googletest/test/gtest_unittest.cc	/^void DoesNotAbortHelper(bool* aborted) {$/;"	f	namespace:__anonf780395f0111	typeref:typename:void
DogAdder	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  DogAdder(const DogAdder& other) : value_(other.value_.c_str()) {}$/;"	f	class:DogAdder	file:
DogAdder	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  explicit DogAdder(const char* a_value) : value_(a_value) {}$/;"	f	class:DogAdder	file:
DogAdder	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^class DogAdder {$/;"	c	file:
DoneCallback	src/muduo/examples/curl/Curl.h	/^  typedef std::function<void(Request*, int)> DoneCallback;$/;"	t	class:curl::Request
DoneCallback	src/muduo/examples/sudoku/batch.cc	/^typedef std::function<void(const string&, double, int)> DoneCallback;$/;"	t	file:
Double	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^typedef FloatingPoint<double> Double;$/;"	t	namespace:testing::internal	typeref:typename:FloatingPoint<double>
Double	src/tests/googletest/googletest/samples/sample3_unittest.cc	/^  static int Double(int n) {$/;"	f	class:QueueTest	typeref:typename:int	file:
DoubleEq	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline internal::FloatingEqMatcher<double> DoubleEq(double rhs) {$/;"	f	namespace:testing	typeref:typename:internal::FloatingEqMatcher<double>
DoubleFunction	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^double& DoubleFunction(double& input) { return input; }  \/\/ NOLINT$/;"	f	namespace:testing::gmock_matchers_test	typeref:typename:double &
DoubleLE	src/tests/googletest/googletest/src/gtest.cc	/^AssertionResult DoubleLE(const char* expr1, const char* expr2,$/;"	f	namespace:testing	typeref:typename:AssertionResult
DoubleNear	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline internal::FloatingEqMatcher<double> DoubleNear($/;"	f	namespace:testing	typeref:typename:internal::FloatingEqMatcher<double>
DoubleNearPredFormat	src/tests/googletest/googletest/src/gtest.cc	/^AssertionResult DoubleNearPredFormat(const char* expr1,$/;"	f	namespace:testing::internal	typeref:typename:AssertionResult
DoubleNearTest	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^typedef FloatingPointNearTest<double> DoubleNearTest;$/;"	t	namespace:testing::gmock_matchers_test	typeref:typename:FloatingPointNearTest<double>	file:
DoubleTest	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^typedef FloatingPointTest<double> DoubleTest;$/;"	t	namespace:testing::gmock_matchers_test	typeref:typename:FloatingPointTest<double>	file:
DoubleTest	src/tests/googletest/googletest/test/gtest_unittest.cc	/^typedef FloatingPointTest<double> DoubleTest;$/;"	t	namespace:__anonf780395f0111	typeref:typename:FloatingPointTest<double>	file:
DownCast_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^inline To DownCast_(From* f) {  \/\/ so we only accept pointers$/;"	f	namespace:testing::internal	typeref:typename:To
Downloader	src/muduo/examples/curl/download.cc	/^  Downloader(EventLoop* loop, const string& url)$/;"	f	class:Downloader	file:
Downloader	src/muduo/examples/curl/download.cc	/^class Downloader : noncopyable$/;"	c	file:
DropWikiSuffix	src/tests/googletest/googletest/scripts/release_docs.py	/^def DropWikiSuffix(wiki_filename):$/;"	f
Dummy	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^int Dummy(bool flag) { return flag? 1 : 0; }$/;"	f	namespace:testing::gmock_generated_actions_test	typeref:typename:int
Dummy	src/tests/googletest/googlemock/test/gmock_stress_test.cc	/^struct Dummy {};$/;"	s	namespace:testing::__anonc83180760111	file:
DummyMatchResultListener	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  DummyMatchResultListener() : MatchResultListener(NULL) {}$/;"	f	class:testing::internal::DummyMatchResultListener
DummyMatchResultListener	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class DummyMatchResultListener : public MatchResultListener {$/;"	c	namespace:testing::internal
DummyMock	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^class DummyMock {$/;"	c	namespace:testing::internal::__anonf4b2defb0111	file:
ECHO_SRCS	src/muduo/contrib/thrift/tests/echo/CMakeLists.txt	/^set(ECHO_SRCS$/;"	v
ECHO_THRIFT	src/muduo/contrib/thrift/tests/echo/CMakeLists.txt	/^set(ECHO_THRIFT echo.thrift)$/;"	v
ECHO_THRIFT_SRCS	src/muduo/contrib/thrift/tests/echo/CMakeLists.txt	/^set(ECHO_THRIFT_SRCS$/;"	v
ELIM_ALGO	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    enum ELIM_ALGO {\/\/elimination algorithm$/;"	g	class:tfhe_superaic::TFHE_ACC
EMString	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^static std::string EMString(int element, int matcher) {$/;"	f	namespace:testing::gmock_matchers_test	typeref:typename:std::string	file:
ENABLE_NAYUKI_PORTABLE	src/libtfhe-superaic-core/CMakeLists.txt	/^set(ENABLE_NAYUKI_PORTABLE ON CACHE BOOL "Enable the Nayuki portable FFT processor (MIT)")$/;"	v
ENABLE_TESTS	src/CMakeLists.txt	/^set(ENABLE_TESTS OFF CACHE BOOL "Build the tests (requires googletest)")$/;"	v
EPollPoller	src/muduo/muduo/net/poller/EPollPoller.cc	/^EPollPoller::EPollPoller(EventLoop* loop)$/;"	f	class:EPollPoller
EPollPoller	src/muduo/muduo/net/poller/EPollPoller.h	/^class EPollPoller : public Poller$/;"	c	namespace:muduo::net
EQUALS	buildotests/Makefile	/^EQUALS = =$/;"	m
EQUALS	buildotests/driver/Makefile	/^EQUALS = =$/;"	m
EQUALS	buildotests/examples/Makefile	/^EQUALS = =$/;"	m
EQUALS	buildotests/libtfhe-superaic-acc/Makefile	/^EQUALS = =$/;"	m
EQUALS	buildotests/libtfhe-superaic-client/Makefile	/^EQUALS = =$/;"	m
EQUALS	buildotests/libtfhe-superaic-core/Makefile	/^EQUALS = =$/;"	m
EQUALS	buildotests/libtfhe-superaic-core/fft_processors/Makefile	/^EQUALS = =$/;"	m
EQUALS	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^EQUALS = =$/;"	m
EQUALS	buildotests/libtfhe-superaic-server/Makefile	/^EQUALS = =$/;"	m
EQUALS	buildotests/tests/Makefile	/^EQUALS = =$/;"	m
EQUALS	buildotests/tests/googletest/Makefile	/^EQUALS = =$/;"	m
EQUALS	buildotests/tests/googletest/googlemock/Makefile	/^EQUALS = =$/;"	m
EQUALS	buildotests/tests/googletest/googlemock/gtest/Makefile	/^EQUALS = =$/;"	m
EQ_REGEX	src/tests/googletest/googletest/scripts/pump.py	/^EQ_REGEX = re.compile(r'=')$/;"	v
ERROR	src/muduo/muduo/base/Logging.h	/^    ERROR,$/;"	e	enum:muduo::Logger::LogLevel
ERROR	src/muduo/muduo/net/protorpc/rpc.proto	/^  ERROR = 3; \/\/ not used$/;"	e	enum:muduo.net.MessageType
EXCEPTION	src/tests/googletest/googlemock/scripts/generator/cpp/keywords.py	/^EXCEPTION = set('try catch throw'.split())$/;"	v
EXCLUDES	src/muduo/muduo/base/Mutex.h	/^#define EXCLUDES(/;"	d
EXECUTABLE_OUTPUT_PATH	src/muduo/CMakeLists.txt	/^set(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}\/bin)$/;"	v
EXECUTE_TEST	src/tests/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h	/^  enum TestRole { OVERSEE_TEST, EXECUTE_TEST };$/;"	e	enum:testing::internal::DeathTest::TestRole
EXE_PATH	src/tests/googletest/googletest/test/gtest_break_on_failure_unittest.py	/^EXE_PATH = gtest_test_utils.GetTestExecutablePath($/;"	v
EXE_PATH	src/tests/googletest/googletest/test/gtest_catch_exceptions_test.py	/^EXE_PATH = gtest_test_utils.GetTestExecutablePath($/;"	v
EXE_PATH	src/tests/googletest/googletest/test/gtest_list_tests_unittest.py	/^EXE_PATH = gtest_test_utils.GetTestExecutablePath('gtest_list_tests_unittest_')$/;"	v
EXE_PATH	src/tests/googletest/googletest/test/gtest_throw_on_failure_test.py	/^EXE_PATH = gtest_test_utils.GetTestExecutablePath($/;"	v
EXPECTED_EMPTY_XML	src/tests/googletest/googletest/test/gtest_xml_output_unittest.py	/^EXPECTED_EMPTY_XML = """<?xml version="1.0" encoding="UTF-8"?>$/;"	v
EXPECTED_FILTERED_TEST_XML	src/tests/googletest/googletest/test/gtest_xml_output_unittest.py	/^EXPECTED_FILTERED_TEST_XML = """<?xml version="1.0" encoding="UTF-8"?>$/;"	v
EXPECTED_NON_EMPTY_XML	src/tests/googletest/googletest/test/gtest_xml_output_unittest.py	/^EXPECTED_NON_EMPTY_XML = """<?xml version="1.0" encoding="UTF-8"?>$/;"	v
EXPECTED_OUTPUT_FILTER_FOO_RE	src/tests/googletest/googletest/test/gtest_list_tests_unittest.py	/^EXPECTED_OUTPUT_FILTER_FOO_RE = re.compile(r"""FooDeathTest\\.$/;"	v
EXPECTED_OUTPUT_NO_FILTER_RE	src/tests/googletest/googletest/test/gtest_list_tests_unittest.py	/^EXPECTED_OUTPUT_NO_FILTER_RE = re.compile(r"""FooDeathTest\\.$/;"	v
EXPECTED_XML_1	src/tests/googletest/googletest/test/gtest_xml_outfiles_test.py	/^EXPECTED_XML_1 = """<?xml version="1.0" encoding="UTF-8"?>$/;"	v
EXPECTED_XML_2	src/tests/googletest/googletest/test/gtest_xml_outfiles_test.py	/^EXPECTED_XML_2 = """<?xml version="1.0" encoding="UTF-8"?>$/;"	v
EXPECT_ANY_THROW	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define EXPECT_ANY_THROW(/;"	d
EXPECT_CALL	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^#define EXPECT_CALL(obj, call) GMOCK_EXPECT_CALL_/;"	d
EXPECT_DEATH	src/tests/googletest/googletest/include/gtest/gtest-death-test.h	/^# define EXPECT_DEATH(/;"	d
EXPECT_DEATH_IF_SUPPORTED	src/tests/googletest/googletest/include/gtest/gtest-death-test.h	/^# define EXPECT_DEATH_IF_SUPPORTED(/;"	d
EXPECT_DEBUG_DEATH	src/tests/googletest/googletest/include/gtest/gtest-death-test.h	/^#  define EXPECT_DEBUG_DEATH(/;"	d
EXPECT_DOUBLE_EQ	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define EXPECT_DOUBLE_EQ(/;"	d
EXPECT_EQ	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define EXPECT_EQ(/;"	d
EXPECT_EXIT	src/tests/googletest/googletest/include/gtest/gtest-death-test.h	/^# define EXPECT_EXIT(/;"	d
EXPECT_FALSE	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define EXPECT_FALSE(/;"	d
EXPECT_FATAL_FAILURE	src/tests/googletest/googletest/include/gtest/gtest-spi.h	/^#define EXPECT_FATAL_FAILURE(/;"	d
EXPECT_FATAL_FAILURE_ON_ALL_THREADS	src/tests/googletest/googletest/include/gtest/gtest-spi.h	/^#define EXPECT_FATAL_FAILURE_ON_ALL_THREADS(/;"	d
EXPECT_FLOAT_EQ	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define EXPECT_FLOAT_EQ(/;"	d
EXPECT_GE	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define EXPECT_GE(/;"	d
EXPECT_GT	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define EXPECT_GT(/;"	d
EXPECT_HRESULT_FAILED	src/tests/googletest/googletest/include/gtest/gtest.h	/^# define EXPECT_HRESULT_FAILED(/;"	d
EXPECT_HRESULT_SUCCEEDED	src/tests/googletest/googletest/include/gtest/gtest.h	/^# define EXPECT_HRESULT_SUCCEEDED(/;"	d
EXPECT_LE	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define EXPECT_LE(/;"	d
EXPECT_LT	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define EXPECT_LT(/;"	d
EXPECT_NE	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define EXPECT_NE(/;"	d
EXPECT_NEAR	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define EXPECT_NEAR(/;"	d
EXPECT_NONFATAL_FAILURE	src/tests/googletest/googletest/include/gtest/gtest-spi.h	/^#define EXPECT_NONFATAL_FAILURE(/;"	d
EXPECT_NONFATAL_FAILURE_ON_ALL_THREADS	src/tests/googletest/googletest/include/gtest/gtest-spi.h	/^#define EXPECT_NONFATAL_FAILURE_ON_ALL_THREADS(/;"	d
EXPECT_NO_FATAL_FAILURE	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define EXPECT_NO_FATAL_FAILURE(/;"	d
EXPECT_NO_THROW	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define EXPECT_NO_THROW(/;"	d
EXPECT_PRED1	src/tests/googletest/googletest/include/gtest/gtest_pred_impl.h	/^#define EXPECT_PRED1(/;"	d
EXPECT_PRED1Test	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate1Test EXPECT_PRED1Test;$/;"	t	typeref:typename:Predicate1Test	file:
EXPECT_PRED2	src/tests/googletest/googletest/include/gtest/gtest_pred_impl.h	/^#define EXPECT_PRED2(/;"	d
EXPECT_PRED2Test	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate2Test EXPECT_PRED2Test;$/;"	t	typeref:typename:Predicate2Test	file:
EXPECT_PRED3	src/tests/googletest/googletest/include/gtest/gtest_pred_impl.h	/^#define EXPECT_PRED3(/;"	d
EXPECT_PRED3Test	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate3Test EXPECT_PRED3Test;$/;"	t	typeref:typename:Predicate3Test	file:
EXPECT_PRED4	src/tests/googletest/googletest/include/gtest/gtest_pred_impl.h	/^#define EXPECT_PRED4(/;"	d
EXPECT_PRED4Test	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate4Test EXPECT_PRED4Test;$/;"	t	typeref:typename:Predicate4Test	file:
EXPECT_PRED5	src/tests/googletest/googletest/include/gtest/gtest_pred_impl.h	/^#define EXPECT_PRED5(/;"	d
EXPECT_PRED5Test	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate5Test EXPECT_PRED5Test;$/;"	t	typeref:typename:Predicate5Test	file:
EXPECT_PRED_FORMAT1	src/tests/googletest/googletest/include/gtest/gtest_pred_impl.h	/^#define EXPECT_PRED_FORMAT1(/;"	d
EXPECT_PRED_FORMAT1Test	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate1Test EXPECT_PRED_FORMAT1Test;$/;"	t	typeref:typename:Predicate1Test	file:
EXPECT_PRED_FORMAT2	src/tests/googletest/googletest/include/gtest/gtest_pred_impl.h	/^#define EXPECT_PRED_FORMAT2(/;"	d
EXPECT_PRED_FORMAT2Test	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate2Test EXPECT_PRED_FORMAT2Test;$/;"	t	typeref:typename:Predicate2Test	file:
EXPECT_PRED_FORMAT3	src/tests/googletest/googletest/include/gtest/gtest_pred_impl.h	/^#define EXPECT_PRED_FORMAT3(/;"	d
EXPECT_PRED_FORMAT3Test	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate3Test EXPECT_PRED_FORMAT3Test;$/;"	t	typeref:typename:Predicate3Test	file:
EXPECT_PRED_FORMAT4	src/tests/googletest/googletest/include/gtest/gtest_pred_impl.h	/^#define EXPECT_PRED_FORMAT4(/;"	d
EXPECT_PRED_FORMAT4Test	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate4Test EXPECT_PRED_FORMAT4Test;$/;"	t	typeref:typename:Predicate4Test	file:
EXPECT_PRED_FORMAT5	src/tests/googletest/googletest/include/gtest/gtest_pred_impl.h	/^#define EXPECT_PRED_FORMAT5(/;"	d
EXPECT_PRED_FORMAT5Test	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate5Test EXPECT_PRED_FORMAT5Test;$/;"	t	typeref:typename:Predicate5Test	file:
EXPECT_PRINT_TO_STRING_	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^#define EXPECT_PRINT_TO_STRING_(/;"	d	file:
EXPECT_STRCASEEQ	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define EXPECT_STRCASEEQ(/;"	d
EXPECT_STRCASENE	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define EXPECT_STRCASENE(/;"	d
EXPECT_STREQ	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define EXPECT_STREQ(/;"	d
EXPECT_STRNE	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define EXPECT_STRNE(/;"	d
EXPECT_THAT	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^#define EXPECT_THAT(/;"	d
EXPECT_THROW	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define EXPECT_THROW(/;"	d
EXPECT_TRUE	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define EXPECT_TRUE(/;"	d
EXPORT	src/libtfhe-superaic-core/boot-gates.cpp	/^#define EXPORT /;"	d	file:
EXPORT	src/libtfhe-superaic-core/include/tfhe_superaic_torus.h	/^#define EXPORT /;"	d
EXPORT	src/libtfhe-superaic-core/include/tfhe_superaic_torus.h	/^#define EXPORT$/;"	d
EXPORT	src/libtfhe-superaic-core/lwe-bootstrapping-functions-fft.cpp	/^#define EXPORT$/;"	d	file:
EXPORT	src/libtfhe-superaic-core/lwe-bootstrapping-functions.cpp	/^#define EXPORT$/;"	d	file:
EXPORT	src/libtfhe-superaic-core/lwe-keyswitch-functions.cpp	/^#define EXPORT$/;"	d	file:
EXPORT	src/libtfhe-superaic-core/tfhe_io.cpp	/^#define EXPORT$/;"	d	file:
EXPORT	src/libtfhe-superaic-core/tgsw-fft-operations.cpp	/^#define EXPORT$/;"	d	file:
EXPORT	src/libtfhe-superaic-core/tgsw-functions.cpp	/^#define EXPORT$/;"	d	file:
EXPORT	src/libtfhe-superaic-core/tlwe-fft-operations.cpp	/^#define EXPORT$/;"	d	file:
EXTRA_DIST	src/tests/googletest/googlemock/Makefile.am	/^EXTRA_DIST = LICENSE$/;"	m
EXTRA_DIST	src/tests/googletest/googletest/Makefile.am	/^EXTRA_DIST = \\$/;"	m
EX_BINARY_OUTPUT	src/tests/googletest/googletest/test/gtest_catch_exceptions_test.py	/^EX_BINARY_OUTPUT = gtest_test_utils.Subprocess($/;"	v
EX_EXE_PATH	src/tests/googletest/googletest/test/gtest_catch_exceptions_test.py	/^EX_EXE_PATH = gtest_test_utils.GetTestExecutablePath($/;"	v
Each	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline internal::EachMatcher<M> Each(M matcher) {$/;"	f	namespace:testing	typeref:typename:internal::EachMatcher<M>
EachMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit EachMatcher(M m) : inner_matcher_(m) {}$/;"	f	class:testing::internal::EachMatcher
EachMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class EachMatcher {$/;"	c	namespace:testing::internal
EachMatcherImpl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit EachMatcherImpl(InnerMatcher inner_matcher)$/;"	f	class:testing::internal::EachMatcherImpl
EachMatcherImpl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class EachMatcherImpl : public QuantifierMatcherImpl<Container> {$/;"	c	namespace:testing::internal
Echo	src/muduo/contrib/thrift/tests/echo/echo.thrift	/^service Echo$/;"	v
Echo	src/muduo/examples/protobuf/rpcbench/echo.proto	/^  rpc Echo (EchoRequest) returns (EchoResponse);$/;"	r	service:echo.EchoService	typeref:typename:EchoResponse
Echo	src/muduo/examples/protobuf/rpcbench/server.cc	/^  virtual void Echo(::google::protobuf::RpcController* controller,$/;"	f	class:echo::EchoServiceImpl	typeref:typename:void	file:
EchoClient	src/muduo/examples/netty/echo/client.cc	/^  EchoClient(EventLoop* loop, const InetAddress& listenAddr, int size)$/;"	f	class:EchoClient	file:
EchoClient	src/muduo/examples/netty/echo/client.cc	/^class EchoClient : noncopyable$/;"	c	file:
EchoClient	src/muduo/muduo/net/tests/EchoClient_unittest.cc	/^  EchoClient(EventLoop* loop, const InetAddress& listenAddr, const string& id)$/;"	f	class:EchoClient	file:
EchoClient	src/muduo/muduo/net/tests/EchoClient_unittest.cc	/^class EchoClient : noncopyable$/;"	c	file:
EchoHandler	src/muduo/contrib/thrift/tests/echo/EchoServer.cc	/^  EchoHandler()$/;"	f	class:EchoHandler	file:
EchoHandler	src/muduo/contrib/thrift/tests/echo/EchoServer.cc	/^class EchoHandler : virtual public EchoIf$/;"	c	file:
EchoRequest	src/muduo/examples/protobuf/rpcbench/echo.proto	/^message EchoRequest {$/;"	m	package:echo
EchoResponse	src/muduo/examples/protobuf/rpcbench/echo.proto	/^message EchoResponse {$/;"	m	package:echo
EchoServer	src/muduo/examples/idleconnection/echo.cc	/^EchoServer::EchoServer(EventLoop* loop,$/;"	f	class:EchoServer
EchoServer	src/muduo/examples/idleconnection/echo.h	/^class EchoServer$/;"	c
EchoServer	src/muduo/examples/idleconnection/sortedlist.cc	/^EchoServer::EchoServer(EventLoop* loop,$/;"	f	class:EchoServer
EchoServer	src/muduo/examples/idleconnection/sortedlist.cc	/^class EchoServer$/;"	c	file:
EchoServer	src/muduo/examples/maxconnection/echo.cc	/^EchoServer::EchoServer(EventLoop* loop,$/;"	f	class:EchoServer
EchoServer	src/muduo/examples/maxconnection/echo.h	/^class EchoServer$/;"	c
EchoServer	src/muduo/examples/netty/echo/server.cc	/^  EchoServer(EventLoop* loop, const InetAddress& listenAddr)$/;"	f	class:EchoServer	file:
EchoServer	src/muduo/examples/netty/echo/server.cc	/^class EchoServer$/;"	c	file:
EchoServer	src/muduo/examples/netty/echo/server2.cc	/^  EchoServer(EventLoop* loop, const InetAddress& listenAddr)$/;"	f	class:EchoServer	file:
EchoServer	src/muduo/examples/netty/echo/server2.cc	/^class EchoServer$/;"	c	file:
EchoServer	src/muduo/examples/simple/echo/echo.cc	/^EchoServer::EchoServer(muduo::net::EventLoop* loop,$/;"	f	class:EchoServer
EchoServer	src/muduo/examples/simple/echo/echo.h	/^class EchoServer$/;"	c
EchoServer	src/muduo/muduo/net/tests/EchoServer_unittest.cc	/^  EchoServer(EventLoop* loop, const InetAddress& listenAddr)$/;"	f	class:EchoServer	file:
EchoServer	src/muduo/muduo/net/tests/EchoServer_unittest.cc	/^class EchoServer$/;"	c	file:
EchoService	src/muduo/examples/protobuf/rpcbench/echo.proto	/^service EchoService {$/;"	s	package:echo
EchoServiceImpl	src/muduo/examples/protobuf/rpcbench/server.cc	/^class EchoServiceImpl : public EchoService$/;"	c	namespace:echo	file:
EditType	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^enum EditType { kMatch, kAdd, kRemove, kReplace };$/;"	g	namespace:testing::internal::edit_distance
EditsToString	src/tests/googletest/googletest/test/gtest_unittest.cc	/^std::string EditsToString(const std::vector<EditType>& edits) {$/;"	f	namespace:__anonf780395f0111	typeref:typename:std::string
EitherOfMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  EitherOfMatcher(Matcher1 matcher1, Matcher2 matcher2)$/;"	f	class:testing::internal::EitherOfMatcher
EitherOfMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class EitherOfMatcher {$/;"	c	namespace:testing::internal
EitherOfMatcherImpl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  EitherOfMatcherImpl(const Matcher<T>& matcher1, const Matcher<T>& matcher2)$/;"	f	class:testing::internal::EitherOfMatcherImpl
EitherOfMatcherImpl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class EitherOfMatcherImpl : public MatcherInterface<T> {$/;"	c	namespace:testing::internal
Element	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    typedef typename View::value_type Element;$/;"	t	function:testing::internal::ElementsAreMatcher::operator Matcher<Container>	typeref:typename:View::value_type
Element	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    typedef typename View::value_type Element;$/;"	t	function:testing::internal::UnorderedElementsAreMatcher::operator Matcher<Container>	typeref:typename:View::value_type
Element	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef typename StlContainer::value_type Element;$/;"	t	class:testing::internal::ElementsAreMatcherImpl	typeref:typename:StlContainer::value_type
Element	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef typename StlContainer::value_type Element;$/;"	t	class:testing::internal::QuantifierMatcherImpl	typeref:typename:StlContainer::value_type
Element	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef typename StlContainer::value_type Element;$/;"	t	class:testing::internal::UnorderedElementsAreMatcherImpl	typeref:typename:StlContainer::value_type
ElementMatcherPair	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^typedef ::std::pair<size_t, size_t> ElementMatcherPair;$/;"	t	namespace:testing::internal	typeref:typename:::std::pair<size_t,size_t>
ElementMatcherPairs	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^typedef ::std::vector<ElementMatcherPair> ElementMatcherPairs;$/;"	t	namespace:testing::internal	typeref:typename:::std::vector<ElementMatcherPair>
Elements	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static Message Elements(size_t count) {$/;"	f	class:testing::internal::ElementsAreMatcherImpl	typeref:typename:Message
Elements	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static Message Elements(size_t n) {$/;"	f	class:testing::internal::UnorderedElementsAreMatcherImplBase	typeref:typename:Message
ElementsAre	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^ElementsAre() {$/;"	f	namespace:testing	typeref:typename:internal::ElementsAreMatcher<::testing::tuple<>>
ElementsAre	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^ElementsAre(const T1& e1) {$/;"	f	namespace:testing	typeref:typename:internal::ElementsAreMatcher<::testing::tuple<typename internal::DecayArray<T1>::type>>
ElementsAre	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^ElementsAre(const T1& e1, const T2& e2) {$/;"	f	namespace:testing	typeref:typename:internal::ElementsAreMatcher<::testing::tuple<typename internal::DecayArray<T1>::type,typename internal::DecayArray<T2>::type>>
ElementsAre	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^ElementsAre(const T1& e1, const T2& e2, const T3& e3) {$/;"	f	namespace:testing
ElementsAre	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^ElementsAre(const T1& e1, const T2& e2, const T3& e3, const T4& e4) {$/;"	f	namespace:testing
ElementsAre	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^ElementsAre(const T1& e1, const T2& e2, const T3& e3, const T4& e4,$/;"	f	namespace:testing
ElementsAreArray	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^ElementsAreArray(::std::initializer_list<T> xs) {$/;"	f	namespace:testing	typeref:typename:internal::ElementsAreArrayMatcher<T>
ElementsAreArray	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^ElementsAreArray(Iter first, Iter last) {$/;"	f	namespace:testing	typeref:typename:internal::ElementsAreArrayMatcher<typename::std::iterator_traits<Iter>::value_type>
ElementsAreArray	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^ElementsAreArray(const Container& container) {$/;"	f	namespace:testing	typeref:typename:internal::ElementsAreArrayMatcher<typename Container::value_type>
ElementsAreArray	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline internal::ElementsAreArrayMatcher<T> ElementsAreArray($/;"	f	namespace:testing	typeref:typename:internal::ElementsAreArrayMatcher<T>
ElementsAreArrayMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  ElementsAreArrayMatcher(Iter first, Iter last) : matchers_(first, last) {}$/;"	f	class:testing::internal::ElementsAreArrayMatcher
ElementsAreArrayMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class ElementsAreArrayMatcher {$/;"	c	namespace:testing::internal
ElementsAreMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit ElementsAreMatcher(const MatcherTuple& args) : matchers_(args) {}$/;"	f	class:testing::internal::ElementsAreMatcher
ElementsAreMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class ElementsAreMatcher {$/;"	c	namespace:testing::internal
ElementsAreMatcherImpl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  ElementsAreMatcherImpl(InputIter first, InputIter last) {$/;"	f	class:testing::internal::ElementsAreMatcherImpl
ElementsAreMatcherImpl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class ElementsAreMatcherImpl : public MatcherInterface<Container> {$/;"	c	namespace:testing::internal
ElseNode	src/tests/googletest/googletest/scripts/pump.py	/^class ElseNode:$/;"	c
Empty	src/muduo/examples/protobuf/codec/query.proto	/^message Empty {$/;"	m	package:muduo
EmptyPtr	src/muduo/examples/protobuf/codec/client.cc	/^typedef std::shared_ptr<muduo::Empty> EmptyPtr;$/;"	t	typeref:typename:std::shared_ptr<muduo::Empty>	file:
EmptyTestEventListener	src/tests/googletest/googletest/include/gtest/gtest.h	/^class EmptyTestEventListener : public TestEventListener {$/;"	c	namespace:testing
EnableIf	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^template<> struct EnableIf<true> { typedef void type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
EncodeMultipartFormData	src/tests/googletest/googlemock/scripts/upload.py	/^def EncodeMultipartFormData(fields, files):$/;"	f
EncodeMultipartFormData	src/tests/googletest/googletest/scripts/upload.py	/^def EncodeMultipartFormData(fields, files):$/;"	f
End	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator10	typeref:typename:ParamIteratorInterface<ParamType> *
End	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator2	typeref:typename:ParamIteratorInterface<ParamType> *
End	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator3	typeref:typename:ParamIteratorInterface<ParamType> *
End	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator4	typeref:typename:ParamIteratorInterface<ParamType> *
End	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator5	typeref:typename:ParamIteratorInterface<ParamType> *
End	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator6	typeref:typename:ParamIteratorInterface<ParamType> *
End	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator7	typeref:typename:ParamIteratorInterface<ParamType> *
End	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator8	typeref:typename:ParamIteratorInterface<ParamType> *
End	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator9	typeref:typename:ParamIteratorInterface<ParamType> *
End	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  virtual ParamIteratorInterface<T>* End() const {$/;"	f	class:testing::internal::RangeGenerator	typeref:typename:ParamIteratorInterface<T> *
End	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  virtual ParamIteratorInterface<T>* End() const {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator	typeref:typename:ParamIteratorInterface<T> *
EndsWith	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    EndsWith(const internal::wstring& suffix) {$/;"	f	namespace:testing	typeref:typename:PolymorphicMatcher<internal::EndsWithMatcher<internal::wstring>>
EndsWith	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline PolymorphicMatcher<internal::EndsWithMatcher<std::string> > EndsWith($/;"	f	namespace:testing	typeref:typename:PolymorphicMatcher<internal::EndsWithMatcher<std::string>>
EndsWithCaseInsensitive	src/tests/googletest/googletest/src/gtest.cc	/^bool String::EndsWithCaseInsensitive($/;"	f	class:testing::internal::String	typeref:typename:bool
EndsWithMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit EndsWithMatcher(const StringType& suffix) : suffix_(suffix) {}$/;"	f	class:testing::internal::EndsWithMatcher
EndsWithMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class EndsWithMatcher {$/;"	c	namespace:testing::internal
Enqueue	src/tests/googletest/googletest/samples/sample3-inl.h	/^  void Enqueue(const E& element) {$/;"	f	class:Queue	typeref:typename:void
Entry	src/muduo/examples/idleconnection/echo.h	/^    explicit Entry(const WeakTcpConnectionPtr& weakConn)$/;"	f	struct:EchoServer::Entry
Entry	src/muduo/examples/idleconnection/echo.h	/^  struct Entry : public muduo::copyable$/;"	s	class:EchoServer
Entry	src/muduo/examples/multiplexer/demux.cc	/^struct Entry$/;"	s	file:
Entry	src/muduo/muduo/net/TimerQueue.h	/^  typedef std::pair<Timestamp, Timer*> Entry;$/;"	t	class:muduo::net::TimerQueue	typeref:typename:std::pair<Timestamp,Timer * >
EntryPtr	src/muduo/examples/idleconnection/echo.h	/^  typedef std::shared_ptr<Entry> EntryPtr;$/;"	t	class:EchoServer	typeref:typename:std::shared_ptr<Entry>
Enum	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^class Enum(_NestedType):$/;"	c
EnumWithPrintTo	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^enum EnumWithPrintTo {$/;"	g	file:
EnumWithStreaming	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^enum EnumWithStreaming {$/;"	g	file:
EnumWithoutPrinter	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^enum EnumWithoutPrinter {$/;"	g	file:
Env	src/tests/googletest/googletest/scripts/pump.py	/^class Env:$/;"	c
Environment	src/tests/googletest/googletest/include/gtest/gtest.h	/^class Environment {$/;"	c	namespace:testing
Environment	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  typedef TestGenerationEnvironment<PARAMETER_COUNT> Environment;$/;"	t	class:TestGenerationTest	typeref:typename:TestGenerationEnvironment<PARAMETER_COUNT>	file:
EnvironmentInvocationCatcher	src/tests/googletest/googletest/test/gtest-listener_test.cc	/^class EnvironmentInvocationCatcher : public Environment {$/;"	c	namespace:testing::internal	file:
Eof	src/tests/googletest/googletest/scripts/pump.py	/^def Eof():$/;"	f
Eq	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline internal::Eq2Matcher Eq() { return internal::Eq2Matcher(); }$/;"	f	namespace:testing	typeref:typename:internal::Eq2Matcher
Eq	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline internal::EqMatcher<T> Eq(T x) { return internal::EqMatcher<T>(x); }$/;"	f	namespace:testing	typeref:typename:internal::EqMatcher<T>
Eq2Matcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class Eq2Matcher : public PairMatchBase<Eq2Matcher, AnyEq> {$/;"	c	namespace:testing::internal
EqFailure	src/tests/googletest/googletest/src/gtest.cc	/^AssertionResult EqFailure(const char* lhs_expression,$/;"	f	namespace:testing::internal	typeref:typename:AssertionResult
EqHelper	src/tests/googletest/googletest/include/gtest/gtest.h	/^class EqHelper {$/;"	c	namespace:testing::internal
EqHelper	src/tests/googletest/googletest/include/gtest/gtest.h	/^class EqHelper<true> {$/;"	c	namespace:testing::internal
EqMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit EqMatcher(const Rhs& rhs)$/;"	f	class:testing::internal::EqMatcher
EqMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class EqMatcher : public ComparisonBase<EqMatcher<Rhs>, Rhs, AnyEq> {$/;"	c	namespace:testing::internal
Equal	src/muduo/examples/memcached/server/MemcacheServer.h	/^  struct Equal$/;"	s	class:MemcacheServer
Equals	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator	typeref:typename:bool
Equals	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator	typeref:typename:bool
Equals	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator	typeref:typename:bool
Equals	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator	typeref:typename:bool
Equals	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator	typeref:typename:bool
Equals	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator	typeref:typename:bool
Equals	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator	typeref:typename:bool
Equals	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator	typeref:typename:bool
Equals	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator	typeref:typename:bool
Equals	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^    virtual bool Equals(const ParamIteratorInterface<T>& other) const {$/;"	f	class:testing::internal::RangeGenerator::Iterator	typeref:typename:bool
Equals	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^    virtual bool Equals(const ParamIteratorInterface<T>& other) const {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator	typeref:typename:bool
EqualsFormat	src/tests/googletest/googletest/test/gtest_unittest.cc	/^AssertionResult EqualsFormat(const char* \/* expr1 *\/, const char* \/* expr2 *\/,$/;"	f	namespace:__anonf780395f0111	typeref:typename:AssertionResult
ErrorCallback	src/muduo/examples/protobuf/codec/codec.h	/^                                ErrorCode)> ErrorCallback;$/;"	t	class:ProtobufCodec
ErrorCallback	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^                              ErrorCode)> ErrorCallback;$/;"	t	class:muduo::net::ProtobufCodecLite
ErrorCallback	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^  typedef ProtobufCodecLite::ErrorCallback ErrorCallback;$/;"	t	class:muduo::net::ProtobufCodecLiteT	typeref:typename:ProtobufCodecLite::ErrorCallback
ErrorCode	src/muduo/examples/protobuf/codec/codec.h	/^  enum ErrorCode$/;"	g	class:ProtobufCodec
ErrorCode	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^  enum ErrorCode$/;"	g	class:muduo::net::ProtobufCodecLite
ErrorCode	src/muduo/muduo/net/protorpc/rpc.proto	/^enum ErrorCode$/;"	g	package:muduo.net
ErrorExit	src/tests/googletest/googlemock/scripts/upload.py	/^def ErrorExit(msg):$/;"	f
ErrorExit	src/tests/googletest/googletest/scripts/upload.py	/^def ErrorExit(msg):$/;"	f
EscapeXml	src/tests/googletest/googletest/src/gtest.cc	/^std::string XmlUnitTestResultPrinter::EscapeXml($/;"	f	class:testing::internal::XmlUnitTestResultPrinter	typeref:typename:std::string
EscapeXmlAttribute	src/tests/googletest/googletest/src/gtest.cc	/^  static std::string EscapeXmlAttribute(const std::string& str) {$/;"	f	class:testing::internal::XmlUnitTestResultPrinter	typeref:typename:std::string	file:
EscapeXmlText	src/tests/googletest/googletest/src/gtest.cc	/^  static std::string EscapeXmlText(const char* str) {$/;"	f	class:testing::internal::XmlUnitTestResultPrinter	typeref:typename:std::string	file:
EvalExp	src/tests/googletest/googletest/scripts/pump.py	/^  def EvalExp(self, exp):$/;"	m	class:Env
EvenCardinality	src/tests/googletest/googlemock/test/gmock-cardinalities_test.cc	/^class EvenCardinality : public CardinalityInterface {$/;"	c	namespace:__anon3d3befdc0111	file:
EvenMatcherImpl	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^class EvenMatcherImpl : public MatcherInterface<int> {$/;"	c	namespace:testing::gmock_matchers_test	file:
EvenNumber	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^Cardinality EvenNumber() {$/;"	f	namespace:__anon6b6cf3b20111	typeref:typename:Cardinality
EvenNumberCardinality	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^class EvenNumberCardinality : public CardinalityInterface {$/;"	c	namespace:__anon6b6cf3b20111	file:
Event	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/Event.java	/^public class Event {$/;"	c
EventCallback	src/muduo/muduo/net/Channel.h	/^  typedef std::function<void()> EventCallback;$/;"	t	class:muduo::net::Channel
EventForwardingEnabled	src/tests/googletest/googletest/src/gtest.cc	/^bool TestEventListeners::EventForwardingEnabled() const {$/;"	f	class:testing::TestEventListeners	typeref:typename:bool
EventForwardingEnabled	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static bool EventForwardingEnabled(const TestEventListeners& listeners) {$/;"	f	class:testing::internal::TestEventListenersAccessor	typeref:typename:bool	file:
EventList	src/muduo/muduo/net/poller/EPollPoller.h	/^  typedef std::vector<struct epoll_event> EventList;$/;"	t	class:muduo::net::EPollPoller	typeref:typename:std::vector<struct epoll_event>
EventLoop	src/muduo/muduo/net/EventLoop.cc	/^EventLoop::EventLoop()$/;"	f	class:EventLoop
EventLoop	src/muduo/muduo/net/EventLoop.h	/^class EventLoop : noncopyable$/;"	c	namespace:muduo::net
EventLoopThread	src/muduo/muduo/net/EventLoopThread.cc	/^EventLoopThread::EventLoopThread(const ThreadInitCallback& cb,$/;"	f	class:EventLoopThread
EventLoopThread	src/muduo/muduo/net/EventLoopThread.h	/^class EventLoopThread : noncopyable$/;"	c	namespace:muduo::net
EventLoopThreadPool	src/muduo/muduo/net/EventLoopThreadPool.cc	/^EventLoopThreadPool::EventLoopThreadPool(EventLoop* baseLoop, const string& nameArg)$/;"	f	class:EventLoopThreadPool
EventLoopThreadPool	src/muduo/muduo/net/EventLoopThreadPool.h	/^class EventLoopThreadPool : noncopyable$/;"	c	namespace:muduo::net
EventQueue	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/EventQueue.java	/^public class EventQueue {$/;"	c
EventRecordingListener	src/tests/googletest/googletest/test/gtest-listener_test.cc	/^  explicit EventRecordingListener(const char* name) : name_(name) {}$/;"	f	class:testing::internal::EventRecordingListener	file:
EventRecordingListener	src/tests/googletest/googletest/test/gtest-listener_test.cc	/^class EventRecordingListener : public TestEventListener {$/;"	c	namespace:testing::internal	file:
EventSource	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/EventSource.java	/^public enum EventSource {$/;"	g
Exactly	src/tests/googletest/googlemock/src/gmock-cardinalities.cc	/^GTEST_API_ Cardinality Exactly(int n) { return Between(n, n); }$/;"	f	namespace:testing	typeref:typename:GTEST_API_ Cardinality
Examples	src/tests/googletest/googletest/docs/PumpManual.md	/^## Examples ##$/;"	s	chapter:Our Solution
Examples	src/tests/googletest/googletest/docs/V1_5_PumpManual.md	/^## Examples ##$/;"	s	chapter:Our Solution
Examples	src/tests/googletest/googletest/docs/V1_6_PumpManual.md	/^## Examples ##$/;"	s	chapter:Our Solution
Examples	src/tests/googletest/googletest/docs/V1_7_PumpManual.md	/^## Examples ##$/;"	s	chapter:Our Solution
Exception	src/muduo/muduo/base/Exception.cc	/^Exception::Exception(string msg)$/;"	f	class:muduo::Exception
Exception	src/muduo/muduo/base/Exception.h	/^class Exception : public std::exception$/;"	c	namespace:muduo
Exception Assertions	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^## Exception Assertions ##$/;"	s	chapter:More Assertions
Exception Assertions	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^## Exception Assertions ##$/;"	s	chapter:More Assertions
Exception Assertions	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^## Exception Assertions ##$/;"	s	chapter:More Assertions
Exception Assertions	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^## Exception Assertions ##$/;"	s	chapter:More Assertions
Exception42	src/libtfhe-superaic-core/numeric-functions.cpp	/^struct Exception42 {$/;"	s	file:
Exception42	src/libtfhe-superaic-core/tfhe_gate_bootstrapping.cpp	/^struct Exception42 {$/;"	s	file:
ExcessiveArg	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^struct ExcessiveArg {};$/;"	s	namespace:testing::internal
ExecDeathTest	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  ExecDeathTest(const char* a_statement, const RE* a_regex,$/;"	f	class:testing::internal::ExecDeathTest	file:
ExecDeathTest	src/tests/googletest/googletest/src/gtest-death-test.cc	/^class ExecDeathTest : public ForkingDeathTest {$/;"	c	namespace:testing::internal	file:
ExecDeathTestArgs	src/tests/googletest/googletest/src/gtest-death-test.cc	/^struct ExecDeathTestArgs {$/;"	s	namespace:testing::internal	file:
ExecDeathTestChildMain	src/tests/googletest/googletest/src/gtest-death-test.cc	/^static int ExecDeathTestChildMain(void* child_arg) {$/;"	f	namespace:testing::internal	typeref:typename:int	file:
ExecDeathTestSpawnChild	src/tests/googletest/googletest/src/gtest-death-test.cc	/^static pid_t ExecDeathTestSpawnChild(char* const* argv, int close_fd) {$/;"	f	namespace:testing::internal	typeref:typename:pid_t	file:
Executor	src/libtfhe-superaic-acc/accs/executor.cpp	/^Executor::Executor(Executor_Type type,string name)$/;"	f	class:tfhe_superaic::Executor
Executor	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^class Executor {$/;"	c	namespace:tfhe_superaic
Executor_CPU	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^        Executor_CPU,$/;"	e	enum:tfhe_superaic::Executor::Executor_Type
Executor_FPGA	src/libtfhe-superaic-acc/accs/executor.cpp	/^Executor_FPGA::Executor_FPGA(string name):$/;"	f	class:tfhe_superaic::Executor_FPGA
Executor_FPGA	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^        Executor_FPGA,$/;"	e	enum:tfhe_superaic::Executor::Executor_Type
Executor_FPGA	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^class Executor_FPGA :public Executor {$/;"	c	namespace:tfhe_superaic
Executor_List	src/libtfhe-superaic-acc/accs/executor.cpp	/^Executor_List::Executor_List(void) {$/;"	f	class:tfhe_superaic::Executor_List
Executor_List	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^class Executor_List {$/;"	c	namespace:tfhe_superaic
Executor_Type	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    enum Executor_Type {$/;"	g	class:tfhe_superaic::Executor
Exists	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  static bool Exists() { return BuiltInDefaultValue<T>::Exists(); }$/;"	f	class:testing::internal::BuiltInDefaultValue	typeref:typename:bool
Exists	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  static bool Exists() { return true; }$/;"	f	class:testing::DefaultValue	typeref:typename:bool
Exists	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  static bool Exists() { return true; }$/;"	f	class:testing::internal::BuiltInDefaultValue	typeref:typename:bool
Exists	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  static bool Exists() {$/;"	f	class:testing::DefaultValue	typeref:typename:bool
Exists	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  static bool Exists() {$/;"	f	class:testing::internal::BuiltInDefaultValue	typeref:typename:bool
ExitSummary	src/tests/googletest/googletest/src/gtest-death-test.cc	/^static std::string ExitSummary(int exit_code) {$/;"	f	namespace:testing::internal	typeref:typename:std::string	file:
ExitWithExceptionCode	src/tests/googletest/googletest/test/gtest_break_on_failure_unittest_.cc	/^LONG WINAPI ExitWithExceptionCode($/;"	f	namespace:__anon99f2cee50111	typeref:typename:LONG WINAPI
ExitedUnsuccessfully	src/tests/googletest/googletest/src/gtest-death-test.cc	/^bool ExitedUnsuccessfully(int exit_status) {$/;"	f	namespace:testing::internal	typeref:typename:bool
ExitedWithCode	src/tests/googletest/googletest/include/gtest/gtest-death-test.h	/^class GTEST_API_ ExitedWithCode {$/;"	c	namespace:testing
ExitedWithCode	src/tests/googletest/googletest/src/gtest-death-test.cc	/^ExitedWithCode::ExitedWithCode(int exit_code) : exit_code_(exit_code) {$/;"	f	class:testing::ExitedWithCode
ExpNode	src/tests/googletest/googletest/scripts/pump.py	/^class ExpNode:$/;"	c
Expect	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^inline void Expect(bool condition, const char* file, int line) {$/;"	f	namespace:testing::internal	typeref:typename:void
Expect	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^inline void Expect(bool condition, const char* file, int line,$/;"	f	namespace:testing::internal	typeref:typename:void
ExpectCallLogger	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^void ExpectCallLogger() {$/;"	f	namespace:testing::internal::__anonf4b2defb0111	typeref:typename:void
ExpectDeathTestHelper	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^void ExpectDeathTestHelper(bool* aborted) {$/;"	f	typeref:typename:void
ExpectDebugDeathHelper	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^void ExpectDebugDeathHelper(bool* aborted) {$/;"	f	typeref:typename:void
ExpectFailureTest	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^class ExpectFailureTest : public testing::Test {$/;"	c	file:
ExpectFailureWithThreadsTest	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^class ExpectFailureWithThreadsTest : public ExpectFailureTest {$/;"	c	file:
ExpectFailureWithThreadsTest	src/tests/googletest/googletest/test/gtest_unittest.cc	/^    ExpectFailureWithThreadsTest;$/;"	t	namespace:__anonf780395f0111	typeref:typename:ScopedFakeTestPartResultReporterWithThreadsTest	file:
ExpectFatalFailureTest	src/tests/googletest/googletest/test/gtest_unittest.cc	/^typedef ScopedFakeTestPartResultReporterTest ExpectFatalFailureTest;$/;"	t	namespace:__anonf780395f0111	typeref:typename:ScopedFakeTestPartResultReporterTest	file:
ExpectKeyAndValueWereRecordedForId	src/tests/googletest/googletest/test/gtest_stress_test.cc	/^void ExpectKeyAndValueWereRecordedForId($/;"	f	namespace:testing::__anon9be581a20111	typeref:typename:void
ExpectNonFatalFailureRecordingPropertyWithReservedKey	src/tests/googletest/googletest/test/gtest_unittest.cc	/^void ExpectNonFatalFailureRecordingPropertyWithReservedKey($/;"	f	namespace:__anonf780395f0111	typeref:typename:void
ExpectNonFatalFailureRecordingPropertyWithReservedKeyForCurrentTest	src/tests/googletest/googletest/test/gtest_unittest.cc	/^void ExpectNonFatalFailureRecordingPropertyWithReservedKeyForCurrentTest($/;"	f	namespace:__anonf780395f0111	typeref:typename:void
ExpectNonFatalFailureRecordingPropertyWithReservedKeyForCurrentTestCase	src/tests/googletest/googletest/test/gtest_unittest.cc	/^void ExpectNonFatalFailureRecordingPropertyWithReservedKeyForCurrentTestCase($/;"	f	namespace:__anonf780395f0111	typeref:typename:void
ExpectNonFatalFailureRecordingPropertyWithReservedKeyOutsideOfTestCase	src/tests/googletest/googletest/test/gtest_unittest.cc	/^void ExpectNonFatalFailureRecordingPropertyWithReservedKeyOutsideOfTestCase($/;"	f	namespace:__anonf780395f0111	typeref:typename:void
ExpectNonfatalFailureTest	src/tests/googletest/googletest/test/gtest_unittest.cc	/^typedef ScopedFakeTestPartResultReporterTest ExpectNonfatalFailureTest;$/;"	t	namespace:__anonf780395f0111	typeref:typename:ScopedFakeTestPartResultReporterTest	file:
ExpectSpecProperty	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  void ExpectSpecProperty(bool property,$/;"	f	class:testing::internal::ExpectationBase	typeref:typename:void
ExpectSpecProperty	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  void ExpectSpecProperty(bool property,$/;"	f	class:testing::internal::UntypedOnCallSpecBase	typeref:typename:void
Expectation	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^class GTEST_API_ Expectation {$/;"	c	namespace:testing
Expectation	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^inline Expectation::Expectation(internal::ExpectationBase& exp)  \/\/ NOLINT$/;"	f	class:testing::Expectation
Expectation	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^Expectation::Expectation($/;"	f	class:testing::Expectation
Expectation	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^Expectation::Expectation() {}$/;"	f	class:testing::Expectation
Expectation Order	src/tests/googletest/googlemock/docs/CheatSheet.md	/^# Expectation Order #$/;"	c
Expectation Order	src/tests/googletest/googlemock/docs/v1_5/CheatSheet.md	/^# Expectation Order #$/;"	c
Expectation Order	src/tests/googletest/googlemock/docs/v1_6/CheatSheet.md	/^# Expectation Order #$/;"	c
Expectation Order	src/tests/googletest/googlemock/docs/v1_7/CheatSheet.md	/^# Expectation Order #$/;"	c
ExpectationBase	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^class GTEST_API_ ExpectationBase {$/;"	c	namespace:testing::internal
ExpectationBase	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^ExpectationBase::ExpectationBase(const char* a_file, int a_line,$/;"	f	class:testing::internal::ExpectationBase
ExpectationSet	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  ExpectationSet() {}$/;"	f	class:testing::ExpectationSet
ExpectationSet	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  ExpectationSet(const Expectation& e) {  \/\/ NOLINT$/;"	f	class:testing::ExpectationSet
ExpectationSet	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  ExpectationSet(internal::ExpectationBase& exp) {  \/\/ NOLINT$/;"	f	class:testing::ExpectationSet
ExpectationSet	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^class ExpectationSet {$/;"	c	namespace:testing
ExpectationTester	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^class ExpectationTester {$/;"	c	namespace:testing::internal	file:
Expecting Ordered Calls	src/tests/googletest/googlemock/docs/CookBook.md	/^## Expecting Ordered Calls ##$/;"	s	chapter:Setting Expectations
Expecting Ordered Calls	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Expecting Ordered Calls ##$/;"	s	chapter:Setting Expectations
Expecting Ordered Calls	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Expecting Ordered Calls ##$/;"	s	chapter:Setting Expectations
Expecting Ordered Calls	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Expecting Ordered Calls ##$/;"	s	chapter:Setting Expectations
Expecting Partially Ordered Calls	src/tests/googletest/googlemock/docs/CookBook.md	/^## Expecting Partially Ordered Calls ##$/;"	s	chapter:Setting Expectations
Expecting Partially Ordered Calls	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Expecting Partially Ordered Calls ##$/;"	s	chapter:Setting Expectations
Expecting Partially Ordered Calls	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Expecting Partially Ordered Calls ##$/;"	s	chapter:Setting Expectations
Expecting Partially Ordered Calls	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Expecting Partially Ordered Calls ##$/;"	s	chapter:Setting Expectations
Explain	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^std::string Explain(const MatcherType& m, const Value& x) {$/;"	f	namespace:__anoncaf4ae130111	typeref:typename:std::string
Explain	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^std::string Explain(const MatcherType& m, const Value& x) {$/;"	f	namespace:testing::gmock_matchers_test	typeref:typename:std::string
ExplainMatchFailureTupleTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^void ExplainMatchFailureTupleTo(const MatcherTuple& matchers,$/;"	f	namespace:testing::internal	typeref:typename:void
ExplainMatchFailuresTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static void ExplainMatchFailuresTo(const MatcherTuple& \/* matchers *\/,$/;"	f	class:testing::internal::TuplePrefix	typeref:typename:void
ExplainMatchFailuresTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static void ExplainMatchFailuresTo(const MatcherTuple& matchers,$/;"	f	class:testing::internal::TuplePrefix	typeref:typename:void
ExplainMatchResult	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline bool ExplainMatchResult($/;"	f	namespace:testing	typeref:typename:bool
ExplainMatchResultTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  void ExplainMatchResultTo(T x, ::std::ostream* os) const {$/;"	f	class:testing::internal::MatcherBase	typeref:typename:void
ExplainMatchResultTo	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  void ExplainMatchResultTo($/;"	f	class:testing::internal::TypedExpectation	typeref:typename:void
ExplainSuccess	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  void ExplainSuccess(const std::string& first_explanation,$/;"	f	class:testing::internal::PairMatcherImpl	typeref:typename:void
Explicit Success and Failure	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^## Explicit Success and Failure ##$/;"	s	chapter:More Assertions
Explicit Success and Failure	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^## Explicit Success and Failure ##$/;"	s	chapter:More Assertions
Explicit Success and Failure	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^## Explicit Success and Failure ##$/;"	s	chapter:More Assertions
Explicit Success and Failure	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^## Explicit Success and Failure ##$/;"	s	chapter:More Assertions
ExplicitlyConvertibleToBool	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  struct ExplicitlyConvertibleToBool {$/;"	s	function:TEST	file:
Expr	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^class Expr(Node):$/;"	c
Extending Google Mock	src/tests/googletest/googlemock/docs/CookBook.md	/^# Extending Google Mock #$/;"	c
Extending Google Mock	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^# Extending Google Mock #$/;"	c
Extending Google Mock	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^# Extending Google Mock #$/;"	c
Extending Google Mock	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^# Extending Google Mock #$/;"	c
Extending Google Test by Handling Test Events	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^# Extending Google Test by Handling Test Events #$/;"	c
Extending Google Test by Handling Test Events	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^# Extending Google Test by Handling Test Events #$/;"	c
Extending Google Test by Handling Test Events	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^# Extending Google Test by Handling Test Events #$/;"	c
Extending Google Test by Handling Test Events	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^# Extending Google Test by Handling Test Events #$/;"	c
ExternalGeneratorTest	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^class ExternalGeneratorTest : public TestWithParam<int> {};$/;"	c	file:
ExternalInstantiationTest	src/tests/googletest/googletest/test/gtest-param-test_test.h	/^class ExternalInstantiationTest : public ::testing::TestWithParam<int> {$/;"	c
ExternalUtilityThatCallsRecordProperty	src/tests/googletest/googletest/test/gtest_xml_output_unittest_.cc	/^void ExternalUtilityThatCallsRecordProperty(const std::string& key, int value) {$/;"	f	typeref:typename:void
ExternalUtilityThatCallsRecordProperty	src/tests/googletest/googletest/test/gtest_xml_output_unittest_.cc	/^void ExternalUtilityThatCallsRecordProperty(const std::string& key,$/;"	f	typeref:typename:void
ExtractSummary	src/tests/googletest/googletest/src/gtest-test-part.cc	/^std::string TestPartResult::ExtractSummary(const char* message) {$/;"	f	class:testing::TestPartResult	typeref:typename:std::string
F	src/libtfhe-superaic-core/include/tfhe_generic_streams.h	/^    FILE *F;$/;"	m	class:CIstream	typeref:typename:FILE *
F	src/libtfhe-superaic-core/include/tfhe_generic_streams.h	/^    FILE *F;$/;"	m	class:COstream	typeref:typename:FILE *
F	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^  typedef R F();$/;"	t	class:testing::internal::FunctionMocker	typeref:typename:R ()()
F	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^  typedef R F(A1);$/;"	t	class:testing::internal::FunctionMocker	typeref:typename:R ()(A1)
F	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^  typedef R F(A1, A2);$/;"	t	class:testing::internal::FunctionMocker	typeref:typename:R ()(A1,A2)
F	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^  typedef R F(A1, A2, A3);$/;"	t	class:testing::internal::FunctionMocker	typeref:typename:R ()(A1,A2,A3)
F	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^  typedef R F(A1, A2, A3, A4);$/;"	t	class:testing::internal::FunctionMocker	typeref:typename:R ()(A1,A2,A3,A4)
F	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^  typedef R F(A1, A2, A3, A4, A5);$/;"	t	class:testing::internal::FunctionMocker	typeref:typename:R ()(A1,A2,A3,A4,A5)
F	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^  typedef R F(A1, A2, A3, A4, A5, A6);$/;"	t	class:testing::internal::FunctionMocker	typeref:typename:R ()(A1,A2,A3,A4,A5,A6)
F	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^  typedef R F(A1, A2, A3, A4, A5, A6, A7);$/;"	t	class:testing::internal::FunctionMocker	typeref:typename:R ()(A1,A2,A3,A4,A5,A6,A7)
F	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^  typedef R F(A1, A2, A3, A4, A5, A6, A7, A8);$/;"	t	class:testing::internal::FunctionMocker	typeref:typename:R ()(A1,A2,A3,A4,A5,A6,A7,A8)
F	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^  typedef R F(A1, A2, A3, A4, A5, A6, A7, A8, A9);$/;"	t	class:testing::internal::FunctionMocker	typeref:typename:R ()(A1,A2,A3,A4,A5,A6,A7,A8,A9)
F	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^  typedef R F(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10);$/;"	t	class:testing::internal::FunctionMocker	typeref:typename:R ()(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)
F	src/tests/googletest/googlemock/test/gmock-generated-internal-utils_test.cc	/^  typedef Function<char(bool, int, char*, int&, const long&)> F;  \/\/ NOLINT$/;"	t	function:__anonecc711f70111::TEST	file:
F	src/tests/googletest/googlemock/test/gmock-generated-internal-utils_test.cc	/^  typedef Function<int()> F;  \/\/ NOLINT$/;"	t	function:__anonecc711f70111::TEST	file:
F	src/tests/googletest/googlemock/test/gmock-generated-internal-utils_test.cc	/^  typedef Function<int(bool)> F;  \/\/ NOLINT$/;"	t	function:__anonecc711f70111::TEST	file:
F	src/tests/googletest/googlemock/test/gmock-generated-internal-utils_test.cc	/^  typedef Function<int(bool, const long&)> F;  \/\/ NOLINT$/;"	t	function:__anonecc711f70111::TEST	file:
FAIL	src/tests/googletest/googletest/include/gtest/gtest.h	/^# define FAIL() GTEST_FAIL(/;"	d
FAKES_LAGRANGEHALFC_H	src/tests/fakes/lagrangehalfc.h	/^#define FAKES_LAGRANGEHALFC_H$/;"	d
FAKES_LWE_H	src/tests/fakes/lwe.h	/^#define FAKES_LWE_H$/;"	d
FAKES_TGSW_FFT_H	src/tests/fakes/tgsw-fft.h	/^#define FAKES_TGSW_FFT_H$/;"	d
FAKES_TGSW_H	src/tests/fakes/tgsw.h	/^#define FAKES_TGSW_H$/;"	d
FAKES_TLWE_FFT_H	src/tests/fakes/tlwe-fft.h	/^#define FAKES_TLWE_FFT_H$/;"	d
FAKES_TLWE_H	src/tests/fakes/tlwe.h	/^#define FAKES_TLWE_H$/;"	d
FAKE_LWEKEYSWITCH_UID	src/tests/fakes/lwe-keyswitch.h	/^        static const int64_t FAKE_LWEKEYSWITCH_UID = 956475132024584l; \/\/ precaution: distingu/;"	m	struct:__anonbf4a421d0111::FakeLweKeySwitchKey	typeref:typename:const int64_t
FAKE_LWE_BOOTSTRAPPING_FFT_H	src/tests/fakes/lwe-bootstrapping-fft.h	/^#define FAKE_LWE_BOOTSTRAPPING_FFT_H$/;"	d
FAKE_LWE_BOOTSTRAPPING_H	src/tests/fakes/lwe-bootstrapping.h	/^#define FAKE_LWE_BOOTSTRAPPING_H$/;"	d
FAKE_LWE_KEYSWITCH_H	src/tests/fakes/lwe-keyswitch.h	/^#define FAKE_LWE_KEYSWITCH_H$/;"	d
FAKE_LWE_UID	src/tests/fakes/lwe.h	/^    static const int32_t FAKE_LWE_UID = 45287951; \/\/ precaution: do not confuse fakes with tru/;"	m	struct:FakeLwe	typeref:typename:const int32_t
FAKE_TGSW_UID	src/tests/fakes/tgsw.h	/^        static const int64_t FAKE_TGSW_UID = 123444802642375465l; \/\/ precaution: do not confus/;"	m	struct:__anond844f8d20111::FakeTGsw	typeref:typename:const int64_t
FAKE_TLWE_UID	src/tests/fakes/tlwe.h	/^        static const int32_t FAKE_TLWE_UID = 542354312; \/\/ precaution: distinguish fakes from /;"	m	struct:__anond8a158490111::FakeTLwe	typeref:typename:const int32_t
FAKE_TYPE_UID	src/tests/fakes/lagrangehalfc.h	/^        static const int32_t FAKE_TYPE_UID = 213579845; \/\/ precaution: distinguish fakes from /;"	m	struct:__anonb49ff32c0111::FakeLagrangeHalfCPolynomial	typeref:typename:const int32_t
FAKE_TYPE_UID	src/tests/fakes/tgsw-fft.h	/^        static const int32_t FAKE_TYPE_UID = 574569852; \/\/ precaution: distinguish fakes from /;"	m	struct:__anonee999a9f0111::FakeTGswFFT	typeref:typename:const int32_t
FAKE_TYPE_UID	src/tests/fakes/tlwe-fft.h	/^        static const int32_t FAKE_TYPE_UID = 816458235; \/\/ precaution: distinguish fakes from /;"	m	struct:__anon7c76dd960111::FakeTLweFFT	typeref:typename:const int32_t
FATAL	src/libtfhe-superaic-acc/accs/FPGA-V0/acc_fpga_v0.cpp	/^#define FATAL /;"	d	file:
FATAL	src/muduo/muduo/base/Logging.h	/^    FATAL,$/;"	e	enum:muduo::Logger::LogLevel
FATAL_FAILURE	src/tests/googletest/googletest/test/gtest_environment_test.cc	/^  NO_FAILURE, NON_FATAL_FAILURE, FATAL_FAILURE$/;"	e	enum:__anon7fd7f0f30111::FailureType	file:
FATAL_FAILURE	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^    FATAL_FAILURE,$/;"	e	enum:ExpectFailureTest::FailureMode	file:
FATAL_FAILURE	src/tests/googletest/googletest/test/gtest_unittest.cc	/^    FATAL_FAILURE,$/;"	e	enum:__anonf780395f0111::ScopedFakeTestPartResultReporterTest::FailureMode	file:
FClose	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^inline int FClose(FILE* fp) { return fclose(fp); }$/;"	f	namespace:testing::internal::posix	typeref:typename:int
FDOpen	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^inline FILE* FDOpen(int fd, const char* mode) { return fdopen(fd, mode); }$/;"	f	namespace:testing::internal::posix	typeref:typename:FILE *
FFT_NAYUKI_H	src/libtfhe-superaic-core/fft_processors/nayuki/fft.h	/^#define FFT_NAYUKI_H$/;"	d
FFT_Processor_nayuki	src/libtfhe-superaic-core/fft_processors/nayuki/fft_processor_nayuki.cpp	/^FFT_Processor_nayuki::FFT_Processor_nayuki(const int32_t N): _2N(2*N),N(N),Ns2(N\/2) {$/;"	f	class:FFT_Processor_nayuki
FFT_Processor_nayuki	src/libtfhe-superaic-core/fft_processors/nayuki/lagrangehalfc_impl.h	/^class FFT_Processor_nayuki {$/;"	c
FILTERED_TESTS	src/tests/googletest/googletest/test/gtest_shuffle_test.py	/^FILTERED_TESTS = []$/;"	v
FILTER_ENV_VAR	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^FILTER_ENV_VAR = 'GTEST_FILTER'$/;"	v
FILTER_FLAG	src/tests/googletest/googletest/test/gtest_catch_exceptions_test.py	/^FILTER_FLAG = FLAG_PREFIX + 'filter'$/;"	v
FILTER_FLAG	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^FILTER_FLAG = 'gtest_filter'$/;"	v
FLAG_PREFIX	src/tests/googletest/googletest/test/gtest_catch_exceptions_test.py	/^FLAG_PREFIX = '--gtest_'$/;"	v
FLAG_PREFIX	src/tests/googletest/googletest/test/gtest_help_test.py	/^FLAG_PREFIX = '--gtest_'$/;"	v
FOpen	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^inline FILE* FOpen(const char* path, const char* mode) {$/;"	f	namespace:testing::internal::posix	typeref:typename:FILE *
FPGA_ACC_V0	src/libtfhe-superaic-acc/accs/FPGA-V0/acc_fpga_v0.cpp	/^FPGA_ACC_V0::FPGA_ACC_V0():$/;"	f	class:tfhe_superaic::FPGA_ACC_V0
FPGA_ACC_V0	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^class FPGA_ACC_V0: public TFHE_ACC{$/;"	c	namespace:tfhe_superaic
FRIEND_TEST	src/tests/googletest/googletest/include/gtest/gtest_prod.h	/^#define FRIEND_TEST(/;"	d
FRIEND_TEST_Test2	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class FRIEND_TEST_Test2 : public Test {$/;"	c	namespace:__anonf780395f0311	file:
FReopen	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^inline FILE *FReopen(const char* path, const char* mode, FILE* stream) {$/;"	f	namespace:testing::internal::posix	typeref:typename:FILE *
FULL_P_START_ADDR_0	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint64_t FULL_P_START_ADDR_0 = 0x00000000;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint64_t
FULL_P_START_ADDR_1	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint64_t FULL_P_START_ADDR_1 = 0x00010000;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint64_t
FULL_P_START_ADDR_2	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint64_t FULL_P_START_ADDR_2 = 0x00020000;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint64_t
FULL_P_START_ADDR_3	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint64_t FULL_P_START_ADDR_3 = 0x00030000;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint64_t
FULL_P_START_ADDR_4	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint64_t FULL_P_START_ADDR_4 = 0x00040000;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint64_t
FULL_P_START_ADDR_5	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint64_t FULL_P_START_ADDR_5 = 0x00050000;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint64_t
FULL_P_START_ADDR_6	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint64_t FULL_P_START_ADDR_6 = 0x00060000;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint64_t
FULL_P_START_ADDR_7	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint64_t FULL_P_START_ADDR_7 = 0x00070000;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint64_t
FULL_P_START_ADDRs	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static constexpr const uint64_t FULL_P_START_ADDRs[] = {$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint64_t[]
FULL_Q_START_ADDR_0	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint64_t FULL_Q_START_ADDR_0 = 0x00001000;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint64_t
FULL_Q_START_ADDR_1	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint64_t FULL_Q_START_ADDR_1 = 0x00011000;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint64_t
FULL_Q_START_ADDR_2	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint64_t FULL_Q_START_ADDR_2 = 0x00021000;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint64_t
FULL_Q_START_ADDR_3	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint64_t FULL_Q_START_ADDR_3 = 0x00031000;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint64_t
FULL_Q_START_ADDR_4	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint64_t FULL_Q_START_ADDR_4 = 0x00041000;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint64_t
FULL_Q_START_ADDR_5	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint64_t FULL_Q_START_ADDR_5 = 0x00051000;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint64_t
FULL_Q_START_ADDR_6	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint64_t FULL_Q_START_ADDR_6 = 0x00061000;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint64_t
FULL_Q_START_ADDR_7	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint64_t FULL_Q_START_ADDR_7 = 0x00071000;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint64_t
FULL_Q_START_ADDRs	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static constexpr const uint64_t FULL_Q_START_ADDRs[] = {$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint64_t[]
FULL_V_START_ADDR_0	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint64_t FULL_V_START_ADDR_0 = 0x00002000;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint64_t
FULL_V_START_ADDR_1	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint64_t FULL_V_START_ADDR_1 = 0x00012000;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint64_t
FULL_V_START_ADDR_2	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint64_t FULL_V_START_ADDR_2 = 0x00022000;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint64_t
FULL_V_START_ADDR_3	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint64_t FULL_V_START_ADDR_3 = 0x00032000;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint64_t
FULL_V_START_ADDR_4	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint64_t FULL_V_START_ADDR_4 = 0x00042000;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint64_t
FULL_V_START_ADDR_5	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint64_t FULL_V_START_ADDR_5 = 0x00052000;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint64_t
FULL_V_START_ADDR_6	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint64_t FULL_V_START_ADDR_6 = 0x00062000;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint64_t
FULL_V_START_ADDR_7	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint64_t FULL_V_START_ADDR_7 = 0x00072000;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint64_t
FULL_V_START_ADDRs	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static constexpr const uint64_t FULL_V_START_ADDRs[] = {$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint64_t[]
FUNCTION_ATTRIBUTE	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^FUNCTION_ATTRIBUTE = 0x20$/;"	v
FUNCTION_CONST	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^FUNCTION_CONST = 0x01$/;"	v
FUNCTION_CTOR	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^FUNCTION_CTOR = 0x08$/;"	v
FUNCTION_DTOR	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^FUNCTION_DTOR = 0x10$/;"	v
FUNCTION_NONE	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^FUNCTION_NONE = 0x00$/;"	v
FUNCTION_OVERRIDE	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^FUNCTION_OVERRIDE = 0x100$/;"	v
FUNCTION_PURE_VIRTUAL	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^FUNCTION_PURE_VIRTUAL = 0x04$/;"	v
FUNCTION_THROW	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^FUNCTION_THROW = 0x80$/;"	v
FUNCTION_UNKNOWN_ANNOTATION	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^FUNCTION_UNKNOWN_ANNOTATION = 0x40$/;"	v
FUNCTION_VIRTUAL	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^FUNCTION_VIRTUAL = 0x02$/;"	v
FUSED_GTEST_ALL_CC	src/tests/googletest/googletest/scripts/test/Makefile	/^FUSED_GTEST_ALL_CC = $(FUSED_GTEST_DIR)\/gtest\/gtest-all.cc$/;"	m
FUSED_GTEST_DIR	src/tests/googletest/googletest/scripts/test/Makefile	/^FUSED_GTEST_DIR = output$/;"	m
FUSED_GTEST_H	src/tests/googletest/googletest/scripts/test/Makefile	/^FUSED_GTEST_H = $(FUSED_GTEST_DIR)\/gtest\/gtest.h$/;"	m
FUSED_GTEST_SRC	src/tests/googletest/googletest/Makefile.am	/^FUSED_GTEST_SRC = \\$/;"	m
Factorial	src/tests/googletest/googletest/samples/sample1.cc	/^int Factorial(int n) {$/;"	f	typeref:typename:int
FactoryFunction	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  typedef T (*FactoryFunction)();$/;"	t	class:testing::DefaultValue	typeref:typename:T (*)()
FactoryValueProducer	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    explicit FactoryValueProducer(FactoryFunction factory)$/;"	f	class:testing::DefaultValue::FactoryValueProducer
FactoryValueProducer	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  class FactoryValueProducer : public ValueProducer {$/;"	c	class:testing::DefaultValue
Fail	src/tests/googletest/googletest/test/gtest_throw_on_failure_ex_test.cc	/^void Fail(const char* msg) {$/;"	f	typeref:typename:void
FailFatally	src/tests/googletest/googletest/test/gtest_unittest.cc	/^static void FailFatally() { FAIL(); }$/;"	f	typeref:typename:void	file:
FailFromInternalError	src/tests/googletest/googletest/src/gtest-death-test.cc	/^static void FailFromInternalError(int fd) {$/;"	f	namespace:testing::internal	typeref:typename:void	file:
FailUninterestingCalls	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^void Mock::FailUninterestingCalls(const void* mock_obj)$/;"	f	class:testing::Mock	typeref:typename:void
Failed	src/tests/googletest/googletest/include/gtest/gtest.h	/^  bool Failed() const { return failed_test_count() > 0; }$/;"	f	class:testing::TestCase	typeref:typename:bool
Failed	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  bool Failed() const {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:bool
Failed	src/tests/googletest/googletest/src/gtest.cc	/^bool TestResult::Failed() const {$/;"	f	class:testing::TestResult	typeref:typename:bool
Failed	src/tests/googletest/googletest/src/gtest.cc	/^bool UnitTest::Failed() const { return impl()->Failed(); }$/;"	f	class:testing::UnitTest	typeref:typename:bool
Failed to resolve libgtest.so.0 in tests when built against installed Google Test	src/tests/googletest/googlemock/docs/KnownIssues.md	/^## Failed to resolve libgtest.so.0 in tests when built against installed Google Test ##$/;"	s
FailedTest	src/tests/googletest/googletest/test/gtest_xml_output_unittest_.cc	/^class FailedTest : public Test {$/;"	c	file:
FailingParamTest	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^class FailingParamTest : public testing::TestWithParam<int> {};$/;"	c	file:
FailingThread	src/tests/googletest/googletest/test/gtest_stress_test.cc	/^void FailingThread(bool is_fatal) {$/;"	f	namespace:testing::__anon9be581a20111	typeref:typename:void
Fails	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  void Fails() {$/;"	f	class:__anonf780395f0111::NoFatalFailureTest	typeref:typename:void	file:
FailsNonFatal	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  void FailsNonFatal() {$/;"	f	class:__anonf780395f0111::NoFatalFailureTest	typeref:typename:void	file:
FailureMode	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^  enum FailureMode {$/;"	g	class:ExpectFailureTest	file:
FailureMode	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  enum FailureMode {$/;"	g	class:__anonf780395f0111::ScopedFakeTestPartResultReporterTest	file:
FailureReporterInterface	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^class FailureReporterInterface {$/;"	c	namespace:testing::internal
FailureType	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^  enum FailureType {$/;"	g	class:testing::internal::FailureReporterInterface
FailureType	src/tests/googletest/googletest/test/gtest_environment_test.cc	/^enum FailureType {$/;"	g	namespace:__anon7fd7f0f30111	file:
Fake	docs/code_note.md	/^# Fake$/;"	c
FakeLagrangeHalfCPolynomial	src/tests/fakes/lagrangehalfc.h	/^        FakeLagrangeHalfCPolynomial(int32_t N) : fake_uid(FAKE_TYPE_UID) {$/;"	f	struct:__anonb49ff32c0111::FakeLagrangeHalfCPolynomial
FakeLagrangeHalfCPolynomial	src/tests/fakes/lagrangehalfc.h	/^    struct FakeLagrangeHalfCPolynomial {$/;"	s	namespace:__anonb49ff32c0111
FakeLwe	src/tests/fakes/lwe.h	/^    FakeLwe() : fake_uid(FAKE_LWE_UID) {$/;"	f	struct:FakeLwe
FakeLwe	src/tests/fakes/lwe.h	/^struct FakeLwe {$/;"	s
FakeLweBootstrappingKey	src/tests/fakes/lwe-bootstrapping.h	/^        FakeLweBootstrappingKey(int32_t ks_t, int32_t ks_basebit, const LweParams *in_out_params/;"	f	struct:__anon027fcd4e0111::FakeLweBootstrappingKey
FakeLweBootstrappingKey	src/tests/fakes/lwe-bootstrapping.h	/^    struct FakeLweBootstrappingKey {$/;"	s	namespace:__anon027fcd4e0111
FakeLweBootstrappingKeyFFT	src/tests/fakes/lwe-bootstrapping-fft.h	/^        FakeLweBootstrappingKeyFFT(const FakeLweBootstrappingKey *fbk) {$/;"	f	struct:__anonaae24d1b0111::FakeLweBootstrappingKeyFFT
FakeLweBootstrappingKeyFFT	src/tests/fakes/lwe-bootstrapping-fft.h	/^    struct FakeLweBootstrappingKeyFFT {$/;"	s	namespace:__anonaae24d1b0111
FakeLweKeySwitchKey	src/tests/fakes/lwe-keyswitch.h	/^        FakeLweKeySwitchKey(int32_t n, int32_t t, int32_t basebit) : fake_uid(FAKE_LWEKEYSWITCH_/;"	f	struct:__anonbf4a421d0111::FakeLweKeySwitchKey
FakeLweKeySwitchKey	src/tests/fakes/lwe-keyswitch.h	/^    struct FakeLweKeySwitchKey {$/;"	s	namespace:__anonbf4a421d0111
FakeSocketWriter	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  class FakeSocketWriter : public StreamingListener::AbstractSocketWriter {$/;"	c	class:testing::internal::StreamingListenerTest	file:
FakeTGsw	src/tests/fakes/tgsw.h	/^        FakeTGsw(int32_t N) : fake_uid(FAKE_TGSW_UID) {$/;"	f	struct:__anond844f8d20111::FakeTGsw
FakeTGsw	src/tests/fakes/tgsw.h	/^    struct FakeTGsw {$/;"	s	namespace:__anond844f8d20111
FakeTGswFFT	src/tests/fakes/tgsw-fft.h	/^        FakeTGswFFT(int32_t N) : fake_uid(FAKE_TYPE_UID) {$/;"	f	struct:__anonee999a9f0111::FakeTGswFFT
FakeTGswFFT	src/tests/fakes/tgsw-fft.h	/^    struct FakeTGswFFT {$/;"	s	namespace:__anonee999a9f0111
FakeTLwe	src/tests/fakes/tlwe.h	/^        FakeTLwe(int32_t N) : fake_uid(FAKE_TLWE_UID) {$/;"	f	struct:__anond8a158490111::FakeTLwe
FakeTLwe	src/tests/fakes/tlwe.h	/^    struct FakeTLwe {$/;"	s	namespace:__anond8a158490111
FakeTLweFFT	src/tests/fakes/tlwe-fft.h	/^        FakeTLweFFT(int32_t N) : fake_uid(FAKE_TYPE_UID) {$/;"	f	struct:__anon7c76dd960111::FakeTLweFFT
FakeTLweFFT	src/tests/fakes/tlwe-fft.h	/^    struct FakeTLweFFT {$/;"	s	namespace:__anon7c76dd960111
FalseHRESULTSuccess	src/tests/googletest/googletest/test/gtest_unittest.cc	/^static HRESULT FalseHRESULTSuccess() {$/;"	f	namespace:__anonf780395f0111	typeref:typename:HRESULT	file:
FastCgiCodec	src/muduo/examples/fastcgi/fastcgi.h	/^  explicit FastCgiCodec(const Callback& cb)$/;"	f	class:FastCgiCodec
FastCgiCodec	src/muduo/examples/fastcgi/fastcgi.h	/^class FastCgiCodec : muduo::noncopyable$/;"	c
FatalFailure	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^void FatalFailure() {$/;"	f	typeref:typename:void
FatalFailureInFixtureConstructorTest	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^  FatalFailureInFixtureConstructorTest() {$/;"	f	class:FatalFailureInFixtureConstructorTest	file:
FatalFailureInFixtureConstructorTest	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^class FatalFailureInFixtureConstructorTest : public testing::Test {$/;"	c	file:
FatalFailureInSetUpTest	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^class FatalFailureInSetUpTest : public testing::Test {$/;"	c	file:
FcgiConstant	src/muduo/examples/fastcgi/fastcgi.cc	/^enum FcgiConstant$/;"	g	file:
FcgiRole	src/muduo/examples/fastcgi/fastcgi.cc	/^enum FcgiRole$/;"	g	file:
FcgiType	src/muduo/examples/fastcgi/fastcgi.cc	/^enum FcgiType$/;"	g	file:
Features	src/tests/googletest/README.md	/^## Features ##$/;"	s	chapter:Google Test
Features	src/tests/googletest/googlemock/README.md	/^### Features ###$/;"	S	section:Google Mock
FftTables	src/libtfhe-superaic-core/fft_processors/nayuki/fft-model-of-x8664-avx.c	/^struct FftTables {$/;"	s	file:
FftTables	src/libtfhe-superaic-core/fft_processors/nayuki/fft-portable.c	/^struct FftTables {$/;"	s	file:
FftTables	src/libtfhe-superaic-core/fft_processors/nayuki/fft-x8664-avx-aux.c	/^struct FftTables {$/;"	s	file:
Field	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  internal::FieldMatcher<Class, FieldType> > Field($/;"	f	namespace:testing	typeref:typename:PolymorphicMatcher<internal::FieldMatcher<Class,FieldType>>
FieldHelper	src/tests/googletest/googlemock/test/gmock_link_test.h	/^  explicit FieldHelper(int a_field) : field_(a_field) {}$/;"	f	class:FieldHelper
FieldHelper	src/tests/googletest/googlemock/test/gmock_link_test.h	/^class FieldHelper {$/;"	c
FieldMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  FieldMatcher(FieldType Class::*field,$/;"	f	class:testing::internal::FieldMatcher
FieldMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class FieldMatcher {$/;"	c	namespace:testing::internal
File	src/muduo/muduo/base/TimeZone.cc	/^  File(const char* file)$/;"	f	class:muduo::detail::File	file:
File	src/muduo/muduo/base/TimeZone.cc	/^class File : noncopyable$/;"	c	namespace:muduo::detail	file:
FileExists	src/tests/googletest/googletest/test/gtest_premature_exit_test.cc	/^  static bool FileExists(const char* filepath) {$/;"	f	class:__anonb806fa6c0111::PrematureExitTest	typeref:typename:bool	file:
FileNo	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^inline int FileNo(FILE* file) { return _fileno(file); }$/;"	f	namespace:testing::internal::posix	typeref:typename:int
FileNo	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^inline int FileNo(FILE* file) { return reinterpret_cast<int>(_fileno(file)); }$/;"	f	namespace:testing::internal::posix	typeref:typename:int
FileOrDirectoryExists	src/tests/googletest/googletest/src/gtest-filepath.cc	/^bool FilePath::FileOrDirectoryExists() const {$/;"	f	class:testing::internal::FilePath	typeref:typename:bool
FilePath	src/tests/googletest/googletest/include/gtest/internal/gtest-filepath.h	/^  FilePath() : pathname_("") { }$/;"	f	class:testing::internal::FilePath
FilePath	src/tests/googletest/googletest/include/gtest/internal/gtest-filepath.h	/^  FilePath(const FilePath& rhs) : pathname_(rhs.pathname_) { }$/;"	f	class:testing::internal::FilePath
FilePath	src/tests/googletest/googletest/include/gtest/internal/gtest-filepath.h	/^  explicit FilePath(const std::string& pathname) : pathname_(pathname) {$/;"	f	class:testing::internal::FilePath
FilePath	src/tests/googletest/googletest/include/gtest/internal/gtest-filepath.h	/^class GTEST_API_ FilePath {$/;"	c	namespace:testing::internal
FilePtr	src/muduo/examples/curl/download.cc	/^typedef std::shared_ptr<FILE> FilePtr;$/;"	t	typeref:typename:std::shared_ptr<FILE>	file:
FilePtr	src/muduo/examples/filetransfer/download3.cc	/^typedef std::shared_ptr<FILE> FilePtr;$/;"	t	typeref:typename:std::shared_ptr<FILE>	file:
FileUtil	src/muduo/muduo/base/FileUtil.h	/^namespace FileUtil$/;"	n	namespace:muduo
FileUtil	src/muduo/muduo/base/LogFile.h	/^namespace FileUtil$/;"	n	namespace:muduo
Filter	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static Flags Filter(const char* filter) {$/;"	f	struct:testing::Flags	typeref:typename:Flags	file:
FilterFlag	src/tests/googletest/googletest/test/gtest_shuffle_test.py	/^def FilterFlag(test_filter):$/;"	f
FilterMatchesTest	src/tests/googletest/googletest/src/gtest.cc	/^bool UnitTestOptions::FilterMatchesTest(const std::string &test_case_name,$/;"	f	class:testing::internal::UnitTestOptions	typeref:typename:bool
FilterTests	src/tests/googletest/googletest/src/gtest.cc	/^int UnitTestImpl::FilterTests(ReactionToSharding shard_tests) {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:int
FinalSuccessChecker	src/tests/googletest/googletest/test/gtest-unittest-api_test.cc	/^class FinalSuccessChecker : public Environment {$/;"	c	namespace:testing::internal	file:
FindBacktrackingMaxBPM	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^FindBacktrackingMaxBPM(const Graph& g) {$/;"	f	namespace:testing::gmock_matchers_test	typeref:typename:ElementMatcherPairs
FindFirst	src/tests/googletest/googletest/scripts/pump.py	/^def FindFirst(lines, token_table, cursor):$/;"	f
FindFirstInLine	src/tests/googletest/googletest/scripts/pump.py	/^def FindFirstInLine(line, token_table):$/;"	f
FindLastPathSeparator	src/tests/googletest/googletest/src/gtest-filepath.cc	/^const char* FilePath::FindLastPathSeparator() const {$/;"	f	class:testing::internal::FilePath	typeref:typename:const char *
FindMatchingExpectationLocked	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  TypedExpectation<F>* FindMatchingExpectationLocked($/;"	f	class:testing::internal::FunctionMockerBase	typeref:typename:TypedExpectation<F> *
FindMaxBipartiteMatching	src/tests/googletest/googlemock/src/gmock-matchers.cc	/^FindMaxBipartiteMatching(const MatchMatrix& g) {$/;"	f	namespace:testing::internal	typeref:typename:GTEST_API_ ElementMatcherPairs
FindOnCallSpec	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  const OnCallSpec<F>* FindOnCallSpec($/;"	f	class:testing::internal::FunctionMockerBase	typeref:typename:const OnCallSpec<F> *
FindPairing	src/tests/googletest/googlemock/src/gmock-matchers.cc	/^GTEST_API_ bool FindPairing(const MatchMatrix& matrix,$/;"	f	namespace:testing::internal	typeref:typename:GTEST_API_ bool
FindTestCase	src/tests/googletest/googletest/test/gtest-unittest-api_test.cc	/^  static const TestCase* FindTestCase(const char* name) {$/;"	f	class:testing::internal::UnitTestHelper	typeref:typename:const TestCase *	file:
FindUnsatisfiedPrerequisites	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^void ExpectationBase::FindUnsatisfiedPrerequisites(ExpectationSet* result) const$/;"	f	class:testing::internal::ExpectationBase	typeref:typename:void
FirstType	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef typename RawPairType::first_type FirstType;$/;"	t	class:testing::internal::PairMatcherImpl	typeref:typename:RawPairType::first_type
FixedBuffer	src/muduo/muduo/base/LogStream.cc	/^template class FixedBuffer<kLargeBuffer>;$/;"	v	namespace:muduo::detail	typeref:meta:class
FixedBuffer	src/muduo/muduo/base/LogStream.cc	/^template class FixedBuffer<kSmallBuffer>;$/;"	v	namespace:muduo::detail	typeref:meta:class
FixedBuffer	src/muduo/muduo/base/LogStream.h	/^  FixedBuffer()$/;"	f	class:muduo::detail::FixedBuffer
FixedBuffer	src/muduo/muduo/base/LogStream.h	/^class FixedBuffer : noncopyable$/;"	c	namespace:muduo::detail
FixedValueProducer	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    explicit FixedValueProducer(T value) : value_(value) {}$/;"	f	class:testing::DefaultValue::FixedValueProducer
FixedValueProducer	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  class FixedValueProducer : public ValueProducer {$/;"	c	class:testing::DefaultValue
FixtureClass	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^    typedef Fixture<Type> FixtureClass;$/;"	t	function:testing::internal::TypeParameterizedTest::Register	typeref:typename:Fixture<Type>
FixtureConstructorExecuted	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  void FixtureConstructorExecuted() { fixture_constructor_count_++; }$/;"	f	class:TestGenerationEnvironment	typeref:typename:void	file:
FlagToEnvVar	src/tests/googletest/googletest/src/gtest-port.cc	/^static std::string FlagToEnvVar(const char* flag) {$/;"	f	namespace:testing::internal	typeref:typename:std::string	file:
FlagfileTest	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class FlagfileTest : public InitGoogleTestTest {$/;"	c	namespace:testing	file:
Flags	src/tests/googletest/googlemock/docs/CheatSheet.md	/^# Flags #$/;"	c
Flags	src/tests/googletest/googlemock/docs/v1_5/CheatSheet.md	/^# Flags #$/;"	c
Flags	src/tests/googletest/googlemock/docs/v1_6/CheatSheet.md	/^# Flags #$/;"	c
Flags	src/tests/googletest/googlemock/docs/v1_7/CheatSheet.md	/^# Flags #$/;"	c
Flags	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  Flags() : also_run_disabled_tests(false),$/;"	f	struct:testing::Flags	file:
Flags	src/tests/googletest/googletest/test/gtest_unittest.cc	/^struct Flags {$/;"	s	namespace:testing	file:
Float	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^typedef FloatingPoint<float> Float;$/;"	t	namespace:testing::internal	typeref:typename:FloatingPoint<float>
FloatEq	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline internal::FloatingEqMatcher<float> FloatEq(float rhs) {$/;"	f	namespace:testing	typeref:typename:internal::FloatingEqMatcher<float>
FloatLE	src/tests/googletest/googletest/src/gtest.cc	/^AssertionResult FloatLE(const char* expr1, const char* expr2,$/;"	f	namespace:testing	typeref:typename:AssertionResult
FloatNear	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline internal::FloatingEqMatcher<float> FloatNear($/;"	f	namespace:testing	typeref:typename:internal::FloatingEqMatcher<float>
FloatNearTest	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^typedef FloatingPointNearTest<float> FloatNearTest;$/;"	t	namespace:testing::gmock_matchers_test	typeref:typename:FloatingPointNearTest<float>	file:
FloatTest	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^typedef FloatingPointTest<float> FloatTest;$/;"	t	namespace:testing::gmock_matchers_test	typeref:typename:FloatingPointTest<float>	file:
FloatTest	src/tests/googletest/googletest/test/gtest_unittest.cc	/^typedef FloatingPointTest<float> FloatTest;$/;"	t	namespace:__anonf780395f0111	typeref:typename:FloatingPointTest<float>	file:
Floating	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  typedef testing::internal::FloatingPoint<RawType> Floating;$/;"	t	class:testing::gmock_matchers_test::FloatingPointTest	typeref:typename:testing::internal::FloatingPoint<RawType>	file:
Floating	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  typedef typename testing::internal::FloatingPoint<RawType> Floating;$/;"	t	class:__anonf780395f0111::FloatingPointTest	typeref:typename:testing::internal::FloatingPoint<RawType>	file:
Floating-Point Comparison	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^## Floating-Point Comparison ##$/;"	s	chapter:More Assertions
Floating-Point Comparison	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^## Floating-Point Comparison ##$/;"	s	chapter:More Assertions
Floating-Point Comparison	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^## Floating-Point Comparison ##$/;"	s	chapter:More Assertions
Floating-Point Comparison	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^## Floating-Point Comparison ##$/;"	s	chapter:More Assertions
Floating-Point Macros	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^### Floating-Point Macros ###$/;"	S	section:More Assertions""Floating-Point Comparison
Floating-Point Macros	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^### Floating-Point Macros ###$/;"	S	section:More Assertions""Floating-Point Comparison
Floating-Point Macros	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^### Floating-Point Macros ###$/;"	S	section:More Assertions""Floating-Point Comparison
Floating-Point Macros	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^### Floating-Point Macros ###$/;"	S	section:More Assertions""Floating-Point Comparison
Floating-Point Matchers	src/tests/googletest/googlemock/docs/CheatSheet.md	/^## Floating-Point Matchers ##$/;"	s	chapter:Matchers
Floating-Point Matchers	src/tests/googletest/googlemock/docs/v1_5/CheatSheet.md	/^## Floating-Point Matchers ##$/;"	s	chapter:Matchers
Floating-Point Matchers	src/tests/googletest/googlemock/docs/v1_6/CheatSheet.md	/^## Floating-Point Matchers ##$/;"	s	chapter:Matchers
Floating-Point Matchers	src/tests/googletest/googlemock/docs/v1_7/CheatSheet.md	/^## Floating-Point Matchers ##$/;"	s	chapter:Matchers
Floating-Point Predicate-Format Functions	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^### Floating-Point Predicate-Format Functions ###$/;"	S	section:More Assertions""Floating-Point Comparison
Floating-Point Predicate-Format Functions	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^### Floating-Point Predicate-Format Functions ###$/;"	S	section:More Assertions""Floating-Point Comparison
Floating-Point Predicate-Format Functions	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^### Floating-Point Predicate-Format Functions ###$/;"	S	section:More Assertions""Floating-Point Comparison
Floating-Point Predicate-Format Functions	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^### Floating-Point Predicate-Format Functions ###$/;"	S	section:More Assertions""Floating-Point Comparison
FloatingEqMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  FloatingEqMatcher(FloatType expected, bool nan_eq_nan) :$/;"	f	class:testing::internal::FloatingEqMatcher
FloatingEqMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  FloatingEqMatcher(FloatType expected, bool nan_eq_nan,$/;"	f	class:testing::internal::FloatingEqMatcher
FloatingEqMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class FloatingEqMatcher {$/;"	c	namespace:testing::internal
FloatingPoint	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  explicit FloatingPoint(const RawType& x) { u_.value_ = x; }$/;"	f	class:testing::internal::FloatingPoint
FloatingPoint	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^class FloatingPoint {$/;"	c	namespace:testing::internal
FloatingPointLE	src/tests/googletest/googletest/src/gtest.cc	/^AssertionResult FloatingPointLE(const char* expr1,$/;"	f	namespace:testing::internal	typeref:typename:AssertionResult
FloatingPointNearTest	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^class FloatingPointNearTest : public FloatingPointTest<RawType> {$/;"	c	namespace:testing::gmock_matchers_test	file:
FloatingPointTest	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  FloatingPointTest()$/;"	f	class:testing::gmock_matchers_test::FloatingPointTest	file:
FloatingPointTest	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^class FloatingPointTest : public testing::Test {$/;"	c	namespace:testing::gmock_matchers_test	file:
FloatingPointTest	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class FloatingPointTest : public Test {$/;"	c	namespace:__anonf780395f0111	file:
FloatingPointUnion	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  union FloatingPointUnion {$/;"	u	class:testing::internal::FloatingPoint
FlushEdits	src/tests/googletest/googletest/src/gtest.cc	/^  void FlushEdits() {$/;"	f	class:testing::internal::edit_distance::__anon3f29b7680211::Hunk	typeref:typename:void	file:
FlushFunc	src/muduo/muduo/base/Logging.h	/^  typedef void (*FlushFunc)();$/;"	t	class:muduo::Logger	typeref:typename:void (*)()
FlushInfoLog	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^inline void FlushInfoLog() { fflush(NULL); }$/;"	f	namespace:testing::internal	typeref:typename:void
Fmt	src/muduo/muduo/base/LogStream.cc	/^Fmt::Fmt(const char* fmt, T val)$/;"	f	class:Fmt
Fmt	src/muduo/muduo/base/LogStream.h	/^class Fmt \/\/ : noncopyable$/;"	c	namespace:muduo
Foo	src/muduo/muduo/base/tests/Thread_test.cc	/^  explicit Foo(double x)$/;"	f	class:Foo	file:
Foo	src/muduo/muduo/base/tests/Thread_test.cc	/^class Foo$/;"	c	file:
Foo	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^  Foo() : value_(123) {}$/;"	f	class:__anon550198f10111::Foo	file:
Foo	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^class Foo {$/;"	c	namespace:__anon550198f10111	file:
Foo	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^  Foo() : value_(123) {}$/;"	f	class:testing::gmock_more_actions_test::Foo	file:
Foo	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^class Foo {$/;"	c	namespace:testing::gmock_more_actions_test	file:
Foo	src/tests/googletest/googlemock/test/gmock-nice-strict_test.cc	/^class Foo {$/;"	c	namespace:testing::gmock_nice_strict_test	file:
Foo	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^struct Foo {$/;"	s	namespace:testing::gtest_printers_test	file:
Foo	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  Foo() {}$/;"	f	class:__anonf780395f0311::Foo	file:
Foo	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class Foo {$/;"	c	namespace:__anonf780395f0311	file:
FooEnvironment	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^class FooEnvironment : public testing::Environment {$/;"	c	file:
FooInterface	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^class FooInterface {$/;"	c	namespace:testing::gmock_generated_function_mockers_test	file:
FooInterface	src/tests/googletest/googlemock/test/gmock_leak_test_.cc	/^class FooInterface {$/;"	c	namespace:__anon357885ae0111	file:
FooTest	src/tests/googletest/googletest/test/gtest_filter_unittest_.cc	/^class FooTest : public testing::Test {$/;"	c	namespace:__anon37ac2de30111	file:
FooTest	src/tests/googletest/googletest/test/gtest_list_tests_unittest_.cc	/^class FooTest : public testing::Test {$/;"	c	file:
FooTuple	src/tests/googletest/googletest/test/gtest-tuple_test.cc	/^  typedef tuple<const int, char> FooTuple;$/;"	t	function:__anona47613760111::TEST	typeref:typename:tuple<const int,char>	file:
FooTuple	src/tests/googletest/googletest/test/gtest-tuple_test.cc	/^  typedef tuple<int&, const char&> FooTuple;$/;"	t	function:__anona47613760111::TEST	typeref:typename:tuple<int &,const char &>	file:
ForEach	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^void ForEach(const Container& c, Functor functor) {$/;"	f	namespace:testing::internal	typeref:typename:void
ForNode	src/tests/googletest/googletest/scripts/pump.py	/^class ForNode:$/;"	c
Forcing a Verification	src/tests/googletest/googlemock/docs/CookBook.md	/^## Forcing a Verification ##$/;"	s	chapter:Misc Recipes on Using Google Mock
Forcing a Verification	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Forcing a Verification ##$/;"	s	chapter:Misc Recipes on Using Google Mock
Forcing a Verification	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Forcing a Verification ##$/;"	s	chapter:Misc Recipes on Using Google Mock
Forcing a Verification	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Forcing a Verification ##$/;"	s	chapter:Misc Recipes on Using Google Mock
ForkingDeathTest	src/tests/googletest/googletest/src/gtest-death-test.cc	/^ForkingDeathTest::ForkingDeathTest(const char* a_statement, const RE* a_regex)$/;"	f	class:testing::internal::ForkingDeathTest
ForkingDeathTest	src/tests/googletest/googletest/src/gtest-death-test.cc	/^class ForkingDeathTest : public DeathTestImpl {$/;"	c	namespace:testing::internal	file:
Format	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^  static ::std::string Format(const ToPrint& value) {$/;"	f	class:testing::internal::FormatForComparison	typeref:typename:::std::string
Format	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^  static ::std::string Format(const ToPrint* value) {$/;"	f	class:testing::internal::FormatForComparison	typeref:typename:::std::string
FormatBool	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  std::string FormatBool(bool value) { return value ? "1" : "0"; }$/;"	f	class:testing::internal::StreamingListener	typeref:typename:std::string
FormatByte	src/tests/googletest/googletest/src/gtest.cc	/^std::string String::FormatByte(unsigned char value) {$/;"	f	class:testing::internal::String	typeref:typename:std::string
FormatCompilerIndependentFileLocation	src/tests/googletest/googletest/src/gtest-port.cc	/^GTEST_API_ ::std::string FormatCompilerIndependentFileLocation($/;"	f	namespace:testing::internal	typeref:typename:GTEST_API_::std::string
FormatCountableNoun	src/tests/googletest/googletest/src/gtest.cc	/^static std::string FormatCountableNoun(int count,$/;"	f	namespace:testing	typeref:typename:std::string	file:
FormatCxxExceptionMessage	src/tests/googletest/googletest/src/gtest.cc	/^static std::string FormatCxxExceptionMessage(const char* description,$/;"	f	namespace:testing::internal	typeref:typename:std::string	file:
FormatDeathTestOutput	src/tests/googletest/googletest/src/gtest-death-test.cc	/^static ::std::string FormatDeathTestOutput(const ::std::string& output) {$/;"	f	namespace:testing::internal	typeref:typename:::std::string	file:
FormatEpochTimeInMillisAsIso8601	src/tests/googletest/googletest/src/gtest.cc	/^std::string FormatEpochTimeInMillisAsIso8601(TimeInMillis ms) {$/;"	f	namespace:testing::internal	typeref:typename:std::string
FormatEpochTimeInMillisAsIso8601Test	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class FormatEpochTimeInMillisAsIso8601Test : public Test {$/;"	c	namespace:__anonf780395f0111	file:
FormatFileLocation	src/tests/googletest/googletest/src/gtest-port.cc	/^GTEST_API_ ::std::string FormatFileLocation(const char* file, int line) {$/;"	f	namespace:testing::internal	typeref:typename:GTEST_API_::std::string
FormatForComparison	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^class FormatForComparison {$/;"	c	namespace:testing::internal
FormatForComparison	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^class FormatForComparison<ToPrint[N], OtherOperand> {$/;"	c	namespace:testing::internal
FormatForComparisonFailureMessage	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^std::string FormatForComparisonFailureMessage($/;"	f	namespace:testing::internal	typeref:typename:std::string
FormatHexInt	src/tests/googletest/googletest/src/gtest.cc	/^std::string String::FormatHexInt(int value) {$/;"	f	class:testing::internal::String	typeref:typename:std::string
FormatIntWidth2	src/tests/googletest/googletest/src/gtest.cc	/^std::string String::FormatIntWidth2(int value) {$/;"	f	class:testing::internal::String	typeref:typename:std::string
FormatMatcherDescription	src/tests/googletest/googlemock/src/gmock-matchers.cc	/^GTEST_API_ string FormatMatcherDescription(bool negation,$/;"	f	namespace:testing::internal	typeref:typename:GTEST_API_ string
FormatRegexSyntaxError	src/tests/googletest/googletest/src/gtest-port.cc	/^std::string FormatRegexSyntaxError(const char* regex, int index) {$/;"	f	namespace:testing::internal	typeref:typename:std::string
FormatSehExceptionMessage	src/tests/googletest/googletest/src/gtest.cc	/^static std::string* FormatSehExceptionMessage(DWORD exception_code,$/;"	f	namespace:testing	typeref:typename:std::string *	file:
FormatTestCaseCount	src/tests/googletest/googletest/src/gtest.cc	/^static std::string FormatTestCaseCount(int test_case_count) {$/;"	f	namespace:testing	typeref:typename:std::string	file:
FormatTestCount	src/tests/googletest/googletest/src/gtest.cc	/^static std::string FormatTestCount(int test_count) {$/;"	f	namespace:testing	typeref:typename:std::string	file:
FormatTimeInMillisAsSeconds	src/tests/googletest/googletest/src/gtest.cc	/^std::string FormatTimeInMillisAsSeconds(TimeInMillis ms) {$/;"	f	namespace:testing::internal	typeref:typename:std::string
FormatTimes	src/tests/googletest/googlemock/src/gmock-cardinalities.cc	/^inline std::string FormatTimes(int n) {$/;"	f	namespace:testing::__anon97b0a8450111	typeref:typename:std::string
FormatUnexpectedCallMessageLocked	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  void FormatUnexpectedCallMessageLocked($/;"	f	class:testing::internal::FunctionMockerBase	typeref:typename:void
FormatWordList	src/tests/googletest/googletest/src/gtest.cc	/^static std::string FormatWordList(const std::vector<std::string>& words) {$/;"	f	namespace:testing	typeref:typename:std::string	file:
Friend	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^class Friend(Expr):$/;"	c
FromType	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^  explicit FromType(bool* is_converted) : converted_(is_converted) {}$/;"	f	class:__anon550198f10111::FromType	file:
FromType	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^class FromType {$/;"	c	namespace:__anon550198f10111	file:
FullMatch	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  static bool FullMatch(const ::std::string& str, const RE& re) {$/;"	f	class:testing::internal::RE	typeref:typename:bool
FullMatch	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  static bool FullMatch(const ::string& str, const RE& re) {$/;"	f	class:testing::internal::RE	typeref:typename:bool
FullMatch	src/tests/googletest/googletest/src/gtest-port.cc	/^bool RE::FullMatch(const char* str, const RE& re) {$/;"	f	class:testing::internal::RE	typeref:typename:bool
FullName	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def FullName(self):$/;"	m	class:_GenericDeclaration
Func	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^    static void Func() {}$/;"	f	struct:testing::gmock_matchers_test::TEST::Helper	typeref:typename:void	file:
FuncWithAssert	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^void FuncWithAssert(int* n) {$/;"	f	typeref:typename:void
Function	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^struct Function<R()> {$/;"	s	namespace:testing::internal
Function	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^struct Function<R(A1)>$/;"	s	namespace:testing::internal
Function	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^struct Function<R(A1, A2)>$/;"	s	namespace:testing::internal
Function	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^struct Function<R(A1, A2, A3)>$/;"	s	namespace:testing::internal
Function	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^struct Function<R(A1, A2, A3, A4)>$/;"	s	namespace:testing::internal
Function	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^struct Function<R(A1, A2, A3, A4, A5)>$/;"	s	namespace:testing::internal
Function	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^struct Function<R(A1, A2, A3, A4, A5, A6)>$/;"	s	namespace:testing::internal
Function	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^struct Function<R(A1, A2, A3, A4, A5, A6, A7)>$/;"	s	namespace:testing::internal
Function	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^struct Function<R(A1, A2, A3, A4, A5, A6, A7, A8)>$/;"	s	namespace:testing::internal
Function	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^struct Function<R(A1, A2, A3, A4, A5, A6, A7, A8, A9)>$/;"	s	namespace:testing::internal
Function	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^struct Function<R(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)>$/;"	s	namespace:testing::internal
Function	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^class Function(_GenericDeclaration):$/;"	c
FunctionMocker	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^class FunctionMocker<R()> : public$/;"	c	namespace:testing::internal
FunctionMocker	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^class FunctionMocker<R(A1)> : public$/;"	c	namespace:testing::internal
FunctionMocker	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^class FunctionMocker<R(A1, A2)> : public$/;"	c	namespace:testing::internal
FunctionMocker	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^class FunctionMocker<R(A1, A2, A3)> : public$/;"	c	namespace:testing::internal
FunctionMocker	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^class FunctionMocker<R(A1, A2, A3, A4)> : public$/;"	c	namespace:testing::internal
FunctionMocker	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^class FunctionMocker<R(A1, A2, A3, A4, A5)> : public$/;"	c	namespace:testing::internal
FunctionMocker	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^class FunctionMocker<R(A1, A2, A3, A4, A5, A6)> : public$/;"	c	namespace:testing::internal
FunctionMocker	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^class FunctionMocker<R(A1, A2, A3, A4, A5, A6, A7)> : public$/;"	c	namespace:testing::internal
FunctionMocker	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^class FunctionMocker<R(A1, A2, A3, A4, A5, A6, A7, A8)> : public$/;"	c	namespace:testing::internal
FunctionMocker	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^class FunctionMocker<R(A1, A2, A3, A4, A5, A6, A7, A8, A9)> : public$/;"	c	namespace:testing::internal
FunctionMocker	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^class FunctionMocker<R(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)> : public$/;"	c	namespace:testing::internal
FunctionMockerBase	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  FunctionMockerBase() : current_spec_(this) {}$/;"	f	class:testing::internal::FunctionMockerBase
FunctionMockerBase	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^class FunctionMockerBase : public UntypedFunctionMockerBase {$/;"	c	namespace:testing::internal
FunctionMockerTest	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^  FunctionMockerTest() : foo_(&mock_foo_) {}$/;"	f	class:testing::gmock_generated_function_mockers_test::FunctionMockerTest	file:
FunctionMockerTest	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^class FunctionMockerTest : public testing::Test {$/;"	c	namespace:testing::gmock_generated_function_mockers_test	file:
FunctionMockers	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^typedef std::set<internal::UntypedFunctionMockerBase*> FunctionMockers;$/;"	t	namespace:testing::__anonc1446e5b0111	typeref:typename:std::set<internal::UntypedFunctionMockerBase * >	file:
Functor	src/muduo/muduo/net/EventLoop.h	/^  typedef std::function<void()> Functor;$/;"	t	class:muduo::net::EventLoop
Functor	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^struct Functor : public ::std::unary_function<int, std::string> {$/;"	s	namespace:testing::gmock_matchers_test	file:
FuseGMock	src/tests/googletest/googlemock/scripts/fuse_gmock_files.py	/^def FuseGMock(gmock_root, output_dir):$/;"	f
FuseGMockAllCcToFile	src/tests/googletest/googlemock/scripts/fuse_gmock_files.py	/^def FuseGMockAllCcToFile(gmock_root, output_file):$/;"	f
FuseGMockGTestAllCc	src/tests/googletest/googlemock/scripts/fuse_gmock_files.py	/^def FuseGMockGTestAllCc(gmock_root, output_dir):$/;"	f
FuseGMockH	src/tests/googletest/googlemock/scripts/fuse_gmock_files.py	/^def FuseGMockH(gmock_root, output_dir):$/;"	f
FuseGTest	src/tests/googletest/googletest/scripts/fuse_gtest_files.py	/^def FuseGTest(gtest_root, output_dir):$/;"	f
FuseGTestAllCc	src/tests/googletest/googletest/scripts/fuse_gtest_files.py	/^def FuseGTestAllCc(gtest_root, output_dir):$/;"	f
FuseGTestAllCcToFile	src/tests/googletest/googletest/scripts/fuse_gtest_files.py	/^def FuseGTestAllCcToFile(gtest_root, output_file):$/;"	f
FuseGTestH	src/tests/googletest/googletest/scripts/fuse_gtest_files.py	/^def FuseGTestH(gtest_root, output_dir):$/;"	f
Fusing Google Mock Source Files	src/tests/googletest/googlemock/docs/CookBook.md	/^## Fusing Google Mock Source Files ##$/;"	s	chapter:Misc Recipes on Using Google Mock
Fusing Google Mock Source Files	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Fusing Google Mock Source Files ##$/;"	s	chapter:Misc Recipes on Using Google Mock
Fusing Google Mock Source Files	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Fusing Google Mock Source Files ##$/;"	s	chapter:Misc Recipes on Using Google Mock
Fusing Google Mock Source Files	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Fusing Google Mock Source Files ##$/;"	s	chapter:Misc Recipes on Using Google Mock
Fusing Google Test Source Files	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^# Fusing Google Test Source Files #$/;"	c
Fusing Google Test Source Files	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^# Fusing Google Test Source Files #$/;"	c
Fusing Google Test Source Files	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^# Fusing Google Test Source Files #$/;"	c
Fusing Google Test Source Files	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^# Fusing Google Test Source Files #$/;"	c
Future Improvements	src/tests/googletest/googlemock/docs/DesignDoc.md	/^## Future Improvements ##$/;"	s	chapter:Macros for Defining Actions
GENERATE_TEST_FUNCTION_WITH_DIFFERENT_VALUE	src/tests/macros_decrypt_with_plaintext_modulus_macros.cpp	/^    #define GENERATE_TEST_FUNCTION_WITH_DIFFERENT_VALUE(/;"	d	file:
GENERATE_TEST_FUNCTION_WITH_DIFFERENT_VALUE	src/tests/macros_modSwitch_with_plaintext_modulus_macros.cpp	/^    #define GENERATE_TEST_FUNCTION_WITH_DIFFERENT_VALUE(/;"	d	file:
GENERATE_TFHE_PROGRAMMABLE_BOOTSTRAP_TEST	src/tests/macros_decrypt_with_plaintext_modulus_macros.cpp	/^    #define GENERATE_TFHE_PROGRAMMABLE_BOOTSTRAP_TEST(/;"	d	file:
GENERATE_TFHE_PROGRAMMABLE_BOOTSTRAP_TEST	src/tests/macros_modSwitch_with_plaintext_modulus_macros.cpp	/^    #define GENERATE_TFHE_PROGRAMMABLE_BOOTSTRAP_TEST(/;"	d	file:
GENERATE_TFHE_PROGRAMMABLE_BOOTSTRAP_WITHOUT_PBS_TEST	src/tests/macros_modSwitch_with_plaintext_modulus_macros.cpp	/^    #define GENERATE_TFHE_PROGRAMMABLE_BOOTSTRAP_WITHOUT_PBS_TEST(/;"	d	file:
GENGOLDEN_FLAG	src/tests/googletest/googlemock/test/gmock_output_test.py	/^GENGOLDEN_FLAG = '--gengolden'$/;"	v
GENGOLDEN_FLAG	src/tests/googletest/googletest/test/gtest_output_test.py	/^GENGOLDEN_FLAG = '--gengolden'$/;"	v
GMOCK_ACTION_ARG_TYPES_AND_NAMES_UNUSED_	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_ACTION_ARG_TYPES_AND_NAMES_UNUSED_\\/;"	d
GMOCK_ACTION_CLASS_	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_ACTION_CLASS_(/;"	d
GMOCK_ALLOWS_CONST_PARAM_FUNCTIONS	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^# define GMOCK_ALLOWS_CONST_PARAM_FUNCTIONS$/;"	d	file:
GMOCK_ALL_CC_SEED	src/tests/googletest/googlemock/scripts/fuse_gmock_files.py	/^GMOCK_ALL_CC_SEED = 'src\/gmock-all.cc'$/;"	v
GMOCK_ARG_	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define GMOCK_ARG_(/;"	d
GMOCK_DECLARE_KIND_	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^#define GMOCK_DECLARE_KIND_(/;"	d
GMOCK_DECLARE_bool_	src/tests/googletest/googlemock/include/gmock/internal/gmock-port.h	/^#define GMOCK_DECLARE_bool_(/;"	d
GMOCK_DECLARE_int32_	src/tests/googletest/googlemock/include/gmock/internal/gmock-port.h	/^#define GMOCK_DECLARE_int32_(/;"	d
GMOCK_DECLARE_string_	src/tests/googletest/googlemock/include/gmock/internal/gmock-port.h	/^#define GMOCK_DECLARE_string_(/;"	d
GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^#define GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_(/;"	d
GMOCK_DEFINE_bool_	src/tests/googletest/googlemock/include/gmock/internal/gmock-port.h	/^#define GMOCK_DEFINE_bool_(/;"	d
GMOCK_DEFINE_int32_	src/tests/googletest/googlemock/include/gmock/internal/gmock-port.h	/^#define GMOCK_DEFINE_int32_(/;"	d
GMOCK_DEFINE_string_	src/tests/googletest/googlemock/include/gmock/internal/gmock-port.h	/^#define GMOCK_DEFINE_string_(/;"	d
GMOCK_DIR	src/tests/googletest/googlemock/make/Makefile	/^GMOCK_DIR = ..$/;"	m
GMOCK_EXPECT_CALL_IMPL_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^#define GMOCK_EXPECT_CALL_IMPL_(/;"	d
GMOCK_FIELD_	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_FIELD_(/;"	d
GMOCK_FIELD_TYPE_	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^#define GMOCK_FIELD_TYPE_(/;"	d
GMOCK_FLAG	src/tests/googletest/googlemock/include/gmock/internal/gmock-port.h	/^#define GMOCK_FLAG(/;"	d
GMOCK_GMOCK_MORE_MATCHERS_H_	src/tests/googletest/googlemock/include/gmock/gmock-more-matchers.h	/^#define GMOCK_GMOCK_MORE_MATCHERS_H_$/;"	d
GMOCK_GROUP	src/tests/googletest/googlemock/scripts/upload_gmock.py	/^GMOCK_GROUP = 'googlemock@googlegroups.com'$/;"	v
GMOCK_GTEST_ALL_CC_OUTPUT	src/tests/googletest/googlemock/scripts/fuse_gmock_files.py	/^GMOCK_GTEST_ALL_CC_OUTPUT = 'gmock-gtest-all.cc'$/;"	v
GMOCK_HAS_SIGNED_WCHAR_T_	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^# define GMOCK_HAS_SIGNED_WCHAR_T_ /;"	d
GMOCK_HEADERS	src/tests/googletest/googlemock/make/Makefile	/^GMOCK_HEADERS = $(GMOCK_DIR)\/include\/gmock\/*.h \\$/;"	m
GMOCK_H_OUTPUT	src/tests/googletest/googlemock/scripts/fuse_gmock_files.py	/^GMOCK_H_OUTPUT = 'gmock\/gmock.h'$/;"	v
GMOCK_H_SEED	src/tests/googletest/googlemock/scripts/fuse_gmock_files.py	/^GMOCK_H_SEED = 'include\/gmock\/gmock.h'$/;"	v
GMOCK_INCLUDE_GMOCK_GMOCK_ACTIONS_H_	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^#define GMOCK_INCLUDE_GMOCK_GMOCK_ACTIONS_H_$/;"	d
GMOCK_INCLUDE_GMOCK_GMOCK_CARDINALITIES_H_	src/tests/googletest/googlemock/include/gmock/gmock-cardinalities.h	/^#define GMOCK_INCLUDE_GMOCK_GMOCK_CARDINALITIES_H_$/;"	d
GMOCK_INCLUDE_GMOCK_GMOCK_GENERATED_ACTIONS_H_	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INCLUDE_GMOCK_GMOCK_GENERATED_ACTIONS_H_$/;"	d
GMOCK_INCLUDE_GMOCK_GMOCK_GENERATED_FUNCTION_MOCKERS_H_	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define GMOCK_INCLUDE_GMOCK_GMOCK_GENERATED_FUNCTION_MOCKERS_H_$/;"	d
GMOCK_INCLUDE_GMOCK_GMOCK_GENERATED_MATCHERS_H_	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^#define GMOCK_INCLUDE_GMOCK_GMOCK_GENERATED_MATCHERS_H_$/;"	d
GMOCK_INCLUDE_GMOCK_GMOCK_GENERATED_NICE_STRICT_H_	src/tests/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h	/^#define GMOCK_INCLUDE_GMOCK_GMOCK_GENERATED_NICE_STRICT_H_$/;"	d
GMOCK_INCLUDE_GMOCK_GMOCK_H_	src/tests/googletest/googlemock/include/gmock/gmock.h	/^#define GMOCK_INCLUDE_GMOCK_GMOCK_H_$/;"	d
GMOCK_INCLUDE_GMOCK_GMOCK_MATCHERS_H_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^#define GMOCK_INCLUDE_GMOCK_GMOCK_MATCHERS_H_$/;"	d
GMOCK_INCLUDE_GMOCK_GMOCK_MORE_ACTIONS_H_	src/tests/googletest/googlemock/include/gmock/gmock-more-actions.h	/^#define GMOCK_INCLUDE_GMOCK_GMOCK_MORE_ACTIONS_H_$/;"	d
GMOCK_INCLUDE_GMOCK_GMOCK_SPEC_BUILDERS_H_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^#define GMOCK_INCLUDE_GMOCK_GMOCK_SPEC_BUILDERS_H_$/;"	d
GMOCK_INCLUDE_GMOCK_INTERNAL_CUSTOM_CALLBACK_MATCHERS_H_	src/tests/googletest/googlemock/include/gmock/internal/custom/gmock-matchers.h	/^#define GMOCK_INCLUDE_GMOCK_INTERNAL_CUSTOM_CALLBACK_MATCHERS_H_$/;"	d
GMOCK_INCLUDE_GMOCK_INTERNAL_CUSTOM_GMOCK_GENERATED_ACTIONS_H_	src/tests/googletest/googlemock/include/gmock/internal/custom/gmock-generated-actions.h	/^#define GMOCK_INCLUDE_GMOCK_INTERNAL_CUSTOM_GMOCK_GENERATED_ACTIONS_H_$/;"	d
GMOCK_INCLUDE_GMOCK_INTERNAL_CUSTOM_GMOCK_PORT_H_	src/tests/googletest/googlemock/include/gmock/internal/custom/gmock-port.h	/^#define GMOCK_INCLUDE_GMOCK_INTERNAL_CUSTOM_GMOCK_PORT_H_$/;"	d
GMOCK_INCLUDE_GMOCK_INTERNAL_GMOCK_GENERATED_INTERNAL_UTILS_H_	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^#define GMOCK_INCLUDE_GMOCK_INTERNAL_GMOCK_GENERATED_INTERNAL_UTILS_H_$/;"	d
GMOCK_INCLUDE_GMOCK_INTERNAL_GMOCK_INTERNAL_UTILS_H_	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^#define GMOCK_INCLUDE_GMOCK_INTERNAL_GMOCK_INTERNAL_UTILS_H_$/;"	d
GMOCK_INCLUDE_GMOCK_INTERNAL_GMOCK_PORT_H_	src/tests/googletest/googlemock/include/gmock/internal/gmock-port.h	/^#define GMOCK_INCLUDE_GMOCK_INTERNAL_GMOCK_PORT_H_$/;"	d
GMOCK_INTERNAL_COUNT_AND_0_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_COUNT_AND_0_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_COUNT_AND_10_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_COUNT_AND_10_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_COUNT_AND_1_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_COUNT_AND_1_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_COUNT_AND_2_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_COUNT_AND_2_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_COUNT_AND_3_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_COUNT_AND_3_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_COUNT_AND_4_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_COUNT_AND_4_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_COUNT_AND_5_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_COUNT_AND_5_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_COUNT_AND_6_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_COUNT_AND_6_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_COUNT_AND_7_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_COUNT_AND_7_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_COUNT_AND_8_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_COUNT_AND_8_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_COUNT_AND_9_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_COUNT_AND_9_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_DECL_AND_0_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DECL_AND_0_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_DECL_AND_10_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DECL_AND_10_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_DECL_AND_1_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DECL_AND_1_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_DECL_AND_2_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DECL_AND_2_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_DECL_AND_3_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DECL_AND_3_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_DECL_AND_4_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DECL_AND_4_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_DECL_AND_5_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DECL_AND_5_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_DECL_AND_6_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DECL_AND_6_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_DECL_AND_7_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DECL_AND_7_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_DECL_AND_8_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DECL_AND_8_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_DECL_AND_9_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DECL_AND_9_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_DECL_HAS_10_TEMPLATE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DECL_HAS_10_TEMPLATE_PARAMS(/;"	d
GMOCK_INTERNAL_DECL_HAS_1_TEMPLATE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DECL_HAS_1_TEMPLATE_PARAMS(/;"	d
GMOCK_INTERNAL_DECL_HAS_2_TEMPLATE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DECL_HAS_2_TEMPLATE_PARAMS(/;"	d
GMOCK_INTERNAL_DECL_HAS_3_TEMPLATE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DECL_HAS_3_TEMPLATE_PARAMS(/;"	d
GMOCK_INTERNAL_DECL_HAS_4_TEMPLATE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DECL_HAS_4_TEMPLATE_PARAMS(/;"	d
GMOCK_INTERNAL_DECL_HAS_5_TEMPLATE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DECL_HAS_5_TEMPLATE_PARAMS(/;"	d
GMOCK_INTERNAL_DECL_HAS_6_TEMPLATE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DECL_HAS_6_TEMPLATE_PARAMS(/;"	d
GMOCK_INTERNAL_DECL_HAS_7_TEMPLATE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DECL_HAS_7_TEMPLATE_PARAMS(/;"	d
GMOCK_INTERNAL_DECL_HAS_8_TEMPLATE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DECL_HAS_8_TEMPLATE_PARAMS(/;"	d
GMOCK_INTERNAL_DECL_HAS_9_TEMPLATE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DECL_HAS_9_TEMPLATE_PARAMS(/;"	d
GMOCK_INTERNAL_DECL_TYPE_AND_0_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DECL_TYPE_AND_0_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_DECL_TYPE_AND_10_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DECL_TYPE_AND_10_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_DECL_TYPE_AND_1_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DECL_TYPE_AND_1_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_DECL_TYPE_AND_2_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DECL_TYPE_AND_2_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_DECL_TYPE_AND_3_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DECL_TYPE_AND_3_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_DECL_TYPE_AND_4_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DECL_TYPE_AND_4_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_DECL_TYPE_AND_5_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DECL_TYPE_AND_5_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_DECL_TYPE_AND_6_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DECL_TYPE_AND_6_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_DECL_TYPE_AND_7_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DECL_TYPE_AND_7_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_DECL_TYPE_AND_8_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DECL_TYPE_AND_8_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_DECL_TYPE_AND_9_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DECL_TYPE_AND_9_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_DEFN_AND_0_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DEFN_AND_0_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_DEFN_AND_10_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DEFN_AND_10_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_DEFN_AND_1_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DEFN_AND_1_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_DEFN_AND_2_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DEFN_AND_2_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_DEFN_AND_3_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DEFN_AND_3_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_DEFN_AND_4_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DEFN_AND_4_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_DEFN_AND_5_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DEFN_AND_5_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_DEFN_AND_6_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DEFN_AND_6_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_DEFN_AND_7_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DEFN_AND_7_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_DEFN_AND_8_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DEFN_AND_8_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_DEFN_AND_9_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_DEFN_AND_9_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_INIT_AND_0_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_INIT_AND_0_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_INIT_AND_10_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_INIT_AND_10_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_INIT_AND_1_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_INIT_AND_1_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_INIT_AND_2_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_INIT_AND_2_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_INIT_AND_3_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_INIT_AND_3_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_INIT_AND_4_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_INIT_AND_4_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_INIT_AND_5_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_INIT_AND_5_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_INIT_AND_6_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_INIT_AND_6_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_INIT_AND_7_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_INIT_AND_7_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_INIT_AND_8_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_INIT_AND_8_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_INIT_AND_9_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_INIT_AND_9_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_LIST_AND_0_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_LIST_AND_0_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_LIST_AND_10_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_LIST_AND_10_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_LIST_AND_1_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_LIST_AND_1_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_LIST_AND_2_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_LIST_AND_2_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_LIST_AND_3_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_LIST_AND_3_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_LIST_AND_4_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_LIST_AND_4_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_LIST_AND_5_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_LIST_AND_5_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_LIST_AND_6_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_LIST_AND_6_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_LIST_AND_7_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_LIST_AND_7_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_LIST_AND_8_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_LIST_AND_8_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_LIST_AND_9_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_LIST_AND_9_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_LIST_HAS_10_TEMPLATE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_LIST_HAS_10_TEMPLATE_PARAMS(/;"	d
GMOCK_INTERNAL_LIST_HAS_1_TEMPLATE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_LIST_HAS_1_TEMPLATE_PARAMS(/;"	d
GMOCK_INTERNAL_LIST_HAS_2_TEMPLATE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_LIST_HAS_2_TEMPLATE_PARAMS(/;"	d
GMOCK_INTERNAL_LIST_HAS_3_TEMPLATE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_LIST_HAS_3_TEMPLATE_PARAMS(/;"	d
GMOCK_INTERNAL_LIST_HAS_4_TEMPLATE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_LIST_HAS_4_TEMPLATE_PARAMS(/;"	d
GMOCK_INTERNAL_LIST_HAS_5_TEMPLATE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_LIST_HAS_5_TEMPLATE_PARAMS(/;"	d
GMOCK_INTERNAL_LIST_HAS_6_TEMPLATE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_LIST_HAS_6_TEMPLATE_PARAMS(/;"	d
GMOCK_INTERNAL_LIST_HAS_7_TEMPLATE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_LIST_HAS_7_TEMPLATE_PARAMS(/;"	d
GMOCK_INTERNAL_LIST_HAS_8_TEMPLATE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_LIST_HAS_8_TEMPLATE_PARAMS(/;"	d
GMOCK_INTERNAL_LIST_HAS_9_TEMPLATE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_LIST_HAS_9_TEMPLATE_PARAMS(/;"	d
GMOCK_INTERNAL_LIST_TYPE_AND_0_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_LIST_TYPE_AND_0_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_LIST_TYPE_AND_10_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_LIST_TYPE_AND_10_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_LIST_TYPE_AND_1_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_LIST_TYPE_AND_1_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_LIST_TYPE_AND_2_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_LIST_TYPE_AND_2_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_LIST_TYPE_AND_3_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_LIST_TYPE_AND_3_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_LIST_TYPE_AND_4_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_LIST_TYPE_AND_4_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_LIST_TYPE_AND_5_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_LIST_TYPE_AND_5_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_LIST_TYPE_AND_6_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_LIST_TYPE_AND_6_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_LIST_TYPE_AND_7_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_LIST_TYPE_AND_7_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_LIST_TYPE_AND_8_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_LIST_TYPE_AND_8_VALUE_PARAMS(/;"	d
GMOCK_INTERNAL_LIST_TYPE_AND_9_VALUE_PARAMS	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^#define GMOCK_INTERNAL_LIST_TYPE_AND_9_VALUE_PARAMS(/;"	d
GMOCK_IS_SIGNED_	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^#define GMOCK_IS_SIGNED_(/;"	d
GMOCK_KIND_OF_	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^#define GMOCK_KIND_OF_(/;"	d
GMOCK_MATCHER_	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define GMOCK_MATCHER_(/;"	d
GMOCK_METHOD0_	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define GMOCK_METHOD0_(/;"	d
GMOCK_METHOD10_	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define GMOCK_METHOD10_(/;"	d
GMOCK_METHOD1_	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define GMOCK_METHOD1_(/;"	d
GMOCK_METHOD2_	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define GMOCK_METHOD2_(/;"	d
GMOCK_METHOD3_	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define GMOCK_METHOD3_(/;"	d
GMOCK_METHOD4_	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define GMOCK_METHOD4_(/;"	d
GMOCK_METHOD5_	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define GMOCK_METHOD5_(/;"	d
GMOCK_METHOD6_	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define GMOCK_METHOD6_(/;"	d
GMOCK_METHOD7_	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define GMOCK_METHOD7_(/;"	d
GMOCK_METHOD8_	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define GMOCK_METHOD8_(/;"	d
GMOCK_METHOD9_	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define GMOCK_METHOD9_(/;"	d
GMOCK_MOCKER_	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define GMOCK_MOCKER_(/;"	d
GMOCK_ON_CALL_IMPL_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^#define GMOCK_ON_CALL_IMPL_(/;"	d
GMOCK_RESULT_	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define GMOCK_RESULT_(/;"	d
GMOCK_SOURCE_INGLUDES	src/tests/googletest/googlemock/Makefile.am	/^GMOCK_SOURCE_INGLUDES = \\$/;"	m
GMOCK_SRCS_	src/tests/googletest/googlemock/make/Makefile	/^GMOCK_SRCS_ = $(GMOCK_DIR)\/src\/*.cc $(GMOCK_HEADERS)$/;"	m
GMOCK_TEST_GMOCK_LINK_TEST_H_	src/tests/googletest/googlemock/test/gmock_link_test.h	/^#define GMOCK_TEST_GMOCK_LINK_TEST_H_$/;"	d
GMOCK_UNVERSIONED_WIKIS	src/tests/googletest/googletest/scripts/release_docs.py	/^GMOCK_UNVERSIONED_WIKIS = [$/;"	v
GMOCK_WCHAR_T_IS_NATIVE_	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^# define GMOCK_WCHAR_T_IS_NATIVE_ /;"	d
GMockLeakTest	src/tests/googletest/googlemock/test/gmock_leak_test.py	/^class GMockLeakTest(gmock_test_utils.TestCase):$/;"	c
GMockLogTest	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^class GMockLogTest : public VerboseFlagPreservingFixture {$/;"	c	namespace:__anon6b6cf3b20111	file:
GMockOutputTest	src/tests/googletest/googlemock/test/gmock_output_test.py	/^class GMockOutputTest(gmock_test_utils.TestCase):$/;"	c
GMockOutputTest	src/tests/googletest/googlemock/test/gmock_output_test_.cc	/^class GMockOutputTest : public testing::Test {$/;"	c	file:
GMockVerboseFlagTest	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^class GMockVerboseFlagTest : public VerboseFlagPreservingFixture {$/;"	c	namespace:__anon6b6cf3b20111	file:
GOLDEN_NAME	src/tests/googletest/googlemock/test/gmock_output_test.py	/^GOLDEN_NAME = 'gmock_output_test_golden.txt'$/;"	v
GOLDEN_NAME	src/tests/googletest/googletest/test/gtest_output_test.py	/^GOLDEN_NAME = 'gtest_output_test_golden_lin.txt'$/;"	v
GOLDEN_PATH	src/tests/googletest/googlemock/test/gmock_output_test.py	/^GOLDEN_PATH = os.path.join(gmock_test_utils.GetSourceDir(), GOLDEN_NAME)$/;"	v
GOLDEN_PATH	src/tests/googletest/googletest/test/gtest_output_test.py	/^GOLDEN_PATH = os.path.join(gtest_test_utils.GetSourceDir(), GOLDEN_NAME)$/;"	v
GTEST_0_TUPLE_	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^#define GTEST_0_TUPLE_(/;"	d
GTEST_0_TYPENAMES_	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^#define GTEST_0_TYPENAMES_(/;"	d
GTEST_10_TUPLE_	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^#define GTEST_10_TUPLE_(/;"	d
GTEST_10_TYPENAMES_	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^#define GTEST_10_TYPENAMES_(/;"	d
GTEST_1_TUPLE_	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^#define GTEST_1_TUPLE_(/;"	d
GTEST_1_TUPLE_	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^class GTEST_1_TUPLE_(T) {$/;"	f	namespace:std::tr1	typeref:meta:class
GTEST_1_TYPENAMES_	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^#define GTEST_1_TYPENAMES_(/;"	d
GTEST_2_TUPLE_	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^#define GTEST_2_TUPLE_(/;"	d
GTEST_2_TYPENAMES_	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^#define GTEST_2_TYPENAMES_(/;"	d
GTEST_3_TUPLE_	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^#define GTEST_3_TUPLE_(/;"	d
GTEST_3_TYPENAMES_	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^#define GTEST_3_TYPENAMES_(/;"	d
GTEST_4_TUPLE_	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^#define GTEST_4_TUPLE_(/;"	d
GTEST_4_TYPENAMES_	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^#define GTEST_4_TYPENAMES_(/;"	d
GTEST_5_TUPLE_	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^#define GTEST_5_TUPLE_(/;"	d
GTEST_5_TYPENAMES_	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^#define GTEST_5_TYPENAMES_(/;"	d
GTEST_6_TUPLE_	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^#define GTEST_6_TUPLE_(/;"	d
GTEST_6_TYPENAMES_	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^#define GTEST_6_TYPENAMES_(/;"	d
GTEST_7_TUPLE_	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^#define GTEST_7_TUPLE_(/;"	d
GTEST_7_TYPENAMES_	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^#define GTEST_7_TYPENAMES_(/;"	d
GTEST_8_TUPLE_	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^#define GTEST_8_TUPLE_(/;"	d
GTEST_8_TYPENAMES_	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^#define GTEST_8_TYPENAMES_(/;"	d
GTEST_9_TUPLE_	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^#define GTEST_9_TUPLE_(/;"	d
GTEST_9_TYPENAMES_	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^#define GTEST_9_TYPENAMES_(/;"	d
GTEST_ADD_REFERENCE_	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^#define GTEST_ADD_REFERENCE_(/;"	d
GTEST_ADD_REF_	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^#define GTEST_ADD_REF_(/;"	d
GTEST_ALL_CC_OUTPUT	src/tests/googletest/googletest/scripts/fuse_gtest_files.py	/^GTEST_ALL_CC_OUTPUT = 'gtest\/gtest-all.cc'$/;"	v
GTEST_ALL_CC_SEED	src/tests/googletest/googletest/scripts/fuse_gtest_files.py	/^GTEST_ALL_CC_SEED = 'src\/gtest-all.cc'$/;"	v
GTEST_AMBIGUOUS_ELSE_BLOCKER_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_AMBIGUOUS_ELSE_BLOCKER_ /;"	d
GTEST_AMBIGUOUS_ELSE_BLOCKER_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_AMBIGUOUS_ELSE_BLOCKER_$/;"	d
GTEST_API_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#  define GTEST_API_ /;"	d
GTEST_API_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_API_ /;"	d
GTEST_API_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_API_$/;"	d
GTEST_ARRAY_SIZE_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#define GTEST_ARRAY_SIZE_(/;"	d
GTEST_ASSERT_	src/tests/googletest/googletest/include/gtest/gtest_pred_impl.h	/^#define GTEST_ASSERT_(/;"	d
GTEST_ASSERT_EQ	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define GTEST_ASSERT_EQ(/;"	d
GTEST_ASSERT_GE	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define GTEST_ASSERT_GE(/;"	d
GTEST_ASSERT_GT	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define GTEST_ASSERT_GT(/;"	d
GTEST_ASSERT_LE	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define GTEST_ASSERT_LE(/;"	d
GTEST_ASSERT_LT	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define GTEST_ASSERT_LT(/;"	d
GTEST_ASSERT_NE	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define GTEST_ASSERT_NE(/;"	d
GTEST_ATTRIBUTE_NO_SANITIZE_ADDRESS_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#  define GTEST_ATTRIBUTE_NO_SANITIZE_ADDRESS_ /;"	d
GTEST_ATTRIBUTE_NO_SANITIZE_ADDRESS_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#  define GTEST_ATTRIBUTE_NO_SANITIZE_ADDRESS_$/;"	d
GTEST_ATTRIBUTE_NO_SANITIZE_ADDRESS_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_ATTRIBUTE_NO_SANITIZE_ADDRESS_$/;"	d
GTEST_ATTRIBUTE_NO_SANITIZE_MEMORY_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#  define GTEST_ATTRIBUTE_NO_SANITIZE_MEMORY_ /;"	d
GTEST_ATTRIBUTE_NO_SANITIZE_MEMORY_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#  define GTEST_ATTRIBUTE_NO_SANITIZE_MEMORY_$/;"	d
GTEST_ATTRIBUTE_NO_SANITIZE_MEMORY_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_ATTRIBUTE_NO_SANITIZE_MEMORY_$/;"	d
GTEST_ATTRIBUTE_NO_SANITIZE_THREAD_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#  define GTEST_ATTRIBUTE_NO_SANITIZE_THREAD_ /;"	d
GTEST_ATTRIBUTE_NO_SANITIZE_THREAD_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#  define GTEST_ATTRIBUTE_NO_SANITIZE_THREAD_$/;"	d
GTEST_ATTRIBUTE_NO_SANITIZE_THREAD_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_ATTRIBUTE_NO_SANITIZE_THREAD_$/;"	d
GTEST_ATTRIBUTE_PRINTF_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#  define GTEST_ATTRIBUTE_PRINTF_(/;"	d
GTEST_ATTRIBUTE_PRINTF_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_ATTRIBUTE_PRINTF_(/;"	d
GTEST_ATTRIBUTE_UNUSED_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^} GTEST_ATTRIBUTE_UNUSED_;$/;"	v	namespace:testing	typeref:class:testing::InSequence
GTEST_ATTRIBUTE_UNUSED_	src/tests/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h	/^  } GTEST_ATTRIBUTE_UNUSED_;$/;"	m	class:testing::internal::DeathTest	typeref:class:testing::internal::DeathTest::ReturnSentinel
GTEST_ATTRIBUTE_UNUSED_	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^} GTEST_ATTRIBUTE_UNUSED_;  \/\/ A ScopedTrace object does its job in its$/;"	v	namespace:testing::internal	typeref:class:testing::internal::ScopedTrace
GTEST_ATTRIBUTE_UNUSED_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#  define GTEST_ATTRIBUTE_UNUSED_ /;"	d
GTEST_ATTRIBUTE_UNUSED_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_ATTRIBUTE_UNUSED_ /;"	d
GTEST_ATTRIBUTE_UNUSED_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_ATTRIBUTE_UNUSED_$/;"	d
GTEST_ATTRIBUTE_UNUSED_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^} GTEST_ATTRIBUTE_UNUSED_;$/;"	v	namespace:testing::internal	typeref:class:testing::internal::GTestFlagSaver
GTEST_ATTRIBUTE_UNUSED_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^static bool dummy1 GTEST_ATTRIBUTE_UNUSED_ = StaticAssertTypeEq<bool, bool>();$/;"	v	typeref:typename:bool dummy1	file:
GTEST_ATTRIBUTE_UNUSED_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^static bool dummy2 GTEST_ATTRIBUTE_UNUSED_ =$/;"	v	typeref:typename:bool dummy2	file:
GTEST_BIND_	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^# define GTEST_BIND_(/;"	d
GTEST_BY_REF_	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^#define GTEST_BY_REF_(/;"	d
GTEST_CAN_COMPARE_NULL	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_CAN_COMPARE_NULL /;"	d
GTEST_CAN_STREAM_RESULTS_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_CAN_STREAM_RESULTS_ /;"	d
GTEST_CASE_NAMESPACE_	src/tests/googletest/googletest/include/gtest/gtest-typed-test.h	/^# define GTEST_CASE_NAMESPACE_(/;"	d
GTEST_CHECK_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_CHECK_(/;"	d
GTEST_CHECK_INT_EQ_	src/tests/googletest/googletest/test/gtest_repeat_test.cc	/^#define GTEST_CHECK_INT_EQ_(/;"	d	file:
GTEST_CHECK_POSIX_SUCCESS_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#define GTEST_CHECK_POSIX_SUCCESS_(/;"	d
GTEST_COMPILE_ASSERT_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_COMPILE_ASSERT_(/;"	d
GTEST_CONCAT_TOKEN_	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^#define GTEST_CONCAT_TOKEN_(foo, bar) GTEST_CONCAT_TOKEN_I/;"	d
GTEST_CONCAT_TOKEN_IMPL_	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^#define GTEST_CONCAT_TOKEN_IMPL_(/;"	d
GTEST_CRITICAL_SECTION	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^typedef struct _CRITICAL_SECTION GTEST_CRITICAL_SECTION;$/;"	t	typeref:struct:_CRITICAL_SECTION
GTEST_CRITICAL_SECTION	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^typedef struct _RTL_CRITICAL_SECTION GTEST_CRITICAL_SECTION;$/;"	t	typeref:struct:_RTL_CRITICAL_SECTION
GTEST_DEATH_TEST_	src/tests/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h	/^# define GTEST_DEATH_TEST_(/;"	d
GTEST_DEATH_TEST_CHECK_	src/tests/googletest/googletest/src/gtest-death-test.cc	/^# define GTEST_DEATH_TEST_CHECK_(/;"	d	file:
GTEST_DEATH_TEST_CHECK_SYSCALL_	src/tests/googletest/googletest/src/gtest-death-test.cc	/^# define GTEST_DEATH_TEST_CHECK_SYSCALL_(/;"	d	file:
GTEST_DECLARE_STATIC_MUTEX_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#  define GTEST_DECLARE_STATIC_MUTEX_(/;"	d
GTEST_DECLARE_STATIC_MUTEX_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_DECLARE_STATIC_MUTEX_(/;"	d
GTEST_DECLARE_TUPLE_AS_FRIEND_	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^# define GTEST_DECLARE_TUPLE_AS_FRIEND_ /;"	d
GTEST_DECLARE_bool_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_DECLARE_bool_(/;"	d
GTEST_DECLARE_int32_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_DECLARE_int32_(/;"	d
GTEST_DECLARE_string_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#define GTEST_DECLARE_string_(/;"	d
GTEST_DEFAULT_OUTPUT_FILE	src/tests/googletest/googletest/test/gtest_xml_output_unittest.py	/^GTEST_DEFAULT_OUTPUT_FILE = "test_detail.xml"$/;"	v
GTEST_DEFAULT_OUTPUT_FILE	src/tests/googletest/googletest/test/gtest_xml_test_utils.py	/^GTEST_DEFAULT_OUTPUT_FILE = 'test_detail.xml'$/;"	v
GTEST_DEFINE_STATIC_MUTEX_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#  define GTEST_DEFINE_STATIC_MUTEX_(/;"	d
GTEST_DEFINE_STATIC_MUTEX_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_DEFINE_STATIC_MUTEX_(/;"	d
GTEST_DEFINE_bool_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#define GTEST_DEFINE_bool_(/;"	d
GTEST_DEFINE_int32_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#define GTEST_DEFINE_int32_(/;"	d
GTEST_DEFINE_string_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#define GTEST_DEFINE_string_(/;"	d
GTEST_DEV_EMAIL_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_DEV_EMAIL_ /;"	d
GTEST_DIR	src/tests/googletest/googlemock/make/Makefile	/^GTEST_DIR = ..\/..\/googletest$/;"	m
GTEST_DIR	src/tests/googletest/googletest/make/Makefile	/^GTEST_DIR = ..$/;"	m
GTEST_DISABLE_MSC_WARNINGS_POP_	src/tests/googletest/googletest/include/gtest/gtest.h	/^  GTEST_DISABLE_MSC_WARNINGS_POP_()$/;"	f	class:testing::AssertionResult
GTEST_DISABLE_MSC_WARNINGS_POP_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_DISABLE_MSC_WARNINGS_POP_(/;"	d
GTEST_DISABLE_MSC_WARNINGS_PUSH_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_DISABLE_MSC_WARNINGS_PUSH_(/;"	d
GTEST_DISALLOW_ASSIGN_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#define GTEST_DISALLOW_ASSIGN_(/;"	d
GTEST_DISALLOW_COPY_AND_ASSIGN_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#define GTEST_DISALLOW_COPY_AND_ASSIGN_(/;"	d
GTEST_ELLIPSIS_NEEDS_POD_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_ELLIPSIS_NEEDS_POD_ /;"	d
GTEST_ENV_HAS_STD_TUPLE_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#  define GTEST_ENV_HAS_STD_TUPLE_ /;"	d
GTEST_ENV_HAS_TR1_TUPLE_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#  define GTEST_ENV_HAS_TR1_TUPLE_ /;"	d
GTEST_ERROR	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  GTEST_ERROR,$/;"	e	enum:testing::internal::GTestLogSeverity
GTEST_EXCLUSIVE_LOCK_REQUIRED_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_EXCLUSIVE_LOCK_REQUIRED_(/;"	d
GTEST_EXECUTE_DEATH_TEST_STATEMENT_	src/tests/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h	/^#  define GTEST_EXECUTE_DEATH_TEST_STATEMENT_(/;"	d
GTEST_EXECUTE_STATEMENT_	src/tests/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h	/^# define GTEST_EXECUTE_STATEMENT_(/;"	d
GTEST_FAIL	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define GTEST_FAIL(/;"	d
GTEST_FATAL	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  GTEST_FATAL$/;"	e	enum:testing::internal::GTestLogSeverity
GTEST_FATAL_FAILURE_	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^#define GTEST_FATAL_FAILURE_(/;"	d
GTEST_FILTER_FLAG	src/tests/googletest/googletest/test/gtest_xml_output_unittest.py	/^GTEST_FILTER_FLAG = '--gtest_filter'$/;"	v
GTEST_FLAG	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_FLAG(/;"	d
GTEST_FLAG_PREFIX_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_FLAG_PREFIX_ /;"	d
GTEST_FLAG_PREFIX_DASH_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_FLAG_PREFIX_DASH_ /;"	d
GTEST_FLAG_PREFIX_UPPER_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_FLAG_PREFIX_UPPER_ /;"	d
GTEST_FLAG_SAVER_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_FLAG_SAVER_ /;"	d
GTEST_GCC_VER_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_GCC_VER_ /;"	d
GTEST_GROUP	src/tests/googletest/googletest/scripts/upload_gtest.py	/^GTEST_GROUP = 'googletestframework@googlegroups.com'$/;"	v
GTEST_HAS_ALT_PATH_SEP_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_HAS_ALT_PATH_SEP_ /;"	d
GTEST_HAS_CLONE	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#     define GTEST_HAS_CLONE /;"	d
GTEST_HAS_CLONE	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#   define GTEST_HAS_CLONE /;"	d
GTEST_HAS_CLONE	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#  define GTEST_HAS_CLONE /;"	d
GTEST_HAS_COMBINE	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_HAS_COMBINE /;"	d
GTEST_HAS_CXXABI_H_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_HAS_CXXABI_H_ /;"	d
GTEST_HAS_DEATH_TEST	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_HAS_DEATH_TEST /;"	d
GTEST_HAS_EXCEPTIONS	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#  define GTEST_HAS_EXCEPTIONS /;"	d
GTEST_HAS_GETTIMEOFDAY_	src/tests/googletest/googletest/src/gtest.cc	/^#  define GTEST_HAS_GETTIMEOFDAY_ /;"	d	file:
GTEST_HAS_GETTIMEOFDAY_	src/tests/googletest/googletest/src/gtest.cc	/^# define GTEST_HAS_GETTIMEOFDAY_ /;"	d	file:
GTEST_HAS_GLOBAL_STRING	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_HAS_GLOBAL_STRING /;"	d
GTEST_HAS_GLOBAL_WSTRING	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_HAS_GLOBAL_WSTRING /;"	d
GTEST_HAS_HASH_MAP_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#  define GTEST_HAS_HASH_MAP_ /;"	d
GTEST_HAS_HASH_SET_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#  define GTEST_HAS_HASH_SET_ /;"	d
GTEST_HAS_PARAM_TEST	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#define GTEST_HAS_PARAM_TEST /;"	d
GTEST_HAS_POSIX_RE	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#  define GTEST_HAS_POSIX_RE /;"	d
GTEST_HAS_PTHREAD	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_HAS_PTHREAD /;"	d
GTEST_HAS_RTTI	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#    define GTEST_HAS_RTTI /;"	d
GTEST_HAS_RTTI	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#   define GTEST_HAS_RTTI /;"	d
GTEST_HAS_RTTI	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#  define GTEST_HAS_RTTI /;"	d
GTEST_HAS_SEH	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#  define GTEST_HAS_SEH /;"	d
GTEST_HAS_STD_BEGIN_AND_END_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_HAS_STD_BEGIN_AND_END_ /;"	d
GTEST_HAS_STD_FORWARD_LIST_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_HAS_STD_FORWARD_LIST_ /;"	d
GTEST_HAS_STD_FUNCTION_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_HAS_STD_FUNCTION_ /;"	d
GTEST_HAS_STD_INITIALIZER_LIST_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_HAS_STD_INITIALIZER_LIST_ /;"	d
GTEST_HAS_STD_MOVE_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_HAS_STD_MOVE_ /;"	d
GTEST_HAS_STD_SHARED_PTR_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_HAS_STD_SHARED_PTR_ /;"	d
GTEST_HAS_STD_STRING	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_HAS_STD_STRING /;"	d
GTEST_HAS_STD_TUPLE_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_HAS_STD_TUPLE_ /;"	d
GTEST_HAS_STD_TYPE_TRAITS_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_HAS_STD_TYPE_TRAITS_ /;"	d
GTEST_HAS_STD_UNIQUE_PTR_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_HAS_STD_UNIQUE_PTR_ /;"	d
GTEST_HAS_STD_WSTRING	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_HAS_STD_WSTRING /;"	d
GTEST_HAS_STREAM_REDIRECTION	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#  define GTEST_HAS_STREAM_REDIRECTION /;"	d
GTEST_HAS_TR1_TUPLE	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#  define GTEST_HAS_TR1_TUPLE /;"	d
GTEST_HAS_TYPED_TEST	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_HAS_TYPED_TEST /;"	d
GTEST_HAS_TYPED_TEST_P	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_HAS_TYPED_TEST_P /;"	d
GTEST_HEADERS	src/tests/googletest/googlemock/make/Makefile	/^GTEST_HEADERS = $(GTEST_DIR)\/include\/gtest\/*.h \\$/;"	m
GTEST_HEADERS	src/tests/googletest/googletest/make/Makefile	/^GTEST_HEADERS = $(GTEST_DIR)\/include\/gtest\/*.h \\$/;"	m
GTEST_H_OUTPUT	src/tests/googletest/googlemock/scripts/fuse_gmock_files.py	/^GTEST_H_OUTPUT = 'gtest\/gtest.h'$/;"	v
GTEST_H_OUTPUT	src/tests/googletest/googletest/scripts/fuse_gtest_files.py	/^GTEST_H_OUTPUT = 'gtest\/gtest.h'$/;"	v
GTEST_H_SEED	src/tests/googletest/googletest/scripts/fuse_gtest_files.py	/^GTEST_H_SEED = 'include\/gtest\/gtest.h'$/;"	v
GTEST_IMPLEMENTATION_	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^#define GTEST_IMPLEMENTATION_ /;"	d	file:
GTEST_IMPLEMENTATION_	src/tests/googletest/googletest/src/gtest-death-test.cc	/^#define GTEST_IMPLEMENTATION_ /;"	d	file:
GTEST_IMPLEMENTATION_	src/tests/googletest/googletest/src/gtest-port.cc	/^#define GTEST_IMPLEMENTATION_ /;"	d	file:
GTEST_IMPLEMENTATION_	src/tests/googletest/googletest/src/gtest-test-part.cc	/^#define GTEST_IMPLEMENTATION_ /;"	d	file:
GTEST_IMPLEMENTATION_	src/tests/googletest/googletest/src/gtest.cc	/^#define GTEST_IMPLEMENTATION_ /;"	d	file:
GTEST_IMPLEMENTATION_	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^# define GTEST_IMPLEMENTATION_ /;"	d	file:
GTEST_IMPLEMENTATION_	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^#define GTEST_IMPLEMENTATION_ /;"	d	file:
GTEST_IMPLEMENTATION_	src/tests/googletest/googletest/test/gtest-options_test.cc	/^#define GTEST_IMPLEMENTATION_ /;"	d	file:
GTEST_IMPLEMENTATION_	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^# define GTEST_IMPLEMENTATION_ /;"	d	file:
GTEST_IMPLEMENTATION_	src/tests/googletest/googletest/test/gtest-port_test.cc	/^#define GTEST_IMPLEMENTATION_ /;"	d	file:
GTEST_IMPLEMENTATION_	src/tests/googletest/googletest/test/gtest_color_test_.cc	/^#define GTEST_IMPLEMENTATION_ /;"	d	file:
GTEST_IMPLEMENTATION_	src/tests/googletest/googletest/test/gtest_env_var_test_.cc	/^#define GTEST_IMPLEMENTATION_ /;"	d	file:
GTEST_IMPLEMENTATION_	src/tests/googletest/googletest/test/gtest_environment_test.cc	/^#define GTEST_IMPLEMENTATION_ /;"	d	file:
GTEST_IMPLEMENTATION_	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^#define GTEST_IMPLEMENTATION_ /;"	d	file:
GTEST_IMPLEMENTATION_	src/tests/googletest/googletest/test/gtest_repeat_test.cc	/^#define GTEST_IMPLEMENTATION_ /;"	d	file:
GTEST_IMPLEMENTATION_	src/tests/googletest/googletest/test/gtest_stress_test.cc	/^#define GTEST_IMPLEMENTATION_ /;"	d	file:
GTEST_IMPLEMENTATION_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^#define GTEST_IMPLEMENTATION_ /;"	d	file:
GTEST_IMPL_CMP_HELPER_	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define GTEST_IMPL_CMP_HELPER_(/;"	d
GTEST_IMPL_CMP_HELPER_	src/tests/googletest/googletest/src/gtest.cc	/^#define GTEST_IMPL_CMP_HELPER_(/;"	d	file:
GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^#define GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_(/;"	d
GTEST_IMPL_FORMAT_C_STRING_AS_STRING_	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^#define GTEST_IMPL_FORMAT_C_STRING_AS_STRING_(/;"	d
GTEST_INCLUDE_GTEST_GTEST_DEATH_TEST_H_	src/tests/googletest/googletest/include/gtest/gtest-death-test.h	/^#define GTEST_INCLUDE_GTEST_GTEST_DEATH_TEST_H_$/;"	d
GTEST_INCLUDE_GTEST_GTEST_H_	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define GTEST_INCLUDE_GTEST_GTEST_H_$/;"	d
GTEST_INCLUDE_GTEST_GTEST_MESSAGE_H_	src/tests/googletest/googletest/include/gtest/gtest-message.h	/^#define GTEST_INCLUDE_GTEST_GTEST_MESSAGE_H_$/;"	d
GTEST_INCLUDE_GTEST_GTEST_PARAM_TEST_H_	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^#define GTEST_INCLUDE_GTEST_GTEST_PARAM_TEST_H_$/;"	d
GTEST_INCLUDE_GTEST_GTEST_PRED_IMPL_H_	src/tests/googletest/googletest/include/gtest/gtest_pred_impl.h	/^#define GTEST_INCLUDE_GTEST_GTEST_PRED_IMPL_H_$/;"	d
GTEST_INCLUDE_GTEST_GTEST_PRINTERS_H_	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^#define GTEST_INCLUDE_GTEST_GTEST_PRINTERS_H_$/;"	d
GTEST_INCLUDE_GTEST_GTEST_PROD_H_	src/tests/googletest/googletest/include/gtest/gtest_prod.h	/^#define GTEST_INCLUDE_GTEST_GTEST_PROD_H_$/;"	d
GTEST_INCLUDE_GTEST_GTEST_SPI_H_	src/tests/googletest/googletest/include/gtest/gtest-spi.h	/^#define GTEST_INCLUDE_GTEST_GTEST_SPI_H_$/;"	d
GTEST_INCLUDE_GTEST_GTEST_TEST_PART_H_	src/tests/googletest/googletest/include/gtest/gtest-test-part.h	/^#define GTEST_INCLUDE_GTEST_GTEST_TEST_PART_H_$/;"	d
GTEST_INCLUDE_GTEST_GTEST_TYPED_TEST_H_	src/tests/googletest/googletest/include/gtest/gtest-typed-test.h	/^#define GTEST_INCLUDE_GTEST_GTEST_TYPED_TEST_H_$/;"	d
GTEST_INCLUDE_GTEST_INTERNAL_CUSTOM_GTEST_H_	src/tests/googletest/googletest/include/gtest/internal/custom/gtest.h	/^#define GTEST_INCLUDE_GTEST_INTERNAL_CUSTOM_GTEST_H_$/;"	d
GTEST_INCLUDE_GTEST_INTERNAL_CUSTOM_GTEST_PORT_H_	src/tests/googletest/googletest/include/gtest/internal/custom/gtest-port.h	/^#define GTEST_INCLUDE_GTEST_INTERNAL_CUSTOM_GTEST_PORT_H_$/;"	d
GTEST_INCLUDE_GTEST_INTERNAL_CUSTOM_GTEST_PRINTERS_H_	src/tests/googletest/googletest/include/gtest/internal/custom/gtest-printers.h	/^#define GTEST_INCLUDE_GTEST_INTERNAL_CUSTOM_GTEST_PRINTERS_H_$/;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_DEATH_TEST_INTERNAL_H_	src/tests/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h	/^#define GTEST_INCLUDE_GTEST_INTERNAL_GTEST_DEATH_TEST_INTERNAL_H_$/;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_FILEPATH_H_	src/tests/googletest/googletest/include/gtest/internal/gtest-filepath.h	/^#define GTEST_INCLUDE_GTEST_INTERNAL_GTEST_FILEPATH_H_$/;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_INTERNAL_H_	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^#define GTEST_INCLUDE_GTEST_INTERNAL_GTEST_INTERNAL_H_$/;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_LINKED_PTR_H_	src/tests/googletest/googletest/include/gtest/internal/gtest-linked_ptr.h	/^#define GTEST_INCLUDE_GTEST_INTERNAL_GTEST_LINKED_PTR_H_$/;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PARAM_UTIL_GENERATED_H_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^#define GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PARAM_UTIL_GENERATED_H_$/;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PARAM_UTIL_H_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^#define GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PARAM_UTIL_H_$/;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PORT_ARCH_H_	src/tests/googletest/googletest/include/gtest/internal/gtest-port-arch.h	/^#define GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PORT_ARCH_H_$/;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PORT_H_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#define GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PORT_H_$/;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_STRING_H_	src/tests/googletest/googletest/include/gtest/internal/gtest-string.h	/^#define GTEST_INCLUDE_GTEST_INTERNAL_GTEST_STRING_H_$/;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_TUPLE_H_	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^#define GTEST_INCLUDE_GTEST_INTERNAL_GTEST_TUPLE_H_$/;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_TYPE_UTIL_H_	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^#define GTEST_INCLUDE_GTEST_INTERNAL_GTEST_TYPE_UTIL_H_$/;"	d
GTEST_INFO	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  GTEST_INFO,$/;"	e	enum:testing::internal::GTestLogSeverity
GTEST_INIT_GOOGLE_TEST_NAME_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_INIT_GOOGLE_TEST_NAME_ /;"	d
GTEST_INTENTIONAL_CONST_COND_POP_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_INTENTIONAL_CONST_COND_POP_(/;"	d
GTEST_INTENTIONAL_CONST_COND_PUSH_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_INTENTIONAL_CONST_COND_PUSH_(/;"	d
GTEST_IS_NULL_LITERAL_	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^# define GTEST_IS_NULL_LITERAL_(/;"	d
GTEST_IS_THREADSAFE	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#define GTEST_IS_THREADSAFE /;"	d
GTEST_LANG_CXX11	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#  define GTEST_LANG_CXX11 /;"	d
GTEST_LIB_CHECK	src/tests/googletest/googletest/m4/gtest.m4	/^AC_DEFUN([GTEST_LIB_CHECK],$/;"	m
GTEST_LIST_TESTS_FLAG	src/tests/googletest/googletest/test/gtest_xml_output_unittest.py	/^GTEST_LIST_TESTS_FLAG = '--gtest_list_tests'$/;"	v
GTEST_LOCK_EXCLUDED_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^        GTEST_LOCK_EXCLUDED_(g_gmock_mutex) {$/;"	f	class:testing::internal::FunctionMockerBase	typeref:typename:~FunctionMockerBase ()
GTEST_LOCK_EXCLUDED_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_LOCK_EXCLUDED_(/;"	d
GTEST_LOG_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_LOG_(/;"	d
GTEST_MAIN_CC	src/tests/googletest/googletest/scripts/test/Makefile	/^GTEST_MAIN_CC = ..\/..\/src\/gtest_main.cc$/;"	m
GTEST_MESSAGE_	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^#define GTEST_MESSAGE_(/;"	d
GTEST_MESSAGE_AT_	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^#define GTEST_MESSAGE_AT_(/;"	d
GTEST_MUST_USE_RESULT_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_MUST_USE_RESULT_ /;"	d
GTEST_MUST_USE_RESULT_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_MUST_USE_RESULT_$/;"	d
GTEST_NAME_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_NAME_ /;"	d
GTEST_NEEDS_IS_POINTER_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_NEEDS_IS_POINTER_ /;"	d
GTEST_NONFATAL_FAILURE_	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^#define GTEST_NONFATAL_FAILURE_(/;"	d
GTEST_NO_INLINE_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_NO_INLINE_ /;"	d
GTEST_NO_INLINE_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_NO_INLINE_$/;"	d
GTEST_OS_AIX	src/tests/googletest/googletest/include/gtest/internal/gtest-port-arch.h	/^# define GTEST_OS_AIX /;"	d
GTEST_OS_CYGWIN	src/tests/googletest/googletest/include/gtest/internal/gtest-port-arch.h	/^# define GTEST_OS_CYGWIN /;"	d
GTEST_OS_FREEBSD	src/tests/googletest/googletest/include/gtest/internal/gtest-port-arch.h	/^# define GTEST_OS_FREEBSD /;"	d
GTEST_OS_HPUX	src/tests/googletest/googletest/include/gtest/internal/gtest-port-arch.h	/^# define GTEST_OS_HPUX /;"	d
GTEST_OS_IOS	src/tests/googletest/googletest/include/gtest/internal/gtest-port-arch.h	/^#  define GTEST_OS_IOS /;"	d
GTEST_OS_LINUX	src/tests/googletest/googletest/include/gtest/internal/gtest-port-arch.h	/^# define GTEST_OS_LINUX /;"	d
GTEST_OS_LINUX_ANDROID	src/tests/googletest/googletest/include/gtest/internal/gtest-port-arch.h	/^#  define GTEST_OS_LINUX_ANDROID /;"	d
GTEST_OS_MAC	src/tests/googletest/googletest/include/gtest/internal/gtest-port-arch.h	/^# define GTEST_OS_MAC /;"	d
GTEST_OS_NACL	src/tests/googletest/googletest/include/gtest/internal/gtest-port-arch.h	/^# define GTEST_OS_NACL /;"	d
GTEST_OS_NETBSD	src/tests/googletest/googletest/include/gtest/internal/gtest-port-arch.h	/^# define GTEST_OS_NETBSD /;"	d
GTEST_OS_OPENBSD	src/tests/googletest/googletest/include/gtest/internal/gtest-port-arch.h	/^# define GTEST_OS_OPENBSD /;"	d
GTEST_OS_QNX	src/tests/googletest/googletest/include/gtest/internal/gtest-port-arch.h	/^# define GTEST_OS_QNX /;"	d
GTEST_OS_SOLARIS	src/tests/googletest/googletest/include/gtest/internal/gtest-port-arch.h	/^# define GTEST_OS_SOLARIS /;"	d
GTEST_OS_SYMBIAN	src/tests/googletest/googletest/include/gtest/internal/gtest-port-arch.h	/^# define GTEST_OS_SYMBIAN /;"	d
GTEST_OS_WINDOWS	src/tests/googletest/googletest/include/gtest/internal/gtest-port-arch.h	/^# define GTEST_OS_WINDOWS /;"	d
GTEST_OS_WINDOWS_DESKTOP	src/tests/googletest/googletest/include/gtest/internal/gtest-port-arch.h	/^#   define GTEST_OS_WINDOWS_DESKTOP /;"	d
GTEST_OS_WINDOWS_DESKTOP	src/tests/googletest/googletest/include/gtest/internal/gtest-port-arch.h	/^#  define GTEST_OS_WINDOWS_DESKTOP /;"	d
GTEST_OS_WINDOWS_MINGW	src/tests/googletest/googletest/include/gtest/internal/gtest-port-arch.h	/^#  define GTEST_OS_WINDOWS_MINGW /;"	d
GTEST_OS_WINDOWS_MOBILE	src/tests/googletest/googletest/include/gtest/internal/gtest-port-arch.h	/^#  define GTEST_OS_WINDOWS_MOBILE /;"	d
GTEST_OS_WINDOWS_PHONE	src/tests/googletest/googletest/include/gtest/internal/gtest-port-arch.h	/^#   define GTEST_OS_WINDOWS_PHONE /;"	d
GTEST_OS_WINDOWS_RT	src/tests/googletest/googletest/include/gtest/internal/gtest-port-arch.h	/^#   define GTEST_OS_WINDOWS_RT /;"	d
GTEST_OS_ZOS	src/tests/googletest/googletest/include/gtest/internal/gtest-port-arch.h	/^# define GTEST_OS_ZOS /;"	d
GTEST_OUTPUT_1_TEST	src/tests/googletest/googletest/test/gtest_xml_outfiles_test.py	/^GTEST_OUTPUT_1_TEST = "gtest_xml_outfile1_test_"$/;"	v
GTEST_OUTPUT_2_TEST	src/tests/googletest/googletest/test/gtest_xml_outfiles_test.py	/^GTEST_OUTPUT_2_TEST = "gtest_xml_outfile2_test_"$/;"	v
GTEST_OUTPUT_FLAG	src/tests/googletest/googletest/test/gtest_xml_output_unittest.py	/^GTEST_OUTPUT_FLAG         = "--gtest_output"$/;"	v
GTEST_OUTPUT_FLAG	src/tests/googletest/googletest/test/gtest_xml_test_utils.py	/^GTEST_OUTPUT_FLAG         = '--gtest_output'$/;"	v
GTEST_OUTPUT_SUBDIR	src/tests/googletest/googletest/test/gtest_xml_outfiles_test.py	/^GTEST_OUTPUT_SUBDIR = "xml_outfiles"$/;"	v
GTEST_OUTPUT_VAR_NAME	src/tests/googletest/googletest/test/gtest_test_utils.py	/^GTEST_OUTPUT_VAR_NAME = 'GTEST_OUTPUT'$/;"	v
GTEST_PATH_MAX_	src/tests/googletest/googletest/src/gtest-filepath.cc	/^# define GTEST_PATH_MAX_ /;"	d	file:
GTEST_PATH_SEP_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_PATH_SEP_ /;"	d
GTEST_PRED1_	src/tests/googletest/googletest/include/gtest/gtest_pred_impl.h	/^#define GTEST_PRED1_(/;"	d
GTEST_PRED2_	src/tests/googletest/googletest/include/gtest/gtest_pred_impl.h	/^#define GTEST_PRED2_(/;"	d
GTEST_PRED3_	src/tests/googletest/googletest/include/gtest/gtest_pred_impl.h	/^#define GTEST_PRED3_(/;"	d
GTEST_PRED4_	src/tests/googletest/googletest/include/gtest/gtest_pred_impl.h	/^#define GTEST_PRED4_(/;"	d
GTEST_PRED5_	src/tests/googletest/googletest/include/gtest/gtest_pred_impl.h	/^#define GTEST_PRED5_(/;"	d
GTEST_PRED_FORMAT1_	src/tests/googletest/googletest/include/gtest/gtest_pred_impl.h	/^#define GTEST_PRED_FORMAT1_(/;"	d
GTEST_PRED_FORMAT2_	src/tests/googletest/googletest/include/gtest/gtest_pred_impl.h	/^#define GTEST_PRED_FORMAT2_(/;"	d
GTEST_PRED_FORMAT3_	src/tests/googletest/googletest/include/gtest/gtest_pred_impl.h	/^#define GTEST_PRED_FORMAT3_(/;"	d
GTEST_PRED_FORMAT4_	src/tests/googletest/googletest/include/gtest/gtest_pred_impl.h	/^#define GTEST_PRED_FORMAT4_(/;"	d
GTEST_PRED_FORMAT5_	src/tests/googletest/googletest/include/gtest/gtest_pred_impl.h	/^#define GTEST_PRED_FORMAT5_(/;"	d
GTEST_PROGRAM_NAME	src/tests/googletest/googletest/test/gtest_xml_output_unittest.py	/^GTEST_PROGRAM_NAME = "gtest_xml_output_unittest_"$/;"	v
GTEST_PROGRAM_PATH	src/tests/googletest/googletest/test/gtest_xml_output_unittest.py	/^GTEST_PROGRAM_PATH = gtest_test_utils.GetTestExecutablePath(GTEST_PROGRAM_NAME)$/;"	v
GTEST_PROJECT_URL_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_PROJECT_URL_ /;"	d
GTEST_REFERENCE_TO_CONST_	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^#define GTEST_REFERENCE_TO_CONST_(/;"	d
GTEST_REGISTERED_TEST_NAMES_	src/tests/googletest/googletest/include/gtest/gtest-typed-test.h	/^# define GTEST_REGISTERED_TEST_NAMES_(/;"	d
GTEST_REMOVE_CONST_	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^#define GTEST_REMOVE_CONST_(/;"	d
GTEST_REMOVE_REFERENCE_	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^#define GTEST_REMOVE_REFERENCE_(/;"	d
GTEST_REMOVE_REFERENCE_AND_CONST_	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^        Element, GTEST_REMOVE_REFERENCE_AND_CONST_(Element)>::value,$/;"	e	enum:testing::internal::NativeArray::__anond73b42720103
GTEST_REMOVE_REFERENCE_AND_CONST_	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^#define GTEST_REMOVE_REFERENCE_AND_CONST_(/;"	d
GTEST_REPEATER_METHOD_	src/tests/googletest/googletest/src/gtest.cc	/^#define GTEST_REPEATER_METHOD_(/;"	d	file:
GTEST_REPEATER_METHOD_	src/tests/googletest/googletest/src/gtest.cc	/^GTEST_REPEATER_METHOD_(OnTestProgramStart, UnitTest)$/;"	f	namespace:testing::internal
GTEST_REVERSE_REPEATER_METHOD_	src/tests/googletest/googletest/src/gtest.cc	/^#define GTEST_REVERSE_REPEATER_METHOD_(/;"	d	file:
GTEST_SAMPLES_PRIME_TABLES_H_	src/tests/googletest/googletest/samples/prime_tables.h	/^#define GTEST_SAMPLES_PRIME_TABLES_H_$/;"	d
GTEST_SAMPLES_SAMPLE1_H_	src/tests/googletest/googletest/samples/sample1.h	/^#define GTEST_SAMPLES_SAMPLE1_H_$/;"	d
GTEST_SAMPLES_SAMPLE2_H_	src/tests/googletest/googletest/samples/sample2.h	/^#define GTEST_SAMPLES_SAMPLE2_H_$/;"	d
GTEST_SAMPLES_SAMPLE3_INL_H_	src/tests/googletest/googletest/samples/sample3-inl.h	/^#define GTEST_SAMPLES_SAMPLE3_INL_H_$/;"	d
GTEST_SAMPLES_SAMPLE4_H_	src/tests/googletest/googletest/samples/sample4.h	/^#define GTEST_SAMPLES_SAMPLE4_H_$/;"	d
GTEST_SNPRINTF_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_SNPRINTF_ /;"	d
GTEST_SNPRINTF_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_SNPRINTF_(/;"	d
GTEST_SPI_H_SEED	src/tests/googletest/googletest/scripts/fuse_gtest_files.py	/^GTEST_SPI_H_SEED = 'include\/gtest\/gtest-spi.h'$/;"	v
GTEST_SRC	src/tests/googletest/googletest/Makefile.am	/^GTEST_SRC = \\$/;"	m
GTEST_SRCS_	src/tests/googletest/googlemock/make/Makefile	/^GTEST_SRCS_ = $(GTEST_DIR)\/src\/*.cc $(GTEST_DIR)\/src\/*.h $(GTEST_HEADERS)$/;"	m
GTEST_SRCS_	src/tests/googletest/googletest/make/Makefile	/^GTEST_SRCS_ = $(GTEST_DIR)\/src\/*.cc $(GTEST_DIR)\/src\/*.h $(GTEST_HEADERS)$/;"	m
GTEST_SRC_GTEST_INTERNAL_INL_H_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^#define GTEST_SRC_GTEST_INTERNAL_INL_H_$/;"	d
GTEST_STDLIB_CXX11	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_STDLIB_CXX11 /;"	d
GTEST_SUCCEED	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define GTEST_SUCCEED(/;"	d
GTEST_SUCCESS_	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^#define GTEST_SUCCESS_(/;"	d
GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^#define GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(/;"	d
GTEST_TEMPLATE_	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^# define GTEST_TEMPLATE_ /;"	d
GTEST_TEST	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define GTEST_TEST(/;"	d
GTEST_TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^GTEST_TEST(AlternativeNameTest, Works) {  \/\/ GTEST_TEST is the same as TEST.$/;"	f
GTEST_TESTS_UTIL_DIR	src/tests/googletest/googlemock/test/gmock_test_utils.py	/^  GTEST_TESTS_UTIL_DIR = gtest_tests_util_dir$/;"	v
GTEST_TESTS_UTIL_DIR	src/tests/googletest/googlemock/test/gmock_test_utils.py	/^  GTEST_TESTS_UTIL_DIR = os.path.join(SCRIPT_DIR, '..\/..\/gtest\/test')$/;"	v
GTEST_TEST_	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^#define GTEST_TEST_(/;"	d
GTEST_TEST_ANY_THROW_	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^#define GTEST_TEST_ANY_THROW_(/;"	d
GTEST_TEST_BOOLEAN_	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^#define GTEST_TEST_BOOLEAN_(/;"	d
GTEST_TEST_CLASS_NAME_	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^#define GTEST_TEST_CLASS_NAME_(/;"	d
GTEST_TEST_GTEST_PARAM_TEST_TEST_H_	src/tests/googletest/googletest/test/gtest-param-test_test.h	/^#define GTEST_TEST_GTEST_PARAM_TEST_TEST_H_$/;"	d
GTEST_TEST_GTEST_TYPED_TEST_TEST_H_	src/tests/googletest/googletest/test/gtest-typed-test_test.h	/^#define GTEST_TEST_GTEST_TYPED_TEST_TEST_H_$/;"	d
GTEST_TEST_NO_FATAL_FAILURE_	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^#define GTEST_TEST_NO_FATAL_FAILURE_(/;"	d
GTEST_TEST_NO_THROW_	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^#define GTEST_TEST_NO_THROW_(/;"	d
GTEST_TEST_PARSING_FLAGS_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^#define GTEST_TEST_PARSING_FLAGS_(/;"	d	file:
GTEST_TEST_PRODUCTION_H_	src/tests/googletest/googletest/test/production.h	/^#define GTEST_TEST_PRODUCTION_H_$/;"	d
GTEST_TEST_THROW_	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^#define GTEST_TEST_THROW_(/;"	d
GTEST_TUPLE_NAMESPACE_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#  define GTEST_TUPLE_NAMESPACE_ /;"	d
GTEST_TUPLE_NAMESPACE_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_TUPLE_NAMESPACE_ /;"	d
GTEST_TYPED_TEST_CASE_P_STATE_	src/tests/googletest/googletest/include/gtest/gtest-typed-test.h	/^# define GTEST_TYPED_TEST_CASE_P_STATE_(/;"	d
GTEST_TYPE_PARAMS_	src/tests/googletest/googletest/include/gtest/gtest-typed-test.h	/^# define GTEST_TYPE_PARAMS_(/;"	d
GTEST_UNSUPPORTED_DEATH_TEST_	src/tests/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h	/^# define GTEST_UNSUPPORTED_DEATH_TEST_(/;"	d
GTEST_UNVERSIONED_WIKIS	src/tests/googletest/googletest/scripts/release_docs.py	/^GTEST_UNVERSIONED_WIKIS = ['DevGuide.wiki']$/;"	v
GTEST_USES_POSIX_RE	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_USES_POSIX_RE /;"	d
GTEST_USES_SIMPLE_RE	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_USES_SIMPLE_RE /;"	d
GTEST_USE_OWN_FLAGFILE_FLAG_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^# define GTEST_USE_OWN_FLAGFILE_FLAG_ /;"	d
GTEST_USE_OWN_TR1_TUPLE	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#  define GTEST_USE_OWN_TR1_TUPLE /;"	d
GTEST_USE_UNPROTECTED_COMMA_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^#define GTEST_USE_UNPROTECTED_COMMA_ /;"	d	file:
GTEST_WARNING	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  GTEST_WARNING,$/;"	e	enum:testing::internal::GTestLogSeverity
GTEST_WIDE_STRING_USES_UTF16_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#define GTEST_WIDE_STRING_USES_UTF16_ /;"	d
GTestBreakOnFailureUnitTest	src/tests/googletest/googletest/test/gtest_break_on_failure_unittest.py	/^class GTestBreakOnFailureUnitTest(gtest_test_utils.TestCase):$/;"	c
GTestColor	src/tests/googletest/googletest/src/gtest.cc	/^enum GTestColor {$/;"	g	namespace:testing::internal	file:
GTestColorTest	src/tests/googletest/googletest/test/gtest_color_test.py	/^class GTestColorTest(gtest_test_utils.TestCase):$/;"	c
GTestEnvVarTest	src/tests/googletest/googletest/test/gtest_env_var_test.py	/^class GTestEnvVarTest(gtest_test_utils.TestCase):$/;"	c
GTestFilterUnitTest	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^class GTestFilterUnitTest(gtest_test_utils.TestCase):$/;"	c
GTestFlagSaver	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  GTestFlagSaver() {$/;"	f	class:testing::internal::GTestFlagSaver
GTestFlagSaver	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^class GTestFlagSaver {$/;"	c	namespace:testing::internal
GTestFlagSaverTest	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class GTestFlagSaverTest : public Test {$/;"	c	namespace:__anonf780395f0111	file:
GTestHelpTest	src/tests/googletest/googletest/test/gtest_help_test.py	/^class GTestHelpTest(gtest_test_utils.TestCase):$/;"	c
GTestIsInitialized	src/tests/googletest/googletest/src/gtest.cc	/^static bool GTestIsInitialized() { return GetArgvs().size() > 0; }$/;"	f	namespace:testing::internal	typeref:typename:bool	file:
GTestListTestsUnitTest	src/tests/googletest/googletest/test/gtest_list_tests_unittest.py	/^class GTestListTestsUnitTest(gtest_test_utils.TestCase):$/;"	c
GTestLog	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^class GTEST_API_ GTestLog {$/;"	c	namespace:testing::internal
GTestLog	src/tests/googletest/googletest/src/gtest-port.cc	/^GTestLog::GTestLog(GTestLogSeverity severity, const char* file, int line)$/;"	f	class:testing::internal::GTestLog
GTestLogSeverity	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^enum GTestLogSeverity {$/;"	g	namespace:testing::internal
GTestMutexLock	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  explicit GTestMutexLock(Mutex* mutex)$/;"	f	class:testing::internal::GTestMutexLock
GTestMutexLock	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  explicit GTestMutexLock(Mutex*) {}  \/\/ NOLINT$/;"	f	class:testing::internal::GTestMutexLock
GTestMutexLock	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  explicit GTestMutexLock(MutexBase* mutex)$/;"	f	class:testing::internal::GTestMutexLock
GTestMutexLock	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^class GTestMutexLock {$/;"	c	namespace:testing::internal
GTestOutputTest	src/tests/googletest/googletest/test/gtest_output_test.py	/^class GTestOutputTest(gtest_test_utils.TestCase):$/;"	c
GTestShouldProcessSEH	src/tests/googletest/googletest/src/gtest.cc	/^int UnitTestOptions::GTestShouldProcessSEH(DWORD exception_code) {$/;"	f	class:testing::internal::UnitTestOptions	typeref:typename:int
GTestShuffleUnitTest	src/tests/googletest/googletest/test/gtest_shuffle_test.py	/^class GTestShuffleUnitTest(gtest_test_utils.TestCase):$/;"	c
GTestUninitializedTest	src/tests/googletest/googletest/test/gtest_uninitialized_test.py	/^class GTestUninitializedTest(gtest_test_utils.TestCase):$/;"	c
GTestXMLOutFilesTest	src/tests/googletest/googletest/test/gtest_xml_outfiles_test.py	/^class GTestXMLOutFilesTest(gtest_xml_test_utils.GTestXMLTestCase):$/;"	c
GTestXMLOutputUnitTest	src/tests/googletest/googletest/test/gtest_xml_output_unittest.py	/^class GTestXMLOutputUnitTest(gtest_xml_test_utils.GTestXMLTestCase):$/;"	c
GTestXMLTestCase	src/tests/googletest/googletest/test/gtest_xml_test_utils.py	/^class GTestXMLTestCase(gtest_test_utils.TestCase):$/;"	c
GUARDED_BY	src/muduo/muduo/base/Mutex.h	/^#define GUARDED_BY(/;"	d
Gaining Super Vision into Mock Calls	src/tests/googletest/googlemock/docs/CookBook.md	/^## Gaining Super Vision into Mock Calls ##$/;"	s	chapter:Misc Recipes on Using Google Mock
Gaining Super Vision into Mock Calls	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Gaining Super Vision into Mock Calls ##$/;"	s	chapter:Misc Recipes on Using Google Mock
Ge	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline internal::Ge2Matcher Ge() { return internal::Ge2Matcher(); }$/;"	f	namespace:testing	typeref:typename:internal::Ge2Matcher
Ge	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline internal::GeMatcher<Rhs> Ge(Rhs x) {$/;"	f	namespace:testing	typeref:typename:internal::GeMatcher<Rhs>
Ge2Matcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class Ge2Matcher : public PairMatchBase<Ge2Matcher, AnyGe> {$/;"	c	namespace:testing::internal
GeMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit GeMatcher(const Rhs& rhs)$/;"	f	class:testing::internal::GeMatcher
GeMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class GeMatcher : public ComparisonBase<GeMatcher<Rhs>, Rhs, AnyGe> {$/;"	c	namespace:testing::internal
GenTest	src/tests/googletest/googletest/scripts/gen_gtest_pred_impl.py	/^  def GenTest(use_format, use_assert, expect_failure,$/;"	f	function:TestsForArity	file:
General Syntax	src/tests/googletest/googlemock/docs/ForDummies.md	/^## General Syntax ##$/;"	s	chapter:Setting Expectations
General Syntax	src/tests/googletest/googlemock/docs/v1_5/ForDummies.md	/^## General Syntax ##$/;"	s	chapter:Setting Expectations
General Syntax	src/tests/googletest/googlemock/docs/v1_6/ForDummies.md	/^## General Syntax ##$/;"	s	chapter:Setting Expectations
General Syntax	src/tests/googletest/googlemock/docs/v1_7/ForDummies.md	/^## General Syntax ##$/;"	s	chapter:Setting Expectations
Generate	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def Generate(self):$/;"	m	class:AstBuilder
Generate	src/tests/googletest/googletest/src/gtest.cc	/^UInt32 Random::Generate(UInt32 range) {$/;"	f	class:testing::internal::Random	typeref:typename:UInt32
GenerateDiff	src/tests/googletest/googlemock/scripts/upload.py	/^  def GenerateDiff(self, args):$/;"	m	class:SubversionVCS
GenerateDiff	src/tests/googletest/googlemock/scripts/upload.py	/^  def GenerateDiff(self, args):$/;"	m	class:VersionControlSystem
GenerateDiff	src/tests/googletest/googlemock/scripts/upload.py	/^  def GenerateDiff(self, extra_args):$/;"	m	class:GitVCS
GenerateDiff	src/tests/googletest/googlemock/scripts/upload.py	/^  def GenerateDiff(self, extra_args):$/;"	m	class:MercurialVCS
GenerateDiff	src/tests/googletest/googletest/scripts/upload.py	/^  def GenerateDiff(self, args):$/;"	m	class:SubversionVCS
GenerateDiff	src/tests/googletest/googletest/scripts/upload.py	/^  def GenerateDiff(self, args):$/;"	m	class:VersionControlSystem
GenerateDiff	src/tests/googletest/googletest/scripts/upload.py	/^  def GenerateDiff(self, extra_args):$/;"	m	class:GitVCS
GenerateDiff	src/tests/googletest/googletest/scripts/upload.py	/^  def GenerateDiff(self, extra_args):$/;"	m	class:MercurialVCS
GenerateFatalFailureInAnotherThread	src/tests/googletest/googletest/test/gtest_stress_test.cc	/^void GenerateFatalFailureInAnotherThread(bool is_fatal) {$/;"	f	namespace:testing::__anon9be581a20111	typeref:typename:void
GenerateFile	src/tests/googletest/googletest/scripts/gen_gtest_pred_impl.py	/^def GenerateFile(path, content):$/;"	f
GenerateHeader	src/tests/googletest/googletest/scripts/gen_gtest_pred_impl.py	/^def GenerateHeader(n):$/;"	f
GenerateMethodSource	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class_test.py	/^  def GenerateMethodSource(self, cpp_source):$/;"	m	class:GenerateMethodsTest
GenerateMethodsTest	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class_test.py	/^class GenerateMethodsTest(TestCase):$/;"	c
GenerateMocks	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class_test.py	/^  def GenerateMocks(self, cpp_source):$/;"	m	class:GenerateMocksTest
GenerateMocksTest	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class_test.py	/^class GenerateMocksTest(TestCase):$/;"	c
GenerateUniqueFileName	src/tests/googletest/googletest/src/gtest-filepath.cc	/^FilePath FilePath::GenerateUniqueFileName(const FilePath& directory,$/;"	f	class:testing::internal::FilePath	typeref:typename:FilePath
GenerateUnitTest	src/tests/googletest/googletest/scripts/gen_gtest_pred_impl.py	/^def GenerateUnitTest(n):$/;"	f
Generating Failures in Listeners	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^## Generating Failures in Listeners ##$/;"	s	chapter:Extending Google Test by Handling Test Events
Generating Failures in Listeners	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^## Generating Failures in Listeners ##$/;"	s	chapter:Extending Google Test by Handling Test Events
Generating Failures in Listeners	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^## Generating Failures in Listeners ##$/;"	s	chapter:Extending Google Test by Handling Test Events
Generating Failures in Listeners	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^## Generating Failures in Listeners ##$/;"	s	chapter:Extending Google Test by Handling Test Events
Generating an XML Report	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^### Generating an XML Report ###$/;"	S	section:Running Test Programs: Advanced Options""Controlling Test Output
Generating an XML Report	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^### Generating an XML Report ###$/;"	S	section:Running Test Programs: Advanced Options""Controlling Test Output
Generating an XML Report	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^### Generating an XML Report ###$/;"	S	section:Running Test Programs: Advanced Options""Controlling Test Output
Generating an XML Report	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^### Generating an XML Report ###$/;"	S	section:Running Test Programs: Advanced Options""Controlling Test Output
GeneratorCreationFunc	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  typedef ParamGenerator<ParamType>(GeneratorCreationFunc)();$/;"	t	class:testing::internal::ParameterizedTestCaseInfo	typeref:typename:ParamGenerator<ParamType> ()()
GeneratorEvaluationTest	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^class GeneratorEvaluationTest : public TestWithParam<int> {$/;"	c	file:
Generic Build Instructions	src/tests/googletest/googletest/README.md	/^### Generic Build Instructions ###$/;"	S
Generic Comparison	src/tests/googletest/googlemock/docs/CheatSheet.md	/^## Generic Comparison ##$/;"	s	chapter:Matchers
Generic Comparison	src/tests/googletest/googlemock/docs/v1_5/CheatSheet.md	/^## Generic Comparison ##$/;"	s	chapter:Matchers
Generic Comparison	src/tests/googletest/googlemock/docs/v1_6/CheatSheet.md	/^## Generic Comparison ##$/;"	s	chapter:Matchers
Generic Comparison	src/tests/googletest/googlemock/docs/v1_7/CheatSheet.md	/^## Generic Comparison ##$/;"	s	chapter:Matchers
Generic Integer Implementation Operation Mermaid	docs/rustops/generic_integer_impl_operation_mermaid.md	/^# Generic Integer Implementation Operation Mermaid$/;"	c
Get	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  static T Get() { return BuiltInDefaultValue<T>::Get(); }$/;"	f	class:testing::internal::BuiltInDefaultValue	typeref:typename:T
Get	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  static T Get() { return T(); }$/;"	f	struct:testing::internal::BuiltInDefaultValueGetter	typeref:typename:T
Get	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  static T Get() {$/;"	f	class:testing::DefaultValue	typeref:typename:T
Get	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  static T Get() {$/;"	f	class:testing::internal::BuiltInDefaultValue	typeref:typename:T
Get	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  static T Get() {$/;"	f	struct:testing::internal::BuiltInDefaultValueGetter	typeref:typename:T
Get	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  static T& Get() {$/;"	f	class:testing::DefaultValue	typeref:typename:T &
Get	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  static T* Get() { return NULL; }$/;"	f	class:testing::internal::BuiltInDefaultValue	typeref:typename:T *
Get	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  static void Get() {}$/;"	f	class:testing::DefaultValue	typeref:typename:void
Get	src/tests/googletest/googletest/src/gtest-port.cc	/^AutoHandle::Handle AutoHandle::Get() const {$/;"	f	class:testing::internal::AutoHandle	typeref:typename:AutoHandle::Handle
Get the Source	src/tests/googletest/googletest/docs/V1_5_XcodeGuide.md	/^# Get the Source #$/;"	c
Get the Source	src/tests/googletest/googletest/docs/V1_6_XcodeGuide.md	/^# Get the Source #$/;"	c
Get the Source	src/tests/googletest/googletest/docs/V1_7_XcodeGuide.md	/^# Get the Source #$/;"	c
Get the Source	src/tests/googletest/googletest/docs/XcodeGuide.md	/^# Get the Source #$/;"	c
GetAbsolutePathOf	src/tests/googletest/googletest/test/gtest-options_test.cc	/^FilePath GetAbsolutePathOf(const FilePath& relative_path) {$/;"	f	namespace:testing::internal::__anon8f60ad580111	typeref:typename:FilePath
GetAbsolutePathToOutputFile	src/tests/googletest/googletest/src/gtest.cc	/^std::string UnitTestOptions::GetAbsolutePathToOutputFile() {$/;"	f	class:testing::internal::UnitTestOptions	typeref:typename:std::string
GetAction	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  const Action<F>& GetAction() const {$/;"	f	class:testing::internal::OnCallSpec	typeref:typename:const Action<F> &
GetActionForArguments	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  const Action<F>* GetActionForArguments($/;"	f	class:testing::internal::TypedExpectation	typeref:typename:const Action<F> *
GetAnsiColorCode	src/tests/googletest/googletest/src/gtest.cc	/^const char* GetAnsiColorCode(GTestColor color) {$/;"	f	namespace:testing::internal	typeref:typename:const char *
GetArgvs	src/tests/googletest/googletest/src/gtest.cc	/^const ::std::vector<testing::internal::string>& GetArgvs() {$/;"	f	namespace:testing::internal	typeref:typename:const::std::vector<testing::internal::string> &
GetArgvsForDeathTestChildProcess	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  static ::std::vector<std::string> GetArgvsForDeathTestChildProcess() {$/;"	f	class:testing::internal::ExecDeathTest	typeref:typename:::std::vector<std::string>	file:
GetBaseFile	src/tests/googletest/googlemock/scripts/upload.py	/^  def GetBaseFile(self, filename):$/;"	m	class:GitVCS
GetBaseFile	src/tests/googletest/googlemock/scripts/upload.py	/^  def GetBaseFile(self, filename):$/;"	m	class:MercurialVCS
GetBaseFile	src/tests/googletest/googlemock/scripts/upload.py	/^  def GetBaseFile(self, filename):$/;"	m	class:SubversionVCS
GetBaseFile	src/tests/googletest/googlemock/scripts/upload.py	/^  def GetBaseFile(self, filename):$/;"	m	class:VersionControlSystem
GetBaseFile	src/tests/googletest/googletest/scripts/upload.py	/^  def GetBaseFile(self, filename):$/;"	m	class:GitVCS
GetBaseFile	src/tests/googletest/googletest/scripts/upload.py	/^  def GetBaseFile(self, filename):$/;"	m	class:MercurialVCS
GetBaseFile	src/tests/googletest/googletest/scripts/upload.py	/^  def GetBaseFile(self, filename):$/;"	m	class:SubversionVCS
GetBaseFile	src/tests/googletest/googletest/scripts/upload.py	/^  def GetBaseFile(self, filename):$/;"	m	class:VersionControlSystem
GetBaseFiles	src/tests/googletest/googlemock/scripts/upload.py	/^  def GetBaseFiles(self, diff):$/;"	m	class:VersionControlSystem
GetBaseFiles	src/tests/googletest/googletest/scripts/upload.py	/^  def GetBaseFiles(self, diff):$/;"	m	class:VersionControlSystem
GetBoolAssertionFailureMessage	src/tests/googletest/googletest/src/gtest.cc	/^std::string GetBoolAssertionFailureMessage($/;"	f	namespace:testing::internal	typeref:typename:std::string
GetBuildDir	src/tests/googletest/googletest/test/gtest_test_utils.py	/^def GetBuildDir():$/;"	f
GetCapturedStderr	src/tests/googletest/googletest/src/gtest-port.cc	/^std::string GetCapturedStderr() {$/;"	f	namespace:testing::internal	typeref:typename:std::string
GetCapturedStdout	src/tests/googletest/googletest/src/gtest-port.cc	/^std::string GetCapturedStdout() {$/;"	f	namespace:testing::internal	typeref:typename:std::string
GetCapturedStream	src/tests/googletest/googletest/src/gtest-port.cc	/^std::string GetCapturedStream(CapturedStream** captured_stream) {$/;"	f	namespace:testing::internal	typeref:typename:std::string
GetCapturedString	src/tests/googletest/googletest/src/gtest-port.cc	/^  std::string GetCapturedString() {$/;"	f	class:testing::internal::CapturedStream	typeref:typename:std::string	file:
GetCastTypeDescription	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static void GetCastTypeDescription(::std::ostream* os) {$/;"	f	class:testing::internal::WhenDynamicCastToMatcherBase	typeref:typename:void
GetCharPtrValue	src/tests/googletest/googletest/xcode/Samples/FrameworkSample/widget.cc	/^void Widget::GetCharPtrValue(char* buffer, size_t max_size) const {$/;"	f	class:Widget	typeref:typename:void
GetCodeLocation	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  const CodeLocation& GetCodeLocation(const std::string& test_name) const {$/;"	f	class:testing::internal::TypedTestCasePState	typeref:typename:const CodeLocation &
GetColorAttribute	src/tests/googletest/googletest/src/gtest.cc	/^WORD GetColorAttribute(GTestColor color) {$/;"	f	namespace:testing::internal	typeref:typename:WORD
GetCommandOutput	src/tests/googletest/googletest/scripts/common.py	/^def GetCommandOutput(command):$/;"	f
GetCommandOutput	src/tests/googletest/googletest/test/gtest_output_test.py	/^def GetCommandOutput(env_cmd):$/;"	f
GetContentType	src/tests/googletest/googlemock/scripts/upload.py	/^def GetContentType(filename):$/;"	f
GetContentType	src/tests/googletest/googletest/scripts/upload.py	/^def GetContentType(filename):$/;"	f
GetCurrentAction	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  const Action<F>& GetCurrentAction($/;"	f	class:testing::internal::TypedExpectation	typeref:typename:const Action<F> &
GetCurrentDir	src/tests/googletest/googletest/src/gtest-filepath.cc	/^FilePath FilePath::GetCurrentDir() {$/;"	f	class:testing::internal::FilePath	typeref:typename:FilePath
GetCurrentExecutableName	src/tests/googletest/googletest/src/gtest.cc	/^FilePath GetCurrentExecutableName() {$/;"	f	namespace:testing::internal	typeref:typename:FilePath
GetCurrentOsStackTraceExceptTop	src/tests/googletest/googletest/src/gtest.cc	/^std::string GetCurrentOsStackTraceExceptTop(UnitTest* \/*unit_test*\/,$/;"	f	namespace:testing::internal	typeref:typename:std::string
GetDefaultFilter	src/tests/googletest/googletest/src/gtest.cc	/^static const char* GetDefaultFilter() {$/;"	f	namespace:testing	typeref:typename:const char *	file:
GetDesc	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static ::std::ostream& GetDesc(::std::ostream& os) {  \/\/ NOLINT$/;"	f	class:testing::internal::PairMatchBase	typeref:typename:::std::ostream &
GetDescriber	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const MatcherDescriberInterface* GetDescriber() const {$/;"	f	class:testing::internal::MatcherBase	typeref:typename:const MatcherDescriberInterface *
GetElementOr	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^inline E GetElementOr(const std::vector<E>& v, int i, E default_value) {$/;"	f	namespace:testing::internal	typeref:typename:E
GetEmail	src/tests/googletest/googlemock/scripts/upload.py	/^def GetEmail(prompt):$/;"	f
GetEmail	src/tests/googletest/googletest/scripts/upload.py	/^def GetEmail(prompt):$/;"	f
GetEnv	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^inline const char* GetEnv(const char* name) {$/;"	f	namespace:testing::internal::posix	typeref:typename:const char *
GetEnviron	src/tests/googletest/googletest/src/gtest-death-test.cc	/^inline char** GetEnviron() { return environ; }$/;"	f	namespace:testing::internal	typeref:typename:char **
GetEnviron	src/tests/googletest/googletest/src/gtest-death-test.cc	/^inline char** GetEnviron() {$/;"	f	namespace:testing::internal	typeref:typename:char **
GetEventDescription	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  std::string GetEventDescription(const char* method) {$/;"	f	class:SequenceTestingListener	typeref:typename:std::string	file:
GetExitStatus	src/tests/googletest/googlemock/test/gmock_test_utils.py	/^def GetExitStatus(exit_code):$/;"	f
GetExitStatus	src/tests/googletest/googletest/test/gtest_test_utils.py	/^def GetExitStatus(exit_code):$/;"	f
GetFailureReporter	src/tests/googletest/googlemock/src/gmock-internal-utils.cc	/^GTEST_API_ FailureReporterInterface* GetFailureReporter() {$/;"	f	namespace:testing::internal	typeref:typename:GTEST_API_ FailureReporterInterface *
GetFileSize	src/tests/googletest/googletest/src/gtest-port.cc	/^size_t GetFileSize(FILE* file) {$/;"	f	namespace:testing::internal	typeref:typename:size_t
GetFilesToBranch	src/tests/googletest/googletest/scripts/release_docs.py	/^  def GetFilesToBranch(self):$/;"	m	class:WikiBrancher
GetFlag	src/tests/googletest/googletest/test/gtest_env_var_test.py	/^def GetFlag(flag):$/;"	f
GetFlag	src/tests/googletest/googletest/test/gtest_test_utils.py	/^def GetFlag(flag):$/;"	f
GetFloatValue	src/tests/googletest/googletest/xcode/Samples/FrameworkSample/widget.cc	/^float Widget::GetFloatValue() const {$/;"	f	class:Widget	typeref:typename:float
GetFullMethodName	src/tests/googletest/googletest/test/gtest-listener_test.cc	/^  std::string GetFullMethodName(const char* name) {$/;"	f	class:testing::internal::EventRecordingListener	typeref:typename:std::string	file:
GetGTestRootDir	src/tests/googletest/googlemock/scripts/fuse_gmock_files.py	/^def GetGTestRootDir(gmock_root):$/;"	f
GetGlobalTestPartResultReporter	src/tests/googletest/googletest/src/gtest.cc	/^UnitTestImpl::GetGlobalTestPartResultReporter() {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:TestPartResultReporterInterface *
GetHandle	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  virtual Expectation GetHandle() {$/;"	f	class:testing::internal::TypedExpectation	typeref:typename:Expectation
GetHandleOf	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^Expectation UntypedFunctionMockerBase::GetHandleOf(ExpectationBase* exp) {$/;"	f	class:testing::internal::UntypedFunctionMockerBase	typeref:typename:Expectation
GetId	src/tests/googletest/googletest/src/gtest.cc	/^  size_t GetId(const std::string& str) {$/;"	f	class:testing::internal::edit_distance::__anon3f29b7680111::InternalStrings	typeref:typename:size_t	file:
GetInjectableArgvs	src/tests/googletest/googletest/src/gtest-port.cc	/^const ::std::vector<testing::internal::string>& GetInjectableArgvs() {$/;"	f	namespace:testing::internal	typeref:typename:const::std::vector<testing::internal::string> &
GetInstance	src/tests/googletest/googletest/src/gtest.cc	/^UnitTest* UnitTest::GetInstance() {$/;"	f	class:testing::UnitTest	typeref:typename:UnitTest *
GetIntValue	src/tests/googletest/googletest/xcode/Samples/FrameworkSample/widget.cc	/^int Widget::GetIntValue() const {$/;"	f	class:Widget	typeref:typename:int
GetLastErrnoDescription	src/tests/googletest/googletest/src/gtest-death-test.cc	/^std::string GetLastErrnoDescription() {$/;"	f	namespace:testing::internal	typeref:typename:std::string
GetLastLine	src/tests/googletest/googletest/scripts/pump.py	/^  def GetLastLine(self):$/;"	m	class:Output
GetLeakyTests	src/tests/googletest/googlemock/test/gmock_output_test.py	/^def GetLeakyTests(output):$/;"	f
GetMethod	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def GetMethod(self, modifiers, templated_types):$/;"	m	class:AstBuilder
GetMutableTestCase	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  TestCase* GetMutableTestCase(int i) {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:TestCase *
GetMutableTestCase	src/tests/googletest/googletest/src/gtest.cc	/^TestCase* UnitTest::GetMutableTestCase(int i) {$/;"	f	class:testing::UnitTest	typeref:typename:TestCase *
GetMutableTestInfo	src/tests/googletest/googletest/src/gtest.cc	/^TestInfo* TestCase::GetMutableTestInfo(int i) {$/;"	f	class:testing::TestCase	typeref:typename:TestInfo *
GetName	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def GetName(self, seq=None):$/;"	m	class:AstBuilder
GetNewIndex	src/tests/googletest/googletest/test/gtest-port_test.cc	/^  static size_t GetNewIndex() {$/;"	f	class:testing::internal::DestructorTracker	typeref:typename:size_t	file:
GetNextPrime	src/tests/googletest/googletest/samples/prime_tables.h	/^  virtual int GetNextPrime(int p) const {$/;"	f	class:OnTheFlyPrimeTable	typeref:typename:int
GetNextPrime	src/tests/googletest/googletest/samples/prime_tables.h	/^  virtual int GetNextPrime(int p) const {$/;"	f	class:PreCalculatedPrimeTable	typeref:typename:int
GetNextPrime	src/tests/googletest/googletest/samples/sample8_unittest.cc	/^  virtual int GetNextPrime(int p) const {$/;"	f	class:HybridPrimeTable	typeref:typename:int	file:
GetNextRandomSeed	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^inline int GetNextRandomSeed(int seed) {$/;"	f	namespace:testing::internal	typeref:typename:int
GetNextToken	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^            GetNextToken = lambda: next(it)$/;"	f	member:AstBuilder.GetName	file:
GetNormalizedCommandOutputAndLeakyTests	src/tests/googletest/googlemock/test/gmock_output_test.py	/^def GetNormalizedCommandOutputAndLeakyTests(cmd):$/;"	f
GetNormalizedOutputAndLeakyTests	src/tests/googletest/googlemock/test/gmock_output_test.py	/^def GetNormalizedOutputAndLeakyTests(output):$/;"	f
GetOrCreateValue	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  T* GetOrCreateValue() const {$/;"	f	class:testing::internal::ThreadLocal	typeref:typename:T *
GetOutputFormat	src/tests/googletest/googletest/src/gtest.cc	/^std::string UnitTestOptions::GetOutputFormat() {$/;"	f	class:testing::internal::UnitTestOptions	typeref:typename:std::string
GetOutputOfAllCommands	src/tests/googletest/googletest/test/gtest_output_test.py	/^def GetOutputOfAllCommands():$/;"	f
GetParam	src/tests/googletest/googletest/include/gtest/gtest.h	/^  const ParamType& GetParam() const {$/;"	f	class:testing::WithParamInterface	typeref:typename:const ParamType &
GetParamNameGen	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^ParamNameGenFunctor GetParamNameGen(ParamNameGenFunctor func) {$/;"	f	namespace:testing::internal	typeref:typename:ParamNameGenFunctor
GetParamNameGen	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^typename ParamNameGenFunc<ParamType>::Type *GetParamNameGen() {$/;"	f	namespace:testing::internal	typeref:typename:ParamNameGenFunc<ParamType>::Type *
GetPrefixUntilComma	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^inline std::string GetPrefixUntilComma(const char* str) {$/;"	f	namespace:testing::internal	typeref:typename:std::string
GetRandomSeedFromFlag	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^inline int GetRandomSeedFromFlag(Int32 random_seed_flag) {$/;"	f	namespace:testing::internal	typeref:typename:int
GetRange	src/tests/googletest/googletest/scripts/pump.py	/^  def GetRange(self, identifier):$/;"	m	class:Env
GetRawPointer	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^inline Element* GetRawPointer(Element* p) { return p; }$/;"	f	namespace:testing::internal	typeref:typename:Element *
GetRawPointer	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^inline const typename Pointer::element_type* GetRawPointer(const Pointer& p) {$/;"	f	namespace:testing::internal	typeref:typename:const typename Pointer::element_type *
GetReactionOnUninterestingCalls	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^internal::CallReaction Mock::GetReactionOnUninterestingCalls($/;"	f	class:testing::Mock	typeref:typename:internal::CallReaction
GetRepeater	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static TestEventListener* GetRepeater(TestEventListeners* listeners) {$/;"	f	class:testing::internal::TestEventListenersAccessor	typeref:typename:TestEventListener *	file:
GetReservedAttributesForElement	src/tests/googletest/googletest/src/gtest.cc	/^static std::vector<std::string> GetReservedAttributesForElement($/;"	f	namespace:testing	typeref:typename:std::vector<std::string>	file:
GetRpcServer	src/tests/googletest/googlemock/scripts/upload.py	/^def GetRpcServer(options):$/;"	f
GetRpcServer	src/tests/googletest/googletest/scripts/upload.py	/^def GetRpcServer(options):$/;"	f
GetScope	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def GetScope(self):$/;"	m	class:AstBuilder
GetSelectedArgs	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^  static SelectedArgs GetSelectedArgs(ArgsTuple args) {$/;"	f	class:testing::internal::ArgsMatcherImpl	typeref:typename:SelectedArgs
GetSelectedFields	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^  static type GetSelectedFields(const Tuple& \/* t *\/) {$/;"	f	class:testing::internal::TupleFields	typeref:typename:type
GetSelectedFields	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^  static type GetSelectedFields(const Tuple& t) {$/;"	f	class:testing::internal::TupleFields	typeref:typename:type
GetServiceRequest	src/muduo/muduo/net/protorpc/rpcservice.proto	/^message GetServiceRequest$/;"	m	package:muduo.net
GetServiceResponse	src/muduo/muduo/net/protorpc/rpcservice.proto	/^message GetServiceResponse$/;"	m	package:muduo.net
GetShellCommandOutput	src/tests/googletest/googlemock/test/gmock_output_test.py	/^def GetShellCommandOutput(cmd):$/;"	f
GetShellCommandOutput	src/tests/googletest/googletest/test/gtest_output_test.py	/^def GetShellCommandOutput(env_cmd):$/;"	f
GetSortedTestCases	src/tests/googletest/googletest/test/gtest-unittest-api_test.cc	/^  static TestCase const** GetSortedTestCases() {$/;"	f	class:testing::internal::UnitTestHelper	typeref:typename:TestCase const **	file:
GetSortedTests	src/tests/googletest/googletest/test/gtest-unittest-api_test.cc	/^  static TestInfo const** GetSortedTests(const TestCase* test_case) {$/;"	f	class:testing::internal::UnitTestHelper	typeref:typename:TestInfo const **	file:
GetSourceDir	src/tests/googletest/googlemock/test/gmock_test_utils.py	/^def GetSourceDir():$/;"	f
GetSourceDir	src/tests/googletest/googletest/test/gtest_test_utils.py	/^def GetSourceDir():$/;"	f
GetStatus	src/tests/googletest/googlemock/scripts/upload.py	/^  def GetStatus(self, filename):$/;"	m	class:SubversionVCS
GetStatus	src/tests/googletest/googletest/scripts/upload.py	/^  def GetStatus(self, filename):$/;"	m	class:SubversionVCS
GetStatusFileDescriptor	src/tests/googletest/googletest/src/gtest-death-test.cc	/^int GetStatusFileDescriptor(unsigned int parent_process_id,$/;"	f	namespace:testing::internal	typeref:typename:int
GetStream	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  ::std::ostream& GetStream() { return ::std::cerr; }$/;"	f	class:testing::internal::GTestLog	typeref:typename:::std::ostream &
GetString	src/tests/googletest/googletest/src/gtest.cc	/^std::string Message::GetString() const {$/;"	f	class:testing::Message	typeref:typename:std::string
GetStringValue	src/tests/googletest/googletest/xcode/Samples/FrameworkSample/widget.cc	/^std::string Widget::GetStringValue() const {$/;"	f	class:Widget	typeref:typename:std::string
GetSvnInfo	src/tests/googletest/googletest/scripts/common.py	/^def GetSvnInfo():$/;"	f
GetSvnTrunk	src/tests/googletest/googletest/scripts/common.py	/^def GetSvnTrunk():$/;"	f
GetTempDir	src/tests/googletest/googletest/test/gtest_test_utils.py	/^def GetTempDir():$/;"	f
GetTemplateIndices	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def GetTemplateIndices(self, names):$/;"	m	class:TypeConverter
GetTestCase	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  const TestCase* GetTestCase(int i) const {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:const TestCase *
GetTestCase	src/tests/googletest/googletest/src/gtest.cc	/^TestCase* UnitTestImpl::GetTestCase(const char* test_case_name,$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:TestCase *
GetTestCase	src/tests/googletest/googletest/src/gtest.cc	/^const TestCase* UnitTest::GetTestCase(int i) const {$/;"	f	class:testing::UnitTest	typeref:typename:const TestCase *
GetTestCaseName	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  virtual const std::string& GetTestCaseName() const { return test_case_name_; }$/;"	f	class:testing::internal::ParameterizedTestCaseInfo	typeref:typename:const std::string &
GetTestCasePatternHolder	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  ParameterizedTestCaseInfo<TestCase>* GetTestCasePatternHolder($/;"	f	class:testing::internal::ParameterizedTestCaseRegistry	typeref:typename:ParameterizedTestCaseInfo<TestCase> *
GetTestCaseTypeId	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  virtual TypeId GetTestCaseTypeId() const { return GetTypeId<TestCase>(); }$/;"	f	class:testing::internal::ParameterizedTestCaseInfo	typeref:typename:TypeId
GetTestCases	src/tests/googletest/googletest/test/gtest_shuffle_test.py	/^def GetTestCases(tests):$/;"	f
GetTestExecutablePath	src/tests/googletest/googlemock/test/gmock_test_utils.py	/^def GetTestExecutablePath(executable_name):$/;"	f
GetTestExecutablePath	src/tests/googletest/googletest/test/gtest_test_utils.py	/^def GetTestExecutablePath(executable_name, build_dir=None):$/;"	f
GetTestInfo	src/tests/googletest/googletest/src/gtest.cc	/^const TestInfo* TestCase::GetTestInfo(int i) const {$/;"	f	class:testing::TestCase	typeref:typename:const TestInfo *
GetTestInfo	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static const TestInfo* GetTestInfo(const char* test_name) {$/;"	f	class:testing::TestInfoTest	typeref:typename:const TestInfo *	file:
GetTestName	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^static const char* GetTestName() {$/;"	f	namespace:library2	typeref:typename:const char *	file:
GetTestPartResult	src/tests/googletest/googletest/src/gtest-test-part.cc	/^const TestPartResult& TestPartResultArray::GetTestPartResult(int index) const {$/;"	f	class:testing::TestPartResultArray	typeref:typename:const TestPartResult &
GetTestPartResult	src/tests/googletest/googletest/src/gtest.cc	/^const TestPartResult& TestResult::GetTestPartResult(int i) const {$/;"	f	class:testing::TestResult	typeref:typename:const TestPartResult &
GetTestPartResultReporterForCurrentThread	src/tests/googletest/googletest/src/gtest.cc	/^UnitTestImpl::GetTestPartResultReporterForCurrentThread() {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:TestPartResultReporterInterface *
GetTestProperty	src/tests/googletest/googletest/src/gtest.cc	/^const TestProperty& TestResult::GetTestProperty(int i) const {$/;"	f	class:testing::TestResult	typeref:typename:const TestProperty &
GetTestResult	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static const TestResult* GetTestResult($/;"	f	class:testing::TestInfoTest	typeref:typename:const TestResult *	file:
GetTestTypeId	src/tests/googletest/googletest/src/gtest.cc	/^TypeId GetTestTypeId() {$/;"	f	namespace:testing::internal	typeref:typename:TypeId
GetTestsForAllIterations	src/tests/googletest/googletest/test/gtest_shuffle_test.py	/^def GetTestsForAllIterations(extra_env, args):$/;"	f
GetThreadCount	src/tests/googletest/googletest/src/gtest-port.cc	/^size_t GetThreadCount() {$/;"	f	namespace:testing::internal	typeref:typename:size_t
GetThreadLocalsMapLocked	src/tests/googletest/googletest/src/gtest-port.cc	/^  static ThreadIdToThreadLocals* GetThreadLocalsMapLocked() {$/;"	f	class:testing::internal::ThreadLocalRegistryImpl	typeref:typename:ThreadIdToThreadLocals *	file:
GetTimeInMillis	src/tests/googletest/googletest/src/gtest.cc	/^TimeInMillis GetTimeInMillis() {$/;"	f	namespace:testing::internal	typeref:typename:TimeInMillis
GetToName	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static std::string GetToName() {$/;"	f	class:testing::internal::WhenDynamicCastToMatcherBase	typeref:typename:std::string
GetTokens	src/tests/googletest/googlemock/scripts/generator/cpp/tokenize.py	/^def GetTokens(source):$/;"	f
GetTypeId	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^TypeId GetTypeId() {$/;"	f	namespace:testing::internal	typeref:typename:TypeId
GetTypeName	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^std::string GetTypeName() {$/;"	f	namespace:testing::internal	typeref:typename:std::string
GetUnitTestImpl	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^inline UnitTestImpl* GetUnitTestImpl() {$/;"	f	namespace:testing::internal	typeref:typename:UnitTestImpl *
GetUnknownFiles	src/tests/googletest/googlemock/scripts/upload.py	/^  def GetUnknownFiles(self):$/;"	m	class:GitVCS
GetUnknownFiles	src/tests/googletest/googlemock/scripts/upload.py	/^  def GetUnknownFiles(self):$/;"	m	class:MercurialVCS
GetUnknownFiles	src/tests/googletest/googlemock/scripts/upload.py	/^  def GetUnknownFiles(self):$/;"	m	class:SubversionVCS
GetUnknownFiles	src/tests/googletest/googlemock/scripts/upload.py	/^  def GetUnknownFiles(self):$/;"	m	class:VersionControlSystem
GetUnknownFiles	src/tests/googletest/googletest/scripts/upload.py	/^  def GetUnknownFiles(self):$/;"	m	class:GitVCS
GetUnknownFiles	src/tests/googletest/googletest/scripts/upload.py	/^  def GetUnknownFiles(self):$/;"	m	class:MercurialVCS
GetUnknownFiles	src/tests/googletest/googletest/scripts/upload.py	/^  def GetUnknownFiles(self):$/;"	m	class:SubversionVCS
GetUnknownFiles	src/tests/googletest/googletest/scripts/upload.py	/^  def GetUnknownFiles(self):$/;"	m	class:VersionControlSystem
GetUserCredentials	src/tests/googletest/googlemock/scripts/upload.py	/^  def GetUserCredentials():$/;"	f	function:GetRpcServer	file:
GetUserCredentials	src/tests/googletest/googletest/scripts/upload.py	/^  def GetUserCredentials():$/;"	f	function:GetRpcServer	file:
GetValue	src/tests/googletest/googletest/scripts/pump.py	/^  def GetValue(self, identifier):$/;"	m	class:Env
GetValueOnCurrentThread	src/tests/googletest/googletest/src/gtest-port.cc	/^  static ThreadLocalValueHolderBase* GetValueOnCurrentThread($/;"	f	class:testing::internal::ThreadLocalRegistryImpl	typeref:typename:ThreadLocalValueHolderBase *	file:
GetValueOnCurrentThread	src/tests/googletest/googletest/src/gtest-port.cc	/^ThreadLocalValueHolderBase* ThreadLocalRegistry::GetValueOnCurrentThread($/;"	f	class:testing::internal::ThreadLocalRegistry	typeref:typename:ThreadLocalValueHolderBase *
Getting Started	src/tests/googletest/googlemock/README.md	/^## Getting Started ##$/;"	s
Getting Started	src/tests/googletest/googlemock/docs/ForDummies.md	/^# Getting Started #$/;"	c
Getting Started	src/tests/googletest/googlemock/docs/v1_5/ForDummies.md	/^# Getting Started #$/;"	c
Getting Started	src/tests/googletest/googlemock/docs/v1_6/ForDummies.md	/^# Getting Started #$/;"	c
Getting Started	src/tests/googletest/googlemock/docs/v1_7/ForDummies.md	/^# Getting Started #$/;"	c
Getting the Current Test's Name	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^# Getting the Current Test's Name #$/;"	c
Getting the Current Test's Name	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^# Getting the Current Test's Name #$/;"	c
Getting the Current Test's Name	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^# Getting the Current Test's Name #$/;"	c
Getting the Current Test's Name	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^# Getting the Current Test's Name #$/;"	c
Giant	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^      true, 6, char, unsigned, int> Giant;$/;"	t	function:testing::gmock_generated_actions_test::TEST	typeref:typename:GiantTemplate<linked_ptr<int>,bool,double,5,true,6,char,unsigned,int>	file:
GiantTemplate	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^  explicit GiantTemplate(int a_value) : value(a_value) {}$/;"	f	struct:testing::gmock_generated_actions_test::GiantTemplate	file:
GiantTemplate	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^struct GiantTemplate {$/;"	s	namespace:testing::gmock_generated_actions_test	file:
GitVCS	src/tests/googletest/googlemock/scripts/upload.py	/^class GitVCS(VersionControlSystem):$/;"	c
GitVCS	src/tests/googletest/googletest/scripts/upload.py	/^class GitVCS(VersionControlSystem):$/;"	c
Global Set-Up and Tear-Down	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^# Global Set-Up and Tear-Down #$/;"	c
Global Set-Up and Tear-Down	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^# Global Set-Up and Tear-Down #$/;"	c
Global Set-Up and Tear-Down	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^# Global Set-Up and Tear-Down #$/;"	c
Global Set-Up and Tear-Down	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^# Global Set-Up and Tear-Down #$/;"	c
GlobalFunction	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^void GlobalFunction() { DieInside("GlobalFunction"); }$/;"	f	typeref:typename:void
Google C++ Mocking Framework	src/tests/googletest/googlemock/configure.ac	/^AC_INIT([Google C++ Mocking Framework],$/;"	p
Google C++ Testing Framework	src/tests/googletest/googletest/configure.ac	/^AC_INIT([Google C++ Testing Framework],$/;"	p
Google Mock	src/tests/googletest/googlemock/README.md	/^## Google Mock ##$/;"	s
Google Mock Committers	src/tests/googletest/googlemock/docs/DevGuide.md	/^## Google Mock Committers ##$/;"	s	chapter:Contributing Code
Google Mock prints a warning when a function without EXPECT\\_CALL is called, even if I have set its behavior using ON\\_CALL.  Would it be reasonable not to show the warning in this case?	src/tests/googletest/googlemock/docs/FrequentlyAskedQuestions.md	/^## Google Mock prints a warning when a function without EXPECT\\_CALL is called, even if I have /;"	s
Google Mock prints a warning when a function without EXPECT\\_CALL is called, even if I have set its behavior using ON\\_CALL.  Would it be reasonable not to show the warning in this case?	src/tests/googletest/googlemock/docs/v1_5/FrequentlyAskedQuestions.md	/^## Google Mock prints a warning when a function without EXPECT\\_CALL is called, even if I have /;"	s
Google Mock prints a warning when a function without EXPECT\\_CALL is called, even if I have set its behavior using ON\\_CALL.  Would it be reasonable not to show the warning in this case?	src/tests/googletest/googlemock/docs/v1_6/FrequentlyAskedQuestions.md	/^## Google Mock prints a warning when a function without EXPECT\\_CALL is called, even if I have /;"	s
Google Mock prints a warning when a function without EXPECT\\_CALL is called, even if I have set its behavior using ON\\_CALL.  Would it be reasonable not to show the warning in this case?	src/tests/googletest/googlemock/docs/v1_7/FrequentlyAskedQuestions.md	/^## Google Mock prints a warning when a function without EXPECT\\_CALL is called, even if I have /;"	s
Google Test	src/tests/googletest/README.md	/^# Google Test #$/;"	c
Google Test Committers	src/tests/googletest/googletest/docs/DevGuide.md	/^## Google Test Committers ##$/;"	s	chapter:Contributing Code
Google Test defines a macro that clashes with one defined by another library. How do I deal with that?	src/tests/googletest/googletest/docs/FAQ.md	/^## Google Test defines a macro that clashes with one defined by another library. How do I deal w/;"	s
Google Test defines a macro that clashes with one defined by another library. How do I deal with that?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## Google Test defines a macro that clashes with one defined by another library. How do I deal w/;"	s
Google Test defines a macro that clashes with one defined by another library. How do I deal with that?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## Google Test defines a macro that clashes with one defined by another library. How do I deal w/;"	s
GoogleTestFailureException	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^class GTEST_API_ GoogleTestFailureException : public ::std::runtime_error {$/;"	c	namespace:testing::internal
GoogleTestFailureException	src/tests/googletest/googletest/src/gtest.cc	/^GoogleTestFailureException::GoogleTestFailureException($/;"	f	class:testing::internal::GoogleTestFailureException
GoogleTestFailureReporter	src/tests/googletest/googlemock/src/gmock-internal-utils.cc	/^class GoogleTestFailureReporter : public FailureReporterInterface {$/;"	c	namespace:testing::internal	file:
Goto	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^class Goto(Node):$/;"	c
GrabOutput	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^std::string GrabOutput(void(*logger)(), const char* verbosity) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111	typeref:typename:std::string
Grammar	src/tests/googletest/googletest/docs/PumpManual.md	/^## Grammar ##$/;"	s	chapter:Our Solution
Grammar	src/tests/googletest/googletest/docs/V1_5_PumpManual.md	/^## Grammar ##$/;"	s	chapter:Our Solution
Grammar	src/tests/googletest/googletest/docs/V1_6_PumpManual.md	/^## Grammar ##$/;"	s	chapter:Our Solution
Grammar	src/tests/googletest/googletest/docs/V1_7_PumpManual.md	/^## Grammar ##$/;"	s	chapter:Our Solution
GreaterThan	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^Matcher<int> GreaterThan(int n) {$/;"	f	namespace:__anoncaf4ae130111	typeref:typename:Matcher<int>
GreaterThan	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^Matcher<int> GreaterThan(int n) {$/;"	f	namespace:testing::gmock_matchers_test	typeref:typename:Matcher<int>
GreaterThan	src/tests/googletest/googletest/test/gtest_unittest.cc	/^bool GreaterThan(T1 x1, T2 x2) {$/;"	f	namespace:__anonf780395f0111	typeref:typename:bool
GreaterThanMatcher	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^  explicit GreaterThanMatcher(int rhs) : rhs_(rhs) {}$/;"	f	class:__anoncaf4ae130111::GreaterThanMatcher	file:
GreaterThanMatcher	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^class GreaterThanMatcher : public MatcherInterface<int> {$/;"	c	namespace:__anoncaf4ae130111	file:
GreaterThanMatcher	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  explicit GreaterThanMatcher(int rhs) : rhs_(rhs) {}$/;"	f	class:testing::gmock_matchers_test::GreaterThanMatcher	file:
GreaterThanMatcher	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^class GreaterThanMatcher : public MatcherInterface<int> {$/;"	c	namespace:testing::gmock_matchers_test	file:
Gt	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline internal::Gt2Matcher Gt() { return internal::Gt2Matcher(); }$/;"	f	namespace:testing	typeref:typename:internal::Gt2Matcher
Gt	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline internal::GtMatcher<Rhs> Gt(Rhs x) {$/;"	f	namespace:testing	typeref:typename:internal::GtMatcher<Rhs>
Gt2Matcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class Gt2Matcher : public PairMatchBase<Gt2Matcher, AnyGt> {$/;"	c	namespace:testing::internal
GtMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit GtMatcher(const Rhs& rhs)$/;"	f	class:testing::internal::GtMatcher
GtMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class GtMatcher : public ComparisonBase<GtMatcher<Rhs>, Rhs, AnyGt> {$/;"	c	namespace:testing::internal
GuessBase	src/tests/googletest/googlemock/scripts/upload.py	/^  def GuessBase(self, required):$/;"	m	class:SubversionVCS
GuessBase	src/tests/googletest/googletest/scripts/upload.py	/^  def GuessBase(self, required):$/;"	m	class:SubversionVCS
GuessVCS	src/tests/googletest/googlemock/scripts/upload.py	/^def GuessVCS(options):$/;"	f
GuessVCS	src/tests/googletest/googletest/scripts/upload.py	/^def GuessVCS(options):$/;"	f
GzipFile	src/muduo/muduo/base/GzipFile.h	/^  GzipFile(GzipFile&& rhs) noexcept$/;"	f	class:muduo::GzipFile
GzipFile	src/muduo/muduo/base/GzipFile.h	/^  explicit GzipFile(gzFile file)$/;"	f	class:muduo::GzipFile
GzipFile	src/muduo/muduo/base/GzipFile.h	/^class GzipFile : noncopyable$/;"	c	namespace:muduo
HAVE_GTEST	src/tests/googletest/googletest/m4/gtest.m4	/^      AC_DEFINE([HAVE_GTEST],[1],[Defined when Google Test is available.])],$/;"	d
HAVE_GTEST	src/tests/googletest/googletest/m4/gtest.m4	/^AC_SUBST([HAVE_GTEST])$/;"	s
HAVE_GTEST	src/tests/googletest/googletest/m4/gtest.m4	/^AM_CONDITIONAL([HAVE_GTEST],[test "x$HAVE_GTEST" = "xyes"])$/;"	c
HAVE_PTHREAD	src/tests/googletest/googletest/m4/acx_pthread.m4	/^        ifelse([$1],,AC_DEFINE(HAVE_PTHREAD,1,[Define if you have POSIX threads libraries and he/;"	d
HAVE_PTHREADS	src/tests/googletest/googlemock/configure.ac	/^AM_CONDITIONAL([HAVE_PTHREADS],[test "x$have_pthreads" == "xyes"])$/;"	c
HAVE_PTHREADS	src/tests/googletest/googletest/configure.ac	/^AM_CONDITIONAL([HAVE_PTHREADS],[test "x$have_pthreads" = "xyes"])$/;"	c
HAVE_PYTHON	src/tests/googletest/googlemock/configure.ac	/^AM_CONDITIONAL([HAVE_PYTHON],[test "$PYTHON" != ":"])$/;"	c
HAVE_PYTHON	src/tests/googletest/googletest/configure.ac	/^AM_CONDITIONAL([HAVE_PYTHON],[test "$PYTHON" != ":"])$/;"	c
HEADER	src/tests/googletest/googletest/scripts/gen_gtest_pred_impl.py	/^HEADER = os.path.join(SCRIPT_DIR, '..\/include\/gtest\/gtest_pred_impl.h')$/;"	v
HEADERS	src/libtfhe-superaic-core/fft_processors/nayuki/CMakeLists.txt	/^set(HEADERS$/;"	v
HEADERS	src/muduo/muduo/net/CMakeLists.txt	/^set(HEADERS$/;"	v
HEADERS	src/muduo/muduo/net/http/CMakeLists.txt	/^set(HEADERS$/;"	v
HEADERS	src/muduo/muduo/net/inspect/CMakeLists.txt	/^set(HEADERS$/;"	v
HEADERS	src/muduo/muduo/net/protorpc/CMakeLists.txt	/^set(HEADERS$/;"	v
HEAD_MATIC	src/libtfhe-superaic-core/include/tfhe_package.h	/^#define HEAD_MATIC /;"	d
HELP_REGEX	src/tests/googletest/googletest/test/gtest_help_test.py	/^HELP_REGEX = re.compile($/;"	v
HEX	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#define HEX(/;"	d	file:
HEX	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define HEX(/;"	d	file:
HEX_DIGITS	src/tests/googletest/googlemock/scripts/generator/cpp/tokenize.py	/^HEX_DIGITS = set('0123456789abcdefABCDEF')$/;"	v
HONOR_SHARDING_PROTOCOL	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^    HONOR_SHARDING_PROTOCOL,$/;"	e	enum:testing::internal::UnitTestImpl::ReactionToSharding
HRESULTFailureHelper	src/tests/googletest/googletest/src/gtest.cc	/^AssertionResult HRESULTFailureHelper(const char* expr,$/;"	f	namespace:testing::internal::__anon3f29b7680511	typeref:typename:AssertionResult
Handle	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  typedef void* Handle;$/;"	t	class:testing::internal::AutoHandle	typeref:typename:void *
HandleError	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def HandleError(self, msg, token):$/;"	m	class:AstBuilder
HandleExceptionsInMethodIfSupported	src/tests/googletest/googletest/src/gtest.cc	/^Result HandleExceptionsInMethodIfSupported($/;"	f	namespace:testing::internal	typeref:typename:Result
HandleSehExceptionsInMethodIfSupported	src/tests/googletest/googletest/src/gtest.cc	/^Result HandleSehExceptionsInMethodIfSupported($/;"	f	namespace:testing::internal	typeref:typename:Result
Handler	src/muduo/examples/filetransfer/loadtest/Handler.java	/^    public Handler(int maxLength, CountDownLatch latch) throws Exception {$/;"	m	class:Handler
Handler	src/muduo/examples/filetransfer/loadtest/Handler.java	/^public class Handler extends SimpleChannelUpstreamHandler {$/;"	c
Handler	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockBackendServer.java	/^    private class Handler extends SimpleChannelHandler {$/;"	c	class:MockBackendServer
Handler	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockClient.java	/^    private class Handler extends SimpleChannelHandler {$/;"	c	class:MockClient
HasEdge	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  bool HasEdge(size_t ilhs, size_t irhs) const {$/;"	f	class:testing::internal::MatchMatrix	typeref:typename:bool
HasFailure	src/tests/googletest/googletest/include/gtest/gtest.h	/^  static bool HasFailure() { return HasFatalFailure() || HasNonfatalFailure(); }$/;"	f	class:testing::Test	typeref:typename:bool
HasFailureHelper	src/tests/googletest/googletest/test/gtest_unittest.cc	/^static bool HasFailureHelper() { return testing::Test::HasFailure(); }$/;"	f	typeref:typename:bool	file:
HasFatalFailure	src/tests/googletest/googletest/src/gtest.cc	/^bool Test::HasFatalFailure() {$/;"	f	class:testing::Test	typeref:typename:bool
HasFatalFailure	src/tests/googletest/googletest/src/gtest.cc	/^bool TestResult::HasFatalFailure() const {$/;"	f	class:testing::TestResult	typeref:typename:bool
HasGoogleTestFlagPrefix	src/tests/googletest/googletest/src/gtest.cc	/^static bool HasGoogleTestFlagPrefix(const char* str) {$/;"	f	namespace:testing::internal	typeref:typename:bool	file:
HasMaxAbsError	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    bool HasMaxAbsError() const {$/;"	f	class:testing::internal::FloatingEqMatcher::Impl	typeref:typename:bool
HasNewFatalFailureHelper	src/tests/googletest/googletest/include/gtest/gtest-test-part.h	/^class GTEST_API_ HasNewFatalFailureHelper$/;"	c	namespace:testing::internal
HasNewFatalFailureHelper	src/tests/googletest/googletest/src/gtest-test-part.cc	/^HasNewFatalFailureHelper::HasNewFatalFailureHelper()$/;"	f	class:testing::internal::HasNewFatalFailureHelper
HasNonfatalFailure	src/tests/googletest/googletest/src/gtest.cc	/^bool Test::HasNonfatalFailure() {$/;"	f	class:testing::Test	typeref:typename:bool
HasNonfatalFailure	src/tests/googletest/googletest/src/gtest.cc	/^bool TestResult::HasNonfatalFailure() const {$/;"	f	class:testing::TestResult	typeref:typename:bool
HasNonfatalFailureHelper	src/tests/googletest/googletest/test/gtest_unittest.cc	/^static bool HasNonfatalFailureHelper() {$/;"	f	typeref:typename:bool	file:
HasOneFailure	src/tests/googletest/googletest/src/gtest.cc	/^AssertionResult HasOneFailure(const char* \/* results_expr *\/,$/;"	f	namespace:testing::internal	typeref:typename:AssertionResult
HasPrefix	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^AssertionResult HasPrefix(const StringType& str, const StringType& prefix) {$/;"	f	namespace:testing::gtest_printers_test	typeref:typename:AssertionResult
HasSameFixtureClass	src/tests/googletest/googletest/src/gtest.cc	/^bool Test::HasSameFixtureClass() {$/;"	f	class:testing::Test	typeref:typename:bool
HasSubstr	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    HasSubstr(const internal::wstring& substring) {$/;"	f	namespace:testing	typeref:typename:PolymorphicMatcher<internal::HasSubstrMatcher<internal::wstring>>
HasSubstr	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline PolymorphicMatcher<internal::HasSubstrMatcher<std::string> > HasSubstr($/;"	f	namespace:testing	typeref:typename:PolymorphicMatcher<internal::HasSubstrMatcher<std::string>>
HasSubstrMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit HasSubstrMatcher(const StringType& substring)$/;"	f	class:testing::internal::HasSubstrMatcher
HasSubstrMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class HasSubstrMatcher {$/;"	c	namespace:testing::internal
Hash	src/muduo/examples/memcached/server/MemcacheServer.h	/^  struct Hash$/;"	s	class:MemcacheServer
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^    typedef typename Tests::Head Head;$/;"	t	function:testing::internal::TypeParameterizedTestCase::Register	typeref:typename:Tests::Head
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types1	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types10	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types11	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types12	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types13	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types14	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types15	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types16	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types17	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types18	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types19	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types2	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types20	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types21	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types22	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types23	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types24	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types25	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types26	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types27	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types28	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types29	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types3	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types30	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types31	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types32	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types33	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types34	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types35	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types36	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types37	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types38	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types39	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types4	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types40	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types41	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types42	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types43	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types44	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types45	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types46	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types47	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types48	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types49	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types5	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types50	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types6	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types7	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types8	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types9	typeref:typename:T1
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates1	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates10	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates11	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates12	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates13	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates14	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates15	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates16	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates17	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates18	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates19	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates2	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates20	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates21	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates22	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates23	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates24	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates25	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates26	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates27	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates28	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates29	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates3	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates30	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates31	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates32	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates33	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates34	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates35	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates36	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates37	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates38	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates39	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates4	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates40	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates41	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates42	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates43	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates44	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates45	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates46	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates47	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates48	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates49	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates5	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates50	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates6	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates7	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates8	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates9	typeref:typename:TemplateSel<T1>
Head	src/tests/googletest/googletest/samples/sample3-inl.h	/^  QueueNode<E>* Head() { return head_; }$/;"	f	class:Queue	typeref:typename:QueueNode<E> *
Head	src/tests/googletest/googletest/samples/sample3-inl.h	/^  const QueueNode<E>* Head() const { return head_; }$/;"	f	class:Queue	typeref:typename:const QueueNode<E> *
HeaderPostamble	src/tests/googletest/googletest/scripts/gen_gtest_pred_impl.py	/^def HeaderPostamble():$/;"	f
HeaderPreamble	src/tests/googletest/googletest/scripts/gen_gtest_pred_impl.py	/^def HeaderPreamble(n):$/;"	f
Heartbeat	src/muduo/examples/ace/logging/logrecord.proto	/^  message Heartbeat {$/;"	m	message:logging.LogRecord
HelpList	src/muduo/muduo/net/inspect/Inspector.h	/^  typedef std::map<string, string> HelpList;$/;"	t	class:muduo::net::Inspector	typeref:typename:std::map<string,string>
Helper	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  struct Helper {$/;"	s	function:testing::gmock_matchers_test::TEST	file:
Helper1	src/tests/googletest/googlemock/test/gmock_stress_test.cc	/^void Helper1(Helper1Param param) {$/;"	f	namespace:testing::__anonc83180760111	typeref:typename:void
Helper1Param	src/tests/googletest/googlemock/test/gmock_stress_test.cc	/^struct Helper1Param {$/;"	s	namespace:testing::__anonc83180760111	file:
Helper2	src/tests/googletest/googlemock/test/gmock_stress_test.cc	/^void Helper2(MockFoo* foo) {$/;"	f	namespace:testing::__anonc83180760111	typeref:typename:void
HighWaterMarkCallback	src/muduo/muduo/net/Callbacks.h	/^typedef std::function<void (const TcpConnectionPtr&, size_t)> HighWaterMarkCallback;$/;"	t	namespace:muduo::net
Highlights	src/tests/googletest/googletest/docs/PumpManual.md	/^## Highlights ##$/;"	s	chapter:Our Solution
Highlights	src/tests/googletest/googletest/docs/V1_5_PumpManual.md	/^## Highlights ##$/;"	s	chapter:Our Solution
Highlights	src/tests/googletest/googletest/docs/V1_6_PumpManual.md	/^## Highlights ##$/;"	s	chapter:Our Solution
Highlights	src/tests/googletest/googletest/docs/V1_7_PumpManual.md	/^## Highlights ##$/;"	s	chapter:Our Solution
Hiredis	src/muduo/contrib/hiredis/Hiredis.cc	/^Hiredis::Hiredis(EventLoop* loop, const InetAddress& serverAddr)$/;"	f	class:Hiredis
Hiredis	src/muduo/contrib/hiredis/Hiredis.h	/^class Hiredis : public std::enable_shared_from_this<Hiredis>,$/;"	c	namespace:hiredis
Hiredis	src/muduo/contrib/hiredis/README.md	/^# Hiredis$/;"	c
How It Works	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^## How It Works ##$/;"	s	chapter:Death Tests
How It Works	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^## How It Works ##$/;"	s	chapter:Death Tests
How It Works	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^## How It Works ##$/;"	s	chapter:Death Tests
How It Works	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^## How It Works ##$/;"	s	chapter:Death Tests
How am I supposed to make sense of these horrible template errors?	src/tests/googletest/googlemock/docs/FrequentlyAskedQuestions.md	/^## How am I supposed to make sense of these horrible template errors? ##$/;"	s
How am I supposed to make sense of these horrible template errors?	src/tests/googletest/googlemock/docs/v1_5/FrequentlyAskedQuestions.md	/^## How am I supposed to make sense of these horrible template errors? ##$/;"	s
How am I supposed to make sense of these horrible template errors?	src/tests/googletest/googlemock/docs/v1_6/FrequentlyAskedQuestions.md	/^## How am I supposed to make sense of these horrible template errors? ##$/;"	s
How am I supposed to make sense of these horrible template errors?	src/tests/googletest/googlemock/docs/v1_7/FrequentlyAskedQuestions.md	/^## How am I supposed to make sense of these horrible template errors? ##$/;"	s
How can I assert that a function is NEVER called?	src/tests/googletest/googlemock/docs/FrequentlyAskedQuestions.md	/^## How can I assert that a function is NEVER called? ##$/;"	s
How can I assert that a function is NEVER called?	src/tests/googletest/googlemock/docs/v1_5/FrequentlyAskedQuestions.md	/^## How can I assert that a function is NEVER called? ##$/;"	s
How can I assert that a function is NEVER called?	src/tests/googletest/googlemock/docs/v1_6/FrequentlyAskedQuestions.md	/^## How can I assert that a function is NEVER called? ##$/;"	s
How can I assert that a function is NEVER called?	src/tests/googletest/googlemock/docs/v1_7/FrequentlyAskedQuestions.md	/^## How can I assert that a function is NEVER called? ##$/;"	s
How can I delete the mock function's argument in an action?	src/tests/googletest/googlemock/docs/FrequentlyAskedQuestions.md	/^## How can I delete the mock function's argument in an action? ##$/;"	s
How can I delete the mock function's argument in an action?	src/tests/googletest/googlemock/docs/v1_5/FrequentlyAskedQuestions.md	/^## How can I delete the mock function's argument in an action? ##$/;"	s
How can I delete the mock function's argument in an action?	src/tests/googletest/googlemock/docs/v1_6/FrequentlyAskedQuestions.md	/^## How can I delete the mock function's argument in an action? ##$/;"	s
How can I delete the mock function's argument in an action?	src/tests/googletest/googlemock/docs/v1_7/FrequentlyAskedQuestions.md	/^## How can I delete the mock function's argument in an action? ##$/;"	s
How can my code detect if it is running in a test?	src/tests/googletest/googletest/docs/FAQ.md	/^## How can my code detect if it is running in a test? ##$/;"	s
How can my code detect if it is running in a test?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## How can my code detect if it is running in a test? ##$/;"	s
How can my code detect if it is running in a test?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## How can my code detect if it is running in a test? ##$/;"	s
How do I build Google Testing Framework with Xcode 4?	src/tests/googletest/googletest/docs/FAQ.md	/^## How do I build Google Testing Framework with Xcode 4? ##$/;"	s
How do I build Google Testing Framework with Xcode 4?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## How do I build Google Testing Framework with Xcode 4? ##$/;"	s
How do I generate 64-bit binaries on Windows (using Visual Studio 2008)?	src/tests/googletest/googletest/docs/FAQ.md	/^## How do I generate 64-bit binaries on Windows (using Visual Studio 2008)? ##$/;"	s
How do I generate 64-bit binaries on Windows (using Visual Studio 2008)?	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## How do I generate 64-bit binaries on Windows (using Visual Studio 2008)? ##$/;"	s
How do I generate 64-bit binaries on Windows (using Visual Studio 2008)?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## How do I generate 64-bit binaries on Windows (using Visual Studio 2008)? ##$/;"	s
How do I generate 64-bit binaries on Windows (using Visual Studio 2008)?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## How do I generate 64-bit binaries on Windows (using Visual Studio 2008)? ##$/;"	s
How do I jump to the line of a failure in Emacs directly?	src/tests/googletest/googletest/docs/FAQ.md	/^## How do I jump to the line of a failure in Emacs directly? ##$/;"	s
How do I jump to the line of a failure in Emacs directly?	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## How do I jump to the line of a failure in Emacs directly? ##$/;"	s
How do I jump to the line of a failure in Emacs directly?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## How do I jump to the line of a failure in Emacs directly? ##$/;"	s
How do I jump to the line of a failure in Emacs directly?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## How do I jump to the line of a failure in Emacs directly? ##$/;"	s
How do I suppress the memory leak messages on Windows?	src/tests/googletest/googletest/docs/FAQ.md	/^## How do I suppress the memory leak messages on Windows? ##$/;"	s
How do I suppress the memory leak messages on Windows?	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## How do I suppress the memory leak messages on Windows? ##$/;"	s
How do I suppress the memory leak messages on Windows?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## How do I suppress the memory leak messages on Windows? ##$/;"	s
How do I suppress the memory leak messages on Windows?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## How do I suppress the memory leak messages on Windows? ##$/;"	s
How do I test a file that defines main()?	src/tests/googletest/googletest/docs/FAQ.md	/^## How do I test a file that defines main()? ##$/;"	s
How do I test a file that defines main()?	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## How do I test a file that defines main()? ##$/;"	s
How do I test a file that defines main()?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## How do I test a file that defines main()? ##$/;"	s
How do I test a file that defines main()?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## How do I test a file that defines main()? ##$/;"	s
How do I test private class members without writing FRIEND\\_TEST()s?	src/tests/googletest/googletest/docs/FAQ.md	/^## How do I test private class members without writing FRIEND\\_TEST()s? ##$/;"	s
How do I test private class members without writing FRIEND\\_TEST()s?	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## How do I test private class members without writing FRIEND\\_TEST()s? ##$/;"	s
How do I test private class members without writing FRIEND\\_TEST()s?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## How do I test private class members without writing FRIEND\\_TEST()s? ##$/;"	s
How do I test private class members without writing FRIEND\\_TEST()s?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## How do I test private class members without writing FRIEND\\_TEST()s? ##$/;"	s
How do I test private class static members without writing FRIEND\\_TEST()s?	src/tests/googletest/googletest/docs/FAQ.md	/^## How do I test private class static members without writing FRIEND\\_TEST()s? ##$/;"	s
How do I test private class static members without writing FRIEND\\_TEST()s?	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## How do I test private class static members without writing FRIEND\\_TEST()s? ##$/;"	s
How do I test private class static members without writing FRIEND\\_TEST()s?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## How do I test private class static members without writing FRIEND\\_TEST()s? ##$/;"	s
How do I test private class static members without writing FRIEND\\_TEST()s?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## How do I test private class static members without writing FRIEND\\_TEST()s? ##$/;"	s
How to Define It	src/tests/googletest/googlemock/docs/ForDummies.md	/^## How to Define It ##$/;"	s	chapter:Writing the Mock Class
How to Define It	src/tests/googletest/googlemock/docs/v1_5/ForDummies.md	/^## How to Define It ##$/;"	s	chapter:Writing the Mock Class
How to Define It	src/tests/googletest/googlemock/docs/v1_6/ForDummies.md	/^## How to Define It ##$/;"	s	chapter:Writing the Mock Class
How to Define It	src/tests/googletest/googlemock/docs/v1_7/ForDummies.md	/^## How to Define It ##$/;"	s	chapter:Writing the Mock Class
How to Write Value-Parameterized Tests	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^## How to Write Value-Parameterized Tests ##$/;"	s	chapter:Value Parameterized Tests
How to Write Value-Parameterized Tests	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^## How to Write Value-Parameterized Tests ##$/;"	s	chapter:Value Parameterized Tests
How to Write Value-Parameterized Tests	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^## How to Write Value-Parameterized Tests ##$/;"	s	chapter:Value Parameterized Tests
How to Write Value-Parameterized Tests	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^## How to Write Value-Parameterized Tests ##$/;"	s	chapter:Value Parameterized Tests
How to Write a Death Test	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^## How to Write a Death Test ##$/;"	s	chapter:Death Tests
How to Write a Death Test	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^## How to Write a Death Test ##$/;"	s	chapter:Death Tests
How to Write a Death Test	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^## How to Write a Death Test ##$/;"	s	chapter:Death Tests
How to Write a Death Test	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^## How to Write a Death Test ##$/;"	s	chapter:Death Tests
HttpCallback	src/muduo/muduo/net/http/HttpServer.h	/^                              HttpResponse*)> HttpCallback;$/;"	t	class:muduo::net::HttpServer
HttpContext	src/muduo/muduo/net/http/HttpContext.h	/^  HttpContext()$/;"	f	class:muduo::net::HttpContext
HttpContext	src/muduo/muduo/net/http/HttpContext.h	/^class HttpContext : public muduo::copyable$/;"	c	namespace:muduo::net
HttpRequest	src/muduo/muduo/net/http/HttpRequest.h	/^  HttpRequest()$/;"	f	class:muduo::net::HttpRequest
HttpRequest	src/muduo/muduo/net/http/HttpRequest.h	/^class HttpRequest : public muduo::copyable$/;"	c	namespace:muduo::net
HttpRequestParseState	src/muduo/muduo/net/http/HttpContext.h	/^  enum HttpRequestParseState$/;"	g	class:muduo::net::HttpContext
HttpResponse	src/muduo/muduo/net/http/HttpResponse.h	/^  explicit HttpResponse(bool close)$/;"	f	class:muduo::net::HttpResponse
HttpResponse	src/muduo/muduo/net/http/HttpResponse.h	/^class HttpResponse : public muduo::copyable$/;"	c	namespace:muduo::net
HttpRpcServer	src/tests/googletest/googlemock/scripts/upload.py	/^class HttpRpcServer(AbstractRpcServer):$/;"	c
HttpRpcServer	src/tests/googletest/googletest/scripts/upload.py	/^class HttpRpcServer(AbstractRpcServer):$/;"	c
HttpServer	src/muduo/muduo/net/http/HttpServer.cc	/^HttpServer::HttpServer(EventLoop* loop,$/;"	f	class:HttpServer
HttpServer	src/muduo/muduo/net/http/HttpServer.h	/^class HttpServer : noncopyable$/;"	c	namespace:muduo::net
HttpStatusCode	src/muduo/muduo/net/http/HttpResponse.h	/^  enum HttpStatusCode$/;"	g	class:muduo::net::HttpResponse
Hunk	src/tests/googletest/googletest/src/gtest.cc	/^  Hunk(size_t left_start, size_t right_start)$/;"	f	class:testing::internal::edit_distance::__anon3f29b7680211::Hunk	file:
Hunk	src/tests/googletest/googletest/src/gtest.cc	/^class Hunk {$/;"	c	namespace:testing::internal::edit_distance::__anon3f29b7680211	file:
HybridPrimeTable	src/tests/googletest/googletest/samples/sample8_unittest.cc	/^  HybridPrimeTable(bool force_on_the_fly, int max_precalculated)$/;"	f	class:HybridPrimeTable	file:
HybridPrimeTable	src/tests/googletest/googletest/samples/sample8_unittest.cc	/^class HybridPrimeTable : public PrimeTable {$/;"	c	file:
I am building my project with Google Test in Visual Studio and all I'm getting is a bunch of linker errors (or warnings). Help!	src/tests/googletest/googletest/docs/FAQ.md	/^## I am building my project with Google Test in Visual Studio and all I'm getting is a bunch of /;"	s
I am building my project with Google Test in Visual Studio and all I'm getting is a bunch of linker errors (or warnings). Help!	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## I am building my project with Google Test in Visual Studio and all I'm getting is a bunch of /;"	s
I am building my project with Google Test in Visual Studio and all I'm getting is a bunch of linker errors (or warnings). Help!	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## I am building my project with Google Test in Visual Studio and all I'm getting is a bunch of /;"	s
I am building my project with Google Test in Visual Studio and all I'm getting is a bunch of linker errors (or warnings). Help!	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## I am building my project with Google Test in Visual Studio and all I'm getting is a bunch of /;"	s
I am seeing compile errors mentioning std::type\\_traits when I try to use Google Test on Solaris.	src/tests/googletest/googletest/docs/FAQ.md	/^## I am seeing compile errors mentioning std::type\\_traits when I try to use Google Test on Sol/;"	s
I am seeing compile errors mentioning std::type\\_traits when I try to use Google Test on Solaris.	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## I am seeing compile errors mentioning std::type\\_traits when I try to use Google Test on Sol/;"	s
I am seeing compile errors mentioning std::type\\_traits when I try to use Google Test on Solaris.	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## I am seeing compile errors mentioning std::type\\_traits when I try to use Google Test on Sol/;"	s
I can't figure out why Google Mock thinks my expectations are not satisfied.  What should I do?	src/tests/googletest/googlemock/docs/FrequentlyAskedQuestions.md	/^## I can't figure out why Google Mock thinks my expectations are not satisfied.  What should I d/;"	s
I can't figure out why Google Mock thinks my expectations are not satisfied.  What should I do?	src/tests/googletest/googlemock/docs/v1_5/FrequentlyAskedQuestions.md	/^## I can't figure out why Google Mock thinks my expectations are not satisfied.  What should I d/;"	s
I can't figure out why Google Mock thinks my expectations are not satisfied.  What should I do?	src/tests/googletest/googlemock/docs/v1_6/FrequentlyAskedQuestions.md	/^## I can't figure out why Google Mock thinks my expectations are not satisfied.  What should I d/;"	s
I can't figure out why Google Mock thinks my expectations are not satisfied.  What should I do?	src/tests/googletest/googlemock/docs/v1_7/FrequentlyAskedQuestions.md	/^## I can't figure out why Google Mock thinks my expectations are not satisfied.  What should I d/;"	s
I get a heap check failure when using a mock object, but using a real object is fine.  What can be wrong?	src/tests/googletest/googlemock/docs/FrequentlyAskedQuestions.md	/^## I get a heap check failure when using a mock object, but using a real object is fine.  What c/;"	s
I get a heap check failure when using a mock object, but using a real object is fine.  What can be wrong?	src/tests/googletest/googlemock/docs/v1_5/FrequentlyAskedQuestions.md	/^## I get a heap check failure when using a mock object, but using a real object is fine.  What c/;"	s
I get a heap check failure when using a mock object, but using a real object is fine.  What can be wrong?	src/tests/googletest/googlemock/docs/v1_6/FrequentlyAskedQuestions.md	/^## I get a heap check failure when using a mock object, but using a real object is fine.  What c/;"	s
I get a heap check failure when using a mock object, but using a real object is fine.  What can be wrong?	src/tests/googletest/googlemock/docs/v1_7/FrequentlyAskedQuestions.md	/^## I get a heap check failure when using a mock object, but using a real object is fine.  What c/;"	s
I got a warning "Uninteresting function call encountered - default action taken.."  Should I panic?	src/tests/googletest/googlemock/docs/FrequentlyAskedQuestions.md	/^## I got a warning "Uninteresting function call encountered - default action taken.."  Should I /;"	s
I got a warning "Uninteresting function call encountered - default action taken.."  Should I panic?	src/tests/googletest/googlemock/docs/v1_5/FrequentlyAskedQuestions.md	/^## I got a warning "Uninteresting function call encountered - default action taken.."  Should I /;"	s
I got a warning "Uninteresting function call encountered - default action taken.."  Should I panic?	src/tests/googletest/googlemock/docs/v1_6/FrequentlyAskedQuestions.md	/^## I got a warning "Uninteresting function call encountered - default action taken.."  Should I /;"	s
I got a warning "Uninteresting function call encountered - default action taken.."  Should I panic?	src/tests/googletest/googlemock/docs/v1_7/FrequentlyAskedQuestions.md	/^## I got a warning "Uninteresting function call encountered - default action taken.."  Should I /;"	s
I have a failed test where Google Mock tells me TWICE that a particular expectation is not satisfied.  Isn't this redundant?	src/tests/googletest/googlemock/docs/FrequentlyAskedQuestions.md	/^## I have a failed test where Google Mock tells me TWICE that a particular expectation is not sa/;"	s
I have a failed test where Google Mock tells me TWICE that a particular expectation is not satisfied.  Isn't this redundant?	src/tests/googletest/googlemock/docs/v1_5/FrequentlyAskedQuestions.md	/^## I have a failed test where Google Mock tells me TWICE that a particular expectation is not sa/;"	s
I have a failed test where Google Mock tells me TWICE that a particular expectation is not satisfied.  Isn't this redundant?	src/tests/googletest/googlemock/docs/v1_6/FrequentlyAskedQuestions.md	/^## I have a failed test where Google Mock tells me TWICE that a particular expectation is not sa/;"	s
I have a failed test where Google Mock tells me TWICE that a particular expectation is not satisfied.  Isn't this redundant?	src/tests/googletest/googlemock/docs/v1_7/FrequentlyAskedQuestions.md	/^## I have a failed test where Google Mock tells me TWICE that a particular expectation is not sa/;"	s
I have a fixture class Foo, but TEST\\_F(Foo, Bar) gives me error "no matching function for call to Foo::Foo()". Why?	src/tests/googletest/googletest/docs/FAQ.md	/^## I have a fixture class Foo, but TEST\\_F(Foo, Bar) gives me error "no matching function for c/;"	s
I have a fixture class Foo, but TEST\\_F(Foo, Bar) gives me error "no matching function for call to Foo::Foo()". Why?	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## I have a fixture class Foo, but TEST\\_F(Foo, Bar) gives me error "no matching function for c/;"	s
I have a fixture class Foo, but TEST\\_F(Foo, Bar) gives me error "no matching function for call to Foo::Foo()". Why?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## I have a fixture class Foo, but TEST\\_F(Foo, Bar) gives me error "no matching function for c/;"	s
I have a fixture class Foo, but TEST\\_F(Foo, Bar) gives me error "no matching function for call to Foo::Foo()". Why?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## I have a fixture class Foo, but TEST\\_F(Foo, Bar) gives me error "no matching function for c/;"	s
I have a huge mock class, and Microsoft Visual C++ runs out of memory when compiling it.  What can I do?	src/tests/googletest/googlemock/docs/FrequentlyAskedQuestions.md	/^## I have a huge mock class, and Microsoft Visual C++ runs out of memory when compiling it.  Wha/;"	s
I have a huge mock class, and Microsoft Visual C++ runs out of memory when compiling it.  What can I do?	src/tests/googletest/googlemock/docs/v1_5/FrequentlyAskedQuestions.md	/^## I have a huge mock class, and Microsoft Visual C++ runs out of memory when compiling it.  Wha/;"	s
I have a huge mock class, and Microsoft Visual C++ runs out of memory when compiling it.  What can I do?	src/tests/googletest/googlemock/docs/v1_6/FrequentlyAskedQuestions.md	/^## I have a huge mock class, and Microsoft Visual C++ runs out of memory when compiling it.  Wha/;"	s
I have a huge mock class, and Microsoft Visual C++ runs out of memory when compiling it.  What can I do?	src/tests/googletest/googlemock/docs/v1_7/FrequentlyAskedQuestions.md	/^## I have a huge mock class, and Microsoft Visual C++ runs out of memory when compiling it.  Wha/;"	s
I have an interface that has several implementations. Can I write a set of tests once and repeat them over all the implementations?	src/tests/googletest/googletest/docs/FAQ.md	/^## I have an interface that has several implementations. Can I write a set of tests once and rep/;"	s
I have an interface that has several implementations. Can I write a set of tests once and repeat them over all the implementations?	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## I have an interface that has several implementations. Can I write a set of tests once and rep/;"	s
I have an interface that has several implementations. Can I write a set of tests once and repeat them over all the implementations?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## I have an interface that has several implementations. Can I write a set of tests once and rep/;"	s
I have an interface that has several implementations. Can I write a set of tests once and repeat them over all the implementations?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## I have an interface that has several implementations. Can I write a set of tests once and rep/;"	s
I have several test cases which share the same test fixture logic, do I have to define a new test fixture class for each of them? This seems pretty tedious.	src/tests/googletest/googletest/docs/FAQ.md	/^## I have several test cases which share the same test fixture logic, do I have to define a new /;"	s
I have several test cases which share the same test fixture logic, do I have to define a new test fixture class for each of them? This seems pretty tedious.	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## I have several test cases which share the same test fixture logic, do I have to define a new /;"	s
I have several test cases which share the same test fixture logic, do I have to define a new test fixture class for each of them? This seems pretty tedious.	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## I have several test cases which share the same test fixture logic, do I have to define a new /;"	s
I have several test cases which share the same test fixture logic, do I have to define a new test fixture class for each of them? This seems pretty tedious.	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## I have several test cases which share the same test fixture logic, do I have to define a new /;"	s
I put my tests in a library and Google Test doesn't run them. What's happening?	src/tests/googletest/googletest/docs/FAQ.md	/^## I put my tests in a library and Google Test doesn't run them. What's happening? ##$/;"	s
I put my tests in a library and Google Test doesn't run them. What's happening?	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## I put my tests in a library and Google Test doesn't run them. What's happening? ##$/;"	s
I put my tests in a library and Google Test doesn't run them. What's happening?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## I put my tests in a library and Google Test doesn't run them. What's happening? ##$/;"	s
I put my tests in a library and Google Test doesn't run them. What's happening?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## I put my tests in a library and Google Test doesn't run them. What's happening? ##$/;"	s
I want to define a custom action.  Should I use Invoke() or implement the action interface?	src/tests/googletest/googlemock/docs/FrequentlyAskedQuestions.md	/^## I want to define a custom action.  Should I use Invoke() or implement the action interface? #/;"	s
I want to define a custom action.  Should I use Invoke() or implement the action interface?	src/tests/googletest/googlemock/docs/v1_5/FrequentlyAskedQuestions.md	/^## I want to define a custom action.  Should I use Invoke() or implement the action interface? #/;"	s
I want to define a custom action.  Should I use Invoke() or implement the action interface?	src/tests/googletest/googlemock/docs/v1_6/FrequentlyAskedQuestions.md	/^## I want to define a custom action.  Should I use Invoke() or implement the action interface? #/;"	s
I want to define a custom action.  Should I use Invoke() or implement the action interface?	src/tests/googletest/googlemock/docs/v1_7/FrequentlyAskedQuestions.md	/^## I want to define a custom action.  Should I use Invoke() or implement the action interface? #/;"	s
I want to use Google Test with Visual Studio but don't know where to start.	src/tests/googletest/googletest/docs/FAQ.md	/^## I want to use Google Test with Visual Studio but don't know where to start. ##$/;"	s
I want to use Google Test with Visual Studio but don't know where to start.	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## I want to use Google Test with Visual Studio but don't know where to start. ##$/;"	s
I want to use Google Test with Visual Studio but don't know where to start.	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## I want to use Google Test with Visual Studio but don't know where to start. ##$/;"	s
I want to use Google Test with Visual Studio but don't know where to start.	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## I want to use Google Test with Visual Studio but don't know where to start. ##$/;"	s
I would like to run a test several times with different parameters. Do I need to write several similar copies of it?	src/tests/googletest/googletest/docs/FAQ.md	/^## I would like to run a test several times with different parameters. Do I need to write severa/;"	s
I would like to run a test several times with different parameters. Do I need to write several similar copies of it?	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## I would like to run a test several times with different parameters. Do I need to write severa/;"	s
I would like to run a test several times with different parameters. Do I need to write several similar copies of it?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## I would like to run a test several times with different parameters. Do I need to write severa/;"	s
I would like to run a test several times with different parameters. Do I need to write several similar copies of it?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## I would like to run a test several times with different parameters. Do I need to write severa/;"	s
I wrote some matchers.  After I upgraded to a new version of Google Mock, they no longer compile.  What's going on?	src/tests/googletest/googlemock/docs/FrequentlyAskedQuestions.md	/^## I wrote some matchers.  After I upgraded to a new version of Google Mock, they no longer comp/;"	s
I wrote some matchers.  After I upgraded to a new version of Google Mock, they no longer compile.  What's going on?	src/tests/googletest/googlemock/docs/v1_5/FrequentlyAskedQuestions.md	/^## I wrote some matchers.  After I upgraded to a new version of Google Mock, they no longer comp/;"	s
I wrote some matchers.  After I upgraded to a new version of Google Mock, they no longer compile.  What's going on?	src/tests/googletest/googlemock/docs/v1_6/FrequentlyAskedQuestions.md	/^## I wrote some matchers.  After I upgraded to a new version of Google Mock, they no longer comp/;"	s
I wrote some matchers.  After I upgraded to a new version of Google Mock, they no longer compile.  What's going on?	src/tests/googletest/googlemock/docs/v1_7/FrequentlyAskedQuestions.md	/^## I wrote some matchers.  After I upgraded to a new version of Google Mock, they no longer comp/;"	s
I'm getting warnings when compiling Google Test.  Would you fix them?	src/tests/googletest/googletest/docs/FAQ.md	/^## I'm getting warnings when compiling Google Test.  Would you fix them? ##$/;"	s
I'm getting warnings when compiling Google Test.  Would you fix them?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## I'm getting warnings when compiling Google Test.  Would you fix them? ##$/;"	s
I'm getting warnings when compiling Google Test.  Would you fix them?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## I'm getting warnings when compiling Google Test.  Would you fix them? ##$/;"	s
I'm using the set-argument-pointee action, and the compiler complains about "conflicting return type specified".  What does it mean?	src/tests/googletest/googlemock/docs/FrequentlyAskedQuestions.md	/^## I'm using the set-argument-pointee action, and the compiler complains about "conflicting retu/;"	s
I'm using the set-argument-pointee action, and the compiler complains about "conflicting return type specified".  What does it mean?	src/tests/googletest/googlemock/docs/v1_5/FrequentlyAskedQuestions.md	/^## I'm using the set-argument-pointee action, and the compiler complains about "conflicting retu/;"	s
I'm using the set-argument-pointee action, and the compiler complains about "conflicting return type specified".  What does it mean?	src/tests/googletest/googlemock/docs/v1_6/FrequentlyAskedQuestions.md	/^## I'm using the set-argument-pointee action, and the compiler complains about "conflicting retu/;"	s
I'm using the set-argument-pointee action, and the compiler complains about "conflicting return type specified".  What does it mean?	src/tests/googletest/googlemock/docs/v1_7/FrequentlyAskedQuestions.md	/^## I'm using the set-argument-pointee action, and the compiler complains about "conflicting retu/;"	s
ID_REGEX	src/tests/googletest/googletest/scripts/pump.py	/^ID_REGEX = re.compile(r'[_A-Za-z]\\w*')$/;"	v
ID_VOID_MAIN	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^# define ID_VOID_MAIN$/;"	d	file:
IGNORE_SHARDING_PROTOCOL	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^    IGNORE_SHARDING_PROTOCOL$/;"	e	enum:testing::internal::UnitTestImpl::ReactionToSharding
INCLUDE_ALL	src/libtfhe-superaic-core/lwe-bootstrapping-functions-fft.cpp	/^#define INCLUDE_ALL$/;"	d	file:
INCLUDE_ALL	src/libtfhe-superaic-core/lwe-bootstrapping-functions.cpp	/^#define INCLUDE_ALL$/;"	d	file:
INCLUDE_ALL	src/libtfhe-superaic-core/tgsw-functions.cpp	/^#define INCLUDE_ALL$/;"	d	file:
INCLUDE_ALL	src/libtfhe-superaic-core/tlwe-fft-operations.cpp	/^#define INCLUDE_ALL$/;"	d	file:
INCLUDE_GMOCK_FILE_REGEX	src/tests/googletest/googlemock/scripts/fuse_gmock_files.py	/^INCLUDE_GMOCK_FILE_REGEX = re.compile(r'^\\s*#\\s*include\\s*"(gmock\/.+)"')$/;"	v
INCLUDE_GTEST_FILE_REGEX	src/tests/googletest/googletest/scripts/fuse_gtest_files.py	/^INCLUDE_GTEST_FILE_REGEX = re.compile(r'^\\s*#\\s*include\\s*"(gtest\/.+)"')$/;"	v
INCLUDE_SRC_FILE_REGEX	src/tests/googletest/googletest/scripts/fuse_gtest_files.py	/^INCLUDE_SRC_FILE_REGEX = re.compile(r'^\\s*#\\s*include\\s*"(src\/.+)"')$/;"	v
INCLUDE_TFHE_BLIND_ROTATE	src/tests/bootstrapping_test.cpp	/^#define INCLUDE_TFHE_BLIND_ROTATE$/;"	d	file:
INCLUDE_TFHE_BLIND_ROTATE_AND_EXTRACT	src/tests/bootstrapping_test.cpp	/^#define INCLUDE_TFHE_BLIND_ROTATE_AND_EXTRACT$/;"	d	file:
INCLUDE_TFHE_BOOTSTRAP	src/tests/bootstrapping_test.cpp	/^#define INCLUDE_TFHE_BOOTSTRAP$/;"	d	file:
INCLUDE_TFHE_BOOTSTRAP_WO_KS	src/tests/bootstrapping_test.cpp	/^#define INCLUDE_TFHE_BOOTSTRAP_WO_KS$/;"	d	file:
INCLUDE_TFHE_CREATEBOOTSTRAPPINGKEY	src/tests/bootstrapping_classic_PBS_parameters_test.cpp	/^#define INCLUDE_TFHE_CREATEBOOTSTRAPPINGKEY$/;"	d	file:
INCLUDE_TFHE_CREATEBOOTSTRAPPINGKEY	src/tests/bootstrapping_direct_test.cpp	/^#define INCLUDE_TFHE_CREATEBOOTSTRAPPINGKEY$/;"	d	file:
INCLUDE_TFHE_CREATEBOOTSTRAPPINGKEY	src/tests/bootstrapping_test.cpp	/^#define INCLUDE_TFHE_CREATEBOOTSTRAPPINGKEY$/;"	d	file:
INCLUDE_TFHE_CREATEBOOTSTRAPPINGKEY	src/tests/decrypt_with_plaintext_modulus.cpp	/^#define INCLUDE_TFHE_CREATEBOOTSTRAPPINGKEY$/;"	d	file:
INCLUDE_TFHE_CREATEBOOTSTRAPPINGKEY	src/tests/macros_decrypt_with_plaintext_modulus_macros.cpp	/^#define INCLUDE_TFHE_CREATEBOOTSTRAPPINGKEY$/;"	d	file:
INCLUDE_TFHE_CREATEBOOTSTRAPPINGKEY	src/tests/macros_modSwitch_with_plaintext_modulus_macros.cpp	/^#define INCLUDE_TFHE_CREATEBOOTSTRAPPINGKEY$/;"	d	file:
INCLUDE_TFHE_CREATEBOOTSTRAPPINGKEY	src/tests/ops_add.cpp	/^#define INCLUDE_TFHE_CREATEBOOTSTRAPPINGKEY$/;"	d	file:
INCLUDE_TFHE_CREATEBOOTSTRAPPINGKEY	src/tests/ops_add_with_carry.cpp	/^#define INCLUDE_TFHE_CREATEBOOTSTRAPPINGKEY$/;"	d	file:
INCLUDE_TFHE_CREATEBOOTSTRAPPINGKEY	src/tests/zpf_for_bootstrap_detail.cpp	/^#define INCLUDE_TFHE_CREATEBOOTSTRAPPINGKEY$/;"	d	file:
INCLUDE_TGSW_ALLOC_ARRAY_FUNCTION	src/tests/tgsw_test.cpp	/^#define INCLUDE_TGSW_ALLOC_ARRAY_FUNCTION$/;"	d	file:
INCLUDE_TGSW_ALLOC_FUNCTION	src/tests/tgsw_test.cpp	/^#define INCLUDE_TGSW_ALLOC_FUNCTION$/;"	d	file:
INCLUDE_TGSW_CLEAR	src/tests/tgsw_test.cpp	/^#define INCLUDE_TGSW_CLEAR$/;"	d	file:
INCLUDE_TGSW_DECRYPT	src/tests/tgsw_test.cpp	/^#define INCLUDE_TGSW_DECRYPT$/;"	d	file:
INCLUDE_TGSW_DELETE_ARRAY_FUNCTION	src/tests/tgsw_test.cpp	/^#define INCLUDE_TGSW_DELETE_ARRAY_FUNCTION$/;"	d	file:
INCLUDE_TGSW_DELETE_FUNCTION	src/tests/tgsw_test.cpp	/^#define INCLUDE_TGSW_DELETE_FUNCTION$/;"	d	file:
INCLUDE_TGSW_DESTROY	src/tests/tgsw_test.cpp	/^#define INCLUDE_TGSW_DESTROY$/;"	d	file:
INCLUDE_TGSW_DESTROY_ARRAY_FUNCTION	src/tests/tgsw_test.cpp	/^#define INCLUDE_TGSW_DESTROY_ARRAY_FUNCTION$/;"	d	file:
INCLUDE_TGSW_ENCRYPT_B	src/tests/tgsw_test.cpp	/^#define INCLUDE_TGSW_ENCRYPT_B$/;"	d	file:
INCLUDE_TGSW_ENCRYPT_ZERO	src/tests/tgsw_test.cpp	/^#define INCLUDE_TGSW_ENCRYPT_ZERO$/;"	d	file:
INCLUDE_TGSW_EXTERN_MUL_TO_TLWE	src/tests/tgsw_test.cpp	/^#define INCLUDE_TGSW_EXTERN_MUL_TO_TLWE$/;"	d	file:
INCLUDE_TGSW_EXTERN_PRODUCT	src/tests/tgsw_test.cpp	/^#define INCLUDE_TGSW_EXTERN_PRODUCT$/;"	d	file:
INCLUDE_TGSW_FREE_ARRAY_FUNCTION	src/tests/tgsw_test.cpp	/^#define INCLUDE_TGSW_FREE_ARRAY_FUNCTION$/;"	d	file:
INCLUDE_TGSW_FREE_FUNCTION	src/tests/tgsw_test.cpp	/^#define INCLUDE_TGSW_FREE_FUNCTION$/;"	d	file:
INCLUDE_TGSW_INIT	src/tests/tgsw_test.cpp	/^#define INCLUDE_TGSW_INIT$/;"	d	file:
INCLUDE_TGSW_INIT_ARRAY_FUNCTION	src/tests/tgsw_test.cpp	/^#define INCLUDE_TGSW_INIT_ARRAY_FUNCTION$/;"	d	file:
INCLUDE_TGSW_KEYGEN	src/tests/tgsw_test.cpp	/^#define INCLUDE_TGSW_KEYGEN$/;"	d	file:
INCLUDE_TGSW_MUL_BY_XAI_MINUS_ONE	src/tests/tgsw_test.cpp	/^#define INCLUDE_TGSW_MUL_BY_XAI_MINUS_ONE$/;"	d	file:
INCLUDE_TGSW_NEW_ARRAY_FUNCTION	src/tests/tgsw_test.cpp	/^#define INCLUDE_TGSW_NEW_ARRAY_FUNCTION$/;"	d	file:
INCLUDE_TGSW_NEW_FUNCTION	src/tests/tgsw_test.cpp	/^#define INCLUDE_TGSW_NEW_FUNCTION$/;"	d	file:
INCLUDE_TGSW_NOISELESS_TRIVIAL	src/tests/tgsw_test.cpp	/^#define INCLUDE_TGSW_NOISELESS_TRIVIAL$/;"	d	file:
INCLUDE_TGSW_SYM_ENCRYPT	src/tests/tgsw_test.cpp	/^#define INCLUDE_TGSW_SYM_ENCRYPT$/;"	d	file:
INCLUDE_TGSW_SYM_ENCRYPT_INT	src/tests/tgsw_test.cpp	/^#define INCLUDE_TGSW_SYM_ENCRYPT_INT$/;"	d	file:
INCORRECT_FLAG_VARIANTS	src/tests/googletest/googletest/test/gtest_help_test.py	/^INCORRECT_FLAG_VARIANTS = [re.sub('^--', '-', LIST_TESTS_FLAG),$/;"	v
INFO	src/muduo/muduo/base/Logging.h	/^    INFO,$/;"	e	enum:muduo::Logger::LogLevel
INSTANTIATE_TEST_CASE_P	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^# define INSTANTIATE_TEST_CASE_P(/;"	d
INSTANTIATE_TYPED_TEST_CASE_P	src/tests/googletest/googletest/include/gtest/gtest-typed-test.h	/^# define INSTANTIATE_TYPED_TEST_CASE_P(/;"	d
INTERCEPT_ALL_THREADS	src/tests/googletest/googletest/include/gtest/gtest-spi.h	/^    INTERCEPT_ALL_THREADS           \/\/ Intercepts all failures.$/;"	e	enum:testing::ScopedFakeTestPartResultReporter::InterceptMode
INTERCEPT_ONLY_CURRENT_THREAD	src/tests/googletest/googletest/include/gtest/gtest-spi.h	/^    INTERCEPT_ONLY_CURRENT_THREAD,  \/\/ Intercepts only thread local failures.$/;"	e	enum:testing::ScopedFakeTestPartResultReporter::InterceptMode
INTERNAL_FLAG_FOR_TESTING	src/tests/googletest/googletest/test/gtest_help_test.py	/^INTERNAL_FLAG_FOR_TESTING = FLAG_PREFIX + 'internal_flag_for_testing'$/;"	v
INT_OR_FLOAT_DIGITS	src/tests/googletest/googlemock/scripts/generator/cpp/tokenize.py	/^INT_OR_FLOAT_DIGITS = set('01234567890eE-+')$/;"	v
INVALID_REQUEST	src/muduo/muduo/net/protorpc/rpc.proto	/^  INVALID_REQUEST = 4;$/;"	e	enum:muduo.net.ErrorCode
INVALID_RESPONSE	src/muduo/muduo/net/protorpc/rpc.proto	/^  INVALID_RESPONSE = 5;$/;"	e	enum:muduo.net.ErrorCode
IN_PROGRESS	src/tests/googletest/googletest/src/gtest-death-test.cc	/^enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };$/;"	e	enum:testing::internal::DeathTestOutcome	file:
IOTest2	src/tests/io_test.cpp	/^    class IOTest2 : public ::testing::Test {$/;"	c	namespace:__anon2d72c1c60111	file:
IS_CYGWIN	src/tests/googletest/googletest/test/gtest_test_utils.py	/^IS_CYGWIN = os.name == 'posix' and 'CYGWIN' in os.uname()[0]$/;"	v
IS_LINUX	src/tests/googletest/googletest/test/gtest_env_var_test.py	/^IS_LINUX = os.name == 'posix' and os.uname()[0] == 'Linux'$/;"	v
IS_LINUX	src/tests/googletest/googletest/test/gtest_help_test.py	/^IS_LINUX = os.name == 'posix' and os.uname()[0] == 'Linux'$/;"	v
IS_WINDOWS	src/tests/googletest/googletest/test/gtest_break_on_failure_unittest.py	/^IS_WINDOWS = os.name == 'nt'$/;"	v
IS_WINDOWS	src/tests/googletest/googletest/test/gtest_color_test.py	/^IS_WINDOWS = os.name = 'nt'$/;"	v
IS_WINDOWS	src/tests/googletest/googletest/test/gtest_env_var_test.py	/^IS_WINDOWS = os.name == 'nt'$/;"	v
IS_WINDOWS	src/tests/googletest/googletest/test/gtest_help_test.py	/^IS_WINDOWS = os.name == 'nt'$/;"	v
IS_WINDOWS	src/tests/googletest/googletest/test/gtest_output_test.py	/^IS_WINDOWS = os.name == 'nt'$/;"	v
IS_WINDOWS	src/tests/googletest/googletest/test/gtest_test_utils.py	/^IS_WINDOWS = os.name == 'nt'$/;"	v
IdMap	src/tests/googletest/googletest/src/gtest.cc	/^  typedef std::map<std::string, size_t> IdMap;$/;"	t	class:testing::internal::edit_distance::__anon3f29b7680111::InternalStrings	typeref:typename:std::map<std::string,size_t>	file:
IdToKey	src/tests/googletest/googletest/test/gtest_stress_test.cc	/^std::string IdToKey(int id, const char* suffix) {$/;"	f	namespace:testing::__anon9be581a20111	typeref:typename:std::string
IdToString	src/tests/googletest/googletest/test/gtest_stress_test.cc	/^std::string IdToString(int id) {$/;"	f	namespace:testing::__anon9be581a20111	typeref:typename:std::string
IfNode	src/tests/googletest/googletest/scripts/pump.py	/^class IfNode:$/;"	c
IgnoreResult	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^inline internal::IgnoreResultAction<A> IgnoreResult(const A& an_action) {$/;"	f	namespace:testing	typeref:typename:internal::IgnoreResultAction<A>
IgnoreResultAction	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  explicit IgnoreResultAction(const A& action) : action_(action) {}$/;"	f	class:testing::internal::IgnoreResultAction
IgnoreResultAction	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^class IgnoreResultAction {$/;"	c	namespace:testing::internal
IgnoreSigPipe	src/muduo/muduo/net/EventLoop.cc	/^  IgnoreSigPipe()$/;"	f	class:__anon600130340111::IgnoreSigPipe	file:
IgnoreSigPipe	src/muduo/muduo/net/EventLoop.cc	/^class IgnoreSigPipe$/;"	c	namespace:__anon600130340111	file:
IgnoredValue	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  IgnoredValue(const T& \/* ignored *\/) {}  \/\/ NOLINT(runtime\/explicit)$/;"	f	class:testing::internal::IgnoredValue
IgnoredValue	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^class IgnoredValue {$/;"	c	namespace:testing::internal
Ignoring Arguments in Action Functions	src/tests/googletest/googlemock/docs/CookBook.md	/^## Ignoring Arguments in Action Functions ##$/;"	s	chapter:Using Actions
Ignoring Arguments in Action Functions	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Ignoring Arguments in Action Functions ##$/;"	s	chapter:Using Actions
Ignoring Arguments in Action Functions	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Ignoring Arguments in Action Functions ##$/;"	s	chapter:Using Actions
Ignoring Arguments in Action Functions	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Ignoring Arguments in Action Functions ##$/;"	s	chapter:Using Actions
Ignoring Uninteresting Calls	src/tests/googletest/googlemock/docs/CookBook.md	/^## Ignoring Uninteresting Calls ##$/;"	s	chapter:Setting Expectations
Ignoring Uninteresting Calls	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Ignoring Uninteresting Calls ##$/;"	s	chapter:Setting Expectations
Ignoring Uninteresting Calls	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Ignoring Uninteresting Calls ##$/;"	s	chapter:Setting Expectations
Ignoring Uninteresting Calls	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Ignoring Uninteresting Calls ##$/;"	s	chapter:Setting Expectations
Ignoring an Action's Result	src/tests/googletest/googlemock/docs/CookBook.md	/^## Ignoring an Action's Result ##$/;"	s	chapter:Using Actions
Ignoring an Action's Result	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Ignoring an Action's Result ##$/;"	s	chapter:Using Actions
Ignoring an Action's Result	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Ignoring an Action's Result ##$/;"	s	chapter:Using Actions
Ignoring an Action's Result	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Ignoring an Action's Result ##$/;"	s	chapter:Using Actions
Impl	src/muduo/muduo/base/Logging.cc	/^Logger::Impl::Impl(LogLevel level, int savedErrno, const SourceFile& file, int line)$/;"	f	class:Logger::Impl
Impl	src/muduo/muduo/base/Logging.h	/^class Impl$/;"	c	class:muduo::Logger
Impl	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    Impl(const Action<VoidResult>& action1, const Action<F>& action2)$/;"	f	class:testing::internal::DoBothAction::Impl
Impl	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    explicit Impl(T& ref) : ref_(ref) {}  \/\/ NOLINT$/;"	f	class:testing::internal::ReturnRefAction::Impl
Impl	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    explicit Impl(const A& action) : action_(action) {}$/;"	f	class:testing::internal::IgnoreResultAction::Impl
Impl	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    explicit Impl(const T& value) : value_(value) {}  \/\/ NOLINT$/;"	f	class:testing::internal::ReturnRefOfCopyAction::Impl
Impl	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    explicit Impl(const linked_ptr<R>& value)$/;"	f	class:testing::internal::ReturnAction::Impl
Impl	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    explicit Impl(const linked_ptr<R>& wrapper)$/;"	f	class:testing::internal::ReturnAction::Impl
Impl	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  class Impl : public ActionInterface<F> {$/;"	c	class:testing::internal::DoBothAction
Impl	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  class Impl : public ActionInterface<F> {$/;"	c	class:testing::internal::IgnoreResultAction
Impl	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  class Impl : public ActionInterface<F> {$/;"	c	class:testing::internal::ReturnAction
Impl	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  class Impl : public ActionInterface<F> {$/;"	c	class:testing::internal::ReturnRefAction
Impl	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  class Impl : public ActionInterface<F> {$/;"	c	class:testing::internal::ReturnRefOfCopyAction
Impl	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  class Impl<ByMoveWrapper<R_>, F> : public ActionInterface<F> {$/;"	c	class:testing::internal::ReturnAction
Impl	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^    explicit Impl(const InnerAction& action) : action_(action) {}$/;"	f	class:testing::internal::WithArgsAction::Impl
Impl	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^  class Impl : public ActionInterface<F> {$/;"	c	class:testing::internal::WithArgsAction
Impl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    Impl(CallableStorageType callable, const Matcher<ResultType>& matcher)$/;"	f	class:testing::internal::ResultOfMatcher::Impl
Impl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    Impl(FloatType expected, bool nan_eq_nan, FloatType max_abs_error)$/;"	f	class:testing::internal::FloatingEqMatcher::Impl
Impl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    Impl(const Comparator& comparator, const ContainerMatcher& matcher)$/;"	f	class:testing::internal::WhenSortedByMatcher::Impl
Impl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    Impl(const Tuple2Matcher& tm, const Second& second)$/;"	f	class:testing::internal::BoundSecondMatcher::Impl
Impl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    Impl(const TupleMatcher& tuple_matcher, const RhsStlContainer& rhs)$/;"	f	class:testing::internal::PointwiseMatcher::Impl
Impl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    explicit Impl(Super& x) : object_(x) {}  \/\/ NOLINT$/;"	f	class:testing::internal::RefMatcher::Impl
Impl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    explicit Impl(const DistanceMatcher& distance_matcher)$/;"	f	class:testing::internal::BeginEndDistanceIsMatcher::Impl
Impl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    explicit Impl(const InnerMatcher& matcher)$/;"	f	class:testing::internal::PointeeMatcher::Impl
Impl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    explicit Impl(const Matcher<U>& source_matcher)$/;"	f	class:testing::internal::MatcherCastImpl::Impl
Impl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    explicit Impl(const Rhs& rhs) : rhs_(rhs) {}$/;"	f	class:testing::internal::ComparisonBase::Impl
Impl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    explicit Impl(const SizeMatcher& size_matcher)$/;"	f	class:testing::internal::SizeIsMatcher::Impl
Impl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  class Impl : public MatcherInterface<Container> {$/;"	c	class:testing::internal::BeginEndDistanceIsMatcher
Impl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  class Impl : public MatcherInterface<Container> {$/;"	c	class:testing::internal::SizeIsMatcher
Impl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  class Impl : public MatcherInterface<Lhs> {$/;"	c	class:testing::internal::ComparisonBase
Impl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  class Impl : public MatcherInterface<LhsContainer> {$/;"	c	class:testing::internal::PointwiseMatcher
Impl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  class Impl : public MatcherInterface<LhsContainer> {$/;"	c	class:testing::internal::WhenSortedByMatcher
Impl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  class Impl : public MatcherInterface<Pointer> {$/;"	c	class:testing::internal::PointeeMatcher
Impl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  class Impl : public MatcherInterface<Super&> {$/;"	c	class:testing::internal::RefMatcher
Impl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  class Impl : public MatcherInterface<T> {$/;"	c	class:testing::internal::BoundSecondMatcher
Impl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  class Impl : public MatcherInterface<T> {$/;"	c	class:testing::internal::FloatingEqMatcher
Impl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  class Impl : public MatcherInterface<T> {$/;"	c	class:testing::internal::MatcherCastImpl
Impl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  class Impl : public MatcherInterface<T> {$/;"	c	class:testing::internal::ResultOfMatcher
Impl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  class Impl : public MatcherInterface<Tuple> {$/;"	c	class:testing::internal::PairMatchBase
ImplementationForArity	src/tests/googletest/googletest/scripts/gen_gtest_pred_impl.py	/^def ImplementationForArity(n):$/;"	f
Implementations	src/tests/googletest/googletest/samples/sample6_unittest.cc	/^typedef Types<OnTheFlyPrimeTable, PreCalculatedPrimeTable> Implementations;$/;"	t	typeref:typename:Types<OnTheFlyPrimeTable,PreCalculatedPrimeTable>	file:
ImplicitCast_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^inline To ImplicitCast_(To x) { return x; }$/;"	f	namespace:testing::internal	typeref:typename:To
ImplicitlyConvertible	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^class ImplicitlyConvertible {$/;"	c	namespace:testing::internal
Important note for Visual C++ users	src/tests/googletest/googletest/docs/Primer.md	/^## Important note for Visual C++ users ##$/;"	s	chapter:Writing the main() Function
Important note for Visual C++ users	src/tests/googletest/googletest/docs/V1_5_Primer.md	/^## Important note for Visual C++ users ##$/;"	s	chapter:Writing the main() Function
Important note for Visual C++ users	src/tests/googletest/googletest/docs/V1_6_Primer.md	/^## Important note for Visual C++ users ##$/;"	s	chapter:Writing the main() Function
Important note for Visual C++ users	src/tests/googletest/googletest/docs/V1_7_Primer.md	/^## Important note for Visual C++ users ##$/;"	s	chapter:Writing the main() Function
InDeathTestChild	src/tests/googletest/googletest/src/gtest-death-test.cc	/^bool InDeathTestChild() {$/;"	f	namespace:testing::internal	typeref:typename:bool
InSequence	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  TypedExpectation& InSequence(const Sequence& s) {$/;"	f	class:testing::internal::TypedExpectation	typeref:typename:TypedExpectation &
InSequence	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  TypedExpectation& InSequence(const Sequence& s1, const Sequence& s2) {$/;"	f	class:testing::internal::TypedExpectation	typeref:typename:TypedExpectation &
InSequence	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  TypedExpectation& InSequence(const Sequence& s1, const Sequence& s2,$/;"	f	class:testing::internal::TypedExpectation	typeref:typename:TypedExpectation &
InSequence	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^class GTEST_API_ InSequence {$/;"	c	namespace:testing
InSequence	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^InSequence::InSequence() {$/;"	f	class:testing::InSequence
Include	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^class Include(Node):$/;"	c
Incorporating Into An Existing CMake Project	src/tests/googletest/googletest/README.md	/^#### Incorporating Into An Existing CMake Project ####$/;"	t	subsection:Using CMake
Increment	src/tests/googletest/googletest/samples/sample4.cc	/^int Counter::Increment() {$/;"	f	class:Counter	typeref:typename:int
Increment	src/tests/googletest/googletest/test/gtest-port_test.cc	/^  void Increment() {$/;"	f	class:testing::internal::AtomicCounterWithMutex	typeref:typename:void	file:
IncrementCallCount	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  void IncrementCallCount()$/;"	f	class:testing::internal::ExpectationBase	typeref:typename:void
InetAddress	src/muduo/muduo/net/InetAddress.cc	/^InetAddress::InetAddress(StringArg ip, uint16_t portArg, bool ipv6)$/;"	f	class:InetAddress
InetAddress	src/muduo/muduo/net/InetAddress.cc	/^InetAddress::InetAddress(uint16_t portArg, bool loopbackOnly, bool ipv6)$/;"	f	class:InetAddress
InetAddress	src/muduo/muduo/net/InetAddress.h	/^  explicit InetAddress(const struct sockaddr_in& addr)$/;"	f	class:muduo::net::InetAddress
InetAddress	src/muduo/muduo/net/InetAddress.h	/^  explicit InetAddress(const struct sockaddr_in6& addr)$/;"	f	class:muduo::net::InetAddress
InetAddress	src/muduo/muduo/net/InetAddress.h	/^class InetAddress : public muduo::copyable$/;"	c	namespace:muduo::net
Infinity	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  static RawType Infinity() {$/;"	f	class:testing::internal::FloatingPoint	typeref:typename:RawType
Init	src/tests/googletest/googletest/src/gtest-port.cc	/^void RE::Init(const char* regex) {$/;"	f	class:testing::internal::RE	typeref:typename:void
Init	src/tests/googletest/googletest/src/gtest.cc	/^void ScopedFakeTestPartResultReporter::Init() {$/;"	f	class:testing::ScopedFakeTestPartResultReporter	typeref:typename:void
Init	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^  void Init() {$/;"	f	class:FatalFailureInFixtureConstructorTest	typeref:typename:void	file:
InitCopy	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  void InitCopy(const Element* array, size_t a_size) {$/;"	f	class:testing::internal::NativeArray	typeref:typename:void
InitDeathTestSubprocessControlInfo	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  void InitDeathTestSubprocessControlInfo() {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:void
InitGoogleMock	src/tests/googletest/googlemock/src/gmock.cc	/^GTEST_API_ void InitGoogleMock(int* argc, char** argv) {$/;"	f	namespace:testing	typeref:typename:GTEST_API_ void
InitGoogleMock	src/tests/googletest/googlemock/src/gmock.cc	/^GTEST_API_ void InitGoogleMock(int* argc, wchar_t** argv) {$/;"	f	namespace:testing	typeref:typename:GTEST_API_ void
InitGoogleMockImpl	src/tests/googletest/googlemock/src/gmock.cc	/^void InitGoogleMockImpl(int* argc, CharType** argv) {$/;"	f	namespace:testing::internal	typeref:typename:void
InitGoogleTest	src/tests/googletest/googletest/src/gtest.cc	/^void InitGoogleTest(int* argc, char** argv) {$/;"	f	namespace:testing	typeref:typename:void
InitGoogleTest	src/tests/googletest/googletest/src/gtest.cc	/^void InitGoogleTest(int* argc, wchar_t** argv) {$/;"	f	namespace:testing	typeref:typename:void
InitGoogleTestImpl	src/tests/googletest/googletest/src/gtest.cc	/^void InitGoogleTestImpl(int* argc, CharType** argv) {$/;"	f	namespace:testing::internal	typeref:typename:void
InitGoogleTestTest	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class InitGoogleTestTest : public Test {$/;"	c	namespace:testing	file:
InitRef	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  void InitRef(const Element* array, size_t a_size) {$/;"	f	class:testing::internal::NativeArray	typeref:typename:void
InitializationErrorMessage	src/muduo/muduo/net/protorpc/google-inl.h	/^std::string InitializationErrorMessage(const char* action,$/;"	f	typeref:typename:std::string
InnerFunctionType	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^        k1, k2, k3, k4, k5, k6, k7, k8, k9, k10>::type InnerFunctionType;$/;"	t	class:testing::internal::WithArgsAction::Impl	typeref:typename:SelectArgs<Result,ArgumentTuple,k1,k2,k3,k4,k5,k6,k7,k8,k9,k10>::type
InnerMatcherArg	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    typedef ::testing::tuple<const LhsValue&, const RhsValue&> InnerMatcherArg;$/;"	t	class:testing::internal::PointwiseMatcher::Impl	typeref:typename:::testing::tuple<const LhsValue &,const RhsValue &>
Input	src/muduo/examples/sudoku/batch.cc	/^typedef std::vector<string> Input;$/;"	t	typeref:typename:std::vector<string>	file:
Input	src/muduo/examples/sudoku/loadtest.cc	/^typedef std::vector<string> Input;$/;"	t	typeref:typename:std::vector<string>	file:
Input	src/muduo/examples/sudoku/pipeline.cc	/^typedef std::vector<string> Input;$/;"	t	typeref:typename:std::vector<string>	file:
InputPtr	src/muduo/examples/sudoku/batch.cc	/^typedef std::shared_ptr<Input> InputPtr;$/;"	t	typeref:typename:std::shared_ptr<Input>	file:
InputPtr	src/muduo/examples/sudoku/loadtest.cc	/^typedef std::shared_ptr<const Input> InputPtr;$/;"	t	typeref:typename:std::shared_ptr<const Input>	file:
InputPtr	src/muduo/examples/sudoku/pipeline.cc	/^typedef std::shared_ptr<const Input> InputPtr;$/;"	t	typeref:typename:std::shared_ptr<const Input>	file:
Inspector	src/muduo/muduo/net/inspect/Inspector.cc	/^Inspector::Inspector(EventLoop* loop,$/;"	f	class:Inspector
Inspector	src/muduo/muduo/net/inspect/Inspector.h	/^class Inspector : noncopyable$/;"	c	namespace:muduo::net
Instance	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  static TestGenerationEnvironment* Instance() {$/;"	f	class:TestGenerationEnvironment	typeref:typename:TestGenerationEnvironment *	file:
InstanceValueHolderFactory	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^    explicit InstanceValueHolderFactory(const T& value) : value_(value) {}$/;"	f	class:testing::internal::ThreadLocal::InstanceValueHolderFactory
InstanceValueHolderFactory	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  class InstanceValueHolderFactory : public ValueHolderFactory {$/;"	c	class:testing::internal::ThreadLocal
InstantiationContainer	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  typedef ::std::vector<InstantiationInfo> InstantiationContainer;$/;"	t	class:testing::internal::ParameterizedTestCaseInfo	typeref:typename:::std::vector<InstantiationInfo>
InstantiationInMultipleTranslaionUnitsTest	src/tests/googletest/googletest/test/gtest-param-test_test.h	/^class InstantiationInMultipleTranslaionUnitsTest$/;"	c
InstantiationInfo	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^      InstantiationInfo(const std::string &name_in,$/;"	f	struct:testing::internal::ParameterizedTestCaseInfo::InstantiationInfo
InstantiationInfo	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  struct InstantiationInfo {$/;"	s	class:testing::internal::ParameterizedTestCaseInfo
Int	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  typedef __int64 Int;$/;"	t	class:testing::internal::TypeWithSize	typeref:typename:__int64
Int	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  typedef int Int;$/;"	t	class:testing::internal::TypeWithSize	typeref:typename:int
Int32	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^typedef TypeWithSize<4>::Int Int32;$/;"	t	namespace:testing::internal	typeref:typename:TypeWithSize<4>::Int
Int32FromEnvOrDie	src/tests/googletest/googletest/src/gtest.cc	/^Int32 Int32FromEnvOrDie(const char* var, Int32 default_val) {$/;"	f	namespace:testing::internal	typeref:typename:Int32
Int32FromGTestEnv	src/tests/googletest/googletest/src/gtest-port.cc	/^Int32 Int32FromGTestEnv(const char* flag, Int32 default_value) {$/;"	f	namespace:testing::internal	typeref:typename:Int32
Int64	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^typedef TypeWithSize<8>::Int Int64;$/;"	t	namespace:testing::internal	typeref:typename:TypeWithSize<8>::Int
IntAfterTypedTestCaseP	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^typedef int IntAfterTypedTestCaseP;$/;"	t	typeref:typename:int	file:
IntAlias	src/tests/googletest/googletest/test/gtest_unittest.cc	/^typedef int IntAlias;$/;"	t	typeref:typename:int	file:
IntBeforeRegisterTypedTestCaseP	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^typedef int IntBeforeRegisterTypedTestCaseP;$/;"	t	typeref:typename:int	file:
IntFunction	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^int IntFunction(int input) { return input == 42 ? 80 : 90; }$/;"	f	namespace:testing::gmock_matchers_test	typeref:typename:int
IntPolynomial	src/libtfhe-superaic-core/include/polynomials.h	/^struct IntPolynomial {$/;"	s
IntPolynomial	src/libtfhe-superaic-core/include/tfhe_superaic_torus.h	/^typedef struct IntPolynomial	   IntPolynomial;$/;"	t	typeref:struct:IntPolynomial
IntPolynomial	src/libtfhe-superaic-core/multiplication.cpp	/^IntPolynomial::IntPolynomial(const int32_t N): N(N)$/;"	f	class:IntPolynomial
IntPolynomial_ifft	src/libtfhe-superaic-core/fft_processors/nayuki/fft_processor_nayuki.cpp	/^EXPORT void IntPolynomial_ifft(LagrangeHalfCPolynomial* result, const IntPolynomial* p) {$/;"	f	typeref:typename:EXPORT void
IntReferenceWrapper	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  IntReferenceWrapper(const int& a_value) : value(&a_value) {}$/;"	f	struct:testing::gmock_matchers_test::IntReferenceWrapper	file:
IntReferenceWrapper	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^struct IntReferenceWrapper {$/;"	s	namespace:testing::gmock_matchers_test	file:
IntSet	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^  typedef std::set<int> IntSet;$/;"	t	class:CommonTest	typeref:typename:std::set<int>	file:
IntToStringFunction	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^std::string IntToStringFunction(int input) {$/;"	f	namespace:testing::gmock_matchers_test	typeref:typename:std::string
IntValue	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  explicit IntValue(int a_value) : value_(a_value) {}$/;"	f	class:testing::gmock_matchers_test::IntValue	file:
IntValue	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^class IntValue {$/;"	c	namespace:testing::gmock_matchers_test	file:
IntVec	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  typedef std::vector<int> IntVec;$/;"	t	class:testing::gmock_matchers_test::UnorderedElementsAreTest	typeref:typename:std::vector<int>	file:
IntWrapper	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  IntWrapper(const IntWrapper& other) : value_(other.value_) {}$/;"	f	class:IntWrapper	file:
IntWrapper	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  explicit IntWrapper(int a_value) : value_(a_value) {}$/;"	f	class:IntWrapper	file:
IntWrapper	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^class IntWrapper {$/;"	c	file:
IntegerFunctionTest	src/tests/googletest/googletest/samples/sample5_unittest.cc	/^class IntegerFunctionTest : public QuickTest {$/;"	c	file:
IntegerVectorWrapper	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^  IntegerVectorWrapper(std::vector<int>& _v) : v(&_v) {}  \/\/ NOLINT$/;"	f	struct:__anon550198f10111::IntegerVectorWrapper	file:
IntegerVectorWrapper	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^struct IntegerVectorWrapper {$/;"	s	namespace:__anon550198f10111	file:
InterceptMode	src/tests/googletest/googletest/include/gtest/gtest-spi.h	/^  enum InterceptMode {$/;"	g	class:testing::ScopedFakeTestPartResultReporter
Interface	src/tests/googletest/googlemock/test/gmock_link_test.h	/^class Interface {$/;"	c
InternalDefaultActionSetAt	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  internal::OnCallSpec<F>& InternalDefaultActionSetAt($/;"	f	class:testing::internal::MockSpec	typeref:typename:internal::OnCallSpec<F> &
InternalExpectedAt	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  internal::TypedExpectation<F>& InternalExpectedAt($/;"	f	class:testing::internal::MockSpec	typeref:typename:internal::TypedExpectation<F> &
InternalRunDeathTestFlag	src/tests/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h	/^  InternalRunDeathTestFlag(const std::string& a_file,$/;"	f	class:testing::internal::InternalRunDeathTestFlag
InternalRunDeathTestFlag	src/tests/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h	/^class InternalRunDeathTestFlag {$/;"	c	namespace:testing::internal
InternalStrings	src/tests/googletest/googletest/src/gtest.cc	/^class InternalStrings {$/;"	c	namespace:testing::internal::edit_distance::__anon3f29b7680111	file:
Introduction	src/tests/googletest/googlemock/docs/DevGuide.md	/^# Introduction #$/;"	c
Introduction	src/tests/googletest/googletest/docs/DevGuide.md	/^# Introduction #$/;"	c
Introduction: Why Google C++ Testing Framework?	src/tests/googletest/googletest/docs/Primer.md	/^# Introduction: Why Google C++ Testing Framework? #$/;"	c
Introduction: Why Google C++ Testing Framework?	src/tests/googletest/googletest/docs/V1_5_Primer.md	/^# Introduction: Why Google C++ Testing Framework? #$/;"	c
Introduction: Why Google C++ Testing Framework?	src/tests/googletest/googletest/docs/V1_6_Primer.md	/^# Introduction: Why Google C++ Testing Framework? #$/;"	c
Introduction: Why Google C++ Testing Framework?	src/tests/googletest/googletest/docs/V1_7_Primer.md	/^# Introduction: Why Google C++ Testing Framework? #$/;"	c
Invalid	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^inline T Invalid() {$/;"	f	namespace:testing::internal	typeref:typename:T
Invoke	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^  static R Invoke(Function function, const ::testing::tuple<A1, A2, A3, A4, A5,$/;"	f	class:testing::internal::InvokeHelper	typeref:typename:R
Invoke	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^  static R Invoke(Function function, const ::testing::tuple<A1, A2, A3, A4,$/;"	f	class:testing::internal::InvokeHelper	typeref:typename:R
Invoke	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^  static R Invoke(Function function, const ::testing::tuple<A1, A2, A3,$/;"	f	class:testing::internal::InvokeHelper	typeref:typename:R
Invoke	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^  static R Invoke(Function function, const ::testing::tuple<A1, A2, A3>& args) {$/;"	f	class:testing::internal::InvokeHelper	typeref:typename:R
Invoke	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^  static R Invoke(Function function, const ::testing::tuple<A1, A2>& args) {$/;"	f	class:testing::internal::InvokeHelper	typeref:typename:R
Invoke	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^  static R Invoke(Function function, const ::testing::tuple<A1>& args) {$/;"	f	class:testing::internal::InvokeHelper	typeref:typename:R
Invoke	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^  R Invoke() {$/;"	f	class:testing::internal::FunctionMocker	typeref:typename:R
Invoke	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^  R Invoke(A1 a1) {$/;"	f	class:testing::internal::FunctionMocker	typeref:typename:R
Invoke	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^  R Invoke(A1 a1, A2 a2) {$/;"	f	class:testing::internal::FunctionMocker	typeref:typename:R
Invoke	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^  R Invoke(A1 a1, A2 a2, A3 a3) {$/;"	f	class:testing::internal::FunctionMocker	typeref:typename:R
Invoke	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^  R Invoke(A1 a1, A2 a2, A3 a3, A4 a4) {$/;"	f	class:testing::internal::FunctionMocker	typeref:typename:R
Invoke	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^  R Invoke(A1 a1, A2 a2, A3 a3, A4 a4, A5 a5) {$/;"	f	class:testing::internal::FunctionMocker	typeref:typename:R
Invoke	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^  R Invoke(A1 a1, A2 a2, A3 a3, A4 a4, A5 a5, A6 a6) {$/;"	f	class:testing::internal::FunctionMocker	typeref:typename:R
Invoke	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^  R Invoke(A1 a1, A2 a2, A3 a3, A4 a4, A5 a5, A6 a6, A7 a7) {$/;"	f	class:testing::internal::FunctionMocker	typeref:typename:R
Invoke	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^  R Invoke(A1 a1, A2 a2, A3 a3, A4 a4, A5 a5, A6 a6, A7 a7, A8 a8) {$/;"	f	class:testing::internal::FunctionMocker	typeref:typename:R
Invoke	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^  R Invoke(A1 a1, A2 a2, A3 a3, A4 a4, A5 a5, A6 a6, A7 a7, A8 a8, A9 a9) {$/;"	f	class:testing::internal::FunctionMocker	typeref:typename:R
Invoke	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^  R Invoke(A1 a1, A2 a2, A3 a3, A4 a4, A5 a5, A6 a6, A7 a7, A8 a8, A9 a9,$/;"	f	class:testing::internal::FunctionMocker	typeref:typename:R
Invoke	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static ResType Invoke(ResType(*f)(ArgType), T arg) {$/;"	f	struct:testing::internal::CallableTraits	typeref:typename:ResType
Invoke	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static ResultType Invoke(Functor f, T arg) { return f(arg); }$/;"	f	struct:testing::internal::CallableTraits	typeref:typename:ResultType
Invoke	src/tests/googletest/googlemock/include/gmock/gmock-more-actions.h	/^PolymorphicAction<internal::InvokeAction<FunctionImpl> > Invoke($/;"	f	namespace:testing	typeref:typename:PolymorphicAction<internal::InvokeAction<FunctionImpl>>
Invoke	src/tests/googletest/googlemock/include/gmock/gmock-more-actions.h	/^PolymorphicAction<internal::InvokeMethodAction<Class, MethodPtr> > Invoke($/;"	f	namespace:testing	typeref:typename:PolymorphicAction<internal::InvokeMethodAction<Class,MethodPtr>>
InvokeAction	src/tests/googletest/googlemock/include/gmock/gmock-more-actions.h	/^  explicit InvokeAction(FunctionImpl function_impl)$/;"	f	class:testing::internal::InvokeAction
InvokeAction	src/tests/googletest/googlemock/include/gmock/gmock-more-actions.h	/^class InvokeAction {$/;"	c	namespace:testing::internal
InvokeArgumentAdl	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^R InvokeArgumentAdl(AdlTag, F f) {$/;"	f	namespace:testing::internal::invoke_argument	typeref:typename:R
InvokeArgumentAdl	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^R InvokeArgumentAdl(AdlTag, F f, A1 a1) {$/;"	f	namespace:testing::internal::invoke_argument	typeref:typename:R
InvokeArgumentAdl	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^R InvokeArgumentAdl(AdlTag, F f, A1 a1, A2 a2) {$/;"	f	namespace:testing::internal::invoke_argument	typeref:typename:R
InvokeArgumentAdl	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^R InvokeArgumentAdl(AdlTag, F f, A1 a1, A2 a2, A3 a3) {$/;"	f	namespace:testing::internal::invoke_argument	typeref:typename:R
InvokeArgumentAdl	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^R InvokeArgumentAdl(AdlTag, F f, A1 a1, A2 a2, A3 a3, A4 a4) {$/;"	f	namespace:testing::internal::invoke_argument	typeref:typename:R
InvokeArgumentAdl	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^R InvokeArgumentAdl(AdlTag, F f, A1 a1, A2 a2, A3 a3, A4 a4, A5 a5) {$/;"	f	namespace:testing::internal::invoke_argument	typeref:typename:R
InvokeArgumentAdl	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^R InvokeArgumentAdl(AdlTag, F f, A1 a1, A2 a2, A3 a3, A4 a4, A5 a5, A6 a6) {$/;"	f	namespace:testing::internal::invoke_argument	typeref:typename:R
InvokeArgumentAdl	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^R InvokeArgumentAdl(AdlTag, F f, A1 a1, A2 a2, A3 a3, A4 a4, A5 a5, A6 a6,$/;"	f	namespace:testing::internal::invoke_argument	typeref:typename:R
InvokeHelper	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^class InvokeHelper<R, ::testing::tuple<A1, A2, A3, A4, A5, A6, A7, A8, A9,$/;"	c	namespace:testing::internal
InvokeHelper	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^class InvokeHelper<R, ::testing::tuple<A1, A2, A3, A4, A5, A6, A7, A8, A9> > {$/;"	c	namespace:testing::internal
InvokeHelper	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^class InvokeHelper<R, ::testing::tuple<A1, A2, A3, A4, A5, A6, A7, A8> > {$/;"	c	namespace:testing::internal
InvokeHelper	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^class InvokeHelper<R, ::testing::tuple<A1, A2, A3, A4, A5, A6, A7> > {$/;"	c	namespace:testing::internal
InvokeHelper	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^class InvokeHelper<R, ::testing::tuple<A1, A2, A3, A4, A5, A6> > {$/;"	c	namespace:testing::internal
InvokeHelper	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^class InvokeHelper<R, ::testing::tuple<A1, A2, A3, A4, A5> > {$/;"	c	namespace:testing::internal
InvokeHelper	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^class InvokeHelper<R, ::testing::tuple<A1, A2, A3, A4> > {$/;"	c	namespace:testing::internal
InvokeHelper	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^class InvokeHelper<R, ::testing::tuple<A1, A2, A3> > {$/;"	c	namespace:testing::internal
InvokeHelper	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^class InvokeHelper<R, ::testing::tuple<A1, A2> > {$/;"	c	namespace:testing::internal
InvokeHelper	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^class InvokeHelper<R, ::testing::tuple<A1> > {$/;"	c	namespace:testing::internal
InvokeHelper	src/tests/googletest/googlemock/test/gmock_link_test.h	/^class InvokeHelper {$/;"	c
InvokeMethod	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^  static R InvokeMethod(Class* obj_ptr,$/;"	f	class:testing::internal::InvokeHelper	typeref:typename:R
InvokeMethodAction	src/tests/googletest/googlemock/include/gmock/gmock-more-actions.h	/^  InvokeMethodAction(Class* obj_ptr, MethodPtr method_ptr)$/;"	f	class:testing::internal::InvokeMethodAction
InvokeMethodAction	src/tests/googletest/googlemock/include/gmock/gmock-more-actions.h	/^class InvokeMethodAction {$/;"	c	namespace:testing::internal
InvokeMethodWithoutArgsAction	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  InvokeMethodWithoutArgsAction(Class* obj_ptr, MethodPtr method_ptr)$/;"	f	class:testing::internal::InvokeMethodWithoutArgsAction
InvokeMethodWithoutArgsAction	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^class InvokeMethodWithoutArgsAction {$/;"	c	namespace:testing::internal
InvokeWith	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  Result InvokeWith(const ArgumentTuple& args)$/;"	f	class:testing::internal::FunctionMockerBase	typeref:typename:Result
InvokeWithModifiedEnv	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^def InvokeWithModifiedEnv(extra_env, function, *args, **kwargs):$/;"	f
InvokeWithoutArgs	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^InvokeWithoutArgs(Class* obj_ptr, MethodPtr method_ptr) {$/;"	f	namespace:testing	typeref:typename:PolymorphicAction<internal::InvokeMethodWithoutArgsAction<Class,MethodPtr>>
InvokeWithoutArgs	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^InvokeWithoutArgs(FunctionImpl function_impl) {$/;"	f	namespace:testing	typeref:typename:PolymorphicAction<internal::InvokeWithoutArgsAction<FunctionImpl>>
InvokeWithoutArgsAction	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  explicit InvokeWithoutArgsAction(FunctionImpl function_impl)$/;"	f	class:testing::internal::InvokeWithoutArgsAction
InvokeWithoutArgsAction	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^class InvokeWithoutArgsAction {$/;"	c	namespace:testing::internal
Invoking a Function/Method/Functor Without Arguments	src/tests/googletest/googlemock/docs/CookBook.md	/^## Invoking a Function\/Method\/Functor Without Arguments ##$/;"	s	chapter:Using Actions
Invoking a Function/Method/Functor Without Arguments	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Invoking a Function\/Method\/Functor Without Arguments ##$/;"	s	chapter:Using Actions
Invoking a Function/Method/Functor Without Arguments	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Invoking a Function\/Method\/Functor Without Arguments ##$/;"	s	chapter:Using Actions
Invoking a Function/Method/Functor Without Arguments	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Invoking a Function\/Method\/Functor Without Arguments ##$/;"	s	chapter:Using Actions
Invoking an Argument of the Mock Function	src/tests/googletest/googlemock/docs/CookBook.md	/^## Invoking an Argument of the Mock Function ##$/;"	s	chapter:Using Actions
Invoking an Argument of the Mock Function	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Invoking an Argument of the Mock Function ##$/;"	s	chapter:Using Actions
Invoking an Argument of the Mock Function	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Invoking an Argument of the Mock Function ##$/;"	s	chapter:Using Actions
Invoking an Argument of the Mock Function	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Invoking an Argument of the Mock Function ##$/;"	s	chapter:Using Actions
Invoking the Tests	src/tests/googletest/googletest/docs/Primer.md	/^# Invoking the Tests #$/;"	c
Invoking the Tests	src/tests/googletest/googletest/docs/V1_5_Primer.md	/^# Invoking the Tests #$/;"	c
Invoking the Tests	src/tests/googletest/googletest/docs/V1_6_Primer.md	/^# Invoking the Tests #$/;"	c
Invoking the Tests	src/tests/googletest/googletest/docs/V1_7_Primer.md	/^# Invoking the Tests #$/;"	c
Is it OK if I have two separate `TEST(Foo, Bar)` test methods defined in different namespaces?	src/tests/googletest/googletest/docs/FAQ.md	/^## Is it OK if I have two separate `TEST(Foo, Bar)` test methods defined in different namespaces/;"	s
Is it OK if I have two separate `TEST(Foo, Bar)` test methods defined in different namespaces?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## Is it OK if I have two separate `TEST(Foo, Bar)` test methods defined in different namespaces/;"	s
IsAProtocolMessage	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^struct IsAProtocolMessage$/;"	s	namespace:testing::internal
IsATTY	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^inline int IsATTY(int \/* fd *\/) { return 0; }$/;"	f	namespace:testing::internal::posix	typeref:typename:int
IsATTY	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^inline int IsATTY(int fd) { return _isatty(fd); }$/;"	f	namespace:testing::internal::posix	typeref:typename:int
IsATTY	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^inline int IsATTY(int fd) { return isatty(fd); }$/;"	f	namespace:testing::internal::posix	typeref:typename:int
IsAbsolutePath	src/tests/googletest/googletest/src/gtest-filepath.cc	/^bool FilePath::IsAbsolutePath() const {$/;"	f	class:testing::internal::FilePath	typeref:typename:bool
IsAlNum	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^inline bool IsAlNum(char ch) {$/;"	f	namespace:testing::internal	typeref:typename:bool
IsAlpha	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^inline bool IsAlpha(char ch) {$/;"	f	namespace:testing::internal	typeref:typename:bool
IsAsciiDigit	src/tests/googletest/googletest/src/gtest-port.cc	/^bool IsAsciiDigit(char ch) { return '0' <= ch && ch <= '9'; }$/;"	f	namespace:testing::internal	typeref:typename:bool
IsAsciiPunct	src/tests/googletest/googletest/src/gtest-port.cc	/^bool IsAsciiPunct(char ch) {$/;"	f	namespace:testing::internal	typeref:typename:bool
IsAsciiWhiteSpace	src/tests/googletest/googletest/src/gtest-port.cc	/^bool IsAsciiWhiteSpace(char ch) { return IsInSet(ch, " \\f\\n\\r\\t\\v"); }$/;"	f	namespace:testing::internal	typeref:typename:bool
IsAsciiWordChar	src/tests/googletest/googletest/src/gtest-port.cc	/^bool IsAsciiWordChar(char ch) {$/;"	f	namespace:testing::internal	typeref:typename:bool
IsBuiltinType	src/tests/googletest/googlemock/scripts/generator/cpp/keywords.py	/^def IsBuiltinType(token):$/;"	f
IsCloseable	src/tests/googletest/googletest/src/gtest-port.cc	/^bool AutoHandle::IsCloseable() const {$/;"	f	class:testing::internal::AutoHandle	typeref:typename:bool
IsContainer	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^typedef int IsContainer;$/;"	t	namespace:testing::internal	typeref:typename:int
IsContainerTest	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^IsContainer IsContainerTest(int \/* dummy *\/,$/;"	f	namespace:testing::internal	typeref:typename:IsContainer
IsContainerTest	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^IsNotContainer IsContainerTest(long \/* dummy *\/) { return '\\0'; }$/;"	f	namespace:testing::internal	typeref:typename:IsNotContainer
IsDeclaration	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def IsDeclaration(self):$/;"	m	class:Class
IsDeclaration	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def IsDeclaration(self):$/;"	m	class:Function
IsDeclaration	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def IsDeclaration(self):$/;"	m	class:Node
IsDeclaration	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def IsDeclaration(self):$/;"	m	class:Type
IsDefinition	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def IsDefinition(self):$/;"	m	class:Class
IsDefinition	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def IsDefinition(self):$/;"	m	class:Function
IsDefinition	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def IsDefinition(self):$/;"	m	class:Node
IsDefinition	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def IsDefinition(self):$/;"	m	class:Type
IsDefinition	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def IsDefinition(self):$/;"	m	class:Typedef
IsDefinition	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def IsDefinition(self):$/;"	m	class:_NestedType
IsDigit	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^inline bool IsDigit(char ch) {$/;"	f	namespace:testing::internal	typeref:typename:bool
IsDir	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^inline bool IsDir(const StatStruct& st) {$/;"	f	namespace:testing::internal::posix	typeref:typename:bool
IsDirectory	src/tests/googletest/googletest/src/gtest-filepath.cc	/^bool FilePath::IsDirectory() const {$/;"	f	class:testing::internal::FilePath	typeref:typename:bool
IsDoDefault	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  bool IsDoDefault() const { return impl_.get() == NULL; }$/;"	f	class:testing::Action	typeref:typename:bool
IsEmpty	src/tests/googletest/googletest/include/gtest/internal/gtest-filepath.h	/^  bool IsEmpty() const { return pathname_.empty(); }$/;"	f	class:testing::internal::FilePath	typeref:typename:bool
IsEven	src/tests/googletest/googletest/test/gtest_unittest.cc	/^bool IsEven(int n) {$/;"	f	namespace:__anonf780395f0111	typeref:typename:bool
IsEvenFunctor	src/tests/googletest/googletest/test/gtest_unittest.cc	/^struct IsEvenFunctor {$/;"	s	namespace:__anonf780395f0111	file:
IsExportable	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def IsExportable(self):$/;"	m	class:Class
IsExportable	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def IsExportable(self):$/;"	m	class:Function
IsExportable	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def IsExportable(self):$/;"	m	class:Node
IsExportable	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def IsExportable(self):$/;"	m	class:Type
IsExportable	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def IsExportable(self):$/;"	m	class:Typedef
IsExportable	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def IsExportable(self):$/;"	m	class:_NestedType
IsGreaterThan	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  explicit IsGreaterThan(int threshold) : threshold_(threshold) {}$/;"	f	class:testing::gmock_matchers_test::IsGreaterThan	file:
IsGreaterThan	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^class IsGreaterThan {$/;"	c	namespace:testing::gmock_matchers_test	file:
IsHRESULTFailure	src/tests/googletest/googletest/src/gtest.cc	/^AssertionResult IsHRESULTFailure(const char* expr, long hr) {  \/\/ NOLINT$/;"	f	namespace:testing::internal	typeref:typename:AssertionResult
IsHRESULTSuccess	src/tests/googletest/googletest/src/gtest.cc	/^AssertionResult IsHRESULTSuccess(const char* expr, long hr) {  \/\/ NOLINT$/;"	f	namespace:testing::internal	typeref:typename:AssertionResult
IsHalfOf	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^PolymorphicMatcher<IsHalfOfMatcher> IsHalfOf() {$/;"	f	namespace:testing::gmock_matchers_test	typeref:typename:PolymorphicMatcher<IsHalfOfMatcher>
IsHalfOfMatcher	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^class IsHalfOfMatcher {$/;"	c	namespace:testing::gmock_matchers_test	file:
IsHeaderGuardIncludeOrOneLineIWYUPragma	src/tests/googletest/googletest/scripts/pump.py	/^def IsHeaderGuardIncludeOrOneLineIWYUPragma(line):$/;"	f
IsImage	src/tests/googletest/googlemock/scripts/upload.py	/^  def IsImage(self, filename):$/;"	m	class:VersionControlSystem
IsImage	src/tests/googletest/googletest/scripts/upload.py	/^  def IsImage(self, filename):$/;"	m	class:VersionControlSystem
IsInGMockSvn	src/tests/googletest/googletest/scripts/common.py	/^def IsInGMockSvn():$/;"	f
IsInGTestSvn	src/tests/googletest/googletest/scripts/common.py	/^def IsInGTestSvn():$/;"	f
IsInPreprocessorDirective	src/tests/googletest/googletest/scripts/pump.py	/^def IsInPreprocessorDirective(prev_lines, cur_line):$/;"	f
IsInSet	src/tests/googletest/googletest/src/gtest-port.cc	/^bool IsInSet(char ch, const char* str) {$/;"	f	namespace:testing::internal	typeref:typename:bool
IsInterested	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  bool IsInterested() const { return stream_ != NULL; }$/;"	f	class:testing::MatchResultListener	typeref:typename:bool
IsKeyword	src/tests/googletest/googlemock/scripts/generator/cpp/keywords.py	/^def IsKeyword(token):$/;"	f
IsLower	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^inline bool IsLower(char ch) {$/;"	f	namespace:testing::internal	typeref:typename:bool
IsMultiLineIWYUPragma	src/tests/googletest/googletest/scripts/pump.py	/^def IsMultiLineIWYUPragma(line):$/;"	f
IsNegative	src/tests/googletest/googletest/test/gtest_unittest.cc	/^bool IsNegative(T x) {$/;"	f	namespace:__anonf780395f0111	typeref:typename:bool
IsNegativeFormat	src/tests/googletest/googletest/test/gtest_unittest.cc	/^AssertionResult IsNegativeFormat(const char* \/* expr *\/, T x) {$/;"	f	namespace:__anonf780395f0111	typeref:typename:AssertionResult
IsNormalizableWhitespace	src/tests/googletest/googletest/src/gtest.cc	/^  static bool IsNormalizableWhitespace(char c) {$/;"	f	class:testing::internal::XmlUnitTestResultPrinter	typeref:typename:bool	file:
IsNotContainer	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^typedef char IsNotContainer;$/;"	t	namespace:testing::internal	typeref:typename:char
IsNotSubstring	src/tests/googletest/googletest/src/gtest.cc	/^AssertionResult IsNotSubstring($/;"	f	namespace:testing	typeref:typename:AssertionResult
IsNotZero	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^class IsNotZero : public ActionInterface<bool(int)> {  \/\/ NOLINT$/;"	c	namespace:__anon550198f10111	file:
IsNotZero	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^ConvertibleToBool IsNotZero(int number) {$/;"	f	namespace:testing::gmock_matchers_test	typeref:typename:ConvertibleToBool
IsNull	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline PolymorphicMatcher<internal::IsNullMatcher > IsNull() {$/;"	f	namespace:testing	typeref:typename:PolymorphicMatcher<internal::IsNullMatcher>
IsNull	src/tests/googletest/googletest/test/gtest-unittest-api_test.cc	/^AssertionResult IsNull(const char* str) {$/;"	f	namespace:testing::internal	typeref:typename:AssertionResult
IsNullMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class IsNullMatcher {$/;"	c	namespace:testing::internal
IsOverSaturated	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  bool IsOverSaturated() const$/;"	f	class:testing::internal::ExpectationBase	typeref:typename:bool
IsOverSaturatedByCallCount	src/tests/googletest/googlemock/include/gmock/gmock-cardinalities.h	/^  bool IsOverSaturatedByCallCount(int call_count) const {$/;"	f	class:testing::Cardinality	typeref:typename:bool
IsPathSeparator	src/tests/googletest/googletest/src/gtest-filepath.cc	/^static bool IsPathSeparator(char c) {$/;"	f	namespace:testing::internal	typeref:typename:bool	file:
IsPositive	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^int IsPositive(double x) {$/;"	f	namespace:testing::gmock_matchers_test	typeref:typename:int
IsPositive	src/tests/googletest/googletest/test/gtest_unittest.cc	/^bool IsPositive(double x) {$/;"	f	namespace:__anonf780395f0111	typeref:typename:bool
IsPositive	src/tests/googletest/googletest/test/gtest_unittest.cc	/^static bool IsPositive(int n) { return n > 0; }$/;"	f	namespace:__anonf780395f0111	typeref:typename:bool	file:
IsPositiveFormat	src/tests/googletest/googletest/test/gtest_unittest.cc	/^AssertionResult IsPositiveFormat(const char* \/* expr *\/, double x) {$/;"	f	namespace:__anonf780395f0111	typeref:typename:AssertionResult
IsPositiveFormat	src/tests/googletest/googletest/test/gtest_unittest.cc	/^AssertionResult IsPositiveFormat(const char* \/* expr *\/, int n) {$/;"	f	namespace:__anonf780395f0111	typeref:typename:AssertionResult
IsPositiveIntValue	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^bool IsPositiveIntValue(const IntValue& foo) {$/;"	f	namespace:testing::gmock_matchers_test	typeref:typename:bool
IsPositiveUncopyable	src/tests/googletest/googletest/test/gtest_unittest.cc	/^bool IsPositiveUncopyable(const Uncopyable& x) {$/;"	f	namespace:__anonf780395f0111	typeref:typename:bool
IsPrime	src/tests/googletest/googletest/samples/prime_tables.h	/^  virtual bool IsPrime(int n) const {$/;"	f	class:OnTheFlyPrimeTable	typeref:typename:bool
IsPrime	src/tests/googletest/googletest/samples/prime_tables.h	/^  virtual bool IsPrime(int n) const {$/;"	f	class:PreCalculatedPrimeTable	typeref:typename:bool
IsPrime	src/tests/googletest/googletest/samples/sample1.cc	/^bool IsPrime(int n) {$/;"	f	typeref:typename:bool
IsPrime	src/tests/googletest/googletest/samples/sample8_unittest.cc	/^  virtual bool IsPrime(int n) const {$/;"	f	class:HybridPrimeTable	typeref:typename:bool	file:
IsPrintableAscii	src/tests/googletest/googletest/src/gtest-printers.cc	/^inline bool IsPrintableAscii(wchar_t c) {$/;"	f	namespace:testing::internal	typeref:typename:bool
IsReadableTypeName	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline bool IsReadableTypeName(const std::string& type_name) {$/;"	f	namespace:testing::internal	typeref:typename:bool
IsRepeat	src/tests/googletest/googletest/src/gtest-port.cc	/^bool IsRepeat(char ch) { return IsInSet(ch, "?*+"); }$/;"	f	namespace:testing::internal	typeref:typename:bool
IsRootDirectory	src/tests/googletest/googletest/src/gtest-filepath.cc	/^bool FilePath::IsRootDirectory() const {$/;"	f	class:testing::internal::FilePath	typeref:typename:bool
IsSatisfied	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  bool IsSatisfied() const$/;"	f	class:testing::internal::ExpectationBase	typeref:typename:bool
IsSatisfiedByCallCount	src/tests/googletest/googlemock/include/gmock/gmock-cardinalities.h	/^  bool IsSatisfiedByCallCount(int call_count) const {$/;"	f	class:testing::Cardinality	typeref:typename:bool
IsSatisfiedByCallCount	src/tests/googletest/googlemock/src/gmock-cardinalities.cc	/^  virtual bool IsSatisfiedByCallCount(int call_count) const {$/;"	f	class:testing::__anon97b0a8450111::BetweenCardinalityImpl	typeref:typename:bool	file:
IsSatisfiedByCallCount	src/tests/googletest/googlemock/test/gmock-cardinalities_test.cc	/^  virtual bool IsSatisfiedByCallCount(int call_count) const {$/;"	f	class:__anon3d3befdc0111::EvenCardinality	typeref:typename:bool	file:
IsSatisfiedByCallCount	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^  virtual bool IsSatisfiedByCallCount(int call_count) const {$/;"	f	class:__anon6b6cf3b20111::EvenNumberCardinality	typeref:typename:bool	file:
IsSaturated	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  bool IsSaturated() const$/;"	f	class:testing::internal::ExpectationBase	typeref:typename:bool
IsSaturatedByCallCount	src/tests/googletest/googlemock/include/gmock/gmock-cardinalities.h	/^  bool IsSaturatedByCallCount(int call_count) const {$/;"	f	class:testing::Cardinality	typeref:typename:bool
IsSaturatedByCallCount	src/tests/googletest/googlemock/src/gmock-cardinalities.cc	/^  virtual bool IsSaturatedByCallCount(int call_count) const {$/;"	f	class:testing::__anon97b0a8450111::BetweenCardinalityImpl	typeref:typename:bool	file:
IsSaturatedByCallCount	src/tests/googletest/googlemock/test/gmock-cardinalities_test.cc	/^  virtual bool IsSaturatedByCallCount(int \/* call_count *\/) const {$/;"	f	class:__anon3d3befdc0111::EvenCardinality	typeref:typename:bool	file:
IsSaturatedByCallCount	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^  virtual bool IsSaturatedByCallCount(int \/* call_count *\/) const {$/;"	f	class:__anon6b6cf3b20111::EvenNumberCardinality	typeref:typename:bool	file:
IsSet	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  static bool IsSet() { return address_ != NULL; }$/;"	f	class:testing::DefaultValue	typeref:typename:bool
IsSet	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  static bool IsSet() { return producer_ != NULL; }$/;"	f	class:testing::DefaultValue	typeref:typename:bool
IsSingleLineComment	src/tests/googletest/googletest/scripts/pump.py	/^def IsSingleLineComment(cur_line):$/;"	f
IsSpace	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^inline bool IsSpace(char ch) {$/;"	f	namespace:testing::internal	typeref:typename:bool
IsSubstring	src/tests/googletest/googletest/src/gtest.cc	/^AssertionResult IsSubstring($/;"	f	namespace:testing	typeref:typename:AssertionResult
IsSubstringImpl	src/tests/googletest/googletest/src/gtest.cc	/^AssertionResult IsSubstringImpl($/;"	f	namespace:testing::__anon3f29b7680411	typeref:typename:AssertionResult
IsSubstringPred	src/tests/googletest/googletest/src/gtest.cc	/^bool IsSubstringPred(const StringType& needle,$/;"	f	namespace:testing::__anon3f29b7680411	typeref:typename:bool
IsSubstringPred	src/tests/googletest/googletest/src/gtest.cc	/^bool IsSubstringPred(const char* needle, const char* haystack) {$/;"	f	namespace:testing::__anon3f29b7680411	typeref:typename:bool
IsSubstringPred	src/tests/googletest/googletest/src/gtest.cc	/^bool IsSubstringPred(const wchar_t* needle, const wchar_t* haystack) {$/;"	f	namespace:testing::__anon3f29b7680411	typeref:typename:bool
IsTrue	src/tests/googletest/googletest/src/gtest.cc	/^bool IsTrue(bool condition) { return condition; }$/;"	f	namespace:testing::internal	typeref:typename:bool
IsTypeOf	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  static bool IsTypeOf(const T& \/* v *\/) { return true; }$/;"	f	struct:testing::gmock_matchers_test::Type	typeref:typename:bool	file:
IsUpper	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^inline bool IsUpper(char ch) {$/;"	f	namespace:testing::internal	typeref:typename:bool
IsUtf16SurrogatePair	src/tests/googletest/googletest/src/gtest.cc	/^inline bool IsUtf16SurrogatePair(wchar_t first, wchar_t second) {$/;"	f	namespace:testing::internal	typeref:typename:bool
IsValidEscape	src/tests/googletest/googletest/src/gtest-port.cc	/^bool IsValidEscape(char c) {$/;"	f	namespace:testing::internal	typeref:typename:bool
IsValidParamName	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  static bool IsValidParamName(const std::string& name) {$/;"	f	class:testing::internal::ParameterizedTestCaseInfo	typeref:typename:bool
IsValidXmlCharacter	src/tests/googletest/googletest/src/gtest.cc	/^  static bool IsValidXmlCharacter(char c) {$/;"	f	class:testing::internal::XmlUnitTestResultPrinter	typeref:typename:bool	file:
IsXDigit	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^inline bool IsXDigit(char ch) {$/;"	f	namespace:testing::internal	typeref:typename:bool
IsXDigit	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^inline bool IsXDigit(wchar_t ch) {$/;"	f	namespace:testing::internal	typeref:typename:bool
Istream	src/libtfhe-superaic-core/include/tfhe_generic_streams.h	/^class Istream {$/;"	c
Item	src/muduo/examples/memcached/server/Item.cc	/^Item::Item(StringPiece keyArg,$/;"	f	class:Item
Item	src/muduo/examples/memcached/server/Item.h	/^class Item : muduo::noncopyable$/;"	c
ItemMap	src/muduo/examples/memcached/server/MemcacheServer.h	/^  typedef std::unordered_set<ConstItemPtr, Hash, Equal> ItemMap;$/;"	t	class:MemcacheServer	typeref:typename:std::unordered_set<ConstItemPtr,Hash,Equal>
ItemPtr	src/muduo/examples/memcached/server/Item.h	/^typedef std::shared_ptr<Item> ItemPtr;  \/\/ TODO: use unique_ptr$/;"	t	typeref:typename:std::shared_ptr<Item>
Iter	src/tests/googletest/googlemock/src/gmock-matchers.cc	/^  typedef ElementMatcherPairs::const_iterator Iter;$/;"	t	function:testing::internal::LogElementMatcherPairVec	typeref:typename:ElementMatcherPairs::const_iterator	file:
Iter	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^  typedef vector<int>::iterator Iter;$/;"	t	function:__anoncaf4ae130111::TEST	typeref:typename:vector<int>::iterator	file:
Iter	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^    typedef typename std::list<value_type>::const_iterator Iter;$/;"	t	function:testing::gmock_matchers_test::Streamlike::operator <<	typeref:typename:std::list<value_type>::const_iterator	file:
Iter	src/tests/googletest/googletest/scripts/gen_gtest_pred_impl.py	/^def Iter(n, format, sep=''):$/;"	f
IterateOverTuple	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  struct IterateOverTuple {$/;"	s	class:testing::internal::TransformTupleValuesHelper
IterateOverTuple	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  struct IterateOverTuple<Tup, 0> {$/;"	s	class:testing::internal::TransformTupleValuesHelper
Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator10
Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator2
Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator3
Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator4
Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator5
Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator6
Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator7
Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator8
Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator9
Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::RangeGenerator::Iterator
Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^    Iterator(const ParamGeneratorInterface<T>* base, T value, int index,$/;"	f	class:testing::internal::RangeGenerator::Iterator
Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^    Iterator(const ParamGeneratorInterface<T>* base,$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  class Iterator : public ParamIteratorInterface<T> {$/;"	c	class:testing::internal::RangeGenerator
Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  class Iterator : public ParamIteratorInterface<T> {$/;"	c	class:testing::internal::ValuesInIteratorRangeGenerator
IteratorTraits	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^struct IteratorTraits {$/;"	s	namespace:testing::internal
IteratorTraits	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^struct IteratorTraits<T*> {$/;"	s	namespace:testing::internal
IteratorTraits	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^struct IteratorTraits<const T*> {$/;"	s	namespace:testing::internal
Join	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  void Join() {$/;"	f	class:testing::internal::ThreadWithParam	typeref:typename:void
Join	src/tests/googletest/googletest/src/gtest-port.cc	/^void ThreadWithParamBase::Join() {$/;"	f	class:testing::internal::ThreadWithParamBase	typeref:typename:void
JoinAndDelete	src/tests/googletest/googlemock/test/gmock_stress_test.cc	/^void JoinAndDelete(ThreadWithParam<T>* t) {$/;"	f	namespace:testing::__anonc83180760111	typeref:typename:void
JoinAsTuple	src/tests/googletest/googlemock/src/gmock-matchers.cc	/^GTEST_API_ string JoinAsTuple(const Strings& fields) {$/;"	f	namespace:testing::internal	typeref:typename:GTEST_API_ string
Karatsuba_aux	src/libtfhe-superaic-core/multiplication.cpp	/^EXPORT void Karatsuba_aux(Torus32* R, const int32_t* A, const Torus32* B, const int32_t size, co/;"	f	typeref:typename:EXPORT void
Key	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline internal::KeyMatcher<M> Key(M inner_matcher) {$/;"	f	namespace:testing	typeref:typename:internal::KeyMatcher<M>
KeyMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit KeyMatcher(M m) : matcher_for_key_(m) {}$/;"	f	class:testing::internal::KeyMatcher
KeyMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class KeyMatcher {$/;"	c	namespace:testing::internal
KeyMatcherImpl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit KeyMatcherImpl(InnerMatcher inner_matcher)$/;"	f	class:testing::internal::KeyMatcherImpl
KeyMatcherImpl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class KeyMatcherImpl : public MatcherInterface<PairType> {$/;"	c	namespace:testing::internal
KeyType	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef typename RawPairType::first_type KeyType;$/;"	t	class:testing::internal::KeyMatcherImpl	typeref:typename:RawPairType::first_type
KilledBySignal	src/tests/googletest/googletest/include/gtest/gtest-death-test.h	/^class GTEST_API_ KilledBySignal {$/;"	c	namespace:testing
KilledBySignal	src/tests/googletest/googletest/src/gtest-death-test.cc	/^KilledBySignal::KilledBySignal(int signum) : signum_(signum) {$/;"	f	class:testing::KilledBySignal
KilledExitStatus	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^static int KilledExitStatus(int signum) {$/;"	f	typeref:typename:int	file:
KindOf	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^template <typename T> struct KindOf {$/;"	s	namespace:testing::internal
Knowing When to Expect	src/tests/googletest/googlemock/docs/CookBook.md	/^## Knowing When to Expect ##$/;"	s	chapter:Setting Expectations
Knowing When to Expect	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Knowing When to Expect ##$/;"	s	chapter:Setting Expectations
Known Limitations	src/tests/googletest/googletest/docs/Primer.md	/^# Known Limitations #$/;"	c
Known Limitations	src/tests/googletest/googletest/docs/V1_5_Primer.md	/^# Known Limitations #$/;"	c
Known Limitations	src/tests/googletest/googletest/docs/V1_6_Primer.md	/^# Known Limitations #$/;"	c
Known Limitations	src/tests/googletest/googletest/docs/V1_7_Primer.md	/^# Known Limitations #$/;"	c
LAGRANGEHALFC_ARITHMETIC_H	src/libtfhe-superaic-core/include/lagrangehalfc_arithmetic.h	/^#define LAGRANGEHALFC_ARITHMETIC_H$/;"	d
LAGRANGEHALFC_IMPL_H	src/libtfhe-superaic-core/fft_processors/nayuki/lagrangehalfc_impl.h	/^#define LAGRANGEHALFC_IMPL_H$/;"	d
LFU	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^        LFU,$/;"	e	enum:tfhe_superaic::TFHE_ACC::ELIM_ALGO
LIBRARY_OUTPUT_PATH	src/muduo/CMakeLists.txt	/^set(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}\/lib)$/;"	v
LIST_TESTS_FLAG	src/tests/googletest/googletest/test/gtest_catch_exceptions_test.py	/^LIST_TESTS_FLAG = FLAG_PREFIX + 'list_tests'$/;"	v
LIST_TESTS_FLAG	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^LIST_TESTS_FLAG = '--gtest_list_tests'$/;"	v
LIST_TESTS_FLAG	src/tests/googletest/googletest/test/gtest_help_test.py	/^LIST_TESTS_FLAG = FLAG_PREFIX + 'list_tests'$/;"	v
LIST_TESTS_FLAG	src/tests/googletest/googletest/test/gtest_list_tests_unittest.py	/^LIST_TESTS_FLAG = 'gtest_list_tests'$/;"	v
LIVED	src/tests/googletest/googletest/src/gtest-death-test.cc	/^enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };$/;"	e	enum:testing::internal::DeathTestOutcome	file:
LOG_DEBUG	src/muduo/muduo/base/Logging.h	/^#define LOG_DEBUG /;"	d
LOG_ERROR	src/muduo/muduo/base/Logging.h	/^#define LOG_ERROR /;"	d
LOG_FATAL	src/muduo/muduo/base/Logging.h	/^#define LOG_FATAL /;"	d
LOG_INFO	src/muduo/muduo/base/Logging.h	/^#define LOG_INFO /;"	d
LOG_SYSERR	src/muduo/muduo/base/Logging.h	/^#define LOG_SYSERR /;"	d
LOG_SYSFATAL	src/muduo/muduo/base/Logging.h	/^#define LOG_SYSFATAL /;"	d
LOG_TRACE	src/muduo/muduo/base/Logging.h	/^#define LOG_TRACE /;"	d
LOG_WARN	src/muduo/muduo/base/Logging.h	/^#define LOG_WARN /;"	d
LOOP	src/tests/googletest/googlemock/scripts/generator/cpp/keywords.py	/^LOOP = set('while do for break continue'.split())$/;"	v
LRU	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^        LRU = 0,$/;"	e	enum:tfhe_superaic::TFHE_ACC::ELIM_ALGO
LWE	docs/code_note.md	/^# LWE$/;"	c
LWEKEYSWITCH_H	src/libtfhe-superaic-core/include/lwekeyswitch.h	/^#define LWEKEYSWITCH_H$/;"	d
LWEPARAMS_H	src/libtfhe-superaic-core/include/lweparams.h	/^#define LWEPARAMS_H$/;"	d
LWE_BOOTSTRAPPING_KEY_TYPE_UID	src/libtfhe-superaic-core/include/tfhe_generic_streams.h	/^const int32_t LWE_BOOTSTRAPPING_KEY_TYPE_UID = 201;$/;"	v	typeref:typename:const int32_t
LWE_KEYSWITCH_KEY_TYPE_UID	src/libtfhe-superaic-core/include/tfhe_generic_streams.h	/^const int32_t LWE_KEYSWITCH_KEY_TYPE_UID = 200;$/;"	v	typeref:typename:const int32_t
LWE_KEY_TYPE_UID	src/libtfhe-superaic-core/include/tfhe_generic_streams.h	/^const int32_t LWE_KEY_TYPE_UID = 43;$/;"	v	typeref:typename:const int32_t
LWE_SAMPLE_TYPE_UID	src/libtfhe-superaic-core/include/tfhe_generic_streams.h	/^const int32_t LWE_SAMPLE_TYPE_UID = 42;$/;"	v	typeref:typename:const int32_t
LagrangeHalfCPolynomial	src/libtfhe-superaic-core/include/polynomials.h	/^struct LagrangeHalfCPolynomial$/;"	s
LagrangeHalfCPolynomial	src/libtfhe-superaic-core/include/tfhe_superaic_torus.h	/^typedef struct LagrangeHalfCPolynomial	   LagrangeHalfCPolynomial;$/;"	t	typeref:struct:LagrangeHalfCPolynomial
LagrangeHalfCPolynomialAddMul	src/libtfhe-superaic-core/fft_processors/nayuki/lagrangehalfc_impl.cpp	/^EXPORT void LagrangeHalfCPolynomialAddMul($/;"	f	typeref:typename:EXPORT void
LagrangeHalfCPolynomialAddTo	src/libtfhe-superaic-core/fft_processors/nayuki/lagrangehalfc_impl.cpp	/^EXPORT void LagrangeHalfCPolynomialAddTo($/;"	f	typeref:typename:EXPORT void
LagrangeHalfCPolynomialAddTorusConstant	src/libtfhe-superaic-core/fft_processors/nayuki/lagrangehalfc_impl.cpp	/^EXPORT void LagrangeHalfCPolynomialAddTorusConstant(LagrangeHalfCPolynomial* result, const Torus/;"	f	typeref:typename:EXPORT void
LagrangeHalfCPolynomialClear	src/libtfhe-superaic-core/fft_processors/nayuki/lagrangehalfc_impl.cpp	/^EXPORT void LagrangeHalfCPolynomialClear($/;"	f	typeref:typename:EXPORT void
LagrangeHalfCPolynomialMul	src/libtfhe-superaic-core/fft_processors/nayuki/lagrangehalfc_impl.cpp	/^EXPORT void LagrangeHalfCPolynomialMul($/;"	f	typeref:typename:EXPORT void
LagrangeHalfCPolynomialSetTorusConstant	src/libtfhe-superaic-core/fft_processors/nayuki/lagrangehalfc_impl.cpp	/^EXPORT void LagrangeHalfCPolynomialSetTorusConstant(LagrangeHalfCPolynomial* result, const Torus/;"	f	typeref:typename:EXPORT void
LagrangeHalfCPolynomialSetXaiMinusOne	src/libtfhe-superaic-core/fft_processors/nayuki/lagrangehalfc_impl.cpp	/^EXPORT void LagrangeHalfCPolynomialSetXaiMinusOne(LagrangeHalfCPolynomial* result, const int32_t/;"	f	typeref:typename:EXPORT void
LagrangeHalfCPolynomialSubMul	src/libtfhe-superaic-core/fft_processors/nayuki/lagrangehalfc_impl.cpp	/^EXPORT void LagrangeHalfCPolynomialSubMul($/;"	f	typeref:typename:EXPORT void
LagrangeHalfCPolynomial_IMPL	src/libtfhe-superaic-core/fft_processors/nayuki/lagrangehalfc_impl.cpp	/^LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(const int32_t N) {$/;"	f	class:LagrangeHalfCPolynomial_IMPL
LagrangeHalfCPolynomial_IMPL	src/libtfhe-superaic-core/fft_processors/nayuki/lagrangehalfc_impl.h	/^struct LagrangeHalfCPolynomial_IMPL$/;"	s
Last	src/tests/googletest/googletest/samples/sample3-inl.h	/^  QueueNode<E>* Last() { return last_; }$/;"	f	class:Queue	typeref:typename:QueueNode<E> *
Last	src/tests/googletest/googletest/samples/sample3-inl.h	/^  const QueueNode<E>* Last() const { return last_; }$/;"	f	class:Queue	typeref:typename:const QueueNode<E> *
LastMessage	src/tests/googletest/googletest/src/gtest-death-test.cc	/^const char* DeathTest::LastMessage() {$/;"	f	class:testing::internal::DeathTest	typeref:typename:const char *
Le	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline internal::Le2Matcher Le() { return internal::Le2Matcher(); }$/;"	f	namespace:testing	typeref:typename:internal::Le2Matcher
Le	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline internal::LeMatcher<Rhs> Le(Rhs x) {$/;"	f	namespace:testing	typeref:typename:internal::LeMatcher<Rhs>
Le2Matcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class Le2Matcher : public PairMatchBase<Le2Matcher, AnyLe> {$/;"	c	namespace:testing::internal
LeMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit LeMatcher(const Rhs& rhs)$/;"	f	class:testing::internal::LeMatcher
LeMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class LeMatcher : public ComparisonBase<LeMatcher<Rhs>, Rhs, AnyLe> {$/;"	c	namespace:testing::internal
LeakChecker	src/tests/googletest/googletest/samples/sample10_unittest.cc	/^class LeakChecker : public EmptyTestEventListener {$/;"	c	namespace:__anona6935d300111	file:
Legacy Build Scripts	src/tests/googletest/googletest/README.md	/^### Legacy Build Scripts ###$/;"	S
Length	src/tests/googletest/googletest/samples/sample2.h	/^  size_t Length() const {$/;"	f	class:MyString	typeref:typename:size_t
LengthHeaderCodec	src/muduo/examples/asio/chat/codec.h	/^  explicit LengthHeaderCodec(const StringMessageCallback& cb)$/;"	f	class:LengthHeaderCodec
LengthHeaderCodec	src/muduo/examples/asio/chat/codec.h	/^class LengthHeaderCodec : muduo::noncopyable$/;"	c
Less	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  class Less {$/;"	c	class:testing::Expectation
LessByName	src/tests/googletest/googletest/test/gtest-unittest-api_test.cc	/^struct LessByName {$/;"	s	namespace:testing::internal	file:
LessComparator	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^struct LessComparator {$/;"	s	namespace:testing::internal
LessThan	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^Matcher<tuple<char, int> > LessThan() {$/;"	f	namespace:__anoncaf4ae130111	typeref:typename:Matcher<tuple<char,int>>
LessThanMatcher	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^class LessThanMatcher : public MatcherInterface<tuple<char, int> > {$/;"	c	namespace:__anoncaf4ae130111	file:
Letting Another Testing Framework Drive	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^### Letting Another Testing Framework Drive ###$/;"	S	section:Running Test Programs: Advanced Options""Controlling How Failures Are Reported
Letting Another Testing Framework Drive	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^### Letting Another Testing Framework Drive ###$/;"	S	section:Running Test Programs: Advanced Options""Controlling How Failures Are Reported
Letting Another Testing Framework Drive	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^### Letting Another Testing Framework Drive ###$/;"	S	section:Running Test Programs: Advanced Options""Controlling How Failures Are Reported
Letting Another Testing Framework Drive	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^### Letting Another Testing Framework Drive ###$/;"	S	section:Running Test Programs: Advanced Options""Controlling How Failures Are Reported
LhsSize	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  size_t LhsSize() const { return num_elements_; }$/;"	f	class:testing::internal::MatchMatrix	typeref:typename:size_t
LhsStlContainer	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    typedef typename LhsView::type LhsStlContainer;$/;"	t	class:testing::internal::PointwiseMatcher::Impl	typeref:typename:LhsView::type
LhsStlContainer	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    typedef typename LhsView::type LhsStlContainer;$/;"	t	class:testing::internal::WhenSortedByMatcher::Impl	typeref:typename:LhsView::type
LhsStlContainer	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    typedef typename LhsView::type LhsStlContainer;$/;"	t	function:testing::internal::ContainerEqMatcher::MatchAndExplain	typeref:typename:LhsView::type
LhsStlContainerReference	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    typedef typename LhsView::const_reference LhsStlContainerReference;$/;"	t	class:testing::internal::PointwiseMatcher::Impl	typeref:typename:LhsView::const_reference
LhsStlContainerReference	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    typedef typename LhsView::const_reference LhsStlContainerReference;$/;"	t	class:testing::internal::WhenSortedByMatcher::Impl	typeref:typename:LhsView::const_reference
LhsValue	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^        typename LhsStlContainer::value_type>::type LhsValue;$/;"	t	class:testing::internal::WhenSortedByMatcher::Impl	typeref:typename:RemoveConstFromKey<typename LhsStlContainer::value_type>::type
LhsValue	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    typedef typename LhsStlContainer::value_type LhsValue;$/;"	t	class:testing::internal::PointwiseMatcher::Impl	typeref:typename:LhsStlContainer::value_type
LhsView	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^         GTEST_REMOVE_REFERENCE_AND_CONST_(LhsContainer)> LhsView;$/;"	t	class:testing::internal::PointwiseMatcher::Impl
LhsView	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^         GTEST_REMOVE_REFERENCE_AND_CONST_(LhsContainer)> LhsView;$/;"	t	class:testing::internal::WhenSortedByMatcher::Impl
LhsView	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^        LhsView;$/;"	t	function:testing::internal::ContainerEqMatcher::MatchAndExplain
Licensing	src/tests/googletest/googlemock/docs/DevGuide.md	/^## Licensing ##$/;"	s	chapter:Introduction
Licensing	src/tests/googletest/googletest/docs/DevGuide.md	/^## Licensing ##$/;"	s	chapter:Introduction
LinkTest	src/tests/googletest/googlemock/test/gmock_link2_test.cc	/^#define LinkTest LinkTest2/;"	d	file:
LinkTest	src/tests/googletest/googlemock/test/gmock_link_test.cc	/^#define LinkTest LinkTest1/;"	d	file:
LinkedPtrLessThan	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^struct LinkedPtrLessThan {$/;"	s	namespace:testing::internal
LinkedPtrTest	src/tests/googletest/googletest/test/gtest-linked_ptr_test.cc	/^  LinkedPtrTest() {$/;"	f	class:__anonf616d1f80111::LinkedPtrTest	file:
LinkedPtrTest	src/tests/googletest/googletest/test/gtest-linked_ptr_test.cc	/^class LinkedPtrTest : public testing::Test {$/;"	c	namespace:__anonf616d1f80111	file:
Linux Requirements	src/tests/googletest/README.md	/^### Linux Requirements ###$/;"	S	section:Google Test""Requirements
Linux Requirements	src/tests/googletest/googlemock/README.md	/^#### Linux Requirements ####$/;"	t	subsection:Getting Started""Requirements for End Users
Linux distro and version? x86 or ARM? 32-bit or 64-bit?	src/muduo/.github/issue_template.md	/^## Linux distro and version? x86 or ARM? 32-bit or 64-bit?$/;"	s
List	src/tests/googletest/googletest/test/gtest-port_test.cc	/^  static std::vector<DestructorCall*>& List() { return *list_; }$/;"	f	class:testing::internal::DestructorCall	typeref:typename:std::vector<DestructorCall * > &	file:
ListRpcRequest	src/muduo/muduo/net/protorpc/rpcservice.proto	/^message ListRpcRequest$/;"	m	package:muduo.net
ListRpcResponse	src/muduo/muduo/net/protorpc/rpcservice.proto	/^message ListRpcResponse$/;"	m	package:muduo.net
ListTests	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static Flags ListTests(bool list_tests) {$/;"	f	struct:testing::Flags	typeref:typename:Flags	file:
ListTestsMatchingFilter	src/tests/googletest/googletest/src/gtest.cc	/^void UnitTestImpl::ListTestsMatchingFilter() {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:void
ListType	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef ::std::pair<Head, typename MatcherListTail::ListType> ListType;$/;"	t	struct:testing::internal::MatcherList	typeref:typename:::std::pair<Head,typename MatcherListTail::ListType>
ListType	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef ::std::pair<Matcher1, Matcher2> ListType;$/;"	t	struct:testing::internal::MatcherList	typeref:typename:::std::pair<Matcher1,Matcher2>
ListenerTest	src/tests/googletest/googletest/test/gtest-listener_test.cc	/^class ListenerTest : public Test {$/;"	c	namespace:testing::internal	file:
Listing Test Names	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^### Listing Test Names ###$/;"	S	section:Running Test Programs: Advanced Options""Selecting Tests
Listing Test Names	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^### Listing Test Names ###$/;"	S	section:Running Test Programs: Advanced Options""Selecting Tests
Listing Test Names	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^### Listing Test Names ###$/;"	S	section:Running Test Programs: Advanced Options""Selecting Tests
Listing Test Names	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^### Listing Test Names ###$/;"	S	section:Running Test Programs: Advanced Options""Selecting Tests
LiteralDollarNode	src/tests/googletest/googletest/scripts/pump.py	/^class LiteralDollarNode:$/;"	c
LoadFlagsFromFile	src/tests/googletest/googletest/src/gtest.cc	/^void LoadFlagsFromFile(const std::string& path) {$/;"	f	namespace:testing::internal	typeref:typename:void
LocalConnections	src/muduo/examples/asio/chat/server_threaded_highperformance.cc	/^  typedef ThreadLocalSingleton<ConnectionList> LocalConnections;$/;"	t	class:ChatServer	typeref:typename:ThreadLocalSingleton<ConnectionList>	file:
LocalTime	src/muduo/muduo/base/TimeZone.cc	/^    LocalTime(int32_t offset, bool dst, int idx)$/;"	f	struct:TimeZone::Data::LocalTime	file:
LocalTime	src/muduo/muduo/base/TimeZone.cc	/^  struct LocalTime$/;"	s	struct:TimeZone::Data	file:
LocalToUtcTestCase	src/muduo/muduo/base/tests/TimeZone_unittest.cc	/^struct LocalToUtcTestCase$/;"	s	file:
Lock	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  void Lock() {$/;"	f	class:testing::internal::MutexBase	typeref:typename:void
Lock	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  void Lock() {}$/;"	f	class:testing::internal::Mutex	typeref:typename:void
Lock	src/tests/googletest/googletest/src/gtest-port.cc	/^void Mutex::Lock() {$/;"	f	class:testing::internal::Mutex	typeref:typename:void
Log	src/tests/googletest/googlemock/src/gmock-internal-utils.cc	/^GTEST_API_ void Log(LogSeverity severity, const std::string& message,$/;"	f	namespace:testing::internal	typeref:typename:GTEST_API_ void
LogClient	src/muduo/examples/ace/logging/client.cc	/^  LogClient(EventLoop* loop, const InetAddress& serverAddr)$/;"	f	class:logging::LogClient	file:
LogClient	src/muduo/examples/ace/logging/client.cc	/^class LogClient : noncopyable$/;"	c	namespace:logging	file:
LogElementMatcherPairVec	src/tests/googletest/googlemock/src/gmock-matchers.cc	/^static void LogElementMatcherPairVec(const ElementMatcherPairs& pairs,$/;"	f	namespace:testing::internal	typeref:typename:void	file:
LogFile	src/muduo/muduo/base/LogFile.cc	/^LogFile::LogFile(const string& basename,$/;"	f	class:LogFile
LogFile	src/muduo/muduo/base/LogFile.h	/^class LogFile : noncopyable$/;"	c	namespace:muduo
LogIsVisible	src/tests/googletest/googlemock/src/gmock-internal-utils.cc	/^GTEST_API_ bool LogIsVisible(LogSeverity severity) {$/;"	f	namespace:testing::internal	typeref:typename:GTEST_API_ bool
LogIsVisibleTest	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^class LogIsVisibleTest : public ::testing::Test {$/;"	c	namespace:testing::internal::__anonf4b2defb0111	file:
LogLevel	src/muduo/muduo/base/Logging.h	/^  enum LogLevel$/;"	g	class:muduo::Logger
LogLevel	src/muduo/muduo/base/Logging.h	/^  typedef Logger::LogLevel LogLevel;$/;"	t	class:muduo::Logger::Impl	typeref:typename:Logger::LogLevel
LogLevelName	src/muduo/muduo/base/Logging.cc	/^const char* LogLevelName[Logger::NUM_LOG_LEVELS] =$/;"	v	namespace:muduo	typeref:typename:const char * []
LogRecord	src/muduo/examples/ace/logging/logrecord.proto	/^message LogRecord {$/;"	m	package:logging
LogServer	src/muduo/examples/ace/logging/server.cc	/^  LogServer(EventLoop* loop, const InetAddress& listenAddr, int numThreads)$/;"	f	class:logging::LogServer	file:
LogServer	src/muduo/examples/ace/logging/server.cc	/^class LogServer : noncopyable$/;"	c	namespace:logging	file:
LogSeverity	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^enum LogSeverity {$/;"	g	namespace:testing::internal
LogStream	src/muduo/muduo/base/LogStream.h	/^class LogStream : noncopyable$/;"	c	namespace:muduo
LogTestHelper	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^  LogTestHelper() {}$/;"	f	class:__anon6b6cf3b20111::LogTestHelper	file:
LogTestHelper	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^class LogTestHelper {$/;"	c	namespace:__anon6b6cf3b20111	file:
LogToStderr	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^inline void LogToStderr() {}$/;"	f	namespace:testing::internal	typeref:typename:void
LogWithLocation	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^GTEST_API_ void LogWithLocation(testing::internal::LogSeverity severity,$/;"	f	namespace:testing::internal	typeref:typename:GTEST_API_ void
Logger	src/muduo/muduo/base/Logging.cc	/^Logger::Logger(SourceFile file, int line)$/;"	f	class:Logger
Logger	src/muduo/muduo/base/Logging.cc	/^Logger::Logger(SourceFile file, int line, LogLevel level)$/;"	f	class:Logger
Logger	src/muduo/muduo/base/Logging.cc	/^Logger::Logger(SourceFile file, int line, LogLevel level, const char* func)$/;"	f	class:Logger
Logger	src/muduo/muduo/base/Logging.cc	/^Logger::Logger(SourceFile file, int line, bool toAbort)$/;"	f	class:Logger
Logger	src/muduo/muduo/base/Logging.h	/^class Logger$/;"	c	namespace:muduo
Logging Additional Information	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^# Logging Additional Information #$/;"	c
Logging Additional Information	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^# Logging Additional Information #$/;"	c
Logging Additional Information	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^# Logging Additional Information #$/;"	c
Logging Additional Information	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^# Logging Additional Information #$/;"	c
LosslessArithmeticConvertible	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^struct LosslessArithmeticConvertible$/;"	s	namespace:testing::internal
LosslessArithmeticConvertibleImpl	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^struct LosslessArithmeticConvertibleImpl : public false_type {};$/;"	s	namespace:testing::internal
LosslessArithmeticConvertibleImpl	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^struct LosslessArithmeticConvertibleImpl<$/;"	s	namespace:testing::internal
LosslessArithmeticConvertibleImpl	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^struct LosslessArithmeticConvertibleImpl<kBool, bool, kBool, bool>$/;"	s	namespace:testing::internal
LosslessArithmeticConvertibleImpl	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^struct LosslessArithmeticConvertibleImpl<kBool, bool, kFloatingPoint, To>$/;"	s	namespace:testing::internal
LosslessArithmeticConvertibleImpl	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^struct LosslessArithmeticConvertibleImpl<kBool, bool, kInteger, To>$/;"	s	namespace:testing::internal
LosslessArithmeticConvertibleImpl	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^struct LosslessArithmeticConvertibleImpl<kFloatingPoint, From, kBool, bool>$/;"	s	namespace:testing::internal
LosslessArithmeticConvertibleImpl	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^struct LosslessArithmeticConvertibleImpl<kFloatingPoint, From, kInteger, To>$/;"	s	namespace:testing::internal
LosslessArithmeticConvertibleImpl	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^struct LosslessArithmeticConvertibleImpl<kInteger, From, kBool, bool>$/;"	s	namespace:testing::internal
LosslessArithmeticConvertibleImpl	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^struct LosslessArithmeticConvertibleImpl<kInteger, From, kFloatingPoint, To>$/;"	s	namespace:testing::internal
LosslessArithmeticConvertibleImpl	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^struct LosslessArithmeticConvertibleImpl<kInteger, From, kInteger, To>$/;"	s	namespace:testing::internal
Lt	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline internal::Lt2Matcher Lt() { return internal::Lt2Matcher(); }$/;"	f	namespace:testing	typeref:typename:internal::Lt2Matcher
Lt	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline internal::LtMatcher<Rhs> Lt(Rhs x) {$/;"	f	namespace:testing	typeref:typename:internal::LtMatcher<Rhs>
Lt2Matcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class Lt2Matcher : public PairMatchBase<Lt2Matcher, AnyLt> {$/;"	c	namespace:testing::internal
LtMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit LtMatcher(const Rhs& rhs)$/;"	f	class:testing::internal::LtMatcher
LtMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class LtMatcher : public ComparisonBase<LtMatcher<Rhs>, Rhs, AnyLt> {$/;"	c	namespace:testing::internal
LweBOOTSTRAPPINGKEY_H	src/libtfhe-superaic-core/include/lwebootstrappingkey.h	/^#define LweBOOTSTRAPPINGKEY_H$/;"	d
LweBootstrappingKey	src/libtfhe-superaic-core/include/lwebootstrappingkey.h	/^struct LweBootstrappingKey{$/;"	s
LweBootstrappingKey	src/libtfhe-superaic-core/include/tfhe_superaic_torus.h	/^typedef struct LweBootstrappingKey LweBootstrappingKey;$/;"	t	typeref:struct:LweBootstrappingKey
LweBootstrappingKey	src/libtfhe-superaic-core/lwebootstrappingkey.cpp	/^LweBootstrappingKey::LweBootstrappingKey(const LweParams* in_out_params, $/;"	f	class:LweBootstrappingKey
LweBootstrappingKey Vs FakeLweBootstrappingKey	docs/code_note.md	/^### LweBootstrappingKey Vs FakeLweBootstrappingKey$/;"	S	section:Fake""bootstrap
LweBootstrappingKeyFFT	src/libtfhe-superaic-core/include/lwebootstrappingkey.h	/^struct LweBootstrappingKeyFFT {$/;"	s
LweBootstrappingKeyFFT	src/libtfhe-superaic-core/include/tfhe_superaic_torus.h	/^typedef struct LweBootstrappingKeyFFT LweBootstrappingKeyFFT;$/;"	t	typeref:struct:LweBootstrappingKeyFFT
LweBootstrappingKeyFFT	src/libtfhe-superaic-core/lwebootstrappingkey.cpp	/^LweBootstrappingKeyFFT::LweBootstrappingKeyFFT(const LweParams* in_out_params, $/;"	f	class:LweBootstrappingKeyFFT
LweBootstrappingKey_Wrap	src/libtfhe-superaic-core/include/tfhe_session.h	/^    LweBootstrappingKey_Wrap(std::istream &iss) {$/;"	f	class:tfhe_superaic::LweBootstrappingKey_Wrap
LweBootstrappingKey_Wrap	src/libtfhe-superaic-core/include/tfhe_session.h	/^class LweBootstrappingKey_Wrap{$/;"	c	namespace:tfhe_superaic
LweKEY_H	src/libtfhe-superaic-core/include/lwekey.h	/^#define LweKEY_H$/;"	d
LweKey	docs/code_note.md	/^## LweKey$/;"	s	chapter:LWE
LweKey	src/libtfhe-superaic-core/include/lwekey.h	/^struct LweKey {$/;"	s
LweKey	src/libtfhe-superaic-core/include/tfhe_superaic_torus.h	/^typedef struct LweKey              LweKey;$/;"	t	typeref:struct:LweKey
LweKey	src/libtfhe-superaic-core/lwekey.cpp	/^LweKey::LweKey(const LweParams* params) {$/;"	f	class:LweKey
LweKeySwitchKey	src/libtfhe-superaic-core/include/lwekeyswitch.h	/^struct LweKeySwitchKey {$/;"	s
LweKeySwitchKey	src/libtfhe-superaic-core/include/tfhe_superaic_torus.h	/^typedef struct LweKeySwitchKey     LweKeySwitchKey;$/;"	t	typeref:struct:LweKeySwitchKey
LweKeySwitchKey	src/libtfhe-superaic-core/lwekeyswitch.cpp	/^LweKeySwitchKey::LweKeySwitchKey(int32_t n, int32_t t, int32_t basebit, const LweParams* out_par/;"	f	class:LweKeySwitchKey
LweKeySwitchKey Vs FakeLweKeySwitchKey	docs/code_note.md	/^### LweKeySwitchKey Vs FakeLweKeySwitchKey$/;"	S	section:Fake""keyswitch
LweKeySwitchParameters	src/libtfhe-superaic-core/tfhe_io.cpp	/^struct LweKeySwitchParameters {$/;"	s	file:
LweKeySwitchTest	src/tests/lwekeyswitch_test.cpp	/^    class LweKeySwitchTest : public ::testing::Test {$/;"	c	namespace:__anon0e34bff10111	file:
LweParams	src/libtfhe-superaic-core/include/lweparams.h	/^struct LweParams {$/;"	s
LweParams	src/libtfhe-superaic-core/include/tfhe_superaic_torus.h	/^typedef struct LweParams           LweParams;$/;"	t	typeref:struct:LweParams
LweParams	src/libtfhe-superaic-core/lweparams.cpp	/^LweParams::LweParams(int32_t n, int32_t plaintext_modulus, double alpha_min, double alpha_max):$/;"	f	class:LweParams
LweSAMPLES_H	src/libtfhe-superaic-core/include/lwesamples.h	/^#define LweSAMPLES_H$/;"	d
LweSample	src/libtfhe-superaic-core/include/lwesamples.h	/^struct LweSample {$/;"	s
LweSample	src/libtfhe-superaic-core/include/tfhe_superaic_torus.h	/^typedef struct LweSample           LweSample;$/;"	t	typeref:struct:LweSample
LweSample	src/libtfhe-superaic-core/lwesamples.cpp	/^LweSample::LweSample(const LweParams* params)$/;"	f	class:LweSample
LweSample VS FakeLwe	docs/code_note.md	/^### LweSample VS FakeLwe$/;"	S	section:Fake""lwe
LweTest	src/tests/lwe_test.cpp	/^    class LweTest : public ::testing::Test {$/;"	c	namespace:__anonc84148b60111	file:
LweTest	src/tests/small_size_test.cpp	/^    class LweTest : public ::testing::Test {$/;"	c	namespace:__anon9baab4410111	file:
Lwe_FUNCTIONS_H	src/libtfhe-superaic-core/include/lwe-functions.h	/^#define Lwe_FUNCTIONS_H$/;"	d
M8_PARAM	src/tests/bootstrapping_classic_PBS_parameters_test.cpp	/^    const ClassicPBSParameters M8_PARAM = TEST_PARAM_MESSAGE_8_KS_PBS_GAUSSAIN;$/;"	v	namespace:__anon8153b4f20111	typeref:typename:const ClassicPBSParameters
M8_PARAM	src/tests/decrypt_with_plaintext_modulus.cpp	/^    const ClassicPBSParameters M8_PARAM = TEST_PARAM_MESSAGE_8_KS_PBS_GAUSSAIN;$/;"	v	namespace:__anondb55d4a50111	typeref:typename:const ClassicPBSParameters
M8_PARAM	src/tests/macros_decrypt_with_plaintext_modulus_macros.cpp	/^    const ClassicPBSParameters M8_PARAM = TEST_PARAM_MESSAGE_8_KS_PBS_GAUSSAIN;$/;"	v	namespace:__anon478224cd0111	typeref:typename:const ClassicPBSParameters
M8_PARAM	src/tests/macros_modSwitch_with_plaintext_modulus_macros.cpp	/^    const ClassicPBSParameters M8_PARAM = TEST_PARAM_MESSAGE_8_KS_PBS_GAUSSAIN;$/;"	v	namespace:__anon4cdaee640111	typeref:typename:const ClassicPBSParameters
M8_PARAM	src/tests/ops_add.cpp	/^    const ClassicPBSParameters M8_PARAM = TEST_PARAM_MESSAGE_8_KS_PBS_GAUSSAIN;$/;"	v	namespace:__anonb1f413890111	typeref:typename:const ClassicPBSParameters
M8_PARAM	src/tests/ops_add_with_carry.cpp	/^    const ClassicPBSParameters M8_PARAM = TEST_PARAM_MESSAGE_8_KS_PBS_GAUSSAIN;$/;"	v	namespace:__anon662e63c40111	typeref:typename:const ClassicPBSParameters
M8_PARAM	src/tests/zpf_for_bootstrap_detail.cpp	/^    const ClassicPBSParameters M8_PARAM = TEST_PARAM_MESSAGE_8_KS_PBS_GAUSSAIN;$/;"	v	namespace:__anonc07144f40111	typeref:typename:const ClassicPBSParameters
MAP_MASK	src/libtfhe-superaic-acc/accs/FPGA-V0/acc_fpga_v0.cpp	/^#define MAP_MASK /;"	d	file:
MAP_SIZE	src/libtfhe-superaic-acc/accs/FPGA-V0/acc_fpga_v0.cpp	/^#define MAP_SIZE /;"	d	file:
MATCHER	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^#define MATCHER(/;"	d
MATCHER_P	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^#define MATCHER_P(/;"	d
MATCHER_P10	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^#define MATCHER_P10(/;"	d
MATCHER_P2	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^#define MATCHER_P2(/;"	d
MATCHER_P3	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^#define MATCHER_P3(/;"	d
MATCHER_P4	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^#define MATCHER_P4(/;"	d
MATCHER_P5	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^#define MATCHER_P5(/;"	d
MATCHER_P6	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^#define MATCHER_P6(/;"	d
MATCHER_P7	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^#define MATCHER_P7(/;"	d
MATCHER_P8	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^#define MATCHER_P8(/;"	d
MATCHER_P9	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^#define MATCHER_P9(/;"	d
MAX_NOISE	src/tests/decrypt_with_plaintext_modulus.cpp	/^#define MAX_NOISE /;"	d	file:
MAX_NOISE	src/tests/macros_decrypt_with_plaintext_modulus_macros.cpp	/^#define MAX_NOISE /;"	d	file:
MAX_NOISE	src/tests/macros_modSwitch_with_plaintext_modulus_macros.cpp	/^#define MAX_NOISE /;"	d	file:
MAX_NOISE	src/tests/ops_add.cpp	/^#define MAX_NOISE /;"	d	file:
MAX_NOISE	src/tests/ops_add_with_carry.cpp	/^#define MAX_NOISE /;"	d	file:
MAX_NOISE	src/tests/zpf_for_bootstrap_detail.cpp	/^#define MAX_NOISE /;"	d	file:
MAX_UPLOAD_SIZE	src/tests/googletest/googlemock/scripts/upload.py	/^MAX_UPLOAD_SIZE = 900 * 1024$/;"	v
MAX_UPLOAD_SIZE	src/tests/googletest/googletest/scripts/upload.py	/^MAX_UPLOAD_SIZE = 900 * 1024$/;"	v
MCHECK	src/muduo/muduo/base/Mutex.h	/^#define MCHECK(/;"	d
MESSAGE_FUNCTIONS_H	src/libtfhe-superaic-core/include/message_functions.h	/^#define MESSAGE_FUNCTIONS_H$/;"	d
MINGW	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^  set(MINGW 1)$/;"	v
MINGW	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^  set(MINGW 1)$/;"	v
MOCK\\_METHODn()'s second argument looks funny.  Why don't you use the MOCK\\_METHODn(Method, return\\_type, arg\\_1, ..., arg\\_n) syntax?	src/tests/googletest/googlemock/docs/FrequentlyAskedQuestions.md	/^## MOCK\\_METHODn()'s second argument looks funny.  Why don't you use the MOCK\\_METHODn(Method,/;"	s
MOCK\\_METHODn()'s second argument looks funny.  Why don't you use the MOCK\\_METHODn(Method, return\\_type, arg\\_1, ..., arg\\_n) syntax?	src/tests/googletest/googlemock/docs/v1_5/FrequentlyAskedQuestions.md	/^## MOCK\\_METHODn()'s second argument looks funny.  Why don't you use the MOCK\\_METHODn(Method,/;"	s
MOCK\\_METHODn()'s second argument looks funny.  Why don't you use the MOCK\\_METHODn(Method, return\\_type, arg\\_1, ..., arg\\_n) syntax?	src/tests/googletest/googlemock/docs/v1_6/FrequentlyAskedQuestions.md	/^## MOCK\\_METHODn()'s second argument looks funny.  Why don't you use the MOCK\\_METHODn(Method,/;"	s
MOCK\\_METHODn()'s second argument looks funny.  Why don't you use the MOCK\\_METHODn(Method, return\\_type, arg\\_1, ..., arg\\_n) syntax?	src/tests/googletest/googlemock/docs/v1_7/FrequentlyAskedQuestions.md	/^## MOCK\\_METHODn()'s second argument looks funny.  Why don't you use the MOCK\\_METHODn(Method,/;"	s
MOCK_CONST_METHOD0	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD0(/;"	d
MOCK_CONST_METHOD0_T	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD0_T(/;"	d
MOCK_CONST_METHOD0_T_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD0_T_WITH_CALLTYPE(/;"	d
MOCK_CONST_METHOD0_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD0_WITH_CALLTYPE(/;"	d
MOCK_CONST_METHOD1	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD1(/;"	d
MOCK_CONST_METHOD10	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD10(/;"	d
MOCK_CONST_METHOD10_T	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD10_T(/;"	d
MOCK_CONST_METHOD10_T_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD10_T_WITH_CALLTYPE(/;"	d
MOCK_CONST_METHOD10_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD10_WITH_CALLTYPE(/;"	d
MOCK_CONST_METHOD1_T	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD1_T(/;"	d
MOCK_CONST_METHOD1_T_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD1_T_WITH_CALLTYPE(/;"	d
MOCK_CONST_METHOD1_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD1_WITH_CALLTYPE(/;"	d
MOCK_CONST_METHOD2	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD2(/;"	d
MOCK_CONST_METHOD2_T	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD2_T(/;"	d
MOCK_CONST_METHOD2_T_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD2_T_WITH_CALLTYPE(/;"	d
MOCK_CONST_METHOD2_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD2_WITH_CALLTYPE(/;"	d
MOCK_CONST_METHOD3	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD3(/;"	d
MOCK_CONST_METHOD3_T	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD3_T(/;"	d
MOCK_CONST_METHOD3_T_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD3_T_WITH_CALLTYPE(/;"	d
MOCK_CONST_METHOD3_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD3_WITH_CALLTYPE(/;"	d
MOCK_CONST_METHOD4	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD4(/;"	d
MOCK_CONST_METHOD4_T	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD4_T(/;"	d
MOCK_CONST_METHOD4_T_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD4_T_WITH_CALLTYPE(/;"	d
MOCK_CONST_METHOD4_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD4_WITH_CALLTYPE(/;"	d
MOCK_CONST_METHOD5	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD5(/;"	d
MOCK_CONST_METHOD5_T	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD5_T(/;"	d
MOCK_CONST_METHOD5_T_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD5_T_WITH_CALLTYPE(/;"	d
MOCK_CONST_METHOD5_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD5_WITH_CALLTYPE(/;"	d
MOCK_CONST_METHOD6	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD6(/;"	d
MOCK_CONST_METHOD6_T	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD6_T(/;"	d
MOCK_CONST_METHOD6_T_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD6_T_WITH_CALLTYPE(/;"	d
MOCK_CONST_METHOD6_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD6_WITH_CALLTYPE(/;"	d
MOCK_CONST_METHOD7	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD7(/;"	d
MOCK_CONST_METHOD7_T	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD7_T(/;"	d
MOCK_CONST_METHOD7_T_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD7_T_WITH_CALLTYPE(/;"	d
MOCK_CONST_METHOD7_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD7_WITH_CALLTYPE(/;"	d
MOCK_CONST_METHOD8	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD8(/;"	d
MOCK_CONST_METHOD8_T	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD8_T(/;"	d
MOCK_CONST_METHOD8_T_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD8_T_WITH_CALLTYPE(/;"	d
MOCK_CONST_METHOD8_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD8_WITH_CALLTYPE(/;"	d
MOCK_CONST_METHOD9	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD9(/;"	d
MOCK_CONST_METHOD9_T	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD9_T(/;"	d
MOCK_CONST_METHOD9_T_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD9_T_WITH_CALLTYPE(/;"	d
MOCK_CONST_METHOD9_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_CONST_METHOD9_WITH_CALLTYPE(/;"	d
MOCK_METHOD0	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD0(m, ...) GMOCK_METHOD0_/;"	d
MOCK_METHOD0_T	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD0_T(/;"	d
MOCK_METHOD0_T_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD0_T_WITH_CALLTYPE(/;"	d
MOCK_METHOD0_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD0_WITH_CALLTYPE(/;"	d
MOCK_METHOD1	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD1(m, ...) GMOCK_METHOD1_/;"	d
MOCK_METHOD10	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD10(m, ...) GMOCK_METHOD10_/;"	d
MOCK_METHOD10_T	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD10_T(/;"	d
MOCK_METHOD10_T_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD10_T_WITH_CALLTYPE(/;"	d
MOCK_METHOD10_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD10_WITH_CALLTYPE(/;"	d
MOCK_METHOD1_T	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD1_T(/;"	d
MOCK_METHOD1_T_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD1_T_WITH_CALLTYPE(/;"	d
MOCK_METHOD1_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD1_WITH_CALLTYPE(/;"	d
MOCK_METHOD2	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD2(m, ...) GMOCK_METHOD2_/;"	d
MOCK_METHOD2_T	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD2_T(/;"	d
MOCK_METHOD2_T_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD2_T_WITH_CALLTYPE(/;"	d
MOCK_METHOD2_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD2_WITH_CALLTYPE(/;"	d
MOCK_METHOD3	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD3(m, ...) GMOCK_METHOD3_/;"	d
MOCK_METHOD3_T	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD3_T(/;"	d
MOCK_METHOD3_T_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD3_T_WITH_CALLTYPE(/;"	d
MOCK_METHOD3_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD3_WITH_CALLTYPE(/;"	d
MOCK_METHOD4	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD4(m, ...) GMOCK_METHOD4_/;"	d
MOCK_METHOD4_T	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD4_T(/;"	d
MOCK_METHOD4_T_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD4_T_WITH_CALLTYPE(/;"	d
MOCK_METHOD4_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD4_WITH_CALLTYPE(/;"	d
MOCK_METHOD5	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD5(m, ...) GMOCK_METHOD5_/;"	d
MOCK_METHOD5_T	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD5_T(/;"	d
MOCK_METHOD5_T_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD5_T_WITH_CALLTYPE(/;"	d
MOCK_METHOD5_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD5_WITH_CALLTYPE(/;"	d
MOCK_METHOD6	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD6(m, ...) GMOCK_METHOD6_/;"	d
MOCK_METHOD6_T	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD6_T(/;"	d
MOCK_METHOD6_T_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD6_T_WITH_CALLTYPE(/;"	d
MOCK_METHOD6_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD6_WITH_CALLTYPE(/;"	d
MOCK_METHOD7	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD7(m, ...) GMOCK_METHOD7_/;"	d
MOCK_METHOD7_T	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD7_T(/;"	d
MOCK_METHOD7_T_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD7_T_WITH_CALLTYPE(/;"	d
MOCK_METHOD7_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD7_WITH_CALLTYPE(/;"	d
MOCK_METHOD8	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD8(m, ...) GMOCK_METHOD8_/;"	d
MOCK_METHOD8_T	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD8_T(/;"	d
MOCK_METHOD8_T_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD8_T_WITH_CALLTYPE(/;"	d
MOCK_METHOD8_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD8_WITH_CALLTYPE(/;"	d
MOCK_METHOD9	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD9(m, ...) GMOCK_METHOD9_/;"	d
MOCK_METHOD9_T	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD9_T(/;"	d
MOCK_METHOD9_T_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD9_T_WITH_CALLTYPE(/;"	d
MOCK_METHOD9_WITH_CALLTYPE	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^#define MOCK_METHOD9_WITH_CALLTYPE(/;"	d
MSVC gives me warning C4301 or C4373 when I define a mock method with a const parameter.  Why?	src/tests/googletest/googlemock/docs/FrequentlyAskedQuestions.md	/^## MSVC gives me warning C4301 or C4373 when I define a mock method with a const parameter.  Why/;"	s
MSVC gives me warning C4301 or C4373 when I define a mock method with a const parameter.  Why?	src/tests/googletest/googlemock/docs/v1_5/FrequentlyAskedQuestions.md	/^## MSVC gives me warning C4301 or C4373 when I define a mock method with a const parameter.  Why/;"	s
MSVC gives me warning C4301 or C4373 when I define a mock method with a const parameter.  Why?	src/tests/googletest/googlemock/docs/v1_6/FrequentlyAskedQuestions.md	/^## MSVC gives me warning C4301 or C4373 when I define a mock method with a const parameter.  Why/;"	s
MSVC gives me warning C4301 or C4373 when I define a mock method with a const parameter.  Why?	src/tests/googletest/googlemock/docs/v1_7/FrequentlyAskedQuestions.md	/^## MSVC gives me warning C4301 or C4373 when I define a mock method with a const parameter.  Why/;"	s
MUDUO_BASE_ASYNCLOGGING_H	src/muduo/muduo/base/AsyncLogging.h	/^#define MUDUO_BASE_ASYNCLOGGING_H$/;"	d
MUDUO_BASE_ATOMIC_H	src/muduo/muduo/base/Atomic.h	/^#define MUDUO_BASE_ATOMIC_H$/;"	d
MUDUO_BASE_BLOCKINGQUEUE_H	src/muduo/muduo/base/BlockingQueue.h	/^#define MUDUO_BASE_BLOCKINGQUEUE_H$/;"	d
MUDUO_BASE_BOUNDEDBLOCKINGQUEUE_H	src/muduo/muduo/base/BoundedBlockingQueue.h	/^#define MUDUO_BASE_BOUNDEDBLOCKINGQUEUE_H$/;"	d
MUDUO_BASE_CONDITION_H	src/muduo/muduo/base/Condition.h	/^#define MUDUO_BASE_CONDITION_H$/;"	d
MUDUO_BASE_COPYABLE_H	src/muduo/muduo/base/copyable.h	/^#define MUDUO_BASE_COPYABLE_H$/;"	d
MUDUO_BASE_COUNTDOWNLATCH_H	src/muduo/muduo/base/CountDownLatch.h	/^#define MUDUO_BASE_COUNTDOWNLATCH_H$/;"	d
MUDUO_BASE_CURRENTTHREAD_H	src/muduo/muduo/base/CurrentThread.h	/^#define MUDUO_BASE_CURRENTTHREAD_H$/;"	d
MUDUO_BASE_DATE_H	src/muduo/muduo/base/Date.h	/^#define MUDUO_BASE_DATE_H$/;"	d
MUDUO_BASE_EXCEPTION_H	src/muduo/muduo/base/Exception.h	/^#define MUDUO_BASE_EXCEPTION_H$/;"	d
MUDUO_BASE_FILEUTIL_H	src/muduo/muduo/base/FileUtil.h	/^#define MUDUO_BASE_FILEUTIL_H$/;"	d
MUDUO_BASE_LOGFILE_H	src/muduo/muduo/base/LogFile.h	/^#define MUDUO_BASE_LOGFILE_H$/;"	d
MUDUO_BASE_LOGGING_H	src/muduo/muduo/base/Logging.h	/^#define MUDUO_BASE_LOGGING_H$/;"	d
MUDUO_BASE_LOGSTREAM_H	src/muduo/muduo/base/LogStream.h	/^#define MUDUO_BASE_LOGSTREAM_H$/;"	d
MUDUO_BASE_MUTEX_H	src/muduo/muduo/base/Mutex.h	/^#define MUDUO_BASE_MUTEX_H$/;"	d
MUDUO_BASE_NONCOPYABLE_H	src/muduo/muduo/base/noncopyable.h	/^#define MUDUO_BASE_NONCOPYABLE_H$/;"	d
MUDUO_BASE_PROCESSINFO_H	src/muduo/muduo/base/ProcessInfo.h	/^#define MUDUO_BASE_PROCESSINFO_H$/;"	d
MUDUO_BASE_SINGLETON_H	src/muduo/muduo/base/Singleton.h	/^#define MUDUO_BASE_SINGLETON_H$/;"	d
MUDUO_BASE_STRINGPIECE_H	src/muduo/muduo/base/StringPiece.h	/^#define MUDUO_BASE_STRINGPIECE_H$/;"	d
MUDUO_BASE_THREADLOCALSINGLETON_H	src/muduo/muduo/base/ThreadLocalSingleton.h	/^#define MUDUO_BASE_THREADLOCALSINGLETON_H$/;"	d
MUDUO_BASE_THREADLOCAL_H	src/muduo/muduo/base/ThreadLocal.h	/^#define MUDUO_BASE_THREADLOCAL_H$/;"	d
MUDUO_BASE_THREADPOOL_H	src/muduo/muduo/base/ThreadPool.h	/^#define MUDUO_BASE_THREADPOOL_H$/;"	d
MUDUO_BASE_THREAD_H	src/muduo/muduo/base/Thread.h	/^#define MUDUO_BASE_THREAD_H$/;"	d
MUDUO_BASE_TIMESTAMP_H	src/muduo/muduo/base/Timestamp.h	/^#define MUDUO_BASE_TIMESTAMP_H$/;"	d
MUDUO_BASE_TIMEZONE_H	src/muduo/muduo/base/TimeZone.h	/^#define MUDUO_BASE_TIMEZONE_H$/;"	d
MUDUO_BASE_TYPES_H	src/muduo/muduo/base/Types.h	/^#define MUDUO_BASE_TYPES_H$/;"	d
MUDUO_BASE_WEAKCALLBACK_H	src/muduo/muduo/base/WeakCallback.h	/^#define MUDUO_BASE_WEAKCALLBACK_H$/;"	d
MUDUO_BUILD_EXAMPLES	src/muduo/CMakeLists.txt	/^  option(MUDUO_BUILD_EXAMPLES "Build Muduo examples" ON)$/;"	D
MUDUO_CONTRIB_HIREDIS_HIREDIS_H	src/muduo/contrib/hiredis/Hiredis.h	/^#define MUDUO_CONTRIB_HIREDIS_HIREDIS_H$/;"	d
MUDUO_CONTRIB_THRIFT_THRIFTCONNECTION_H	src/muduo/contrib/thrift/ThriftConnection.h	/^#define MUDUO_CONTRIB_THRIFT_THRIFTCONNECTION_H$/;"	d
MUDUO_CONTRIB_THRIFT_THRIFTSERVER_H	src/muduo/contrib/thrift/ThriftServer.h	/^#define MUDUO_CONTRIB_THRIFT_THRIFTSERVER_H$/;"	d
MUDUO_EXAMPLES_ASIO_CHAT_CODEC_H	src/muduo/examples/asio/chat/codec.h	/^#define MUDUO_EXAMPLES_ASIO_CHAT_CODEC_H$/;"	d
MUDUO_EXAMPLES_CDNS_RESOLVER_H	src/muduo/examples/cdns/Resolver.h	/^#define MUDUO_EXAMPLES_CDNS_RESOLVER_H$/;"	d
MUDUO_EXAMPLES_CURL_CURL_H	src/muduo/examples/curl/Curl.h	/^#define MUDUO_EXAMPLES_CURL_CURL_H$/;"	d
MUDUO_EXAMPLES_FASTCGI_FASTCGI_H	src/muduo/examples/fastcgi/fastcgi.h	/^#define MUDUO_EXAMPLES_FASTCGI_FASTCGI_H$/;"	d
MUDUO_EXAMPLES_HUB_CODEC_H	src/muduo/examples/hub/codec.h	/^#define MUDUO_EXAMPLES_HUB_CODEC_H$/;"	d
MUDUO_EXAMPLES_HUB_PUBSUB_H	src/muduo/examples/hub/pubsub.h	/^#define MUDUO_EXAMPLES_HUB_PUBSUB_H$/;"	d
MUDUO_EXAMPLES_IDLECONNECTION_ECHO_H	src/muduo/examples/idleconnection/echo.h	/^#define MUDUO_EXAMPLES_IDLECONNECTION_ECHO_H$/;"	d
MUDUO_EXAMPLES_MAXCONNECTION_ECHO_H	src/muduo/examples/maxconnection/echo.h	/^#define MUDUO_EXAMPLES_MAXCONNECTION_ECHO_H$/;"	d
MUDUO_EXAMPLES_MEMCACHED_SERVER_ITEM_H	src/muduo/examples/memcached/server/Item.h	/^#define MUDUO_EXAMPLES_MEMCACHED_SERVER_ITEM_H$/;"	d
MUDUO_EXAMPLES_MEMCACHED_SERVER_MEMCACHESERVER_H	src/muduo/examples/memcached/server/MemcacheServer.h	/^#define MUDUO_EXAMPLES_MEMCACHED_SERVER_MEMCACHESERVER_H$/;"	d
MUDUO_EXAMPLES_MEMCACHED_SERVER_SESSION_H	src/muduo/examples/memcached/server/Session.h	/^#define MUDUO_EXAMPLES_MEMCACHED_SERVER_SESSION_H$/;"	d
MUDUO_EXAMPLES_PROTOBUF_CODEC_CODEC_H	src/muduo/examples/protobuf/codec/codec.h	/^#define MUDUO_EXAMPLES_PROTOBUF_CODEC_CODEC_H$/;"	d
MUDUO_EXAMPLES_PROTOBUF_CODEC_DISPATCHER_H	src/muduo/examples/protobuf/codec/dispatcher.h	/^#define MUDUO_EXAMPLES_PROTOBUF_CODEC_DISPATCHER_H$/;"	d
MUDUO_EXAMPLES_PROTOBUF_CODEC_DISPATCHER_LITE_H	src/muduo/examples/protobuf/codec/dispatcher_lite.h	/^#define MUDUO_EXAMPLES_PROTOBUF_CODEC_DISPATCHER_LITE_H$/;"	d
MUDUO_EXAMPLES_SIMPLE_CHARGEN_CHARGEN_H	src/muduo/examples/simple/chargen/chargen.h	/^#define MUDUO_EXAMPLES_SIMPLE_CHARGEN_CHARGEN_H$/;"	d
MUDUO_EXAMPLES_SIMPLE_DAYTIME_DAYTIME_H	src/muduo/examples/simple/daytime/daytime.h	/^#define MUDUO_EXAMPLES_SIMPLE_DAYTIME_DAYTIME_H$/;"	d
MUDUO_EXAMPLES_SIMPLE_DISCARD_DISCARD_H	src/muduo/examples/simple/discard/discard.h	/^#define MUDUO_EXAMPLES_SIMPLE_DISCARD_DISCARD_H$/;"	d
MUDUO_EXAMPLES_SIMPLE_ECHO_ECHO_H	src/muduo/examples/simple/echo/echo.h	/^#define MUDUO_EXAMPLES_SIMPLE_ECHO_ECHO_H$/;"	d
MUDUO_EXAMPLES_SIMPLE_TIME_TIME_H	src/muduo/examples/simple/time/time.h	/^#define MUDUO_EXAMPLES_SIMPLE_TIME_TIME_H$/;"	d
MUDUO_EXAMPLES_SOCKS4A_TUNNEL_H	src/muduo/examples/socks4a/tunnel.h	/^#define MUDUO_EXAMPLES_SOCKS4A_TUNNEL_H$/;"	d
MUDUO_EXAMPLES_SUDOKU_SUDOKU_H	src/muduo/examples/sudoku/sudoku.h	/^#define MUDUO_EXAMPLES_SUDOKU_SUDOKU_H$/;"	d
MUDUO_EXAMPLES_WORDCOUNT_HASH_H	src/muduo/examples/wordcount/hash.h	/^#define MUDUO_EXAMPLES_WORDCOUNT_HASH_H$/;"	d
MUDUO_NET_ACCEPTOR_H	src/muduo/muduo/net/Acceptor.h	/^#define MUDUO_NET_ACCEPTOR_H$/;"	d
MUDUO_NET_BOILERPLATE_H	src/muduo/muduo/net/boilerplate.h	/^#define MUDUO_NET_BOILERPLATE_H$/;"	d
MUDUO_NET_BUFFER_H	src/muduo/muduo/net/Buffer.h	/^#define MUDUO_NET_BUFFER_H$/;"	d
MUDUO_NET_CALLBACKS_H	src/muduo/muduo/net/Callbacks.h	/^#define MUDUO_NET_CALLBACKS_H$/;"	d
MUDUO_NET_CHANNEL_H	src/muduo/muduo/net/Channel.h	/^#define MUDUO_NET_CHANNEL_H$/;"	d
MUDUO_NET_CONNECTOR_H	src/muduo/muduo/net/Connector.h	/^#define MUDUO_NET_CONNECTOR_H$/;"	d
MUDUO_NET_ENDIAN_H	src/muduo/muduo/net/Endian.h	/^#define MUDUO_NET_ENDIAN_H$/;"	d
MUDUO_NET_EVENTLOOPTHREADPOOL_H	src/muduo/muduo/net/EventLoopThreadPool.h	/^#define MUDUO_NET_EVENTLOOPTHREADPOOL_H$/;"	d
MUDUO_NET_EVENTLOOPTHREAD_H	src/muduo/muduo/net/EventLoopThread.h	/^#define MUDUO_NET_EVENTLOOPTHREAD_H$/;"	d
MUDUO_NET_EVENTLOOP_H	src/muduo/muduo/net/EventLoop.h	/^#define MUDUO_NET_EVENTLOOP_H$/;"	d
MUDUO_NET_HTTP_HTTPCONTEXT_H	src/muduo/muduo/net/http/HttpContext.h	/^#define MUDUO_NET_HTTP_HTTPCONTEXT_H$/;"	d
MUDUO_NET_HTTP_HTTPREQUEST_H	src/muduo/muduo/net/http/HttpRequest.h	/^#define MUDUO_NET_HTTP_HTTPREQUEST_H$/;"	d
MUDUO_NET_HTTP_HTTPRESPONSE_H	src/muduo/muduo/net/http/HttpResponse.h	/^#define MUDUO_NET_HTTP_HTTPRESPONSE_H$/;"	d
MUDUO_NET_HTTP_HTTPSERVER_H	src/muduo/muduo/net/http/HttpServer.h	/^#define MUDUO_NET_HTTP_HTTPSERVER_H$/;"	d
MUDUO_NET_INETADDRESS_H	src/muduo/muduo/net/InetAddress.h	/^#define MUDUO_NET_INETADDRESS_H$/;"	d
MUDUO_NET_INSPECT_INSPECTOR_H	src/muduo/muduo/net/inspect/Inspector.h	/^#define MUDUO_NET_INSPECT_INSPECTOR_H$/;"	d
MUDUO_NET_INSPECT_PERFORMANCEINSPECTOR_H	src/muduo/muduo/net/inspect/PerformanceInspector.h	/^#define MUDUO_NET_INSPECT_PERFORMANCEINSPECTOR_H$/;"	d
MUDUO_NET_INSPECT_PROCESSINSPECTOR_H	src/muduo/muduo/net/inspect/ProcessInspector.h	/^#define MUDUO_NET_INSPECT_PROCESSINSPECTOR_H$/;"	d
MUDUO_NET_INSPECT_SYSTEMINSPECTOR_H	src/muduo/muduo/net/inspect/SystemInspector.h	/^#define MUDUO_NET_INSPECT_SYSTEMINSPECTOR_H$/;"	d
MUDUO_NET_POLLER_EPOLLPOLLER_H	src/muduo/muduo/net/poller/EPollPoller.h	/^#define MUDUO_NET_POLLER_EPOLLPOLLER_H$/;"	d
MUDUO_NET_POLLER_H	src/muduo/muduo/net/Poller.h	/^#define MUDUO_NET_POLLER_H$/;"	d
MUDUO_NET_POLLER_POLLPOLLER_H	src/muduo/muduo/net/poller/PollPoller.h	/^#define MUDUO_NET_POLLER_POLLPOLLER_H$/;"	d
MUDUO_NET_PROTOBUF_PROTOBUFCODECLITE_H	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^#define MUDUO_NET_PROTOBUF_PROTOBUFCODECLITE_H$/;"	d
MUDUO_NET_PROTORPC_RPCCHANNEL_H	src/muduo/muduo/net/protorpc/RpcChannel.h	/^#define MUDUO_NET_PROTORPC_RPCCHANNEL_H$/;"	d
MUDUO_NET_PROTORPC_RPCCODEC_H	src/muduo/muduo/net/protorpc/RpcCodec.h	/^#define MUDUO_NET_PROTORPC_RPCCODEC_H$/;"	d
MUDUO_NET_PROTORPC_RPCSERVER_H	src/muduo/muduo/net/protorpc/RpcServer.h	/^#define MUDUO_NET_PROTORPC_RPCSERVER_H$/;"	d
MUDUO_NET_SOCKETSOPS_H	src/muduo/muduo/net/SocketsOps.h	/^#define MUDUO_NET_SOCKETSOPS_H$/;"	d
MUDUO_NET_SOCKET_H	src/muduo/muduo/net/Socket.h	/^#define MUDUO_NET_SOCKET_H$/;"	d
MUDUO_NET_TCPCLIENT_H	src/muduo/muduo/net/TcpClient.h	/^#define MUDUO_NET_TCPCLIENT_H$/;"	d
MUDUO_NET_TCPCONNECTION_H	src/muduo/muduo/net/TcpConnection.h	/^#define MUDUO_NET_TCPCONNECTION_H$/;"	d
MUDUO_NET_TCPSERVER_H	src/muduo/muduo/net/TcpServer.h	/^#define MUDUO_NET_TCPSERVER_H$/;"	d
MUDUO_NET_TIMERID_H	src/muduo/muduo/net/TimerId.h	/^#define MUDUO_NET_TIMERID_H$/;"	d
MUDUO_NET_TIMERQUEUE_H	src/muduo/muduo/net/TimerQueue.h	/^#define MUDUO_NET_TIMERQUEUE_H$/;"	d
MUDUO_NET_TIMER_H	src/muduo/muduo/net/Timer.h	/^#define MUDUO_NET_TIMER_H$/;"	d
MUDUO_THRIFT_SRCS	src/muduo/contrib/thrift/CMakeLists.txt	/^set(MUDUO_THRIFT_SRCS$/;"	v
MUL_TYPE	src/CMakeLists.txt	/^    set(MUL_TYPE "NAIVE")$/;"	v
MY_MOCK_METHODS1_	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^#define MY_MOCK_METHODS1_ /;"	d	file:
MY_MOCK_METHODS2_	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^#define MY_MOCK_METHODS2_ /;"	d	file:
M_PI	src/libtfhe-superaic-core/fft_processors/nayuki/fft-x8664-avx-aux.c	/^    #define M_PI /;"	d	file:
Mac OS X Requirements	src/tests/googletest/README.md	/^### Mac OS X Requirements ###$/;"	S	section:Google Test""Requirements
Mac OS X Requirements	src/tests/googletest/googlemock/README.md	/^#### Mac OS X Requirements ####$/;"	t	subsection:Getting Started""Requirements for End Users
MacroLogicDeathTest	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^class MacroLogicDeathTest : public testing::Test {$/;"	c	file:
Macros for Defining Actions	src/tests/googletest/googlemock/docs/DesignDoc.md	/^# Macros for Defining Actions #$/;"	c
Macros for Defining Matchers	src/tests/googletest/googlemock/docs/DesignDoc.md	/^# Macros for Defining Matchers #$/;"	c
Main	src/tests/googletest/googlemock/test/gmock_test_utils.py	/^def Main():$/;"	f
Main	src/tests/googletest/googletest/test/gtest_test_utils.py	/^def Main():$/;"	f
Make a Test Target	src/tests/googletest/googletest/docs/V1_5_XcodeGuide.md	/^# Make a Test Target #$/;"	c
Make a Test Target	src/tests/googletest/googletest/docs/V1_6_XcodeGuide.md	/^# Make a Test Target #$/;"	c
Make a Test Target	src/tests/googletest/googletest/docs/V1_7_XcodeGuide.md	/^# Make a Test Target #$/;"	c
Make a Test Target	src/tests/googletest/googletest/docs/XcodeGuide.md	/^# Make a Test Target #$/;"	c
MakeAction	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^Action<F> MakeAction(ActionInterface<F>* impl) {$/;"	f	namespace:testing	typeref:typename:Action<F>
MakeAndRegisterTestInfo	src/tests/googletest/googletest/src/gtest.cc	/^TestInfo* MakeAndRegisterTestInfo($/;"	f	namespace:testing::internal	typeref:typename:TestInfo *
MakeCardinality	src/tests/googletest/googlemock/include/gmock/gmock-cardinalities.h	/^inline Cardinality MakeCardinality(const CardinalityInterface* c) {$/;"	f	namespace:testing	typeref:typename:Cardinality
MakeConnection	src/tests/googletest/googletest/src/gtest.cc	/^void StreamingListener::SocketWriter::MakeConnection() {$/;"	f	class:testing::internal::StreamingListener::SocketWriter	typeref:typename:void
MakeFileName	src/tests/googletest/googletest/src/gtest-filepath.cc	/^FilePath FilePath::MakeFileName(const FilePath& directory,$/;"	f	class:testing::internal::FilePath	typeref:typename:FilePath
MakeMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline Matcher<T> MakeMatcher(const MatcherInterface<T>* impl) {$/;"	f	namespace:testing	typeref:typename:Matcher<T>
MakeNewHolder	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^    virtual ValueHolder* MakeNewHolder() const { return new ValueHolder(); }$/;"	f	class:testing::internal::ThreadLocal::DefaultValueHolderFactory	typeref:typename:ValueHolder *
MakeNewHolder	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^    virtual ValueHolder* MakeNewHolder() const {$/;"	f	class:testing::internal::ThreadLocal::InstanceValueHolderFactory	typeref:typename:ValueHolder *
MakePolymorphicAction	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^inline PolymorphicAction<Impl> MakePolymorphicAction(const Impl& impl) {$/;"	f	namespace:testing	typeref:typename:PolymorphicAction<Impl>
MakePolymorphicMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline PolymorphicMatcher<Impl> MakePolymorphicMatcher(const Impl& impl) {$/;"	f	namespace:testing	typeref:typename:PolymorphicMatcher<Impl>
MakePredicateFormatterFromMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^MakePredicateFormatterFromMatcher(M matcher) {$/;"	f	namespace:testing::internal	typeref:typename:PredicateFormatterFromMatcher<M>
MakeResultIgnoredValue	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef IgnoredValue MakeResultIgnoredValue();$/;"	t	struct:testing::internal::Function	typeref:typename:IgnoredValue ()()
MakeResultIgnoredValue	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef IgnoredValue MakeResultIgnoredValue(A1);$/;"	t	struct:testing::internal::Function	typeref:typename:IgnoredValue ()(A1)
MakeResultIgnoredValue	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef IgnoredValue MakeResultIgnoredValue(A1, A2);$/;"	t	struct:testing::internal::Function	typeref:typename:IgnoredValue ()(A1,A2)
MakeResultIgnoredValue	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef IgnoredValue MakeResultIgnoredValue(A1, A2, A3);$/;"	t	struct:testing::internal::Function	typeref:typename:IgnoredValue ()(A1,A2,A3)
MakeResultIgnoredValue	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef IgnoredValue MakeResultIgnoredValue(A1, A2, A3, A4);$/;"	t	struct:testing::internal::Function	typeref:typename:IgnoredValue ()(A1,A2,A3,A4)
MakeResultIgnoredValue	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef IgnoredValue MakeResultIgnoredValue(A1, A2, A3, A4, A5);$/;"	t	struct:testing::internal::Function	typeref:typename:IgnoredValue ()(A1,A2,A3,A4,A5)
MakeResultIgnoredValue	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef IgnoredValue MakeResultIgnoredValue(A1, A2, A3, A4, A5, A6);$/;"	t	struct:testing::internal::Function	typeref:typename:IgnoredValue ()(A1,A2,A3,A4,A5,A6)
MakeResultIgnoredValue	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef IgnoredValue MakeResultIgnoredValue(A1, A2, A3, A4, A5, A6, A7);$/;"	t	struct:testing::internal::Function	typeref:typename:IgnoredValue ()(A1,A2,A3,A4,A5,A6,A7)
MakeResultIgnoredValue	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef IgnoredValue MakeResultIgnoredValue(A1, A2, A3, A4, A5, A6, A7, A8);$/;"	t	struct:testing::internal::Function	typeref:typename:IgnoredValue ()(A1,A2,A3,A4,A5,A6,A7,A8)
MakeResultIgnoredValue	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef IgnoredValue MakeResultIgnoredValue(A1, A2, A3, A4, A5, A6, A7, A8,$/;"	t	struct:testing::internal::Function	typeref:typename:IgnoredValue ()(A1,A2,A3,A4,A5,A6,A7,A8,A9)
MakeResultIgnoredValue	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef IgnoredValue MakeResultIgnoredValue(A1, A2, A3, A4, A5, A6, A7, A8,$/;"	t	struct:testing::internal::Function	typeref:typename:IgnoredValue ()(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)
MakeResultVoid	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef void MakeResultVoid();$/;"	t	struct:testing::internal::Function	typeref:typename:void ()()
MakeResultVoid	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef void MakeResultVoid(A1);$/;"	t	struct:testing::internal::Function	typeref:typename:void ()(A1)
MakeResultVoid	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef void MakeResultVoid(A1, A2);$/;"	t	struct:testing::internal::Function	typeref:typename:void ()(A1,A2)
MakeResultVoid	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef void MakeResultVoid(A1, A2, A3);$/;"	t	struct:testing::internal::Function	typeref:typename:void ()(A1,A2,A3)
MakeResultVoid	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef void MakeResultVoid(A1, A2, A3, A4);$/;"	t	struct:testing::internal::Function	typeref:typename:void ()(A1,A2,A3,A4)
MakeResultVoid	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef void MakeResultVoid(A1, A2, A3, A4, A5);$/;"	t	struct:testing::internal::Function	typeref:typename:void ()(A1,A2,A3,A4,A5)
MakeResultVoid	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef void MakeResultVoid(A1, A2, A3, A4, A5, A6);$/;"	t	struct:testing::internal::Function	typeref:typename:void ()(A1,A2,A3,A4,A5,A6)
MakeResultVoid	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef void MakeResultVoid(A1, A2, A3, A4, A5, A6, A7);$/;"	t	struct:testing::internal::Function	typeref:typename:void ()(A1,A2,A3,A4,A5,A6,A7)
MakeResultVoid	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef void MakeResultVoid(A1, A2, A3, A4, A5, A6, A7, A8);$/;"	t	struct:testing::internal::Function	typeref:typename:void ()(A1,A2,A3,A4,A5,A6,A7,A8)
MakeResultVoid	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef void MakeResultVoid(A1, A2, A3, A4, A5, A6, A7, A8, A9);$/;"	t	struct:testing::internal::Function	typeref:typename:void ()(A1,A2,A3,A4,A5,A6,A7,A8,A9)
MakeResultVoid	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef void MakeResultVoid(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10);$/;"	t	struct:testing::internal::Function	typeref:typename:void ()(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)
MakeToken	src/tests/googletest/googletest/scripts/pump.py	/^def MakeToken(lines, start, end, token_type):$/;"	f
Making the Compilation Faster	src/tests/googletest/googlemock/docs/CookBook.md	/^## Making the Compilation Faster ##$/;"	s	chapter:Misc Recipes on Using Google Mock
Making the Compilation Faster	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Making the Compilation Faster ##$/;"	s	chapter:Misc Recipes on Using Google Mock
Making the Compilation Faster	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Making the Compilation Faster ##$/;"	s	chapter:Misc Recipes on Using Google Mock
ManyAsserts	src/tests/googletest/googletest/test/gtest_stress_test.cc	/^void ManyAsserts(int id) {$/;"	f	namespace:testing::__anon9be581a20111	typeref:typename:void
ManyDerivedInHierarchy	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  class ManyDerivedInHierarchy : public DerivedSub1, public DerivedSub2 {};$/;"	c	struct:testing::gmock_matchers_test::AmbiguousCastTypes	file:
Map	src/tests/googletest/googletest/samples/sample3-inl.h	/^  Queue* Map(F function) const {$/;"	f	class:Queue	typeref:typename:Queue *
MapTester	src/tests/googletest/googletest/samples/sample3_unittest.cc	/^  void MapTester(const Queue<int> * q) {$/;"	f	class:QueueTest	typeref:typename:void	file:
MapTextModeProperties	src/libtfhe-superaic-core/tfhe_generic_streams.cpp	/^    MapTextModeProperties() {}$/;"	f	class:MapTextModeProperties	file:
MapTextModeProperties	src/libtfhe-superaic-core/tfhe_generic_streams.cpp	/^class MapTextModeProperties : public TextModeProperties {$/;"	c	file:
MapWithLock	src/muduo/examples/memcached/server/MemcacheServer.h	/^  struct MapWithLock$/;"	s	class:MemcacheServer
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^  virtual bool MatchAndExplain(ArgsTuple args,$/;"	f	class:testing::internal::ArgsMatcherImpl	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    virtual bool MatchAndExplain($/;"	f	class:testing::internal::ComparisonBase::Impl	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    virtual bool MatchAndExplain($/;"	f	class:testing::internal::PairMatchBase::Impl	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    virtual bool MatchAndExplain($/;"	f	class:testing::internal::RefMatcher::Impl	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    virtual bool MatchAndExplain(Container container,$/;"	f	class:testing::internal::BeginEndDistanceIsMatcher::Impl	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    virtual bool MatchAndExplain(Container container,$/;"	f	class:testing::internal::SizeIsMatcher::Impl	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    virtual bool MatchAndExplain(LhsContainer lhs,$/;"	f	class:testing::internal::PointwiseMatcher::Impl	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    virtual bool MatchAndExplain(LhsContainer lhs,$/;"	f	class:testing::internal::WhenSortedByMatcher::Impl	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    virtual bool MatchAndExplain(Pointer pointer,$/;"	f	class:testing::internal::PointeeMatcher::Impl	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    virtual bool MatchAndExplain(T obj, MatchResultListener* listener) const {$/;"	f	class:testing::internal::ResultOfMatcher::Impl	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    virtual bool MatchAndExplain(T value,$/;"	f	class:testing::internal::FloatingEqMatcher::Impl	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    virtual bool MatchAndExplain(T x, MatchResultListener* listener) const {$/;"	f	class:testing::PolymorphicMatcher::MonomorphicImpl	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    virtual bool MatchAndExplain(T x, MatchResultListener* listener) const {$/;"	f	class:testing::internal::BoundSecondMatcher::Impl	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    virtual bool MatchAndExplain(T x, MatchResultListener* listener) const {$/;"	f	class:testing::internal::MatcherCastImpl::Impl	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  bool MatchAndExplain(CharType* s, MatchResultListener* listener) const {$/;"	f	class:testing::internal::EndsWithMatcher	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  bool MatchAndExplain(CharType* s, MatchResultListener* listener) const {$/;"	f	class:testing::internal::HasSubstrMatcher	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  bool MatchAndExplain(CharType* s, MatchResultListener* listener) const {$/;"	f	class:testing::internal::MatchesRegexMatcher	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  bool MatchAndExplain(CharType* s, MatchResultListener* listener) const {$/;"	f	class:testing::internal::StartsWithMatcher	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  bool MatchAndExplain(CharType* s, MatchResultListener* listener) const {$/;"	f	class:testing::internal::StrEqualityMatcher	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  bool MatchAndExplain(From from, MatchResultListener* listener) const {$/;"	f	class:testing::internal::WhenDynamicCastToMatcher	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  bool MatchAndExplain(From& from, MatchResultListener* listener) const {$/;"	f	class:testing::internal::WhenDynamicCastToMatcher	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  bool MatchAndExplain(T x, MatchResultListener* listener) const {$/;"	f	class:testing::internal::MatcherBase	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  bool MatchAndExplain(T& x,  \/\/ NOLINT$/;"	f	class:testing::internal::TrulyMatcher	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  bool MatchAndExplain(const LhsContainer& lhs,$/;"	f	class:testing::internal::ContainerEqMatcher	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  bool MatchAndExplain(const MatcheeStringType& s,$/;"	f	class:testing::internal::EndsWithMatcher	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  bool MatchAndExplain(const MatcheeStringType& s,$/;"	f	class:testing::internal::HasSubstrMatcher	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  bool MatchAndExplain(const MatcheeStringType& s,$/;"	f	class:testing::internal::MatchesRegexMatcher	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  bool MatchAndExplain(const MatcheeStringType& s,$/;"	f	class:testing::internal::StartsWithMatcher	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  bool MatchAndExplain(const MatcheeStringType& s,$/;"	f	class:testing::internal::StrEqualityMatcher	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  bool MatchAndExplain(const Pointer& p,$/;"	f	class:testing::internal::IsNullMatcher	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  bool MatchAndExplain(const Pointer& p,$/;"	f	class:testing::internal::NotNullMatcher	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  bool MatchAndExplain(const T& value, MatchResultListener* listener) const {$/;"	f	class:testing::internal::FieldMatcher	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  bool MatchAndExplain(const T&value, MatchResultListener* listener) const {$/;"	f	class:testing::internal::PropertyMatcher	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  virtual bool MatchAndExplain($/;"	f	class:testing::internal::AnyMatcherImpl	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  virtual bool MatchAndExplain(Container container,$/;"	f	class:testing::internal::ContainsMatcherImpl	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  virtual bool MatchAndExplain(Container container,$/;"	f	class:testing::internal::EachMatcherImpl	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  virtual bool MatchAndExplain(Container container,$/;"	f	class:testing::internal::ElementsAreMatcherImpl	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  virtual bool MatchAndExplain(Container container,$/;"	f	class:testing::internal::UnorderedElementsAreMatcherImpl	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  virtual bool MatchAndExplain(PairType a_pair,$/;"	f	class:testing::internal::PairMatcherImpl	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  virtual bool MatchAndExplain(PairType key_value,$/;"	f	class:testing::internal::KeyMatcherImpl	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  virtual bool MatchAndExplain(T x, MatchResultListener* listener) const {$/;"	f	class:testing::internal::BothOfMatcherImpl	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  virtual bool MatchAndExplain(T x, MatchResultListener* listener) const {$/;"	f	class:testing::internal::EitherOfMatcherImpl	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  virtual bool MatchAndExplain(T x, MatchResultListener* listener) const {$/;"	f	class:testing::internal::NotMatcherImpl	typeref:typename:bool
MatchAndExplain	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^  virtual bool MatchAndExplain(int lhs,$/;"	f	class:__anoncaf4ae130111::GreaterThanMatcher	typeref:typename:bool	file:
MatchAndExplain	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^  virtual bool MatchAndExplain(tuple<char, int> value,$/;"	f	class:__anoncaf4ae130111::LessThanMatcher	typeref:typename:bool	file:
MatchAndExplain	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  bool MatchAndExplain(const T& n, MatchResultListener* listener) const {$/;"	f	class:testing::gmock_matchers_test::DivisibleByImpl	typeref:typename:bool	file:
MatchAndExplain	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  bool MatchAndExplain(const T& x, MatchResultListener* listener) const {$/;"	f	class:testing::gmock_matchers_test::PolymorphicIsEvenImpl	typeref:typename:bool	file:
MatchAndExplain	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  bool MatchAndExplain(const T& x,$/;"	f	class:testing::gmock_matchers_test::ReferencesBarOrIsZeroImpl	typeref:typename:bool	file:
MatchAndExplain	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  bool MatchAndExplain(const tuple<T1, T2>& a_pair,$/;"	f	class:testing::gmock_matchers_test::IsHalfOfMatcher	typeref:typename:bool	file:
MatchAndExplain	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  virtual bool MatchAndExplain(int lhs,$/;"	f	class:testing::gmock_matchers_test::GreaterThanMatcher	typeref:typename:bool	file:
MatchAndExplain	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  virtual bool MatchAndExplain(int x, MatchResultListener* listener) const {$/;"	f	class:testing::gmock_matchers_test::NewEvenMatcherImpl	typeref:typename:bool	file:
MatchAndExplain	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  virtual bool MatchAndExplain(int x,$/;"	f	class:testing::gmock_matchers_test::EvenMatcherImpl	typeref:typename:bool	file:
MatchAndExplainImpl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  bool MatchAndExplainImpl(bool all_elements_should_match,$/;"	f	class:testing::internal::QuantifierMatcherImpl	typeref:typename:bool
MatchAndExplainImpl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  bool MatchAndExplainImpl(false_type \/* is_not_pointer *\/, const Class& obj,$/;"	f	class:testing::internal::FieldMatcher	typeref:typename:bool
MatchAndExplainImpl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  bool MatchAndExplainImpl(false_type \/* is_not_pointer *\/, const Class& obj,$/;"	f	class:testing::internal::PropertyMatcher	typeref:typename:bool
MatchAndExplainImpl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  bool MatchAndExplainImpl(true_type \/* is_pointer *\/, const Class* p,$/;"	f	class:testing::internal::FieldMatcher	typeref:typename:bool
MatchAndExplainImpl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  bool MatchAndExplainImpl(true_type \/* is_pointer *\/, const Class* p,$/;"	f	class:testing::internal::PropertyMatcher	typeref:typename:bool
MatchMatrix	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  MatchMatrix(size_t num_elements, size_t num_matchers)$/;"	f	class:testing::internal::MatchMatrix
MatchMatrix	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class GTEST_API_ MatchMatrix {$/;"	c	namespace:testing::internal
MatchPrintAndExplain	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^bool MatchPrintAndExplain(Value& value, const Matcher<T>& matcher,$/;"	f	namespace:testing::internal	typeref:typename:bool
MatchRegexAnywhere	src/tests/googletest/googletest/src/gtest-port.cc	/^bool MatchRegexAnywhere(const char* regex, const char* str) {$/;"	f	namespace:testing::internal	typeref:typename:bool
MatchRegexAtHead	src/tests/googletest/googletest/src/gtest-port.cc	/^bool MatchRegexAtHead(const char* regex, const char* str) {$/;"	f	namespace:testing::internal	typeref:typename:bool
MatchRepetitionAndRegexAtHead	src/tests/googletest/googletest/src/gtest-port.cc	/^bool MatchRepetitionAndRegexAtHead($/;"	f	namespace:testing::internal	typeref:typename:bool
MatchResultListener	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit MatchResultListener(::std::ostream* os) : stream_(os) {}$/;"	f	class:testing::MatchResultListener
MatchResultListener	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class MatchResultListener {$/;"	c	namespace:testing
Matcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  Matcher() {}$/;"	f	class:testing::Matcher
Matcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit Matcher() {}  \/\/ NOLINT$/;"	f	class:testing::Matcher
Matcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit Matcher(const MatcherInterface<StringPiece>* impl)$/;"	f	class:testing::Matcher
Matcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit Matcher(const MatcherInterface<T>* impl)$/;"	f	class:testing::Matcher
Matcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit Matcher(const MatcherInterface<const StringPiece&>* impl)$/;"	f	class:testing::Matcher
Matcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit Matcher(const MatcherInterface<const internal::string&>* impl)$/;"	f	class:testing::Matcher
Matcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit Matcher(const MatcherInterface<internal::string>* impl)$/;"	f	class:testing::Matcher
Matcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^Matcher<T>::Matcher(T value) { *this = Eq(value); }$/;"	f	class:testing::Matcher
Matcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class GTEST_API_ Matcher<StringPiece>$/;"	c	namespace:testing
Matcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class GTEST_API_ Matcher<const StringPiece&>$/;"	c	namespace:testing
Matcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class GTEST_API_ Matcher<const internal::string&>$/;"	c	namespace:testing
Matcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class GTEST_API_ Matcher<internal::string>$/;"	c	namespace:testing
Matcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class Matcher : public internal::MatcherBase<T> {$/;"	c	namespace:testing
Matcher	src/tests/googletest/googlemock/src/gmock-matchers.cc	/^Matcher<StringPiece>::Matcher(StringPiece s) {$/;"	f	class:testing::Matcher
Matcher	src/tests/googletest/googlemock/src/gmock-matchers.cc	/^Matcher<StringPiece>::Matcher(const char* s) {$/;"	f	class:testing::Matcher
Matcher	src/tests/googletest/googlemock/src/gmock-matchers.cc	/^Matcher<StringPiece>::Matcher(const internal::string& s) {$/;"	f	class:testing::Matcher
Matcher	src/tests/googletest/googlemock/src/gmock-matchers.cc	/^Matcher<const StringPiece&>::Matcher(StringPiece s) {$/;"	f	class:testing::Matcher
Matcher	src/tests/googletest/googlemock/src/gmock-matchers.cc	/^Matcher<const StringPiece&>::Matcher(const char* s) {$/;"	f	class:testing::Matcher
Matcher	src/tests/googletest/googlemock/src/gmock-matchers.cc	/^Matcher<const StringPiece&>::Matcher(const internal::string& s) {$/;"	f	class:testing::Matcher
Matcher	src/tests/googletest/googlemock/src/gmock-matchers.cc	/^Matcher<const internal::string&>::Matcher(const char* s) {$/;"	f	class:testing::Matcher::string
Matcher	src/tests/googletest/googlemock/src/gmock-matchers.cc	/^Matcher<const internal::string&>::Matcher(const internal::string& s) {$/;"	f	class:testing::Matcher::string
Matcher	src/tests/googletest/googlemock/src/gmock-matchers.cc	/^Matcher<internal::string>::Matcher(const char* s) {$/;"	f	class:testing::Matcher::string
Matcher	src/tests/googletest/googlemock/src/gmock-matchers.cc	/^Matcher<internal::string>::Matcher(const internal::string& s) { *this = Eq(s); }$/;"	f	class:testing::Matcher::string
MatcherAsPredicate	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit MatcherAsPredicate(M matcher) : matcher_(matcher) {}$/;"	f	class:testing::internal::MatcherAsPredicate
MatcherAsPredicate	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class MatcherAsPredicate {$/;"	c	namespace:testing::internal
MatcherBase	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  MatcherBase() {}$/;"	f	class:testing::internal::MatcherBase
MatcherBase	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit MatcherBase(const MatcherInterface<T>* impl)$/;"	f	class:testing::internal::MatcherBase
MatcherBase	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class MatcherBase {$/;"	c	namespace:testing::internal
MatcherBindSecond	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^BoundSecondMatcher<Tuple2Matcher, Second> MatcherBindSecond($/;"	f	namespace:testing::internal	typeref:typename:BoundSecondMatcher<Tuple2Matcher,Second>
MatcherCast	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline Matcher<T> MatcherCast(const M& matcher) {$/;"	f	namespace:testing	typeref:typename:Matcher<T>
MatcherCastImpl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class MatcherCastImpl {$/;"	c	namespace:testing::internal
MatcherCastImpl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class MatcherCastImpl<T, Matcher<T> > {$/;"	c	namespace:testing::internal
MatcherCastImpl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class MatcherCastImpl<T, Matcher<U> > {$/;"	c	namespace:testing::internal
MatcherDescriberInterface	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class MatcherDescriberInterface {$/;"	c	namespace:testing
MatcherDescriberVec	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef ::std::vector<const MatcherDescriberInterface*> MatcherDescriberVec;$/;"	t	class:testing::internal::UnorderedElementsAreMatcherImplBase	typeref:typename:::std::vector<const MatcherDescriberInterface * >
MatcherInterface	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class MatcherInterface : public MatcherDescriberInterface {$/;"	c	namespace:testing
MatcherList	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^struct MatcherList {$/;"	s	namespace:testing::internal
MatcherList	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^struct MatcherList<2, Matcher1, Matcher2> {$/;"	s	namespace:testing::internal
MatcherListTail	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef MatcherList<kSize - 1, Tail...> MatcherListTail;$/;"	t	struct:testing::internal::MatcherList	typeref:typename:MatcherList<kSize-1,Tail...>
MatcherListType	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef MatcherList<sizeof...(Args), Args...> MatcherListType;$/;"	t	class:testing::internal::VariadicMatcher
MatcherTuple	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^struct MatcherTuple< ::testing::tuple<A1, A2, A3, A4, A5, A6, A7, A8, A9,$/;"	s	namespace:testing::internal
MatcherTuple	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^struct MatcherTuple< ::testing::tuple<A1, A2, A3, A4, A5, A6, A7, A8, A9> > {$/;"	s	namespace:testing::internal
MatcherTuple	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^struct MatcherTuple< ::testing::tuple<A1, A2, A3, A4, A5, A6, A7, A8> > {$/;"	s	namespace:testing::internal
MatcherTuple	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^struct MatcherTuple< ::testing::tuple<A1, A2, A3, A4, A5, A6, A7> > {$/;"	s	namespace:testing::internal
MatcherTuple	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^struct MatcherTuple< ::testing::tuple<A1, A2, A3, A4, A5, A6> > {$/;"	s	namespace:testing::internal
MatcherTuple	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^struct MatcherTuple< ::testing::tuple<A1, A2, A3, A4, A5> > {$/;"	s	namespace:testing::internal
MatcherTuple	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^struct MatcherTuple< ::testing::tuple<A1, A2, A3, A4> > {$/;"	s	namespace:testing::internal
MatcherTuple	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^struct MatcherTuple< ::testing::tuple<A1, A2, A3> > {$/;"	s	namespace:testing::internal
MatcherTuple	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^struct MatcherTuple< ::testing::tuple<A1, A2> > {$/;"	s	namespace:testing::internal
MatcherTuple	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^struct MatcherTuple< ::testing::tuple<A1> > {$/;"	s	namespace:testing::internal
MatcherVec	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    typedef ::std::vector<Matcher<const Element&> > MatcherVec;$/;"	t	function:testing::internal::ElementsAreMatcher::operator Matcher<Container>	typeref:typename:::std::vector<Matcher<const Element &>>
MatcherVec	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    typedef ::std::vector<Matcher<const Element&> > MatcherVec;$/;"	t	function:testing::internal::UnorderedElementsAreMatcher::operator Matcher<Container>	typeref:typename:::std::vector<Matcher<const Element &>>
MatcherVec	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef ::std::vector<Matcher<const Element&> > MatcherVec;$/;"	t	class:testing::internal::UnorderedElementsAreMatcherImpl	typeref:typename:::std::vector<Matcher<const Element &>>
Matchers	src/tests/googletest/googlemock/docs/CheatSheet.md	/^# Matchers #$/;"	c
Matchers	src/tests/googletest/googlemock/docs/v1_5/CheatSheet.md	/^# Matchers #$/;"	c
Matchers	src/tests/googletest/googlemock/docs/v1_6/CheatSheet.md	/^# Matchers #$/;"	c
Matchers	src/tests/googletest/googlemock/docs/v1_7/CheatSheet.md	/^# Matchers #$/;"	c
Matchers as Predicates	src/tests/googletest/googlemock/docs/CheatSheet.md	/^## Matchers as Predicates ##$/;"	s	chapter:Matchers
Matchers as Predicates	src/tests/googletest/googlemock/docs/v1_5/CheatSheet.md	/^## Matchers as Predicates ##$/;"	s	chapter:Matchers
Matchers as Predicates	src/tests/googletest/googlemock/docs/v1_6/CheatSheet.md	/^## Matchers as Predicates ##$/;"	s	chapter:Matchers
Matchers as Predicates	src/tests/googletest/googlemock/docs/v1_7/CheatSheet.md	/^## Matchers as Predicates ##$/;"	s	chapter:Matchers
Matchers as Test Assertions	src/tests/googletest/googlemock/docs/CheatSheet.md	/^## Matchers as Test Assertions ##$/;"	s	chapter:Matchers
Matchers as Test Assertions	src/tests/googletest/googlemock/docs/v1_5/CheatSheet.md	/^## Matchers as Test Assertions ##$/;"	s	chapter:Matchers
Matchers as Test Assertions	src/tests/googletest/googlemock/docs/v1_6/CheatSheet.md	/^## Matchers as Test Assertions ##$/;"	s	chapter:Matchers
Matchers as Test Assertions	src/tests/googletest/googlemock/docs/v1_7/CheatSheet.md	/^## Matchers as Test Assertions ##$/;"	s	chapter:Matchers
Matchers: What Arguments Do We Expect?	src/tests/googletest/googlemock/docs/ForDummies.md	/^## Matchers: What Arguments Do We Expect? ##$/;"	s	chapter:Setting Expectations
Matchers: What Arguments Do We Expect?	src/tests/googletest/googlemock/docs/v1_5/ForDummies.md	/^## Matchers: What Arguments Do We Expect? ##$/;"	s	chapter:Setting Expectations
Matchers: What Arguments Do We Expect?	src/tests/googletest/googlemock/docs/v1_6/ForDummies.md	/^## Matchers: What Arguments Do We Expect? ##$/;"	s	chapter:Setting Expectations
Matchers: What Arguments Do We Expect?	src/tests/googletest/googlemock/docs/v1_7/ForDummies.md	/^## Matchers: What Arguments Do We Expect? ##$/;"	s	chapter:Setting Expectations
Matches	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  bool Matches(T x) const {$/;"	f	class:testing::internal::MatcherBase	typeref:typename:bool
Matches	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static bool Matches(const MatcherTuple& \/* matcher_tuple *\/,$/;"	f	class:testing::internal::TuplePrefix	typeref:typename:bool
Matches	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static bool Matches(const MatcherTuple& matcher_tuple,$/;"	f	class:testing::internal::TuplePrefix	typeref:typename:bool
Matches	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline internal::MatcherAsPredicate<M> Matches(M matcher) {$/;"	f	namespace:testing	typeref:typename:internal::MatcherAsPredicate<M>
Matches	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  bool Matches(const ArgumentTuple& args) const {$/;"	f	class:testing::internal::OnCallSpec	typeref:typename:bool
Matches	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  bool Matches(const ArgumentTuple& args) const$/;"	f	class:testing::internal::TypedExpectation	typeref:typename:bool
MatchesFilter	src/tests/googletest/googletest/src/gtest.cc	/^bool UnitTestOptions::MatchesFilter($/;"	f	class:testing::internal::UnitTestOptions	typeref:typename:bool
MatchesRegex	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline PolymorphicMatcher<internal::MatchesRegexMatcher> MatchesRegex($/;"	f	namespace:testing	typeref:typename:PolymorphicMatcher<internal::MatchesRegexMatcher>
MatchesRegexMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  MatchesRegexMatcher(const RE* regex, bool full_match)$/;"	f	class:testing::internal::MatchesRegexMatcher
MatchesRegexMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class MatchesRegexMatcher {$/;"	c	namespace:testing::internal
Matching Argument Values Exactly	src/tests/googletest/googlemock/docs/CookBook.md	/^## Matching Argument Values Exactly ##$/;"	s	chapter:Using Matchers
Matching Argument Values Exactly	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Matching Argument Values Exactly ##$/;"	s	chapter:Using Matchers
Matching Argument Values Exactly	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Matching Argument Values Exactly ##$/;"	s	chapter:Using Matchers
Matching Argument Values Exactly	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Matching Argument Values Exactly ##$/;"	s	chapter:Using Matchers
Matching Arguments that Are Not Copyable	src/tests/googletest/googlemock/docs/CookBook.md	/^## Matching Arguments that Are Not Copyable ##$/;"	s	chapter:Using Matchers
Matching Arguments that Are Not Copyable	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Matching Arguments that Are Not Copyable ##$/;"	s	chapter:Using Matchers
Matching Arguments that Are Not Copyable	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Matching Arguments that Are Not Copyable ##$/;"	s	chapter:Using Matchers
Matching Arguments that Are Not Copyable	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Matching Arguments that Are Not Copyable ##$/;"	s	chapter:Using Matchers
Matching Containers	src/tests/googletest/googlemock/docs/CookBook.md	/^## Matching Containers ##$/;"	s	chapter:Using Matchers
Matching Containers	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Matching Containers ##$/;"	s	chapter:Using Matchers
Matching Containers	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Matching Containers ##$/;"	s	chapter:Using Matchers
Matching Containers	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Matching Containers ##$/;"	s	chapter:Using Matchers
Matching Multiple Arguments as a Whole	src/tests/googletest/googlemock/docs/CookBook.md	/^## Matching Multiple Arguments as a Whole ##$/;"	s	chapter:Using Matchers
Matching Multiple Arguments as a Whole	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Matching Multiple Arguments as a Whole ##$/;"	s	chapter:Using Matchers
Matching Multiple Arguments as a Whole	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Matching Multiple Arguments as a Whole ##$/;"	s	chapter:Using Matchers
Matching Multiple Arguments as a Whole	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Matching Multiple Arguments as a Whole ##$/;"	s	chapter:Using Matchers
Matching the Result of a Function or Functor	src/tests/googletest/googlemock/docs/CheatSheet.md	/^## Matching the Result of a Function or Functor ##$/;"	s	chapter:Matchers
Matching the Result of a Function or Functor	src/tests/googletest/googlemock/docs/v1_5/CheatSheet.md	/^## Matching the Result of a Function or Functor ##$/;"	s	chapter:Matchers
Matching the Result of a Function or Functor	src/tests/googletest/googlemock/docs/v1_6/CheatSheet.md	/^## Matching the Result of a Function or Functor ##$/;"	s	chapter:Matchers
Matching the Result of a Function or Functor	src/tests/googletest/googlemock/docs/v1_7/CheatSheet.md	/^## Matching the Result of a Function or Functor ##$/;"	s	chapter:Matchers
Max	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^inline double FloatingPoint<double>::Max() { return DBL_MAX; }$/;"	f	class:testing::internal::FloatingPoint	typeref:typename:double
Max	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^inline float FloatingPoint<float>::Max() { return FLT_MAX; }$/;"	f	class:testing::internal::FloatingPoint	typeref:typename:float
MaxBipartiteMatchState	src/tests/googletest/googlemock/src/gmock-matchers.cc	/^  explicit MaxBipartiteMatchState(const MatchMatrix& graph)$/;"	f	class:testing::internal::MaxBipartiteMatchState	file:
MaxBipartiteMatchState	src/tests/googletest/googlemock/src/gmock-matchers.cc	/^class MaxBipartiteMatchState {$/;"	c	namespace:testing::internal	file:
MayDie	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  explicit MayDie(bool should_die) : should_die_(should_die) {}$/;"	f	class:MayDie	file:
MayDie	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^class MayDie {$/;"	c	file:
MaybeDescribeExtraMatcherTo	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  virtual void MaybeDescribeExtraMatcherTo(::std::ostream* os) {$/;"	f	class:testing::internal::TypedExpectation	typeref:typename:void
Member Matchers	src/tests/googletest/googlemock/docs/CheatSheet.md	/^## Member Matchers ##$/;"	s	chapter:Matchers
Member Matchers	src/tests/googletest/googlemock/docs/v1_5/CheatSheet.md	/^## Member Matchers ##$/;"	s	chapter:Matchers
Member Matchers	src/tests/googletest/googlemock/docs/v1_6/CheatSheet.md	/^## Member Matchers ##$/;"	s	chapter:Matchers
Member Matchers	src/tests/googletest/googlemock/docs/v1_7/CheatSheet.md	/^## Member Matchers ##$/;"	s	chapter:Matchers
MemberFunction	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  void MemberFunction() const {$/;"	f	class:MayDie	typeref:typename:void	file:
MemberFunction	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  void MemberFunction() {$/;"	f	class:TestForDeathTest	typeref:typename:void	file:
MemcacheServer	src/muduo/examples/memcached/server/MemcacheServer.cc	/^MemcacheServer::MemcacheServer(muduo::net::EventLoop* loop, const Options& options)$/;"	f	class:MemcacheServer
MemcacheServer	src/muduo/examples/memcached/server/MemcacheServer.h	/^class MemcacheServer : muduo::noncopyable$/;"	c
MercurialVCS	src/tests/googletest/googlemock/scripts/upload.py	/^class MercurialVCS(VersionControlSystem):$/;"	c
MercurialVCS	src/tests/googletest/googletest/scripts/upload.py	/^class MercurialVCS(VersionControlSystem):$/;"	c
Message	src/tests/googletest/googletest/include/gtest/gtest-message.h	/^  Message(const Message& msg) : ss_(new ::std::stringstream) {  \/\/ NOLINT$/;"	f	class:testing::Message
Message	src/tests/googletest/googletest/include/gtest/gtest-message.h	/^  explicit Message(const char* str) : ss_(new ::std::stringstream) {$/;"	f	class:testing::Message
Message	src/tests/googletest/googletest/include/gtest/gtest-message.h	/^class GTEST_API_ Message {$/;"	c	namespace:testing
Message	src/tests/googletest/googletest/src/gtest.cc	/^Message::Message() : ss_(new ::std::stringstream) {$/;"	f	class:testing::Message
Message	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class Message {};$/;"	c	namespace:my_namespace::testing	file:
MessageCallback	src/muduo/muduo/net/Callbacks.h	/^                            Timestamp)> MessageCallback;$/;"	t	namespace:muduo::net
MessagePtr	src/muduo/examples/protobuf/codec/codec.h	/^typedef std::shared_ptr<google::protobuf::Message> MessagePtr;$/;"	t	typeref:typename:std::shared_ptr<google::protobuf::Message>
MessagePtr	src/muduo/examples/protobuf/codec/dispatcher.h	/^typedef std::shared_ptr<google::protobuf::Message> MessagePtr;$/;"	t	typeref:typename:std::shared_ptr<google::protobuf::Message>
MessagePtr	src/muduo/examples/protobuf/codec/dispatcher_lite.h	/^typedef std::shared_ptr<google::protobuf::Message> MessagePtr;$/;"	t	typeref:typename:std::shared_ptr<google::protobuf::Message>
MessagePtr	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^typedef std::shared_ptr<google::protobuf::Message> MessagePtr;$/;"	t	namespace:muduo::net	typeref:typename:std::shared_ptr<google::protobuf::Message>
MessageType	src/muduo/muduo/net/protorpc/rpc.proto	/^enum MessageType$/;"	g	package:muduo.net
Method	src/muduo/muduo/net/http/HttpRequest.h	/^  enum Method$/;"	g	class:muduo::net::HttpRequest
Method	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^class Method(Function):$/;"	c
Method	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^#define Method MethodW/;"	d	file:
Misc Recipes on Using Google Mock	src/tests/googletest/googlemock/docs/CookBook.md	/^# Misc Recipes on Using Google Mock #$/;"	c
Misc Recipes on Using Google Mock	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^# Misc Recipes on Using Google Mock #$/;"	c
Misc Recipes on Using Google Mock	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^# Misc Recipes on Using Google Mock #$/;"	c
Misc Recipes on Using Google Mock	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^# Misc Recipes on Using Google Mock #$/;"	c
MixedUpTestCaseTest	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^class MixedUpTestCaseTest : public testing::Test {$/;"	c	namespace:bar	file:
MixedUpTestCaseTest	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^class MixedUpTestCaseTest : public testing::Test {$/;"	c	namespace:foo	file:
MixedUpTestCaseWithSameTestNameTest	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^class MixedUpTestCaseWithSameTestNameTest : public testing::Test {$/;"	c	namespace:bar	file:
MixedUpTestCaseWithSameTestNameTest	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^class MixedUpTestCaseWithSameTestNameTest : public testing::Test {$/;"	c	namespace:foo	file:
Mock	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^class GTEST_API_ Mock {$/;"	c	namespace:testing
Mock	src/tests/googletest/googlemock/test/gmock-nice-strict_test.cc	/^  Mock() {}$/;"	f	class:Mock	file:
Mock	src/tests/googletest/googlemock/test/gmock-nice-strict_test.cc	/^class Mock {$/;"	c	file:
Mock	src/tests/googletest/googlemock/test/gmock_link_test.h	/^  Mock() {}$/;"	f	class:Mock
Mock	src/tests/googletest/googlemock/test/gmock_link_test.h	/^class Mock: public Interface {$/;"	c
Mock Classes	src/tests/googletest/googlemock/docs/CheatSheet.md	/^# Mock Classes #$/;"	c
Mock Classes	src/tests/googletest/googlemock/docs/v1_5/CheatSheet.md	/^# Mock Classes #$/;"	c
Mock Classes	src/tests/googletest/googlemock/docs/v1_6/CheatSheet.md	/^# Mock Classes #$/;"	c
Mock Classes	src/tests/googletest/googlemock/docs/v1_7/CheatSheet.md	/^# Mock Classes #$/;"	c
MockA	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^  MockA() {}$/;"	f	class:__anon6b6cf3b20111::MockA	file:
MockA	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^class MockA {$/;"	c	namespace:__anon6b6cf3b20111	file:
MockB	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^  MockB() {}$/;"	f	class:testing::gmock_generated_function_mockers_test::MockB	file:
MockB	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^class MockB {$/;"	c	namespace:testing::gmock_generated_function_mockers_test	file:
MockB	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^  MockB() {}$/;"	f	class:__anon6b6cf3b20111::MockB	file:
MockB	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^class MockB {$/;"	c	namespace:__anon6b6cf3b20111	file:
MockBackendServer	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockBackendServer.java	/^    public MockBackendServer(EventQueue queue, int listeningPort, Executor boss, Executor worker/;"	m	class:MockBackendServer
MockBackendServer	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockBackendServer.java	/^public class MockBackendServer {$/;"	c
MockBar	src/tests/googletest/googlemock/test/gmock-nice-strict_test.cc	/^  MockBar(char a1, char a2, std::string a3, std::string a4, int a5, int a6,$/;"	f	class:testing::gmock_nice_strict_test::MockBar	file:
MockBar	src/tests/googletest/googlemock/test/gmock-nice-strict_test.cc	/^  explicit MockBar(const std::string& s) : str_(s) {}$/;"	f	class:testing::gmock_nice_strict_test::MockBar	file:
MockBar	src/tests/googletest/googlemock/test/gmock-nice-strict_test.cc	/^class MockBar {$/;"	c	namespace:testing::gmock_nice_strict_test	file:
MockC	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^  MockC() {}$/;"	f	class:__anon6b6cf3b20111::MockC	file:
MockC	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^class MockC {$/;"	c	namespace:__anon6b6cf3b20111	file:
MockCC	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^  MockCC() {}$/;"	f	class:__anon6b6cf3b20111::MockCC	file:
MockCC	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^class MockCC : public CC {$/;"	c	namespace:__anon6b6cf3b20111	file:
MockClass	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^  MockClass() {}$/;"	f	class:__anon550198f10111::MockClass	file:
MockClass	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^class MockClass {$/;"	c	namespace:__anon550198f10111	file:
MockClient	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockClient.java	/^    public MockClient(EventQueue queue, InetSocketAddress remoteAddress, Executor boss,$/;"	m	class:MockClient
MockClient	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockClient.java	/^public class MockClient {$/;"	c
MockDeathTest	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  MockDeathTest(MockDeathTestFactory *parent,$/;"	f	class:MockDeathTest	file:
MockDeathTest	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^class MockDeathTest : public DeathTest {$/;"	c	file:
MockDeathTestFactory	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^MockDeathTestFactory::MockDeathTestFactory()$/;"	f	class:MockDeathTestFactory
MockDeathTestFactory	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^class MockDeathTestFactory : public DeathTestFactory {$/;"	c	file:
MockFoo	src/tests/googletest/googlemock/test/gmock-cardinalities_test.cc	/^  MockFoo() {}$/;"	f	class:__anon3d3befdc0111::MockFoo	file:
MockFoo	src/tests/googletest/googlemock/test/gmock-cardinalities_test.cc	/^class MockFoo {$/;"	c	namespace:__anon3d3befdc0111	file:
MockFoo	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^  MockFoo() {}$/;"	f	class:testing::gmock_generated_function_mockers_test::MockFoo	file:
MockFoo	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^class MockFoo : public FooInterface {$/;"	c	namespace:testing::gmock_generated_function_mockers_test	file:
MockFoo	src/tests/googletest/googlemock/test/gmock-nice-strict_test.cc	/^  MockFoo() {}$/;"	f	class:testing::gmock_nice_strict_test::MockFoo	file:
MockFoo	src/tests/googletest/googlemock/test/gmock-nice-strict_test.cc	/^class MockFoo : public Foo {$/;"	c	namespace:testing::gmock_nice_strict_test	file:
MockFoo	src/tests/googletest/googlemock/test/gmock_ex_test.cc	/^class MockFoo {$/;"	c	namespace:__anon14d5248f0111	file:
MockFoo	src/tests/googletest/googlemock/test/gmock_leak_test_.cc	/^  MockFoo() {}$/;"	f	class:__anon357885ae0111::MockFoo	file:
MockFoo	src/tests/googletest/googlemock/test/gmock_leak_test_.cc	/^class MockFoo : public FooInterface {$/;"	c	namespace:__anon357885ae0111	file:
MockFoo	src/tests/googletest/googlemock/test/gmock_output_test_.cc	/^  MockFoo() {}$/;"	f	class:MockFoo	file:
MockFoo	src/tests/googletest/googlemock/test/gmock_output_test_.cc	/^class MockFoo {$/;"	c	file:
MockFoo	src/tests/googletest/googlemock/test/gmock_stress_test.cc	/^class MockFoo {$/;"	c	namespace:testing::__anonc83180760111	file:
MockFunction	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^  MockFunction() {}$/;"	f	class:testing::MockFunction
MockFunction	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^class MockFunction<R()> {$/;"	c	namespace:testing
MockFunction	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^class MockFunction<R(A0)> {$/;"	c	namespace:testing
MockFunction	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^class MockFunction<R(A0, A1)> {$/;"	c	namespace:testing
MockFunction	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^class MockFunction<R(A0, A1, A2)> {$/;"	c	namespace:testing
MockFunction	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^class MockFunction<R(A0, A1, A2, A3)> {$/;"	c	namespace:testing
MockFunction	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^class MockFunction<R(A0, A1, A2, A3, A4)> {$/;"	c	namespace:testing
MockFunction	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^class MockFunction<R(A0, A1, A2, A3, A4, A5)> {$/;"	c	namespace:testing
MockFunction	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^class MockFunction<R(A0, A1, A2, A3, A4, A5, A6)> {$/;"	c	namespace:testing
MockFunction	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^class MockFunction<R(A0, A1, A2, A3, A4, A5, A6, A7)> {$/;"	c	namespace:testing
MockFunction	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^class MockFunction<R(A0, A1, A2, A3, A4, A5, A6, A7, A8)> {$/;"	c	namespace:testing
MockFunction	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^class MockFunction<R(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9)> {$/;"	c	namespace:testing
MockIncomplete	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^class MockIncomplete {$/;"	c	namespace:__anon6b6cf3b20111	file:
MockObject	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^const void* UntypedFunctionMockerBase::MockObject() const$/;"	f	class:testing::internal::UntypedFunctionMockerBase	typeref:typename:const void *
MockObjectRegistry	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^class MockObjectRegistry {$/;"	c	namespace:testing::__anonc1446e5b0111	file:
MockObjectState	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^  MockObjectState()$/;"	f	struct:testing::__anonc1446e5b0111::MockObjectState	file:
MockObjectState	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^struct MockObjectState {$/;"	s	namespace:testing::__anonc1446e5b0111	file:
MockOverloadedOnArgNumber	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^  MockOverloadedOnArgNumber() {}$/;"	f	class:testing::gmock_generated_function_mockers_test::MockOverloadedOnArgNumber	file:
MockOverloadedOnArgNumber	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^class MockOverloadedOnArgNumber {$/;"	c	namespace:testing::gmock_generated_function_mockers_test	file:
MockOverloadedOnConstness	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^  MockOverloadedOnConstness() {}$/;"	f	class:testing::gmock_generated_function_mockers_test::MockOverloadedOnConstness	file:
MockOverloadedOnConstness	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^class MockOverloadedOnConstness {$/;"	c	namespace:testing::gmock_generated_function_mockers_test	file:
MockSpec	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  explicit MockSpec(internal::FunctionMockerBase<F>* function_mocker)$/;"	f	class:testing::internal::MockSpec
MockSpec	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^class MockSpec {$/;"	c	namespace:testing::internal
MockStack	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^  MockStack() {}$/;"	f	class:testing::gmock_generated_function_mockers_test::MockStack	file:
MockStack	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^class MockStack : public StackInterface<T> {$/;"	c	namespace:testing::gmock_generated_function_mockers_test	file:
MockStackTraceGetter	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^struct MockStackTraceGetter : testing::internal::OsStackTraceGetterInterface {$/;"	s	namespace:testing::internal::__anonf4b2defb0111	file:
MockStackWithCallType	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^  MockStackWithCallType() {}$/;"	f	class:testing::gmock_generated_function_mockers_test::MockStackWithCallType	file:
MockStackWithCallType	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^class MockStackWithCallType : public StackInterfaceWithCallType<T> {$/;"	c	namespace:testing::gmock_generated_function_mockers_test	file:
Mocking Class Templates	src/tests/googletest/googlemock/docs/CookBook.md	/^## Mocking Class Templates ##$/;"	s	chapter:Creating Mock Classes
Mocking Class Templates	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Mocking Class Templates ##$/;"	s	chapter:Creating Mock Classes
Mocking Class Templates	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Mocking Class Templates ##$/;"	s	chapter:Creating Mock Classes
Mocking Class Templates	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Mocking Class Templates ##$/;"	s	chapter:Creating Mock Classes
Mocking Destructors	src/tests/googletest/googlemock/docs/CookBook.md	/^## Mocking Destructors ##$/;"	s	chapter:Misc Recipes on Using Google Mock
Mocking Destructors	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Mocking Destructors ##$/;"	s	chapter:Misc Recipes on Using Google Mock
Mocking Destructors	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Mocking Destructors ##$/;"	s	chapter:Misc Recipes on Using Google Mock
Mocking Destructors	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Mocking Destructors ##$/;"	s	chapter:Misc Recipes on Using Google Mock
Mocking Free Functions	src/tests/googletest/googlemock/docs/CookBook.md	/^## Mocking Free Functions ##$/;"	s	chapter:Creating Mock Classes
Mocking Free Functions	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Mocking Free Functions ##$/;"	s	chapter:Creating Mock Classes
Mocking Free Functions	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Mocking Free Functions ##$/;"	s	chapter:Creating Mock Classes
Mocking Free Functions	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Mocking Free Functions ##$/;"	s	chapter:Creating Mock Classes
Mocking Methods That Use Move-Only Types	src/tests/googletest/googlemock/docs/CookBook.md	/^## Mocking Methods That Use Move-Only Types ##$/;"	s	chapter:Misc Recipes on Using Google Mock
Mocking Nonvirtual Methods	src/tests/googletest/googlemock/docs/CookBook.md	/^## Mocking Nonvirtual Methods ##$/;"	s	chapter:Creating Mock Classes
Mocking Nonvirtual Methods	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Mocking Nonvirtual Methods ##$/;"	s	chapter:Creating Mock Classes
Mocking Nonvirtual Methods	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Mocking Nonvirtual Methods ##$/;"	s	chapter:Creating Mock Classes
Mocking Nonvirtual Methods	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Mocking Nonvirtual Methods ##$/;"	s	chapter:Creating Mock Classes
Mocking Overloaded Methods	src/tests/googletest/googlemock/docs/CookBook.md	/^## Mocking Overloaded Methods ##$/;"	s	chapter:Creating Mock Classes
Mocking Overloaded Methods	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Mocking Overloaded Methods ##$/;"	s	chapter:Creating Mock Classes
Mocking Overloaded Methods	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Mocking Overloaded Methods ##$/;"	s	chapter:Creating Mock Classes
Mocking Overloaded Methods	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Mocking Overloaded Methods ##$/;"	s	chapter:Creating Mock Classes
Mocking Private or Protected Methods	src/tests/googletest/googlemock/docs/CookBook.md	/^## Mocking Private or Protected Methods ##$/;"	s	chapter:Creating Mock Classes
Mocking Private or Protected Methods	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Mocking Private or Protected Methods ##$/;"	s	chapter:Creating Mock Classes
Mocking Private or Protected Methods	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Mocking Private or Protected Methods ##$/;"	s	chapter:Creating Mock Classes
Mocking Private or Protected Methods	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Mocking Private or Protected Methods ##$/;"	s	chapter:Creating Mock Classes
Mocking Side Effects	src/tests/googletest/googlemock/docs/CookBook.md	/^## Mocking Side Effects ##$/;"	s	chapter:Using Actions
Mocking Side Effects	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Mocking Side Effects ##$/;"	s	chapter:Using Actions
Mocking Side Effects	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Mocking Side Effects ##$/;"	s	chapter:Using Actions
Mocking Side Effects	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Mocking Side Effects ##$/;"	s	chapter:Using Actions
Mocking a Class Template	src/tests/googletest/googlemock/docs/CheatSheet.md	/^## Mocking a Class Template ##$/;"	s	chapter:Defining a Mock Class
Mocking a Class Template	src/tests/googletest/googlemock/docs/v1_5/CheatSheet.md	/^## Mocking a Class Template ##$/;"	s	chapter:Defining a Mock Class
Mocking a Class Template	src/tests/googletest/googlemock/docs/v1_6/CheatSheet.md	/^## Mocking a Class Template ##$/;"	s	chapter:Defining a Mock Class
Mocking a Class Template	src/tests/googletest/googlemock/docs/v1_7/CheatSheet.md	/^## Mocking a Class Template ##$/;"	s	chapter:Defining a Mock Class
Mocking a Normal Class	src/tests/googletest/googlemock/docs/CheatSheet.md	/^## Mocking a Normal Class ##$/;"	s	chapter:Defining a Mock Class
Mocking a Normal Class	src/tests/googletest/googlemock/docs/v1_5/CheatSheet.md	/^## Mocking a Normal Class ##$/;"	s	chapter:Defining a Mock Class
Mocking a Normal Class	src/tests/googletest/googlemock/docs/v1_6/CheatSheet.md	/^## Mocking a Normal Class ##$/;"	s	chapter:Defining a Mock Class
Mocking a Normal Class	src/tests/googletest/googlemock/docs/v1_7/CheatSheet.md	/^## Mocking a Normal Class ##$/;"	s	chapter:Defining a Mock Class
MonomorphicImpl	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    explicit MonomorphicImpl(const Impl& impl) : impl_(impl) {}$/;"	f	class:testing::PolymorphicAction::MonomorphicImpl
MonomorphicImpl	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  class MonomorphicImpl : public ActionInterface<F> {$/;"	c	class:testing::PolymorphicAction
MonomorphicImpl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    explicit MonomorphicImpl(const Impl& impl) : impl_(impl) {}$/;"	f	class:testing::PolymorphicMatcher::MonomorphicImpl
MonomorphicImpl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  class MonomorphicImpl : public MatcherInterface<T> {$/;"	c	class:testing::PolymorphicMatcher
MonomorphicInnerMatcher	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^  typedef Matcher<const SelectedArgs&> MonomorphicInnerMatcher;$/;"	t	class:testing::internal::ArgsMatcherImpl	typeref:typename:Matcher<const SelectedArgs &>
More Assertions	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^# More Assertions #$/;"	c
More Assertions	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^# More Assertions #$/;"	c
More Assertions	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^# More Assertions #$/;"	c
More Assertions	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^# More Assertions #$/;"	c
MuduoTest	src/tests/moduo_test.cpp	/^    class MuduoTest : public ::testing::Test {$/;"	c	namespace:__anon1f7e76720111	file:
Multi-threaded Tests	src/tests/googletest/googletest/README.md	/^### Multi-threaded Tests ###$/;"	S
Multiargument Matchers	src/tests/googletest/googlemock/docs/CheatSheet.md	/^## Multiargument Matchers ##$/;"	s	chapter:Matchers
Multiargument Matchers	src/tests/googletest/googlemock/docs/v1_5/CheatSheet.md	/^## Multiargument Matchers ##$/;"	s	chapter:Matchers
Multiargument Matchers	src/tests/googletest/googlemock/docs/v1_6/CheatSheet.md	/^## Multiargument Matchers ##$/;"	s	chapter:Matchers
Multiargument Matchers	src/tests/googletest/googlemock/docs/v1_7/CheatSheet.md	/^## Multiargument Matchers ##$/;"	s	chapter:Matchers
MultipleInstantiationTest	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^class MultipleInstantiationTest : public TestWithParam<int> {};$/;"	c	file:
MultiplexServer	src/muduo/examples/multiplexer/multiplexer.cc	/^  MultiplexServer(EventLoop* loop,$/;"	f	class:MultiplexServer	file:
MultiplexServer	src/muduo/examples/multiplexer/multiplexer.cc	/^class MultiplexServer$/;"	c	file:
MultiplexServer	src/muduo/examples/multiplexer/multiplexer_simple.cc	/^  MultiplexServer(EventLoop* loop, const InetAddress& listenAddr, const InetAddress& backendAddr/;"	f	class:MultiplexServer	file:
MultiplexServer	src/muduo/examples/multiplexer/multiplexer_simple.cc	/^class MultiplexServer : noncopyable$/;"	c	file:
MultiplexerTest	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MultiplexerTest.java	/^    public MultiplexerTest(String multiplexerHost) {$/;"	m	class:MultiplexerTest
MultiplexerTest	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MultiplexerTest.java	/^public class MultiplexerTest {$/;"	c
Mutex	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  Mutex() {$/;"	f	class:testing::internal::Mutex
Mutex	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  Mutex() {}$/;"	f	class:testing::internal::Mutex
Mutex	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  explicit Mutex(StaticConstructorSelector \/*dummy*\/) {}$/;"	f	class:testing::internal::Mutex
Mutex	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^class GTEST_API_ Mutex {$/;"	c	namespace:testing::internal
Mutex	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^class Mutex : public MutexBase {$/;"	c	namespace:testing::internal
Mutex	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^class Mutex {$/;"	c	namespace:testing::internal
Mutex	src/tests/googletest/googletest/src/gtest-port.cc	/^Mutex::Mutex()$/;"	f	class:testing::internal::Mutex
MutexBase	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^class MutexBase {$/;"	c	namespace:testing::internal
MutexLock	src/muduo/muduo/base/Mutex.h	/^  MutexLock()$/;"	f	class:muduo::MutexLock
MutexLock	src/muduo/muduo/base/Mutex.h	/^class CAPABILITY("mutex") MutexLock : noncopyable$/;"	c	namespace:muduo
MutexLock	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^typedef GTestMutexLock MutexLock;$/;"	t	namespace:testing::internal	typeref:typename:GTestMutexLock
MutexLockGuard	src/muduo/muduo/base/Mutex.h	/^#define MutexLockGuard(/;"	d
MutexLockGuard	src/muduo/muduo/base/Mutex.h	/^class SCOPED_CAPABILITY MutexLockGuard : noncopyable$/;"	c	namespace:muduo
MutexType	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  enum MutexType { kStatic = 0, kDynamic = 1 };$/;"	g	class:testing::internal::Mutex
My code calls a static/global function.  Can I mock it?	src/tests/googletest/googlemock/docs/FrequentlyAskedQuestions.md	/^## My code calls a static\/global function.  Can I mock it? ##$/;"	s
My code calls a static/global function.  Can I mock it?	src/tests/googletest/googlemock/docs/v1_5/FrequentlyAskedQuestions.md	/^## My code calls a static\/global function.  Can I mock it? ##$/;"	s
My code calls a static/global function.  Can I mock it?	src/tests/googletest/googlemock/docs/v1_6/FrequentlyAskedQuestions.md	/^## My code calls a static\/global function.  Can I mock it? ##$/;"	s
My code calls a static/global function.  Can I mock it?	src/tests/googletest/googlemock/docs/v1_7/FrequentlyAskedQuestions.md	/^## My code calls a static\/global function.  Can I mock it? ##$/;"	s
My compiler complains "void value not ignored as it ought to be." What does this mean?	src/tests/googletest/googletest/docs/FAQ.md	/^## My compiler complains "void value not ignored as it ought to be." What does this mean? ##$/;"	s
My compiler complains "void value not ignored as it ought to be." What does this mean?	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## My compiler complains "void value not ignored as it ought to be." What does this mean? ##$/;"	s
My compiler complains "void value not ignored as it ought to be." What does this mean?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## My compiler complains "void value not ignored as it ought to be." What does this mean? ##$/;"	s
My compiler complains "void value not ignored as it ought to be." What does this mean?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## My compiler complains "void value not ignored as it ought to be." What does this mean? ##$/;"	s
My compiler complains about "ignoring return value" when I call RUN\\_ALL\\_TESTS(). Why?	src/tests/googletest/googletest/docs/FAQ.md	/^## My compiler complains about "ignoring return value" when I call RUN\\_ALL\\_TESTS(). Why? ##$/;"	s
My compiler complains about "ignoring return value" when I call RUN\\_ALL\\_TESTS(). Why?	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## My compiler complains about "ignoring return value" when I call RUN\\_ALL\\_TESTS(). Why? ##$/;"	s
My compiler complains about "ignoring return value" when I call RUN\\_ALL\\_TESTS(). Why?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## My compiler complains about "ignoring return value" when I call RUN\\_ALL\\_TESTS(). Why? ##$/;"	s
My compiler complains about "ignoring return value" when I call RUN\\_ALL\\_TESTS(). Why?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## My compiler complains about "ignoring return value" when I call RUN\\_ALL\\_TESTS(). Why? ##$/;"	s
My compiler complains that a constructor (or destructor) cannot return a value. What's going on?	src/tests/googletest/googletest/docs/FAQ.md	/^## My compiler complains that a constructor (or destructor) cannot return a value. What's going /;"	s
My compiler complains that a constructor (or destructor) cannot return a value. What's going on?	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## My compiler complains that a constructor (or destructor) cannot return a value. What's going /;"	s
My compiler complains that a constructor (or destructor) cannot return a value. What's going on?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## My compiler complains that a constructor (or destructor) cannot return a value. What's going /;"	s
My compiler complains that a constructor (or destructor) cannot return a value. What's going on?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## My compiler complains that a constructor (or destructor) cannot return a value. What's going /;"	s
My death test hangs (or seg-faults). How do I fix it?	src/tests/googletest/googletest/docs/FAQ.md	/^## My death test hangs (or seg-faults). How do I fix it? ##$/;"	s
My death test hangs (or seg-faults). How do I fix it?	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## My death test hangs (or seg-faults). How do I fix it? ##$/;"	s
My death test hangs (or seg-faults). How do I fix it?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## My death test hangs (or seg-faults). How do I fix it? ##$/;"	s
My death test hangs (or seg-faults). How do I fix it?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## My death test hangs (or seg-faults). How do I fix it? ##$/;"	s
My death test modifies some state, but the change seems lost after the death test finishes. Why?	src/tests/googletest/googletest/docs/FAQ.md	/^## My death test modifies some state, but the change seems lost after the death test finishes. W/;"	s
My death test modifies some state, but the change seems lost after the death test finishes. Why?	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## My death test modifies some state, but the change seems lost after the death test finishes. W/;"	s
My death test modifies some state, but the change seems lost after the death test finishes. Why?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## My death test modifies some state, but the change seems lost after the death test finishes. W/;"	s
My death test modifies some state, but the change seems lost after the death test finishes. Why?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## My death test modifies some state, but the change seems lost after the death test finishes. W/;"	s
My mock object needs to do complex stuff.  It's a lot of pain to specify the actions.  Google Mock sucks!	src/tests/googletest/googlemock/docs/FrequentlyAskedQuestions.md	/^## My mock object needs to do complex stuff.  It's a lot of pain to specify the actions.  Google/;"	s
My mock object needs to do complex stuff.  It's a lot of pain to specify the actions.  Google Mock sucks!	src/tests/googletest/googlemock/docs/v1_5/FrequentlyAskedQuestions.md	/^## My mock object needs to do complex stuff.  It's a lot of pain to specify the actions.  Google/;"	s
My mock object needs to do complex stuff.  It's a lot of pain to specify the actions.  Google Mock sucks!	src/tests/googletest/googlemock/docs/v1_6/FrequentlyAskedQuestions.md	/^## My mock object needs to do complex stuff.  It's a lot of pain to specify the actions.  Google/;"	s
My mock object needs to do complex stuff.  It's a lot of pain to specify the actions.  Google Mock sucks!	src/tests/googletest/googlemock/docs/v1_7/FrequentlyAskedQuestions.md	/^## My mock object needs to do complex stuff.  It's a lot of pain to specify the actions.  Google/;"	s
My question is not covered in your FAQ!	src/tests/googletest/googletest/docs/FAQ.md	/^## My question is not covered in your FAQ! ##$/;"	s
My question is not covered in your FAQ!	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## My question is not covered in your FAQ! ##$/;"	s
My question is not covered in your FAQ!	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## My question is not covered in your FAQ! ##$/;"	s
My question is not covered in your FAQ!	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## My question is not covered in your FAQ! ##$/;"	s
My question is not in your FAQ!	src/tests/googletest/googlemock/docs/FrequentlyAskedQuestions.md	/^## My question is not in your FAQ! ##$/;"	s
My question is not in your FAQ!	src/tests/googletest/googlemock/docs/v1_5/FrequentlyAskedQuestions.md	/^## My question is not in your FAQ! ##$/;"	s
My question is not in your FAQ!	src/tests/googletest/googlemock/docs/v1_6/FrequentlyAskedQuestions.md	/^## My question is not in your FAQ! ##$/;"	s
My question is not in your FAQ!	src/tests/googletest/googlemock/docs/v1_7/FrequentlyAskedQuestions.md	/^## My question is not in your FAQ! ##$/;"	s
My set-up function is not called. Why?	src/tests/googletest/googletest/docs/FAQ.md	/^## My set-up function is not called. Why? ##$/;"	s
My set-up function is not called. Why?	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## My set-up function is not called. Why? ##$/;"	s
My set-up function is not called. Why?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## My set-up function is not called. Why? ##$/;"	s
My set-up function is not called. Why?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## My set-up function is not called. Why? ##$/;"	s
MyAction	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^  typedef Action<const char*(bool, const char*)> MyAction;$/;"	t	function:testing::gmock_generated_actions_test::TEST	file:
MyActionImpl	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^class MyActionImpl : public ActionInterface<MyGlobalFunction> {$/;"	c	namespace:__anon550198f10111	file:
MyArray	src/tests/googletest/googletest/test/gtest_list_tests_unittest_.cc	/^class MyArray {$/;"	c	file:
MyContainers	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^typedef Types<std::vector<double>, std::set<char> > MyContainers;$/;"	t	typeref:typename:Types<std::vector<double>,std::set<char>>	file:
MyCountDownLatch	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MyCountDownLatch.java	/^    public MyCountDownLatch(int count) {$/;"	m	class:MyCountDownLatch
MyCountDownLatch	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MyCountDownLatch.java	/^public class MyCountDownLatch extends CountDownLatch {$/;"	c
MyDefaultConstructible	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^  MyDefaultConstructible() : value_(42) {}$/;"	f	class:__anon550198f10111::MyDefaultConstructible	file:
MyDefaultConstructible	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^class MyDefaultConstructible {$/;"	c	namespace:__anon550198f10111	file:
MyEnvironment	src/tests/googletest/googletest/test/gtest_environment_test.cc	/^  MyEnvironment() { Reset(); }$/;"	f	class:__anon7fd7f0f30111::MyEnvironment	file:
MyEnvironment	src/tests/googletest/googletest/test/gtest_environment_test.cc	/^class MyEnvironment : public testing::Environment {$/;"	c	namespace:__anon7fd7f0f30111	file:
MyEnvironment	src/tests/googletest/googletest/test/gtest_repeat_test.cc	/^  MyEnvironment() {}$/;"	f	class:__anon83eb3b5f0111::MyEnvironment	file:
MyEnvironment	src/tests/googletest/googletest/test/gtest_repeat_test.cc	/^class MyEnvironment : public testing::Environment {$/;"	c	namespace:__anon83eb3b5f0111	file:
MyException	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^class MyException {};$/;"	c	namespace:testing::gmock_more_actions_test	file:
MyFunction	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^  typedef void MyFunction(bool, const wchar_t**);$/;"	t	function:__anon550198f10111::TEST	typeref:typename:void ()(bool,const wchar_t **)	file:
MyFunction	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^  typedef void MyFunction(bool, int*, char*);$/;"	t	function:__anon550198f10111::TEST	typeref:typename:void ()(bool,int *,char *)	file:
MyFunction	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^  typedef void MyFunction(bool, std::string*, const char**);$/;"	t	function:__anon550198f10111::TEST	typeref:typename:void ()(bool,std::string *,const char **)	file:
MyFunction	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^  typedef void MyFunction(const wchar_t**);$/;"	t	function:__anon550198f10111::TEST	typeref:typename:void ()(const wchar_t **)	file:
MyFunction	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^  typedef void MyFunction(std::string*, const char**);$/;"	t	function:__anon550198f10111::TEST	typeref:typename:void ()(std::string *,const char **)	file:
MyFunction	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^  typedef void MyFunction(bool, int*);$/;"	t	function:testing::gmock_more_actions_test::TEST	typeref:typename:void ()(bool,int *)	file:
MyFunction	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^  typedef void MyFunction(bool, int*, char*);$/;"	t	function:testing::gmock_more_actions_test::TEST	typeref:typename:void ()(bool,int *,char *)	file:
MyFunction	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^  typedef void MyFunction(bool, std::back_insert_iterator<std::string>);$/;"	t	function:testing::gmock_more_actions_test::TEST	typeref:typename:void ()(bool,std::back_insert_iterator<std::string>)	file:
MyFunction	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^void MyFunction(int \/* n *\/) {}$/;"	f	namespace:testing::gtest_printers_test	typeref:typename:void
MyGdFont	src/muduo/examples/procmon/plot.cc	/^struct Plot::MyGdFont : public gdFont {};$/;"	s	class:Plot	file:
MyGdFontPtr	src/muduo/examples/procmon/plot.h	/^  typedef struct MyGdFont* MyGdFontPtr;$/;"	t	class:Plot	typeref:struct:MyGdFont *
MyGlobalFunction	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^typedef int MyGlobalFunction(bool, int);$/;"	t	namespace:__anon550198f10111	typeref:typename:int ()(bool,int)	file:
MyMethod	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^  int MyMethod(char x) { return x + 1; }$/;"	f	struct:testing::gtest_printers_test::Foo	typeref:typename:int	file:
MyNonDefaultConstructible	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^  explicit MyNonDefaultConstructible(int a_value) : value_(a_value) {}$/;"	f	class:__anon550198f10111::MyNonDefaultConstructible	file:
MyNonDefaultConstructible	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^class MyNonDefaultConstructible {$/;"	c	namespace:__anon550198f10111	file:
MyPair	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^template <typename T1, typename T2> struct MyPair {};$/;"	s	namespace:library2	file:
MyParamTest	src/tests/googletest/googletest/test/gtest_repeat_test.cc	/^class MyParamTest : public testing::TestWithParam<int> {};$/;"	c	namespace:__anon83eb3b5f0111	file:
MyString	src/tests/googletest/googletest/samples/sample2.h	/^  MyString() : c_string_(NULL) {}$/;"	f	class:MyString
MyString	src/tests/googletest/googletest/samples/sample2.h	/^  MyString(const MyString& string) : c_string_(NULL) {$/;"	f	class:MyString
MyString	src/tests/googletest/googletest/samples/sample2.h	/^  explicit MyString(const char* a_c_string) : c_string_(NULL) {$/;"	f	class:MyString
MyString	src/tests/googletest/googletest/samples/sample2.h	/^class MyString {$/;"	c
MyStringFunction	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^  typedef void MyStringFunction(bool, std::wstring*);$/;"	t	function:__anon550198f10111::TEST	typeref:typename:void ()(bool,std::wstring *)	file:
MyStringFunction	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^  typedef void MyStringFunction(std::wstring*);$/;"	t	function:__anon550198f10111::TEST	typeref:typename:void ()(std::wstring *)	file:
MyTwoTypes	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^typedef Types<short, long> MyTwoTypes;$/;"	t	typeref:typename:Types<short,long>	file:
MyType	src/tests/googletest/googletest/test/gtest_list_tests_unittest_.cc	/^  explicit MyType(const std::string& a_value) : value_(a_value) {}$/;"	f	class:MyType	file:
MyType	src/tests/googletest/googletest/test/gtest_list_tests_unittest_.cc	/^class MyType {$/;"	c	file:
MyTypeInNameSpace1	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  explicit MyTypeInNameSpace1(int an_x): Base(an_x) {}$/;"	f	class:namespace1::MyTypeInNameSpace1	file:
MyTypeInNameSpace1	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class MyTypeInNameSpace1 : public Base {$/;"	c	namespace:namespace1	file:
MyTypeInNameSpace2	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  explicit MyTypeInNameSpace2(int an_x): Base(an_x) {}$/;"	f	class:namespace2::MyTypeInNameSpace2	file:
MyTypeInNameSpace2	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class MyTypeInNameSpace2 : public ::Base {$/;"	c	namespace:namespace2	file:
MyTypeInUnnamedNameSpace	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  explicit MyTypeInUnnamedNameSpace(int an_x): Base(an_x) {}$/;"	f	class:__anonf780395f0411::MyTypeInUnnamedNameSpace	file:
MyTypeInUnnamedNameSpace	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class MyTypeInUnnamedNameSpace : public Base {$/;"	c	namespace:__anonf780395f0411	file:
MyTypes	src/tests/googletest/googletest/test/gtest_list_tests_unittest_.cc	/^                       int*, MyArray<bool, 42> > MyTypes;$/;"	t	typeref:typename:testing::Types<VeryLoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooogName,int *,MyArray<bool,42>>	file:
MyVirtualMethod	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^  virtual char MyVirtualMethod(int \/* n *\/) { return 'a'; }$/;"	f	struct:testing::gtest_printers_test::Foo	typeref:typename:char	file:
N	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint32_t N = 1024;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint32_t
N	src/libtfhe-superaic-core/fft_processors/nayuki/lagrangehalfc_impl.h	/^    const int32_t N;    $/;"	m	class:FFT_Processor_nayuki	typeref:typename:const int32_t
N	src/libtfhe-superaic-core/include/polynomials.h	/^   const int32_t N;$/;"	m	struct:IntPolynomial	typeref:typename:const int32_t
N	src/libtfhe-superaic-core/include/polynomials.h	/^   const int32_t N;$/;"	m	struct:TorusPolynomial	typeref:typename:const int32_t
N	src/libtfhe-superaic-core/include/tlwe.h	/^    const int32_t N; \/\/\/< a power of 2: degree of the polynomials$/;"	m	struct:TLweParams	typeref:typename:const int32_t
N	src/muduo/muduo/base/tests/LogStream_bench.cc	/^const size_t N = 1000000;$/;"	v	typeref:typename:const size_t
N	src/tests/bootstrapping_classic_PBS_parameters_test.cpp	/^    const int32_t N = M8_PARAM.tlwe_polynomials_numbers;$/;"	v	namespace:__anon8153b4f20111	typeref:typename:const int32_t
N	src/tests/bootstrapping_direct_test.cpp	/^    const int32_t N = 1024;$/;"	v	namespace:__anon560166140111	typeref:typename:const int32_t
N	src/tests/bootstrapping_test.cpp	/^    const int32_t N = 1024;$/;"	v	namespace:__anonf36cd29a0111	typeref:typename:const int32_t
N	src/tests/decrypt_with_plaintext_modulus.cpp	/^    const int32_t N = M8_PARAM.tlwe_polynomials_numbers;$/;"	v	namespace:__anondb55d4a50111	typeref:typename:const int32_t
N	src/tests/macros_decrypt_with_plaintext_modulus_macros.cpp	/^    const int32_t N = M8_PARAM.tlwe_polynomials_numbers;$/;"	v	namespace:__anon478224cd0111	typeref:typename:const int32_t
N	src/tests/macros_modSwitch_with_plaintext_modulus_macros.cpp	/^    const int32_t N = M8_PARAM.tlwe_polynomials_numbers;$/;"	v	namespace:__anon4cdaee640111	typeref:typename:const int32_t
N	src/tests/ops_add.cpp	/^    const int32_t N = M8_PARAM.tlwe_polynomials_numbers;$/;"	v	namespace:__anonb1f413890111	typeref:typename:const int32_t
N	src/tests/ops_add_with_carry.cpp	/^    const int32_t N = M8_PARAM.tlwe_polynomials_numbers;$/;"	v	namespace:__anon662e63c40111	typeref:typename:const int32_t
N	src/tests/zpf_for_bootstrap_detail.cpp	/^    const int32_t N = M8_PARAM.tlwe_polynomials_numbers;$/;"	v	namespace:__anonc07144f40111	typeref:typename:const int32_t
NAME	src/tests/googletest/googlemock/scripts/generator/cpp/tokenize.py	/^NAME = 'NAME'$/;"	v
NONFATAL_FAILURE	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^    NONFATAL_FAILURE$/;"	e	enum:ExpectFailureTest::FailureMode	file:
NONFATAL_FAILURE	src/tests/googletest/googletest/test/gtest_unittest.cc	/^    NONFATAL_FAILURE$/;"	e	enum:__anonf780395f0111::ScopedFakeTestPartResultReporterTest::FailureMode	file:
NON_FATAL_FAILURE	src/tests/googletest/googletest/test/gtest_environment_test.cc	/^  NO_FAILURE, NON_FATAL_FAILURE, FATAL_FAILURE$/;"	e	enum:__anon7fd7f0f30111::FailureType	file:
NO_CATCH_EXCEPTIONS_FLAG	src/tests/googletest/googletest/test/gtest_catch_exceptions_test.py	/^NO_CATCH_EXCEPTIONS_FLAG = FLAG_PREFIX + 'catch_exceptions=0'$/;"	v
NO_ERROR	src/muduo/muduo/net/protorpc/rpc.proto	/^  NO_ERROR = 0;$/;"	e	enum:muduo.net.ErrorCode
NO_FAILURE	src/tests/googletest/googletest/test/gtest_environment_test.cc	/^  NO_FAILURE, NON_FATAL_FAILURE, FATAL_FAILURE$/;"	e	enum:__anon7fd7f0f30111::FailureType	file:
NO_METHOD	src/muduo/muduo/net/protorpc/rpc.proto	/^  NO_METHOD = 3;$/;"	e	enum:muduo.net.ErrorCode
NO_SERVICE	src/muduo/muduo/net/protorpc/rpc.proto	/^  NO_SERVICE = 2;$/;"	e	enum:muduo.net.ErrorCode
NO_THREAD_SAFETY_ANALYSIS	src/muduo/muduo/base/Mutex.h	/^#define NO_THREAD_SAFETY_ANALYSIS /;"	d
NUM_BLOCK	src/tests/decrypt_with_plaintext_modulus.cpp	/^#define NUM_BLOCK /;"	d	file:
NUM_BLOCK	src/tests/macros_decrypt_with_plaintext_modulus_macros.cpp	/^#define NUM_BLOCK /;"	d	file:
NUM_BLOCK	src/tests/macros_modSwitch_with_plaintext_modulus_macros.cpp	/^#define NUM_BLOCK /;"	d	file:
NUM_BLOCK	src/tests/ops_add.cpp	/^#define NUM_BLOCK /;"	d	file:
NUM_BLOCK	src/tests/ops_add_with_carry.cpp	/^#define NUM_BLOCK /;"	d	file:
NUM_BLOCK	src/tests/zpf_for_bootstrap_detail.cpp	/^#define NUM_BLOCK /;"	d	file:
NUM_LOG_LEVELS	src/muduo/muduo/base/Logging.h	/^    NUM_LOG_LEVELS,$/;"	e	enum:muduo::Logger::LogLevel
NaggyMock	src/tests/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h	/^  NaggyMock() {$/;"	f	class:testing::NaggyMock
NaggyMock	src/tests/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h	/^  NaggyMock(const A1& a1, const A2& a2) : MockClass(a1, a2) {$/;"	f	class:testing::NaggyMock
NaggyMock	src/tests/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h	/^  NaggyMock(const A1& a1, const A2& a2, const A3& a3) : MockClass(a1, a2, a3) {$/;"	f	class:testing::NaggyMock
NaggyMock	src/tests/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h	/^  NaggyMock(const A1& a1, const A2& a2, const A3& a3, const A4& a4,$/;"	f	class:testing::NaggyMock
NaggyMock	src/tests/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h	/^  NaggyMock(const A1& a1, const A2& a2, const A3& a3,$/;"	f	class:testing::NaggyMock
NaggyMock	src/tests/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h	/^  explicit NaggyMock(const A1& a1) : MockClass(a1) {$/;"	f	class:testing::NaggyMock
NaggyMock	src/tests/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h	/^class NaggyMock : public MockClass {$/;"	c	namespace:testing
Name	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^const char* UntypedFunctionMockerBase::Name() const$/;"	f	class:testing::internal::UntypedFunctionMockerBase	typeref:typename:const char *
NamedEnum	src/tests/googletest/googletest/test/gtest_unittest.cc	/^enum NamedEnum {$/;"	g	namespace:__anonf780395f0111	file:
NamingTest	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^class NamingTest : public TestWithParam<int> {};$/;"	c	file:
NanSensitiveDoubleEq	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline internal::FloatingEqMatcher<double> NanSensitiveDoubleEq(double rhs) {$/;"	f	namespace:testing	typeref:typename:internal::FloatingEqMatcher<double>
NanSensitiveDoubleNear	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline internal::FloatingEqMatcher<double> NanSensitiveDoubleNear($/;"	f	namespace:testing	typeref:typename:internal::FloatingEqMatcher<double>
NanSensitiveFloatEq	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline internal::FloatingEqMatcher<float> NanSensitiveFloatEq(float rhs) {$/;"	f	namespace:testing	typeref:typename:internal::FloatingEqMatcher<float>
NanSensitiveFloatNear	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline internal::FloatingEqMatcher<float> NanSensitiveFloatNear($/;"	f	namespace:testing	typeref:typename:internal::FloatingEqMatcher<float>
NativeArray	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  NativeArray(const Element* array, size_t count, RelationToSourceCopy) {$/;"	f	class:testing::internal::NativeArray
NativeArray	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  NativeArray(const Element* array, size_t count, RelationToSourceReference) {$/;"	f	class:testing::internal::NativeArray
NativeArray	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  NativeArray(const NativeArray& rhs) {$/;"	f	class:testing::internal::NativeArray
NativeArray	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^class NativeArray {$/;"	c	namespace:testing::internal
NativeArrayPassedAsPointerAndSize	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^  NativeArrayPassedAsPointerAndSize() {}$/;"	f	class:__anoncaf4ae130111::NativeArrayPassedAsPointerAndSize	file:
NativeArrayPassedAsPointerAndSize	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^class NativeArrayPassedAsPointerAndSize {$/;"	c	namespace:__anoncaf4ae130111	file:
Ne	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline internal::Ne2Matcher Ne() { return internal::Ne2Matcher(); }$/;"	f	namespace:testing	typeref:typename:internal::Ne2Matcher
Ne	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline internal::NeMatcher<Rhs> Ne(Rhs x) {$/;"	f	namespace:testing	typeref:typename:internal::NeMatcher<Rhs>
Ne2Matcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class Ne2Matcher : public PairMatchBase<Ne2Matcher, AnyNe> {$/;"	c	namespace:testing::internal
NeMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit NeMatcher(const Rhs& rhs)$/;"	f	class:testing::internal::NeMatcher
NeMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class NeMatcher : public ComparisonBase<NeMatcher<Rhs>, Rhs, AnyNe> {$/;"	c	namespace:testing::internal
NegatedDesc	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static const char* NegatedDesc() { return "is equal to"; }$/;"	f	class:testing::internal::NeMatcher	typeref:typename:const char *
NegatedDesc	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static const char* NegatedDesc() { return "isn't <"; }$/;"	f	class:testing::internal::LtMatcher	typeref:typename:const char *
NegatedDesc	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static const char* NegatedDesc() { return "isn't <="; }$/;"	f	class:testing::internal::LeMatcher	typeref:typename:const char *
NegatedDesc	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static const char* NegatedDesc() { return "isn't >"; }$/;"	f	class:testing::internal::GtMatcher	typeref:typename:const char *
NegatedDesc	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static const char* NegatedDesc() { return "isn't >="; }$/;"	f	class:testing::internal::GeMatcher	typeref:typename:const char *
NegatedDesc	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static const char* NegatedDesc() { return "isn't equal to"; }$/;"	f	class:testing::internal::EqMatcher	typeref:typename:const char *
NewConnectionCallback	src/muduo/muduo/net/Acceptor.h	/^  typedef std::function<void (int sockfd, const InetAddress&)> NewConnectionCallback;$/;"	t	class:muduo::net::Acceptor
NewConnectionCallback	src/muduo/muduo/net/Connector.h	/^  typedef std::function<void (int sockfd)> NewConnectionCallback;$/;"	t	class:muduo::net::Connector
NewEvenMatcherImpl	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^class NewEvenMatcherImpl : public MatcherInterface<int> {$/;"	c	namespace:testing::gmock_matchers_test	file:
NewValueForCurrentThread	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  virtual ThreadLocalValueHolderBase* NewValueForCurrentThread() const {$/;"	f	class:testing::internal::ThreadLocal	typeref:typename:ThreadLocalValueHolderBase *
Next	src/muduo/muduo/net/protobuf/BufferStream.h	/^  virtual bool Next(void** data, int* size) \/\/ override$/;"	f	class:muduo::net::BufferOutputStream	typeref:typename:bool
NextGraph	src/tests/googletest/googlemock/src/gmock-matchers.cc	/^bool MatchMatrix::NextGraph() {$/;"	f	class:testing::internal::MatchMatrix	typeref:typename:bool
Nice Mocks and Strict Mocks	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Nice Mocks and Strict Mocks ##$/;"	s	chapter:Creating Mock Classes
Nice Mocks and Strict Mocks	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Nice Mocks and Strict Mocks ##$/;"	s	chapter:Creating Mock Classes
NiceMock	src/tests/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h	/^  NiceMock() {$/;"	f	class:testing::NiceMock
NiceMock	src/tests/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h	/^  NiceMock(const A1& a1, const A2& a2) : MockClass(a1, a2) {$/;"	f	class:testing::NiceMock
NiceMock	src/tests/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h	/^  NiceMock(const A1& a1, const A2& a2, const A3& a3) : MockClass(a1, a2, a3) {$/;"	f	class:testing::NiceMock
NiceMock	src/tests/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h	/^  NiceMock(const A1& a1, const A2& a2, const A3& a3, const A4& a4,$/;"	f	class:testing::NiceMock
NiceMock	src/tests/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h	/^  NiceMock(const A1& a1, const A2& a2, const A3& a3,$/;"	f	class:testing::NiceMock
NiceMock	src/tests/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h	/^  explicit NiceMock(const A1& a1) : MockClass(a1) {$/;"	f	class:testing::NiceMock
NiceMock	src/tests/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h	/^class NiceMock : public MockClass {$/;"	c	namespace:testing
NoDefaultContructor	src/tests/googletest/googletest/test/gtest-port_test.cc	/^  NoDefaultContructor(const NoDefaultContructor&) {}$/;"	f	class:testing::internal::NoDefaultContructor	file:
NoDefaultContructor	src/tests/googletest/googletest/test/gtest-port_test.cc	/^  explicit NoDefaultContructor(const char*) {}$/;"	f	class:testing::internal::NoDefaultContructor	file:
NoDefaultContructor	src/tests/googletest/googletest/test/gtest-port_test.cc	/^class NoDefaultContructor {$/;"	c	namespace:testing::internal	file:
NoExecDeathTest	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  NoExecDeathTest(const char* a_statement, const RE* a_regex) :$/;"	f	class:testing::internal::NoExecDeathTest	file:
NoExecDeathTest	src/tests/googletest/googletest/src/gtest-death-test.cc	/^class NoExecDeathTest : public ForkingDeathTest {$/;"	c	namespace:testing::internal	file:
NoFatalFailureTest	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class NoFatalFailureTest : public Test {$/;"	c	namespace:__anonf780395f0111	file:
Node	src/muduo/examples/idleconnection/sortedlist.cc	/^  struct Node : public muduo::copyable$/;"	s	class:EchoServer	file:
Node	src/muduo/examples/sudoku/sudoku.cc	/^struct Node$/;"	s	file:
Node	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^class Node(object):$/;"	c
NonContainer	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class NonContainer {};$/;"	c	file:
NonDefaultConstructible	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^  explicit NonDefaultConstructible(int \/* dummy *\/) {}$/;"	f	class:__anon6b6cf3b20111::NonDefaultConstructible	file:
NonDefaultConstructible	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^class NonDefaultConstructible {$/;"	c	namespace:__anon6b6cf3b20111	file:
NonDefaultConstructible	src/tests/googletest/googlemock/test/gmock_ex_test.cc	/^  explicit NonDefaultConstructible(int \/* dummy *\/) {}$/;"	f	class:__anon14d5248f0111::NonDefaultConstructible	file:
NonDefaultConstructible	src/tests/googletest/googlemock/test/gmock_ex_test.cc	/^class NonDefaultConstructible {$/;"	c	namespace:__anon14d5248f0111	file:
NonFatalFailureInFixtureConstructorTest	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^  NonFatalFailureInFixtureConstructorTest() {$/;"	f	class:NonFatalFailureInFixtureConstructorTest	file:
NonFatalFailureInFixtureConstructorTest	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^class NonFatalFailureInFixtureConstructorTest : public testing::Test {$/;"	c	file:
NonFatalFailureInSetUpTest	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^class NonFatalFailureInSetUpTest : public testing::Test {$/;"	c	file:
NonParameterizedBaseTest	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  NonParameterizedBaseTest() : n_(17) { }$/;"	f	class:NonParameterizedBaseTest	file:
NonParameterizedBaseTest	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^class NonParameterizedBaseTest : public ::testing::Test {$/;"	c	file:
NonVoidFunction	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^int NonVoidFunction() {$/;"	f	typeref:typename:int
NonVoidFunction	src/tests/googletest/googletest/test/gtest_unittest.cc	/^int NonVoidFunction() {$/;"	f	namespace:__anonf780395f0111	typeref:typename:int
None	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct None {};$/;"	s	namespace:testing::internal
NoneT	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct NoneT {};$/;"	s	namespace:testing::internal
NormalExitStatus	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^static int NormalExitStatus(int exit_code) {$/;"	f	typeref:typename:int	file:
Normalize	src/tests/googletest/googletest/src/gtest-filepath.cc	/^void FilePath::Normalize() {$/;"	f	class:testing::internal::FilePath	typeref:typename:void
NormalizeErrorMarker	src/tests/googletest/googlemock/test/gmock_output_test.py	/^def NormalizeErrorMarker(output):$/;"	f
NormalizeOutput	src/tests/googletest/googletest/test/gtest_output_test.py	/^def NormalizeOutput(output):$/;"	f
NormalizeToCurrentPlatform	src/tests/googletest/googletest/test/gtest_output_test.py	/^def NormalizeToCurrentPlatform(test_output):$/;"	f
NormalizeXml	src/tests/googletest/googletest/test/gtest_xml_test_utils.py	/^  def NormalizeXml(self, element):$/;"	m	class:GTestXMLTestCase
Not	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline internal::NotMatcher<InnerMatcher> Not(InnerMatcher m) {$/;"	f	namespace:testing	typeref:typename:internal::NotMatcher<InnerMatcher>
NotCopyable	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  explicit NotCopyable(int a_value) : value_(a_value) {}$/;"	f	class:testing::gmock_matchers_test::NotCopyable	file:
NotCopyable	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^class NotCopyable {$/;"	c	namespace:testing::gmock_matchers_test	file:
NotMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit NotMatcher(InnerMatcher matcher) : matcher_(matcher) {}$/;"	f	class:testing::internal::NotMatcher
NotMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class NotMatcher {$/;"	c	namespace:testing::internal
NotMatcherImpl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit NotMatcherImpl(const Matcher<T>& matcher)$/;"	f	class:testing::internal::NotMatcherImpl
NotMatcherImpl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class NotMatcherImpl : public MatcherInterface<T> {$/;"	c	namespace:testing::internal
NotNull	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline PolymorphicMatcher<internal::NotNullMatcher > NotNull() {$/;"	f	namespace:testing	typeref:typename:PolymorphicMatcher<internal::NotNullMatcher>
NotNullMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class NotNullMatcher {$/;"	c	namespace:testing::internal
Notification	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  Notification() : notified_(false) {$/;"	f	class:testing::internal::Notification
Notification	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^class GTEST_API_ Notification {$/;"	c	namespace:testing::internal
Notification	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^class Notification {$/;"	c	namespace:testing::internal
Notification	src/tests/googletest/googletest/src/gtest-port.cc	/^Notification::Notification()$/;"	f	class:testing::internal::Notification
Notify	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  void Notify() {$/;"	f	class:testing::internal::Notification	typeref:typename:void
Notify	src/tests/googletest/googletest/src/gtest-port.cc	/^void Notification::Notify() {$/;"	f	class:testing::internal::Notification	typeref:typename:void
Ns2	src/libtfhe-superaic-core/fft_processors/nayuki/lagrangehalfc_impl.h	/^    const int32_t Ns2;$/;"	m	class:FFT_Processor_nayuki	typeref:typename:const int32_t
Nullary	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^  int Nullary() const { return value_; }$/;"	f	class:__anon550198f10111::Foo	typeref:typename:int	file:
Nullary	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^int Nullary() { return 1; }$/;"	f	namespace:__anon550198f10111	typeref:typename:int
Nullary	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^int Nullary() { return 1; }$/;"	f	namespace:testing::gmock_generated_actions_test	typeref:typename:int
Nullary	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^  int Nullary() const { return value_; }$/;"	f	class:testing::gmock_more_actions_test::Foo	typeref:typename:int	file:
Nullary	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^int Nullary() { return 1; }$/;"	f	namespace:testing::gmock_more_actions_test	typeref:typename:int
NullaryConstructorClass	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^  NullaryConstructorClass() : value_(123) {}$/;"	f	class:testing::gmock_generated_actions_test::NullaryConstructorClass	file:
NullaryConstructorClass	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^class NullaryConstructorClass {$/;"	c	namespace:testing::gmock_generated_actions_test	file:
NullaryFunctor	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^class NullaryFunctor {$/;"	c	namespace:__anon550198f10111	file:
NullaryFunctor	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^class NullaryFunctor {$/;"	c	namespace:testing::gmock_generated_actions_test	file:
NullaryFunctor	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^class NullaryFunctor {$/;"	c	namespace:testing::gmock_more_actions_test	file:
NumCPU	src/muduo/contrib/thrift/tests/echo/EchoServer.cc	/^int NumCPU()$/;"	f	typeref:typename:int
NumericTest	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^class NumericTest : public Test {$/;"	c	namespace:library1	file:
NumericTest	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^class NumericTest : public Test {$/;"	c	namespace:library2	file:
NumericTypes	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^typedef Types<int, double> NumericTypes;$/;"	t	namespace:library2	typeref:typename:Types<int,double>	file:
NumericTypes	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^typedef Types<int, long> NumericTypes;$/;"	t	namespace:library1	typeref:typename:Types<int,long>	file:
NumericTypes	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^typedef testing::Types<int, double> NumericTypes;$/;"	t	typeref:typename:testing::Types<int,double>	file:
NumericTypes	src/tests/googletest/googletest/test/gtest_unittest.cc	/^typedef testing::Types<int, double> NumericTypes;$/;"	t	namespace:__anonf780395f0111	typeref:typename:testing::Types<int,double>	file:
ON_CALL	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^#define ON_CALL(obj, call) GMOCK_ON_CALL_/;"	d
OPTIONAL_WHITE_SPACES_REGEX	src/tests/googletest/googletest/scripts/pump.py	/^OPTIONAL_WHITE_SPACES_REGEX = re.compile(r'\\s*')$/;"	v
OTHERS	src/tests/googletest/googlemock/scripts/generator/cpp/keywords.py	/^OTHERS = set('true false asm class namespace using explicit this operator sizeof'.split())$/;"	v
OTHER_TYPES	src/tests/googletest/googlemock/scripts/generator/cpp/keywords.py	/^OTHER_TYPES = set('new delete typedef struct union enum typeid typename template'.split())$/;"	v
OVERSEE_TEST	src/tests/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h	/^  enum TestRole { OVERSEE_TEST, EXECUTE_TEST };$/;"	e	enum:testing::internal::DeathTest::TestRole
OfType	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^std::string OfType(const std::string& type_name) {$/;"	f	namespace:testing::gmock_matchers_test	typeref:typename:std::string
OkHRESULTSuccess	src/tests/googletest/googletest/test/gtest_unittest.cc	/^static HRESULT OkHRESULTSuccess() {$/;"	f	namespace:__anonf780395f0111	typeref:typename:HRESULT	file:
OnCallAnyArgumentLogger	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^void OnCallAnyArgumentLogger() {$/;"	f	namespace:testing::internal::__anonf4b2defb0111	typeref:typename:void
OnCallLogger	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^void OnCallLogger() {$/;"	f	namespace:testing::internal::__anonf4b2defb0111	typeref:typename:void
OnCallSpec	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  OnCallSpec(const char* a_file, int a_line,$/;"	f	class:testing::internal::OnCallSpec
OnCallSpec	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^class OnCallSpec : public UntypedOnCallSpecBase {$/;"	c	namespace:testing::internal
OnEnvironmentsSetUpEnd	src/tests/googletest/googletest/include/gtest/gtest.h	/^  virtual void OnEnvironmentsSetUpEnd(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::EmptyTestEventListener	typeref:typename:void
OnEnvironmentsSetUpEnd	src/tests/googletest/googletest/src/gtest.cc	/^  virtual void OnEnvironmentsSetUpEnd(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter	typeref:typename:void	file:
OnEnvironmentsSetUpEnd	src/tests/googletest/googletest/test/gtest-listener_test.cc	/^  virtual void OnEnvironmentsSetUpEnd(const UnitTest& \/*unit_test*\/) {$/;"	f	class:testing::internal::EventRecordingListener	typeref:typename:void	file:
OnEnvironmentsSetUpStart	src/tests/googletest/googletest/include/gtest/gtest.h	/^  virtual void OnEnvironmentsSetUpStart(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::EmptyTestEventListener	typeref:typename:void
OnEnvironmentsSetUpStart	src/tests/googletest/googletest/src/gtest.cc	/^void PrettyUnitTestResultPrinter::OnEnvironmentsSetUpStart($/;"	f	class:testing::internal::PrettyUnitTestResultPrinter	typeref:typename:void
OnEnvironmentsSetUpStart	src/tests/googletest/googletest/test/gtest-listener_test.cc	/^  virtual void OnEnvironmentsSetUpStart(const UnitTest& \/*unit_test*\/) {$/;"	f	class:testing::internal::EventRecordingListener	typeref:typename:void	file:
OnEnvironmentsTearDownEnd	src/tests/googletest/googletest/include/gtest/gtest.h	/^  virtual void OnEnvironmentsTearDownEnd(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::EmptyTestEventListener	typeref:typename:void
OnEnvironmentsTearDownEnd	src/tests/googletest/googletest/src/gtest.cc	/^  virtual void OnEnvironmentsTearDownEnd(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter	typeref:typename:void	file:
OnEnvironmentsTearDownEnd	src/tests/googletest/googletest/test/gtest-listener_test.cc	/^  virtual void OnEnvironmentsTearDownEnd(const UnitTest& \/*unit_test*\/) {$/;"	f	class:testing::internal::EventRecordingListener	typeref:typename:void	file:
OnEnvironmentsTearDownStart	src/tests/googletest/googletest/include/gtest/gtest.h	/^  virtual void OnEnvironmentsTearDownStart(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::EmptyTestEventListener	typeref:typename:void
OnEnvironmentsTearDownStart	src/tests/googletest/googletest/src/gtest.cc	/^void PrettyUnitTestResultPrinter::OnEnvironmentsTearDownStart($/;"	f	class:testing::internal::PrettyUnitTestResultPrinter	typeref:typename:void
OnEnvironmentsTearDownStart	src/tests/googletest/googletest/test/gtest-listener_test.cc	/^  virtual void OnEnvironmentsTearDownStart(const UnitTest& \/*unit_test*\/) {$/;"	f	class:testing::internal::EventRecordingListener	typeref:typename:void	file:
OnTestCaseEnd	src/tests/googletest/googletest/include/gtest/gtest.h	/^  virtual void OnTestCaseEnd(const TestCase& \/*test_case*\/) {}$/;"	f	class:testing::EmptyTestEventListener	typeref:typename:void
OnTestCaseEnd	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  void OnTestCaseEnd(const TestCase& test_case) {$/;"	f	class:testing::internal::StreamingListener	typeref:typename:void
OnTestCaseEnd	src/tests/googletest/googletest/src/gtest.cc	/^void PrettyUnitTestResultPrinter::OnTestCaseEnd(const TestCase& test_case) {$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter	typeref:typename:void
OnTestCaseEnd	src/tests/googletest/googletest/test/gtest-listener_test.cc	/^  virtual void OnTestCaseEnd(const TestCase& \/*test_case*\/) {$/;"	f	class:testing::internal::EventRecordingListener	typeref:typename:void	file:
OnTestCaseStart	src/tests/googletest/googletest/include/gtest/gtest.h	/^  virtual void OnTestCaseStart(const TestCase& \/*test_case*\/) {}$/;"	f	class:testing::EmptyTestEventListener	typeref:typename:void
OnTestCaseStart	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  void OnTestCaseStart(const TestCase& test_case) {$/;"	f	class:testing::internal::StreamingListener	typeref:typename:void
OnTestCaseStart	src/tests/googletest/googletest/src/gtest.cc	/^void PrettyUnitTestResultPrinter::OnTestCaseStart(const TestCase& test_case) {$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter	typeref:typename:void
OnTestCaseStart	src/tests/googletest/googletest/test/gtest-listener_test.cc	/^  virtual void OnTestCaseStart(const TestCase& \/*test_case*\/) {$/;"	f	class:testing::internal::EventRecordingListener	typeref:typename:void	file:
OnTestEnd	src/tests/googletest/googletest/include/gtest/gtest.h	/^  virtual void OnTestEnd(const TestInfo& \/*test_info*\/) {}$/;"	f	class:testing::EmptyTestEventListener	typeref:typename:void
OnTestEnd	src/tests/googletest/googletest/samples/sample10_unittest.cc	/^  virtual void OnTestEnd(const TestInfo& \/* test_info *\/) {$/;"	f	class:__anona6935d300111::LeakChecker	typeref:typename:void	file:
OnTestEnd	src/tests/googletest/googletest/samples/sample9_unittest.cc	/^  virtual void OnTestEnd(const TestInfo& test_info) {$/;"	f	class:__anon75bdd3680111::TersePrinter	typeref:typename:void	file:
OnTestEnd	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  void OnTestEnd(const TestInfo& test_info) {$/;"	f	class:testing::internal::StreamingListener	typeref:typename:void
OnTestEnd	src/tests/googletest/googletest/src/gtest.cc	/^void PrettyUnitTestResultPrinter::OnTestEnd(const TestInfo& test_info) {$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter	typeref:typename:void
OnTestEnd	src/tests/googletest/googletest/test/gtest-listener_test.cc	/^  virtual void OnTestEnd(const TestInfo& \/*test_info*\/) {$/;"	f	class:testing::internal::EventRecordingListener	typeref:typename:void	file:
OnTestIterationEnd	src/tests/googletest/googletest/include/gtest/gtest.h	/^  virtual void OnTestIterationEnd(const UnitTest& \/*unit_test*\/,$/;"	f	class:testing::EmptyTestEventListener	typeref:typename:void
OnTestIterationEnd	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  void OnTestIterationEnd(const UnitTest& unit_test, int \/* iteration *\/) {$/;"	f	class:testing::internal::StreamingListener	typeref:typename:void
OnTestIterationEnd	src/tests/googletest/googletest/src/gtest.cc	/^void PrettyUnitTestResultPrinter::OnTestIterationEnd(const UnitTest& unit_test,$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter	typeref:typename:void
OnTestIterationEnd	src/tests/googletest/googletest/src/gtest.cc	/^void TestEventRepeater::OnTestIterationEnd(const UnitTest& unit_test,$/;"	f	class:testing::internal::TestEventRepeater	typeref:typename:void
OnTestIterationEnd	src/tests/googletest/googletest/src/gtest.cc	/^void XmlUnitTestResultPrinter::OnTestIterationEnd(const UnitTest& unit_test,$/;"	f	class:testing::internal::XmlUnitTestResultPrinter	typeref:typename:void
OnTestIterationEnd	src/tests/googletest/googletest/test/gtest-listener_test.cc	/^  virtual void OnTestIterationEnd(const UnitTest& \/*unit_test*\/,$/;"	f	class:testing::internal::EventRecordingListener	typeref:typename:void	file:
OnTestIterationEnd	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  virtual void OnTestIterationEnd(const UnitTest& \/*unit_test*\/,$/;"	f	class:SequenceTestingListener	typeref:typename:void	file:
OnTestIterationStart	src/tests/googletest/googletest/include/gtest/gtest.h	/^  virtual void OnTestIterationStart(const UnitTest& \/*unit_test*\/,$/;"	f	class:testing::EmptyTestEventListener	typeref:typename:void
OnTestIterationStart	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  void OnTestIterationStart(const UnitTest& \/* unit_test *\/, int iteration) {$/;"	f	class:testing::internal::StreamingListener	typeref:typename:void
OnTestIterationStart	src/tests/googletest/googletest/src/gtest.cc	/^void PrettyUnitTestResultPrinter::OnTestIterationStart($/;"	f	class:testing::internal::PrettyUnitTestResultPrinter	typeref:typename:void
OnTestIterationStart	src/tests/googletest/googletest/test/gtest-listener_test.cc	/^  virtual void OnTestIterationStart(const UnitTest& \/*unit_test*\/,$/;"	f	class:testing::internal::EventRecordingListener	typeref:typename:void	file:
OnTestIterationStart	src/tests/googletest/googletest/test/gtest_shuffle_test_.cc	/^  virtual void OnTestIterationStart(const UnitTest& \/* unit_test *\/,$/;"	f	class:__anon91ff1dea0111::TestNamePrinter	typeref:typename:void	file:
OnTestIterationStart	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  virtual void OnTestIterationStart(const UnitTest& \/*unit_test*\/,$/;"	f	class:SequenceTestingListener	typeref:typename:void	file:
OnTestPartResult	src/tests/googletest/googletest/include/gtest/gtest.h	/^  virtual void OnTestPartResult(const TestPartResult& \/*test_part_result*\/) {}$/;"	f	class:testing::EmptyTestEventListener	typeref:typename:void
OnTestPartResult	src/tests/googletest/googletest/samples/sample9_unittest.cc	/^  virtual void OnTestPartResult(const TestPartResult& test_part_result) {$/;"	f	class:__anon75bdd3680111::TersePrinter	typeref:typename:void	file:
OnTestPartResult	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  void OnTestPartResult(const TestPartResult& test_part_result) {$/;"	f	class:testing::internal::StreamingListener	typeref:typename:void
OnTestPartResult	src/tests/googletest/googletest/src/gtest.cc	/^void PrettyUnitTestResultPrinter::OnTestPartResult($/;"	f	class:testing::internal::PrettyUnitTestResultPrinter	typeref:typename:void
OnTestPartResult	src/tests/googletest/googletest/test/gtest-listener_test.cc	/^  virtual void OnTestPartResult(const TestPartResult& \/*test_part_result*\/) {$/;"	f	class:testing::internal::EventRecordingListener	typeref:typename:void	file:
OnTestProgramEnd	src/tests/googletest/googletest/include/gtest/gtest.h	/^  virtual void OnTestProgramEnd(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::EmptyTestEventListener	typeref:typename:void
OnTestProgramEnd	src/tests/googletest/googletest/samples/sample9_unittest.cc	/^  virtual void OnTestProgramEnd(const UnitTest& unit_test) {$/;"	f	class:__anon75bdd3680111::TersePrinter	typeref:typename:void	file:
OnTestProgramEnd	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  void OnTestProgramEnd(const UnitTest& unit_test) {$/;"	f	class:testing::internal::StreamingListener	typeref:typename:void
OnTestProgramEnd	src/tests/googletest/googletest/src/gtest.cc	/^  virtual void OnTestProgramEnd(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter	typeref:typename:void	file:
OnTestProgramEnd	src/tests/googletest/googletest/test/gtest-listener_test.cc	/^  virtual void OnTestProgramEnd(const UnitTest& \/*unit_test*\/) {$/;"	f	class:testing::internal::EventRecordingListener	typeref:typename:void	file:
OnTestProgramEnd	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  virtual void OnTestProgramEnd(const UnitTest& \/*unit_test*\/) {$/;"	f	class:SequenceTestingListener	typeref:typename:void	file:
OnTestProgramStart	src/tests/googletest/googletest/include/gtest/gtest.h	/^  virtual void OnTestProgramStart(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::EmptyTestEventListener	typeref:typename:void
OnTestProgramStart	src/tests/googletest/googletest/samples/sample9_unittest.cc	/^  virtual void OnTestProgramStart(const UnitTest& \/* unit_test *\/) {}$/;"	f	class:__anon75bdd3680111::TersePrinter	typeref:typename:void	file:
OnTestProgramStart	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  void OnTestProgramStart(const UnitTest& \/* unit_test *\/) {$/;"	f	class:testing::internal::StreamingListener	typeref:typename:void
OnTestProgramStart	src/tests/googletest/googletest/src/gtest.cc	/^  virtual void OnTestProgramStart(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter	typeref:typename:void	file:
OnTestProgramStart	src/tests/googletest/googletest/test/gtest-listener_test.cc	/^  virtual void OnTestProgramStart(const UnitTest& \/*unit_test*\/) {$/;"	f	class:testing::internal::EventRecordingListener	typeref:typename:void	file:
OnTestProgramStart	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  virtual void OnTestProgramStart(const UnitTest& \/*unit_test*\/) {$/;"	f	class:SequenceTestingListener	typeref:typename:void	file:
OnTestProgramStart	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  virtual void OnTestProgramStart(const UnitTest& \/*unit_test*\/) {$/;"	f	class:TestListener	typeref:typename:void	file:
OnTestStart	src/tests/googletest/googletest/include/gtest/gtest.h	/^  virtual void OnTestStart(const TestInfo& \/*test_info*\/) {}$/;"	f	class:testing::EmptyTestEventListener	typeref:typename:void
OnTestStart	src/tests/googletest/googletest/samples/sample10_unittest.cc	/^  virtual void OnTestStart(const TestInfo& \/* test_info *\/) {$/;"	f	class:__anona6935d300111::LeakChecker	typeref:typename:void	file:
OnTestStart	src/tests/googletest/googletest/samples/sample9_unittest.cc	/^  virtual void OnTestStart(const TestInfo& test_info) {$/;"	f	class:__anon75bdd3680111::TersePrinter	typeref:typename:void	file:
OnTestStart	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  void OnTestStart(const TestInfo& test_info) {$/;"	f	class:testing::internal::StreamingListener	typeref:typename:void
OnTestStart	src/tests/googletest/googletest/src/gtest.cc	/^void PrettyUnitTestResultPrinter::OnTestStart(const TestInfo& test_info) {$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter	typeref:typename:void
OnTestStart	src/tests/googletest/googletest/test/gtest-listener_test.cc	/^  virtual void OnTestStart(const TestInfo& \/*test_info*\/) {$/;"	f	class:testing::internal::EventRecordingListener	typeref:typename:void	file:
OnTestStart	src/tests/googletest/googletest/test/gtest_shuffle_test_.cc	/^  virtual void OnTestStart(const TestInfo& test_info) {$/;"	f	class:__anon91ff1dea0111::TestNamePrinter	typeref:typename:void	file:
OnTheFlyPrimeTable	src/tests/googletest/googletest/samples/prime_tables.h	/^class OnTheFlyPrimeTable : public PrimeTable {$/;"	c
OnThreadExit	src/tests/googletest/googletest/src/gtest-port.cc	/^  static void OnThreadExit(DWORD thread_id) {$/;"	f	class:testing::internal::ThreadLocalRegistryImpl	typeref:typename:void	file:
OnThreadLocalDestroyed	src/tests/googletest/googletest/src/gtest-port.cc	/^  static void OnThreadLocalDestroyed($/;"	f	class:testing::internal::ThreadLocalRegistryImpl	typeref:typename:void	file:
OnThreadLocalDestroyed	src/tests/googletest/googletest/src/gtest-port.cc	/^void ThreadLocalRegistry::OnThreadLocalDestroyed($/;"	f	class:testing::internal::ThreadLocalRegistry	typeref:typename:void
OneTo	src/tests/googletest/googletest/scripts/gen_gtest_pred_impl.py	/^def OneTo(n):$/;"	f
Operation	src/muduo/examples/memcached/client/bench.cc	/^  enum Operation$/;"	g	class:Client	file:
Option	src/muduo/examples/cdns/Resolver.h	/^  enum Option$/;"	g	class:cdns::Resolver
Option	src/muduo/examples/curl/Curl.h	/^  enum Option$/;"	g	class:curl::Curl
Option	src/muduo/muduo/net/TcpServer.h	/^  enum Option$/;"	g	class:muduo::net::TcpServer
Options	src/muduo/examples/ace/ttcp/common.h	/^  Options()$/;"	f	struct:Options
Options	src/muduo/examples/ace/ttcp/common.h	/^struct Options$/;"	s
Options	src/muduo/examples/memcached/server/MemcacheServer.cc	/^MemcacheServer::Options::Options()$/;"	f	class:MemcacheServer::Options
Options	src/muduo/examples/memcached/server/MemcacheServer.h	/^  struct Options$/;"	s	class:MemcacheServer
Ordered vs Unordered Calls	src/tests/googletest/googlemock/docs/ForDummies.md	/^## Ordered vs Unordered Calls ##$/;"	s	chapter:Setting Expectations
Ordered vs Unordered Calls	src/tests/googletest/googlemock/docs/v1_5/ForDummies.md	/^## Ordered vs Unordered Calls ##$/;"	s	chapter:Setting Expectations
Ordered vs Unordered Calls	src/tests/googletest/googlemock/docs/v1_6/ForDummies.md	/^## Ordered vs Unordered Calls ##$/;"	s	chapter:Setting Expectations
Ordered vs Unordered Calls	src/tests/googletest/googlemock/docs/v1_7/ForDummies.md	/^## Ordered vs Unordered Calls ##$/;"	s	chapter:Setting Expectations
OriginalFunction	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^        OriginalFunction;$/;"	t	class:testing::internal::IgnoreResultAction::Impl	typeref:typename:internal::Function<F>::MakeResultIgnoredValue
OsStackTraceGetter	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  OsStackTraceGetter() {}$/;"	f	class:testing::internal::OsStackTraceGetter
OsStackTraceGetter	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^class OsStackTraceGetter : public OsStackTraceGetterInterface {$/;"	c	namespace:testing::internal
OsStackTraceGetterInterface	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  OsStackTraceGetterInterface() {}$/;"	f	class:testing::internal::OsStackTraceGetterInterface
OsStackTraceGetterInterface	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^class OsStackTraceGetterInterface {$/;"	c	namespace:testing::internal
Ostream	src/libtfhe-superaic-core/include/tfhe_generic_streams.h	/^class Ostream {$/;"	c
OtherDerived	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^class OtherDerived : public Base {};$/;"	c	namespace:testing::gmock_matchers_test	file:
Our Solution	src/tests/googletest/googletest/docs/PumpManual.md	/^# Our Solution #$/;"	c
Our Solution	src/tests/googletest/googletest/docs/V1_5_PumpManual.md	/^# Our Solution #$/;"	c
Our Solution	src/tests/googletest/googletest/docs/V1_6_PumpManual.md	/^# Our Solution #$/;"	c
Our Solution	src/tests/googletest/googletest/docs/V1_7_PumpManual.md	/^# Our Solution #$/;"	c
Output	src/tests/googletest/googletest/scripts/pump.py	/^class Output:$/;"	c
Output	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static Flags Output(const char* output) {$/;"	f	struct:testing::Flags	typeref:typename:Flags	file:
OutputFunc	src/muduo/muduo/base/Logging.h	/^  typedef void (*OutputFunc)(const char* msg, int len);$/;"	t	class:muduo::Logger	typeref:typename:void (*)(const char * msg,int len)
OutputXmlAttribute	src/tests/googletest/googletest/src/gtest.cc	/^void XmlUnitTestResultPrinter::OutputXmlAttribute($/;"	f	class:testing::internal::XmlUnitTestResultPrinter	typeref:typename:void
OutputXmlCDataSection	src/tests/googletest/googletest/src/gtest.cc	/^void XmlUnitTestResultPrinter::OutputXmlCDataSection(::std::ostream* stream,$/;"	f	class:testing::internal::XmlUnitTestResultPrinter	typeref:typename:void
OutputXmlTestInfo	src/tests/googletest/googletest/src/gtest.cc	/^void XmlUnitTestResultPrinter::OutputXmlTestInfo(::std::ostream* stream,$/;"	f	class:testing::internal::XmlUnitTestResultPrinter	typeref:typename:void
OutstandingCall	src/muduo/muduo/net/protorpc/RpcChannel.h	/^  struct OutstandingCall$/;"	s	class:muduo::net::RpcChannel
Overloading Actions	src/tests/googletest/googlemock/docs/DesignDoc.md	/^### Overloading Actions ###$/;"	S	section:Macros for Defining Actions""Advanced Usages
Overview	src/tests/googletest/googlemock/README.md	/^### Overview ###$/;"	S	section:Google Mock
PARAMETER_COUNT	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^    PARAMETER_COUNT =$/;"	e	enum:TestGenerationTest::__anone22a8aca0103	file:
PARAM_MESSAGE_8_KS_PBS_GAUSSAIN	src/libtfhe-superaic-core/include/classic_PBS_parameters.h	/^EXPORT const ClassicPBSParameters PARAM_MESSAGE_8_KS_PBS_GAUSSAIN = {$/;"	v	typeref:typename:EXPORT const ClassicPBSParameters
PARAM_TESTS	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^PARAM_TESTS = [$/;"	v
PARAM_TEST_REGEX	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^PARAM_TEST_REGEX = re.compile(r'\/ParamTest')$/;"	v
PING_SRCS	src/muduo/contrib/thrift/tests/ping/CMakeLists.txt	/^set(PING_SRCS$/;"	v
PING_THRIFT	src/muduo/contrib/thrift/tests/ping/CMakeLists.txt	/^set(PING_THRIFT ping.thrift)$/;"	v
PING_THRIFT_SRCS	src/muduo/contrib/thrift/tests/ping/CMakeLists.txt	/^set(PING_THRIFT_SRCS$/;"	v
PLATFORM_ID	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#  define PLATFORM_ID /;"	d	file:
PLATFORM_ID	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#  define PLATFORM_ID$/;"	d	file:
PLATFORM_ID	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^# define PLATFORM_ID /;"	d	file:
PLATFORM_ID	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^# define PLATFORM_ID$/;"	d	file:
PLATFORM_ID	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define PLATFORM_ID /;"	d	file:
PLATFORM_ID	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define PLATFORM_ID$/;"	d	file:
PLATFORM_ID	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define PLATFORM_ID /;"	d	file:
PLATFORM_ID	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define PLATFORM_ID$/;"	d	file:
PMUL_END_Offset_0	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint8_t    PMUL_END_Offset_0 = 8;            $/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint8_t
PMUL_END_Offset_1	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint8_t    PMUL_END_Offset_1 = 9;            $/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint8_t
PMUL_END_Offset_2	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint8_t    PMUL_END_Offset_2 = 10;           $/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint8_t
PMUL_END_Offset_3	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint8_t    PMUL_END_Offset_3 = 11;           $/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint8_t
PMUL_END_Offset_4	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint8_t    PMUL_END_Offset_4 = 12;           $/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint8_t
PMUL_END_Offset_5	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint8_t    PMUL_END_Offset_5 = 13;           $/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint8_t
PMUL_END_Offset_6	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint8_t    PMUL_END_Offset_6 = 14;           $/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint8_t
PMUL_END_Offset_7	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint8_t    PMUL_END_Offset_7 = 15;           $/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint8_t
PMUL_END_Offsets	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static constexpr const uint8_t PMUL_END_Offsets[] = {$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint8_t[]
POLYNOMIALS_ARITHMETIC_H	src/libtfhe-superaic-core/include/polynomials_arithmetic.h	/^#define POLYNOMIALS_ARITHMETIC_H$/;"	d
POLYNOMIALS_H	src/libtfhe-superaic-core/include/polynomials.h	/^#define POLYNOMIALS_H$/;"	d
PREMATURE_EXIT_FILE_ENV_VAR	src/tests/googletest/googlemock/test/gmock_test_utils.py	/^PREMATURE_EXIT_FILE_ENV_VAR = gtest_test_utils.PREMATURE_EXIT_FILE_ENV_VAR$/;"	v
PREMATURE_EXIT_FILE_ENV_VAR	src/tests/googletest/googletest/test/gtest_test_utils.py	/^PREMATURE_EXIT_FILE_ENV_VAR = 'TEST_PREMATURE_EXIT_FILE'$/;"	v
PREPROCESSOR	src/tests/googletest/googlemock/scripts/generator/cpp/tokenize.py	/^PREPROCESSOR = 'PREPROCESSOR'$/;"	v
PROGRAM_PATH	src/tests/googletest/googlemock/test/gmock_leak_test.py	/^PROGRAM_PATH = gmock_test_utils.GetTestExecutablePath('gmock_leak_test_')$/;"	v
PROGRAM_PATH	src/tests/googletest/googlemock/test/gmock_output_test.py	/^PROGRAM_PATH = gmock_test_utils.GetTestExecutablePath('gmock_output_test_')$/;"	v
PROGRAM_PATH	src/tests/googletest/googletest/test/gtest_help_test.py	/^PROGRAM_PATH = gtest_test_utils.GetTestExecutablePath('gtest_help_test_')$/;"	v
PROGRAM_PATH	src/tests/googletest/googletest/test/gtest_output_test.py	/^PROGRAM_PATH = gtest_test_utils.GetTestExecutablePath('gtest_output_test_')$/;"	v
PTHREAD_CC	src/tests/googletest/googletest/m4/acx_pthread.m4	/^AC_SUBST(PTHREAD_CC)$/;"	s
PTHREAD_CFLAGS	src/tests/googletest/googlemock/configure.ac	/^AC_SUBST(PTHREAD_CFLAGS)$/;"	s
PTHREAD_CFLAGS	src/tests/googletest/googletest/configure.ac	/^AC_SUBST(PTHREAD_CFLAGS)$/;"	s
PTHREAD_CFLAGS	src/tests/googletest/googletest/m4/acx_pthread.m4	/^AC_SUBST(PTHREAD_CFLAGS)$/;"	s
PTHREAD_CREATE_JOINABLE	src/tests/googletest/googletest/m4/acx_pthread.m4	/^            AC_DEFINE_UNQUOTED(PTHREAD_CREATE_JOINABLE, $attr_name,$/;"	d
PTHREAD_LIBS	src/tests/googletest/googlemock/configure.ac	/^AC_SUBST(PTHREAD_LIBS)$/;"	s
PTHREAD_LIBS	src/tests/googletest/googletest/configure.ac	/^AC_SUBST(PTHREAD_LIBS)$/;"	s
PTHREAD_LIBS	src/tests/googletest/googletest/m4/acx_pthread.m4	/^AC_SUBST(PTHREAD_LIBS)$/;"	s
PT_GUARDED_BY	src/muduo/muduo/base/Mutex.h	/^#define PT_GUARDED_BY(/;"	d
PackageTest	src/tests/package_test.cpp	/^    class PackageTest : public ::testing::Test {$/;"	c	namespace:__anon6c5f9b3a0111	file:
Pair	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^Pair(FirstMatcher first_matcher, SecondMatcher second_matcher) {$/;"	f	namespace:testing	typeref:typename:internal::PairMatcher<FirstMatcher,SecondMatcher>
PairMatchBase	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class PairMatchBase {$/;"	c	namespace:testing::internal
PairMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  PairMatcher(FirstMatcher first_matcher, SecondMatcher second_matcher)$/;"	f	class:testing::internal::PairMatcher
PairMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class PairMatcher {$/;"	c	namespace:testing::internal
PairMatcherImpl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  PairMatcherImpl(FirstMatcher first_matcher, SecondMatcher second_matcher)$/;"	f	class:testing::internal::PairMatcherImpl
PairMatcherImpl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class PairMatcherImpl : public MatcherInterface<PairType> {$/;"	c	namespace:testing::internal
ParamGenerator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  ParamGenerator(const ParamGenerator& other) : impl_(other.impl_) {}$/;"	f	class:testing::internal::ParamGenerator
ParamGenerator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  explicit ParamGenerator(ParamGeneratorInterface<T>* impl) : impl_(impl) {}$/;"	f	class:testing::internal::ParamGenerator
ParamGenerator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^class ParamGenerator {$/;"	c	namespace:testing::internal
ParamGeneratorInterface	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^class ParamGeneratorInterface {$/;"	c	namespace:testing::internal
ParamIterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  ParamIterator(const ParamIterator& other) : impl_(other.impl_->Clone()) {}$/;"	f	class:testing::internal::ParamIterator
ParamIterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  explicit ParamIterator(ParamIteratorInterface<T>* impl) : impl_(impl) {}$/;"	f	class:testing::internal::ParamIterator
ParamIterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^class ParamIterator {$/;"	c	namespace:testing::internal
ParamIteratorInterface	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^class ParamIteratorInterface {$/;"	c	namespace:testing::internal
ParamMap	src/muduo/examples/fastcgi/fastcgi.h	/^  typedef std::map<std::string, std::string> ParamMap;$/;"	t	class:FastCgiCodec	typeref:typename:std::map<std::string,std::string>
ParamNameFunc	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^std::string ParamNameFunc(const testing::TestParamInfo<std::string>& info) {$/;"	f	typeref:typename:std::string
ParamNameGenFunc	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^struct ParamNameGenFunc {$/;"	s	namespace:testing::internal
ParamNameGeneratorFunc	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  typedef typename ParamNameGenFunc<ParamType>::Type ParamNameGeneratorFunc;$/;"	t	class:testing::internal::ParameterizedTestCaseInfo	typeref:typename:ParamNameGenFunc<ParamType>::Type
ParamTest	src/tests/googletest/googletest/test/gtest_filter_unittest_.cc	/^class ParamTest : public testing::TestWithParam<int> {$/;"	c	namespace:__anon37ac2de30111	file:
ParamTest	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^class ParamTest : public testing::TestWithParam<std::string> {$/;"	c	file:
ParamType	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^      ::value_type ParamType;$/;"	t	function:testing::ValuesIn	typeref:typename:::testing::internal::IteratorTraits<ForwardIterator>::value_type
ParamType	src/tests/googletest/googletest/include/gtest/gtest.h	/^  typedef T ParamType;$/;"	t	class:testing::WithParamInterface	typeref:typename:T
ParamType	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  typedef ::testing::tuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator10	typeref:typename:::testing::tuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10>
ParamType	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  typedef ::testing::tuple<T1, T2, T3, T4, T5, T6, T7, T8, T9> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator9	typeref:typename:::testing::tuple<T1,T2,T3,T4,T5,T6,T7,T8,T9>
ParamType	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  typedef ::testing::tuple<T1, T2, T3, T4, T5, T6, T7, T8> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator8	typeref:typename:::testing::tuple<T1,T2,T3,T4,T5,T6,T7,T8>
ParamType	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  typedef ::testing::tuple<T1, T2, T3, T4, T5, T6, T7> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator7	typeref:typename:::testing::tuple<T1,T2,T3,T4,T5,T6,T7>
ParamType	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  typedef ::testing::tuple<T1, T2, T3, T4, T5, T6> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator6	typeref:typename:::testing::tuple<T1,T2,T3,T4,T5,T6>
ParamType	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  typedef ::testing::tuple<T1, T2, T3, T4, T5> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator5	typeref:typename:::testing::tuple<T1,T2,T3,T4,T5>
ParamType	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  typedef ::testing::tuple<T1, T2, T3, T4> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator4	typeref:typename:::testing::tuple<T1,T2,T3,T4>
ParamType	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  typedef ::testing::tuple<T1, T2, T3> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator3	typeref:typename:::testing::tuple<T1,T2,T3>
ParamType	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  typedef ::testing::tuple<T1, T2> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator2	typeref:typename:::testing::tuple<T1,T2>
ParamType	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  typedef T ParamType;$/;"	t	class:testing::internal::ParamGeneratorInterface	typeref:typename:T
ParamType	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  typedef typename TestCase::ParamType ParamType;$/;"	t	class:testing::internal::ParameterizedTestCaseInfo	typeref:typename:TestCase::ParamType
ParamType	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  typedef typename TestCase::ParamType ParamType;$/;"	t	class:testing::internal::TestMetaFactory	typeref:typename:TestCase::ParamType
ParamType	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  typedef typename TestClass::ParamType ParamType;$/;"	t	class:testing::internal::ParameterizedTestFactory	typeref:typename:TestClass::ParamType
Parameter	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^class Parameter(Node):$/;"	c
Parameterized actions	src/tests/googletest/googlemock/docs/DesignDoc.md	/^## Parameterized actions ##$/;"	s	chapter:Macros for Defining Actions
ParameterizedDeathTest	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^class ParameterizedDeathTest : public ::testing::TestWithParam<int> { };$/;"	c	file:
ParameterizedDerivedTest	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  ParameterizedDerivedTest() : count_(0) { }$/;"	f	class:ParameterizedDerivedTest	file:
ParameterizedDerivedTest	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^class ParameterizedDerivedTest : public NonParameterizedBaseTest,$/;"	c	file:
ParameterizedTestCaseInfo	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  explicit ParameterizedTestCaseInfo($/;"	f	class:testing::internal::ParameterizedTestCaseInfo
ParameterizedTestCaseInfo	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^class ParameterizedTestCaseInfo : public ParameterizedTestCaseInfoBase {$/;"	c	namespace:testing::internal
ParameterizedTestCaseInfoBase	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  ParameterizedTestCaseInfoBase() {}$/;"	f	class:testing::internal::ParameterizedTestCaseInfoBase
ParameterizedTestCaseInfoBase	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^class ParameterizedTestCaseInfoBase {$/;"	c	namespace:testing::internal
ParameterizedTestCaseRegistry	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  ParameterizedTestCaseRegistry() {}$/;"	f	class:testing::internal::ParameterizedTestCaseRegistry
ParameterizedTestCaseRegistry	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^class ParameterizedTestCaseRegistry {$/;"	c	namespace:testing::internal
ParameterizedTestFactory	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  explicit ParameterizedTestFactory(ParamType parameter) :$/;"	f	class:testing::internal::ParameterizedTestFactory
ParameterizedTestFactory	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^class ParameterizedTestFactory : public TestFactoryBase {$/;"	c	namespace:testing::internal
ParentType	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  typedef FloatingPointTest<RawType> ParentType;$/;"	t	class:testing::gmock_matchers_test::FloatingPointNearTest	typeref:typename:FloatingPointTest<RawType>	file:
Parse	src/tests/googletest/googletest/scripts/pump.py	/^  def Parse(pos):$/;"	f	function:ParseExpTokenInParens	file:
ParseAtomicCodeNode	src/tests/googletest/googletest/scripts/pump.py	/^def ParseAtomicCodeNode(tokens):$/;"	f
ParseBoolFlag	src/tests/googletest/googletest/src/gtest.cc	/^bool ParseBoolFlag(const char* str, const char* flag, bool* value) {$/;"	f	namespace:testing::internal	typeref:typename:bool
ParseCodeNode	src/tests/googletest/googletest/scripts/pump.py	/^def ParseCodeNode(tokens):$/;"	f
ParseElseNode	src/tests/googletest/googletest/scripts/pump.py	/^def ParseElseNode(tokens):$/;"	f
ParseExpNode	src/tests/googletest/googletest/scripts/pump.py	/^def ParseExpNode(token):$/;"	f
ParseExpTokenInParens	src/tests/googletest/googletest/scripts/pump.py	/^def ParseExpTokenInParens(lines, pos):$/;"	f
ParseFlagValue	src/tests/googletest/googletest/src/gtest.cc	/^const char* ParseFlagValue(const char* str,$/;"	f	namespace:testing::internal	typeref:typename:const char *
ParseGoogleMockBoolFlag	src/tests/googletest/googlemock/src/gmock.cc	/^static bool ParseGoogleMockBoolFlag(const char* str, const char* flag,$/;"	f	namespace:testing::internal	typeref:typename:bool	file:
ParseGoogleMockFlagValue	src/tests/googletest/googlemock/src/gmock.cc	/^static const char* ParseGoogleMockFlagValue(const char* str,$/;"	f	namespace:testing::internal	typeref:typename:const char *	file:
ParseGoogleMockStringFlag	src/tests/googletest/googlemock/src/gmock.cc	/^static bool ParseGoogleMockStringFlag(const char* str, const char* flag,$/;"	f	namespace:testing::internal	typeref:typename:bool	file:
ParseGoogleTestFlag	src/tests/googletest/googletest/src/gtest.cc	/^bool ParseGoogleTestFlag(const char* const arg) {$/;"	f	namespace:testing::internal	typeref:typename:bool
ParseGoogleTestFlagsOnly	src/tests/googletest/googletest/src/gtest.cc	/^void ParseGoogleTestFlagsOnly(int* argc, char** argv) {$/;"	f	namespace:testing::internal	typeref:typename:void
ParseGoogleTestFlagsOnly	src/tests/googletest/googletest/src/gtest.cc	/^void ParseGoogleTestFlagsOnly(int* argc, wchar_t** argv) {$/;"	f	namespace:testing::internal	typeref:typename:void
ParseGoogleTestFlagsOnlyImpl	src/tests/googletest/googletest/src/gtest.cc	/^void ParseGoogleTestFlagsOnlyImpl(int* argc, CharType** argv) {$/;"	f	namespace:testing::internal	typeref:typename:void
ParseInParens	src/tests/googletest/googletest/scripts/pump.py	/^  def ParseInParens(pos):$/;"	f	function:ParseExpTokenInParens	file:
ParseInt32	src/tests/googletest/googletest/src/gtest-port.cc	/^bool ParseInt32(const Message& src_text, const char* str, Int32* value) {$/;"	f	namespace:testing::internal	typeref:typename:bool
ParseInt32Flag	src/tests/googletest/googletest/src/gtest.cc	/^bool ParseInt32Flag(const char* str, const char* flag, Int32* value) {$/;"	f	namespace:testing::internal	typeref:typename:bool
ParseInternalRunDeathTestFlag	src/tests/googletest/googletest/src/gtest-death-test.cc	/^InternalRunDeathTestFlag* ParseInternalRunDeathTestFlag() {$/;"	f	namespace:testing::internal	typeref:typename:InternalRunDeathTestFlag *
ParseNaturalNumber	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^bool ParseNaturalNumber(const ::std::string& str, Integer* number) {$/;"	f	namespace:testing::internal	typeref:typename:bool
ParseResult	src/muduo/examples/hub/codec.h	/^enum ParseResult$/;"	g	namespace:pubsub
ParseStringFlag	src/tests/googletest/googletest/src/gtest.cc	/^bool ParseStringFlag(const char* str, const char* flag, std::string* value) {$/;"	f	namespace:testing::internal	typeref:typename:bool
ParseToAST	src/tests/googletest/googletest/scripts/pump.py	/^def ParseToAST(pump_src_text):$/;"	f
ParseToken	src/tests/googletest/googletest/scripts/pump.py	/^def ParseToken(lines, pos, regex, token_type):$/;"	f
PartialMatch	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  static bool PartialMatch(const ::std::string& str, const RE& re) {$/;"	f	class:testing::internal::RE	typeref:typename:bool
PartialMatch	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  static bool PartialMatch(const ::string& str, const RE& re) {$/;"	f	class:testing::internal::RE	typeref:typename:bool
PartialMatch	src/tests/googletest/googletest/src/gtest-port.cc	/^bool RE::PartialMatch(const char* str, const RE& re) {$/;"	f	class:testing::internal::RE	typeref:typename:bool
PartialOrderTest	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^  PartialOrderTest() {$/;"	f	class:__anon6b6cf3b20111::PartialOrderTest	file:
PartialOrderTest	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^class PartialOrderTest : public testing::Test {$/;"	c	namespace:__anon6b6cf3b20111	file:
Passed	src/tests/googletest/googletest/include/gtest/gtest.h	/^  bool Passed() const { return !Failed(); }$/;"	f	class:testing::TestCase	typeref:typename:bool
Passed	src/tests/googletest/googletest/include/gtest/gtest.h	/^  bool Passed() const { return !Failed(); }$/;"	f	class:testing::TestResult	typeref:typename:bool
Passed	src/tests/googletest/googletest/src/gtest-death-test.cc	/^bool DeathTestImpl::Passed(bool status_ok) {$/;"	f	class:testing::internal::DeathTestImpl	typeref:typename:bool
Passed	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  bool Passed() const { return !Failed(); }$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:bool
Passed	src/tests/googletest/googletest/src/gtest.cc	/^bool UnitTest::Passed() const { return impl()->Passed(); }$/;"	f	class:testing::UnitTest	typeref:typename:bool
Passed	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  virtual bool Passed(bool exit_status_ok) {$/;"	f	class:MockDeathTest	typeref:typename:bool	file:
PassedArgument	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  bool PassedArgument(int n) const { return passed_args_[n]; }$/;"	f	class:MockDeathTestFactory	typeref:typename:bool	file:
PassedCalls	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  size_t PassedCalls() const { return passed_args_.size(); }$/;"	f	class:MockDeathTestFactory	typeref:typename:size_t	file:
PatternMatchesString	src/tests/googletest/googletest/src/gtest.cc	/^bool UnitTestOptions::PatternMatchesString(const char *pattern,$/;"	f	class:testing::internal::UnitTestOptions	typeref:typename:bool
PayloadMessage	src/muduo/examples/ace/ttcp/common.h	/^struct PayloadMessage$/;"	s
Peek	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  const T& Peek() const { return *value_ptr_; }$/;"	f	class:testing::internal::ReferenceOrValueWrapper	typeref:typename:const T &
Peek	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  const T& Peek() const {$/;"	f	class:testing::internal::ReferenceOrValueWrapper	typeref:typename:const T &
PeekToken	src/tests/googletest/googletest/scripts/pump.py	/^def PeekToken(a_list):$/;"	f
PerThread	src/muduo/examples/protobuf/rpcbalancer/balancer.cc	/^    PerThread() : current(0) { }$/;"	f	struct:Balancer::PerThread	file:
PerThread	src/muduo/examples/protobuf/rpcbalancer/balancer.cc	/^  struct PerThread$/;"	s	class:Balancer	file:
PerThread	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^    PerThread() : current(0) { }$/;"	f	struct:Balancer::PerThread	file:
PerThread	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^  struct PerThread$/;"	s	class:Balancer	file:
Percentile	src/muduo/examples/sudoku/percentile.h	/^  Percentile(std::vector<int>& latencies, int infly)$/;"	f	class:Percentile
Percentile	src/muduo/examples/sudoku/percentile.h	/^class Percentile$/;"	c
Perform	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    virtual Result Perform(const ArgumentTuple& args) {$/;"	f	class:testing::PolymorphicAction::MonomorphicImpl	typeref:typename:Result
Perform	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    virtual Result Perform(const ArgumentTuple& args) {$/;"	f	class:testing::internal::DoBothAction::Impl	typeref:typename:Result
Perform	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    virtual Result Perform(const ArgumentTuple&) { return value_; }$/;"	f	class:testing::internal::ReturnAction::Impl	typeref:typename:Result
Perform	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    virtual Result Perform(const ArgumentTuple&) {$/;"	f	class:testing::internal::ReturnAction::Impl	typeref:typename:Result
Perform	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    virtual Result Perform(const ArgumentTuple&) {$/;"	f	class:testing::internal::ReturnRefAction::Impl	typeref:typename:Result
Perform	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    virtual Result Perform(const ArgumentTuple&) {$/;"	f	class:testing::internal::ReturnRefOfCopyAction::Impl	typeref:typename:Result
Perform	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    virtual void Perform(const ArgumentTuple& args) {$/;"	f	class:testing::internal::IgnoreResultAction::Impl	typeref:typename:void
Perform	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  Result Perform(const ArgumentTuple& \/* args *\/) const {$/;"	f	class:testing::internal::SetErrnoAndReturnAction	typeref:typename:Result
Perform	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  Result Perform(const ArgumentTuple& args) const {$/;"	f	class:testing::Action	typeref:typename:Result
Perform	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  Result Perform(const ArgumentTuple&) const {$/;"	f	class:testing::internal::InvokeMethodWithoutArgsAction	typeref:typename:Result
Perform	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  Result Perform(const ArgumentTuple&) { return function_impl_(); }$/;"	f	class:testing::internal::InvokeWithoutArgsAction	typeref:typename:Result
Perform	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  static Result Perform(const ArgumentTuple&) {$/;"	f	class:testing::internal::ReturnNullAction	typeref:typename:Result
Perform	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  static void Perform(const ArgumentTuple&) {$/;"	f	class:testing::internal::ReturnVoidAction	typeref:typename:void
Perform	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  virtual Result Perform(const ArgumentTuple& args) {$/;"	f	class:testing::internal::ActionAdaptor	typeref:typename:Result
Perform	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  void Perform(const ArgumentTuple& \/* args *\/) const {$/;"	f	class:testing::internal::AssignAction	typeref:typename:void
Perform	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  void Perform(const ArgumentTuple& args) const {$/;"	f	class:testing::internal::SetArgumentPointeeAction	typeref:typename:void
Perform	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^    virtual Result Perform(const ArgumentTuple& args) {$/;"	f	class:testing::internal::WithArgsAction::Impl	typeref:typename:Result
Perform	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^  static Result Perform(Impl* impl, const ::testing::tuple<>& args) {$/;"	f	class:testing::internal::ActionHelper	typeref:typename:Result
Perform	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^  static Result Perform(Impl* impl, const ::testing::tuple<A0, A1, A2, A3, A4,$/;"	f	class:testing::internal::ActionHelper	typeref:typename:Result
Perform	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^  static Result Perform(Impl* impl, const ::testing::tuple<A0, A1, A2, A3,$/;"	f	class:testing::internal::ActionHelper	typeref:typename:Result
Perform	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^  static Result Perform(Impl* impl, const ::testing::tuple<A0, A1, A2,$/;"	f	class:testing::internal::ActionHelper	typeref:typename:Result
Perform	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^  static Result Perform(Impl* impl, const ::testing::tuple<A0, A1, A2>& args) {$/;"	f	class:testing::internal::ActionHelper	typeref:typename:Result
Perform	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^  static Result Perform(Impl* impl, const ::testing::tuple<A0, A1>& args) {$/;"	f	class:testing::internal::ActionHelper	typeref:typename:Result
Perform	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^  static Result Perform(Impl* impl, const ::testing::tuple<A0>& args) {$/;"	f	class:testing::internal::ActionHelper	typeref:typename:Result
Perform	src/tests/googletest/googlemock/include/gmock/gmock-more-actions.h	/^  Result Perform(const ArgumentTuple& args) const {$/;"	f	class:testing::internal::InvokeMethodAction	typeref:typename:Result
Perform	src/tests/googletest/googlemock/include/gmock/gmock-more-actions.h	/^  Result Perform(const ArgumentTuple& args) {$/;"	f	class:testing::internal::InvokeAction	typeref:typename:Result
Perform	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^  Result Perform(const ArgumentTuple& args) { return get<1>(args); }$/;"	f	class:__anon550198f10111::ReturnSecondArgumentAction	typeref:typename:Result	file:
Perform	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^  Result Perform(const tuple<>&) const { return 0; }$/;"	f	class:__anon550198f10111::ReturnZeroFromNullaryFunctionAction	typeref:typename:Result	file:
Perform	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^  virtual bool Perform(const tuple<int>& arg) {$/;"	f	class:__anon550198f10111::IsNotZero	typeref:typename:bool	file:
Perform	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^  virtual int Perform(const tuple<bool, int>& args) {$/;"	f	class:__anon550198f10111::MyActionImpl	typeref:typename:int	file:
Perform	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^  virtual int Perform(const tuple<int, int>& args) {$/;"	f	class:testing::gmock_generated_actions_test::SubstractAction	typeref:typename:int	file:
PerformAction	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  PerformAction(const Action<F>& action,$/;"	f	class:testing::internal::ActionResultHolder	typeref:typename:ActionResultHolder *
PerformAction	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  static ActionResultHolder* PerformAction($/;"	f	class:testing::internal::ActionResultHolder	typeref:typename:ActionResultHolder *
PerformDefaultAction	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  Result PerformDefaultAction(const ArgumentTuple& args,$/;"	f	class:testing::internal::FunctionMockerBase	typeref:typename:Result
PerformDefaultAction	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  static ActionResultHolder* PerformDefaultAction($/;"	f	class:testing::internal::ActionResultHolder	typeref:typename:ActionResultHolder *
PerformanceInspector	src/muduo/muduo/net/inspect/PerformanceInspector.h	/^class PerformanceInspector : noncopyable$/;"	c	namespace:muduo::net
Performing Different Actions Based on the Arguments	src/tests/googletest/googlemock/docs/CookBook.md	/^## Performing Different Actions Based on the Arguments ##$/;"	s	chapter:Using Matchers
Performing Different Actions Based on the Arguments	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Performing Different Actions Based on the Arguments ##$/;"	s	chapter:Using Matchers
Performing Different Actions Based on the Arguments	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Performing Different Actions Based on the Arguments ##$/;"	s	chapter:Using Matchers
Performing Different Actions Based on the Arguments	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Performing Different Actions Based on the Arguments ##$/;"	s	chapter:Using Matchers
PeriodicTimer	src/muduo/muduo/net/tests/Channel_test.cc	/^  PeriodicTimer(EventLoop* loop, double interval, const TimerCallback& cb)$/;"	f	class:PeriodicTimer	file:
PeriodicTimer	src/muduo/muduo/net/tests/Channel_test.cc	/^class PeriodicTimer$/;"	c	file:
Piece	src/muduo/examples/curl/download.cc	/^  Piece(const curl::RequestPtr& req,$/;"	f	class:Piece	file:
Piece	src/muduo/examples/curl/download.cc	/^class Piece : noncopyable$/;"	c	file:
Ping	src/muduo/contrib/thrift/tests/ping/ping.thrift	/^service Ping$/;"	v
PingHandler	src/muduo/contrib/thrift/tests/ping/PingServer.cc	/^  PingHandler()$/;"	f	class:PingHandler	file:
PingHandler	src/muduo/contrib/thrift/tests/ping/PingServer.cc	/^class PingHandler : virtual public PingIf$/;"	c	file:
PipelineFactory	src/muduo/examples/filetransfer/loadtest/Client.java	/^        private PipelineFactory(int kMinLength, int kMaxLength, CountDownLatch latch) {$/;"	m	class:Client.PipelineFactory	file:
PipelineFactory	src/muduo/examples/filetransfer/loadtest/Client.java	/^    private static final class PipelineFactory implements ChannelPipelineFactory {$/;"	c	class:Client
Platforms	src/tests/googletest/README.md	/^## Platforms ##$/;"	s	chapter:Google Test
Please Be Friendly	src/tests/googletest/googlemock/docs/DevGuide.md	/^### Please Be Friendly ###$/;"	S	section:Introduction""The Google Mock Community
Please Be Friendly	src/tests/googletest/googletest/docs/DevGuide.md	/^### Please Be Friendly ###$/;"	S	section:Introduction""The Google Test Community
Plot	src/muduo/examples/procmon/plot.cc	/^Plot::Plot(int width, int height, int totalSeconds, int samplingPeriod)$/;"	f	class:Plot
Plot	src/muduo/examples/procmon/plot.h	/^class Plot : muduo::noncopyable$/;"	c
Plus1	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^const char* Plus1(const char* s) { return s + 1; }$/;"	f	namespace:testing::gmock_generated_actions_test	typeref:typename:const char *
Plus1	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^const char* Plus1(const char* s) { return s + 1; }$/;"	f	namespace:testing::gmock_more_actions_test	typeref:typename:const char *
Pointee	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^        GTEST_REMOVE_REFERENCE_(Pointer))>::type Pointee;$/;"	t	class:testing::internal::PointeeMatcher::Impl
Pointee	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline internal::PointeeMatcher<InnerMatcher> Pointee($/;"	f	namespace:testing	typeref:typename:internal::PointeeMatcher<InnerMatcher>
PointeeMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit PointeeMatcher(const InnerMatcher& matcher) : matcher_(matcher) {}$/;"	f	class:testing::internal::PointeeMatcher
PointeeMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class PointeeMatcher {$/;"	c	namespace:testing::internal
PointeeOf	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^struct PointeeOf {$/;"	s	namespace:testing::internal
PointeeOf	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^struct PointeeOf<T*> { typedef T type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
Pointer Matchers	src/tests/googletest/googlemock/docs/CheatSheet.md	/^## Pointer Matchers ##$/;"	s	chapter:Matchers
Pointer Matchers	src/tests/googletest/googlemock/docs/v1_5/CheatSheet.md	/^## Pointer Matchers ##$/;"	s	chapter:Matchers
Pointer Matchers	src/tests/googletest/googlemock/docs/v1_6/CheatSheet.md	/^## Pointer Matchers ##$/;"	s	chapter:Matchers
Pointer Matchers	src/tests/googletest/googlemock/docs/v1_7/CheatSheet.md	/^## Pointer Matchers ##$/;"	s	chapter:Matchers
PointerPrintable	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^struct PointerPrintable {$/;"	s	namespace:foo	file:
Pointwise	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^Pointwise(const TupleMatcher& tuple_matcher, const Container& rhs) {$/;"	f	namespace:testing	typeref:typename:internal::PointwiseMatcher<TupleMatcher,GTEST_REMOVE_CONST_ (Container)>
Pointwise	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline internal::PointwiseMatcher<TupleMatcher, std::vector<T> > Pointwise($/;"	f	namespace:testing	typeref:typename:internal::PointwiseMatcher<TupleMatcher,std::vector<T>>
PointwiseMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  PointwiseMatcher(const TupleMatcher& tuple_matcher, const RhsContainer& rhs)$/;"	f	class:testing::internal::PointwiseMatcher
PointwiseMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class PointwiseMatcher {$/;"	c	namespace:testing::internal
PollFdList	src/muduo/muduo/net/poller/PollPoller.h	/^  typedef std::vector<struct pollfd> PollFdList;$/;"	t	class:muduo::net::PollPoller	typeref:typename:std::vector<struct pollfd>
PollPoller	src/muduo/muduo/net/poller/PollPoller.cc	/^PollPoller::PollPoller(EventLoop* loop)$/;"	f	class:PollPoller
PollPoller	src/muduo/muduo/net/poller/PollPoller.h	/^class PollPoller : public Poller$/;"	c	namespace:muduo::net
Poller	src/muduo/muduo/net/Poller.cc	/^Poller::Poller(EventLoop* loop)$/;"	f	class:Poller
Poller	src/muduo/muduo/net/Poller.h	/^class Poller : noncopyable$/;"	c	namespace:muduo::net
PolymorphicAction	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  explicit PolymorphicAction(const Impl& impl) : impl_(impl) {}$/;"	f	class:testing::PolymorphicAction
PolymorphicAction	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^class PolymorphicAction {$/;"	c	namespace:testing
PolymorphicFunctor	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^struct PolymorphicFunctor {$/;"	s	namespace:testing::gmock_matchers_test	file:
PolymorphicIsEven	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^PolymorphicMatcher<PolymorphicIsEvenImpl> PolymorphicIsEven() {$/;"	f	namespace:testing::gmock_matchers_test	typeref:typename:PolymorphicMatcher<PolymorphicIsEvenImpl>
PolymorphicIsEvenImpl	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^class PolymorphicIsEvenImpl {$/;"	c	namespace:testing::gmock_matchers_test	file:
PolymorphicMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit PolymorphicMatcher(const Impl& an_impl) : impl_(an_impl) {}$/;"	f	class:testing::PolymorphicMatcher
PolymorphicMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class PolymorphicMatcher {$/;"	c	namespace:testing
PolynomialTest	src/tests/polynomial_test.cpp	/^    class PolynomialTest : public ::testing::Test {$/;"	c	namespace:__anon87ebe9520111	file:
PolynomialTest	src/tests/small_size_test.cpp	/^    class PolynomialTest : public ::testing::Test {$/;"	c	namespace:__anon9baab4410111	file:
Polynomial_Mul_Start_Offset_0	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint8_t    Polynomial_Mul_Start_Offset_0 = 0;        $/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint8_t
Polynomial_Mul_Start_Offset_1	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint8_t    Polynomial_Mul_Start_Offset_1 = 1;        $/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint8_t
Polynomial_Mul_Start_Offset_2	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint8_t    Polynomial_Mul_Start_Offset_2 = 2;        $/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint8_t
Polynomial_Mul_Start_Offset_3	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint8_t    Polynomial_Mul_Start_Offset_3 = 3;        $/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint8_t
Polynomial_Mul_Start_Offset_4	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint8_t    Polynomial_Mul_Start_Offset_4 = 4;        $/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint8_t
Polynomial_Mul_Start_Offset_5	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint8_t    Polynomial_Mul_Start_Offset_5 = 5;        $/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint8_t
Polynomial_Mul_Start_Offset_6	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint8_t    Polynomial_Mul_Start_Offset_6 = 6;        $/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint8_t
Polynomial_Mul_Start_Offset_7	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint8_t    Polynomial_Mul_Start_Offset_7 = 7;        $/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint8_t
Polynomial_Mul_Start_Offsets	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static constexpr const uint8_t Polynomial_Mul_Start_Offsets[] = {$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint8_t[]
Pop	src/tests/googletest/googletest/scripts/pump.py	/^  def Pop(token_type=None):$/;"	f	function:ParseAtomicCodeNode	file:
Pop	src/tests/googletest/googletest/scripts/pump.py	/^  def Pop(token_type=None):$/;"	f	function:ParseElseNode	file:
PopFront	src/tests/googletest/googletest/scripts/pump.py	/^def PopFront(a_list):$/;"	f
PopGTestTrace	src/tests/googletest/googletest/src/gtest.cc	/^void UnitTest::PopGTestTrace()$/;"	f	class:testing::UnitTest	typeref:typename:void
PopMatch	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  void PopMatch() {$/;"	f	class:testing::gmock_matchers_test::__anon745c08170311::BacktrackingMaxBPMState	typeref:typename:void	file:
PopRange	src/tests/googletest/googletest/scripts/pump.py	/^  def PopRange(self):$/;"	m	class:Env
PopToken	src/tests/googletest/googletest/scripts/pump.py	/^def PopToken(a_list, token_type=None):$/;"	f
PopVariable	src/tests/googletest/googletest/scripts/pump.py	/^  def PopVariable(self):$/;"	m	class:Env
PortableLocaltime	src/tests/googletest/googletest/src/gtest.cc	/^static bool PortableLocaltime(time_t seconds, struct tm* out) {$/;"	f	namespace:testing::internal	typeref:typename:bool	file:
PostFlagParsingInit	src/tests/googletest/googletest/src/gtest.cc	/^void UnitTestImpl::PostFlagParsingInit() {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:void
PostIncrProxy	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^      explicit PostIncrProxy(const value_type& value) : value_(value) {}$/;"	f	class:testing::gmock_matchers_test::Streamlike::ConstIter::PostIncrProxy	file:
PostIncrProxy	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^    class PostIncrProxy {$/;"	c	class:testing::gmock_matchers_test::Streamlike::ConstIter	file:
PreCalculatedPrimeTable	src/tests/googletest/googletest/samples/prime_tables.h	/^  explicit PreCalculatedPrimeTable(int max)$/;"	f	class:PreCalculatedPrimeTable
PreCalculatedPrimeTable	src/tests/googletest/googletest/samples/prime_tables.h	/^class PreCalculatedPrimeTable : public PrimeTable {$/;"	c
PredFormatFunction1	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^testing::AssertionResult PredFormatFunction1(const char* e1,$/;"	f	typeref:typename:testing::AssertionResult
PredFormatFunction2	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^testing::AssertionResult PredFormatFunction2(const char* e1,$/;"	f	typeref:typename:testing::AssertionResult
PredFormatFunction3	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^testing::AssertionResult PredFormatFunction3(const char* e1,$/;"	f	typeref:typename:testing::AssertionResult
PredFormatFunction4	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^testing::AssertionResult PredFormatFunction4(const char* e1,$/;"	f	typeref:typename:testing::AssertionResult
PredFormatFunction5	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^testing::AssertionResult PredFormatFunction5(const char* e1,$/;"	f	typeref:typename:testing::AssertionResult
PredFormatFunctor1	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^struct PredFormatFunctor1 {$/;"	s	file:
PredFormatFunctor2	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^struct PredFormatFunctor2 {$/;"	s	file:
PredFormatFunctor3	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^struct PredFormatFunctor3 {$/;"	s	file:
PredFormatFunctor4	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^struct PredFormatFunctor4 {$/;"	s	file:
PredFormatFunctor5	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^struct PredFormatFunctor5 {$/;"	s	file:
PredFunction1	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^bool PredFunction1(T1 v1) {$/;"	f	typeref:typename:bool
PredFunction1Bool	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^bool PredFunction1Bool(Bool v1) {$/;"	f	typeref:typename:bool
PredFunction1Int	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^bool PredFunction1Int(int v1) {$/;"	f	typeref:typename:bool
PredFunction2	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^bool PredFunction2(T1 v1, T2 v2) {$/;"	f	typeref:typename:bool
PredFunction2Bool	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^bool PredFunction2Bool(Bool v1, Bool v2) {$/;"	f	typeref:typename:bool
PredFunction2Int	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^bool PredFunction2Int(int v1, int v2) {$/;"	f	typeref:typename:bool
PredFunction3	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^bool PredFunction3(T1 v1, T2 v2, T3 v3) {$/;"	f	typeref:typename:bool
PredFunction3Bool	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^bool PredFunction3Bool(Bool v1, Bool v2, Bool v3) {$/;"	f	typeref:typename:bool
PredFunction3Int	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^bool PredFunction3Int(int v1, int v2, int v3) {$/;"	f	typeref:typename:bool
PredFunction4	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^bool PredFunction4(T1 v1, T2 v2, T3 v3, T4 v4) {$/;"	f	typeref:typename:bool
PredFunction4Bool	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^bool PredFunction4Bool(Bool v1, Bool v2, Bool v3, Bool v4) {$/;"	f	typeref:typename:bool
PredFunction4Int	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^bool PredFunction4Int(int v1, int v2, int v3, int v4) {$/;"	f	typeref:typename:bool
PredFunction5	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^bool PredFunction5(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5) {$/;"	f	typeref:typename:bool
PredFunction5Bool	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^bool PredFunction5Bool(Bool v1, Bool v2, Bool v3, Bool v4, Bool v5) {$/;"	f	typeref:typename:bool
PredFunction5Int	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^bool PredFunction5Int(int v1, int v2, int v3, int v4, int v5) {$/;"	f	typeref:typename:bool
PredFunctor1	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^struct PredFunctor1 {$/;"	s	file:
PredFunctor2	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^struct PredFunctor2 {$/;"	s	file:
PredFunctor3	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^struct PredFunctor3 {$/;"	s	file:
PredFunctor4	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^struct PredFunctor4 {$/;"	s	file:
PredFunctor5	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^struct PredFunctor5 {$/;"	s	file:
Predicate Assertions for Better Error Messages	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^## Predicate Assertions for Better Error Messages ##$/;"	s	chapter:More Assertions
Predicate Assertions for Better Error Messages	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^## Predicate Assertions for Better Error Messages ##$/;"	s	chapter:More Assertions
Predicate Assertions for Better Error Messages	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^## Predicate Assertions for Better Error Messages ##$/;"	s	chapter:More Assertions
Predicate Assertions for Better Error Messages	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^## Predicate Assertions for Better Error Messages ##$/;"	s	chapter:More Assertions
Predicate1Test	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^class Predicate1Test : public testing::Test {$/;"	c	file:
Predicate2Test	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^class Predicate2Test : public testing::Test {$/;"	c	file:
Predicate3Test	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^class Predicate3Test : public testing::Test {$/;"	c	file:
Predicate4Test	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^class Predicate4Test : public testing::Test {$/;"	c	file:
Predicate5Test	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^class Predicate5Test : public testing::Test {$/;"	c	file:
PredicateFormatterFromMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit PredicateFormatterFromMatcher(M m) : matcher_(internal::move(m)) {}$/;"	f	class:testing::internal::PredicateFormatterFromMatcher
PredicateFormatterFromMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class PredicateFormatterFromMatcher {$/;"	c	namespace:testing::internal
PrematureExitDeathTest	src/tests/googletest/googletest/test/gtest_premature_exit_test.cc	/^typedef PrematureExitTest PrematureExitDeathTest;$/;"	t	namespace:__anonb806fa6c0111	typeref:typename:PrematureExitTest	file:
PrematureExitFileExists	src/tests/googletest/googletest/test/gtest_premature_exit_test.cc	/^  bool PrematureExitFileExists() const {$/;"	f	class:__anonb806fa6c0111::PrematureExitTest	typeref:typename:bool	file:
PrematureExitTest	src/tests/googletest/googletest/test/gtest_premature_exit_test.cc	/^  PrematureExitTest() {$/;"	f	class:__anonb806fa6c0111::PrematureExitTest	file:
PrematureExitTest	src/tests/googletest/googletest/test/gtest_premature_exit_test.cc	/^class PrematureExitTest : public Test {$/;"	c	namespace:__anonb806fa6c0111	file:
Preparing to Build (Unix only)	src/tests/googletest/googlemock/README.md	/^#### Preparing to Build (Unix only) ####$/;"	t	subsection:Getting Started""Building Google Mock
PrettyUnitTestResultPrinter	src/tests/googletest/googletest/src/gtest.cc	/^  PrettyUnitTestResultPrinter() {}$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter	file:
PrettyUnitTestResultPrinter	src/tests/googletest/googletest/src/gtest.cc	/^class PrettyUnitTestResultPrinter : public TestEventListener {$/;"	c	namespace:testing::internal	file:
PrimeTable	src/tests/googletest/googletest/samples/prime_tables.h	/^class PrimeTable {$/;"	c
PrimeTableImplementations	src/tests/googletest/googletest/samples/sample6_unittest.cc	/^    PrimeTableImplementations;$/;"	t	typeref:typename:Types<OnTheFlyPrimeTable,PreCalculatedPrimeTable>	file:
PrimeTableTest	src/tests/googletest/googletest/samples/sample6_unittest.cc	/^  PrimeTableTest() : table_(CreatePrimeTable<T>()) {}$/;"	f	class:PrimeTableTest	file:
PrimeTableTest	src/tests/googletest/googletest/samples/sample6_unittest.cc	/^class PrimeTableTest : public testing::Test {$/;"	c	file:
PrimeTableTest	src/tests/googletest/googletest/samples/sample7_unittest.cc	/^class PrimeTableTest : public TestWithParam<CreatePrimeTableFunc*> {$/;"	c	file:
PrimeTableTest	src/tests/googletest/googletest/samples/sample8_unittest.cc	/^class PrimeTableTest : public TestWithParam< ::testing::tuple<bool, int> > {$/;"	c	file:
PrimeTableTest2	src/tests/googletest/googletest/samples/sample6_unittest.cc	/^class PrimeTableTest2 : public PrimeTableTest<T> {$/;"	c	file:
Print	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^  static void Print(char* str, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalTersePrinter	typeref:typename:void
Print	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^  static void Print(const T (&a)[N], ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalPrinter	typeref:typename:void
Print	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^  static void Print(const T (&value)[N], ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalTersePrinter	typeref:typename:void
Print	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^  static void Print(const T& value, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalPrinter	typeref:typename:GTEST_DISABLE_MSC_WARNINGS_PUSH_ (4180)void
Print	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^  static void Print(const T& value, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalTersePrinter	typeref:typename:void
Print	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^  static void Print(const char* str, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalTersePrinter	typeref:typename:void
Print	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^  static void Print(const wchar_t* str, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalTersePrinter	typeref:typename:void
Print	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^  static void Print(wchar_t* str, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalTersePrinter	typeref:typename:void
Print	src/tests/googletest/googletest/samples/sample4.cc	/^void Counter::Print() const {$/;"	f	class:Counter	typeref:typename:void
Print	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^std::string Print(const T& value) {$/;"	f	namespace:testing::gtest_printers_test	typeref:typename:std::string
PrintAllIndentifiers	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^def PrintAllIndentifiers(filenames, should_print):$/;"	f
PrintArrayHelper	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^std::string PrintArrayHelper(T (&a)[N]) {$/;"	f	namespace:testing::gtest_printers_test	typeref:typename:std::string
PrintAsActionResult	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  virtual void PrintAsActionResult(::std::ostream* \/* os *\/) const {}$/;"	f	class:testing::internal::ActionResultHolder	typeref:typename:void
PrintAsActionResult	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  virtual void PrintAsActionResult(::std::ostream* os) const {$/;"	f	class:testing::internal::ActionResultHolder	typeref:typename:void
PrintAsCharLiteralTo	src/tests/googletest/googletest/src/gtest-printers.cc	/^static CharFormat PrintAsCharLiteralTo(Char c, ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:CharFormat	file:
PrintAsStringLiteralTo	src/tests/googletest/googletest/src/gtest-printers.cc	/^static CharFormat PrintAsStringLiteralTo(char c, ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:CharFormat	file:
PrintAsStringLiteralTo	src/tests/googletest/googletest/src/gtest-printers.cc	/^static CharFormat PrintAsStringLiteralTo(wchar_t c, ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:CharFormat	file:
PrintByRef	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^std::string PrintByRef(const T& value) {$/;"	f	namespace:testing::gtest_printers_test	typeref:typename:std::string
PrintByteSegmentInObjectTo	src/tests/googletest/googletest/src/gtest-printers.cc	/^void PrintByteSegmentInObjectTo(const unsigned char* obj_bytes, size_t start,$/;"	f	namespace:testing::__anon81520f2c0111	typeref:typename:GTEST_ATTRIBUTE_NO_SANITIZE_MEMORY_ GTEST_ATTRIBUTE_NO_SANITIZE_ADDRESS_ GTEST_ATTRIBUTE_NO_SANITIZE_THREAD_ void
PrintBytesInObjectTo	src/tests/googletest/googletest/src/gtest-printers.cc	/^void PrintBytesInObjectTo(const unsigned char* obj_bytes, size_t count,$/;"	f	namespace:testing::internal2	typeref:typename:void
PrintBytesInObjectToImpl	src/tests/googletest/googletest/src/gtest-printers.cc	/^void PrintBytesInObjectToImpl(const unsigned char* obj_bytes, size_t count,$/;"	f	namespace:testing::__anon81520f2c0111	typeref:typename:void
PrintCharAndCodeTo	src/tests/googletest/googletest/src/gtest-printers.cc	/^void PrintCharAndCodeTo(Char c, ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintCharsAsStringTo	src/tests/googletest/googletest/src/gtest-printers.cc	/^static void PrintCharsAsStringTo($/;"	f	namespace:testing::internal	typeref:typename:GTEST_ATTRIBUTE_NO_SANITIZE_MEMORY_ GTEST_ATTRIBUTE_NO_SANITIZE_ADDRESS_ GTEST_ATTRIBUTE_NO_SANITIZE_THREAD_ void	file:
PrintColorEncoded	src/tests/googletest/googletest/src/gtest.cc	/^static void PrintColorEncoded(const char* str) {$/;"	f	namespace:testing::internal	typeref:typename:void	file:
PrintFailedTests	src/tests/googletest/googletest/src/gtest.cc	/^void PrettyUnitTestResultPrinter::PrintFailedTests(const UnitTest& unit_test) {$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter	typeref:typename:void
PrintFlag	src/tests/googletest/googletest/test/gtest_env_var_test_.cc	/^void PrintFlag(const char* flag) {$/;"	f	namespace:testing	typeref:typename:void
PrintFullTestCommentIfPresent	src/tests/googletest/googletest/src/gtest.cc	/^void PrintFullTestCommentIfPresent(const TestInfo& test_info) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintHeader	src/tests/googletest/googletest/src/gtest.cc	/^  void PrintHeader(std::ostream* ss) const {$/;"	f	class:testing::internal::edit_distance::__anon3f29b7680211::Hunk	typeref:typename:void	file:
PrintIfNotEmpty	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline void PrintIfNotEmpty(const std::string& explanation,$/;"	f	namespace:testing::internal	typeref:typename:void
PrintIndentifiers	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^def PrintIndentifiers(filename, should_print):$/;"	f
PrintIndices	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^  static void PrintIndices(::std::ostream* os) {$/;"	f	class:testing::internal::ArgsMatcherImpl	typeref:typename:void
PrintMeNot	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^class PrintMeNot {};$/;"	c	namespace:__anon6b6cf3b20111	file:
PrintOnOneLine	src/tests/googletest/googletest/src/gtest.cc	/^static void PrintOnOneLine(const char* str, int max_length) {$/;"	f	namespace:testing::internal	typeref:typename:void	file:
PrintPointer	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^static std::string PrintPointer(const void* p) {$/;"	f	namespace:testing::gtest_printers_test	typeref:typename:std::string	file:
PrintPrefixTo	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^  static void PrintPrefixTo(const Tuple& t, ::std::ostream* os) {$/;"	f	struct:testing::internal::TuplePrefixPrinter	typeref:typename:void
PrintPrefixTo	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^  static void PrintPrefixTo(const Tuple&, ::std::ostream*) {}$/;"	f	struct:testing::internal::TuplePrefixPrinter	typeref:typename:void
PrintRawArrayTo	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^void PrintRawArrayTo(const T a[], size_t count, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintStringTo	src/tests/googletest/googletest/src/gtest-printers.cc	/^void PrintStringTo(const ::std::string& s, ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintStringTo	src/tests/googletest/googletest/src/gtest-printers.cc	/^void PrintStringTo(const ::string& s, ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTestName	src/tests/googletest/googletest/src/gtest.cc	/^  static void PrintTestName(const char * test_case, const char * test) {$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter	typeref:typename:void	file:
PrintTestPartResult	src/tests/googletest/googletest/src/gtest.cc	/^static void PrintTestPartResult(const TestPartResult& test_part_result) {$/;"	f	namespace:testing::internal	typeref:typename:void	file:
PrintTestPartResultToString	src/tests/googletest/googletest/src/gtest.cc	/^static std::string PrintTestPartResultToString($/;"	f	namespace:testing::internal	typeref:typename:std::string	file:
PrintTime	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static Flags PrintTime(bool print_time) {$/;"	f	struct:testing::Flags	typeref:typename:Flags	file:
PrintTo	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^void PrintTo(const ReferenceWrapper<T>& ref, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^void PrintTo(PrintMeNot \/* dummy *\/, ::std::ostream* \/* os *\/) {$/;"	f	namespace:__anon6b6cf3b20111	typeref:typename:void
PrintTo	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^void PrintTo(const Incomplete& \/* x *\/, ::std::ostream* os) {$/;"	f	namespace:__anon6b6cf3b20111	typeref:typename:void
PrintTo	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^inline void PrintTo(bool x, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^inline void PrintTo(char c, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^inline void PrintTo(char* s, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^inline void PrintTo(const ::std::string& s, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^inline void PrintTo(const ::std::tr1::tuple<>& t, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^inline void PrintTo(const ::std::wstring& s, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^inline void PrintTo(const ::string& s, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^inline void PrintTo(const ::wstring& s, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^inline void PrintTo(const signed char* s, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^inline void PrintTo(const unsigned char* s, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^inline void PrintTo(signed char* s, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^inline void PrintTo(unsigned char* s, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^inline void PrintTo(wchar_t* s, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^void PrintTo($/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^void PrintTo(const ::std::pair<T1, T2>& value, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^void PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>& t,$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^void PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8>& t,$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^void PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7>& t,$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^void PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4, T5, T6>& t,$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^void PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4, T5>& t,$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^void PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4>& t, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^void PrintTo(const ::std::tr1::tuple<T1, T2, T3>& t, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^void PrintTo(const ::std::tr1::tuple<T1, T2>& t, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^void PrintTo(const ::std::tr1::tuple<T1>& t, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^void PrintTo(const ::std::tuple<Types...>& t, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^void PrintTo(const T& value, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	src/tests/googletest/googletest/src/gtest-printers.cc	/^void PrintTo(const char* s, ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	src/tests/googletest/googletest/src/gtest-printers.cc	/^void PrintTo(const wchar_t* s, ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	src/tests/googletest/googletest/src/gtest-printers.cc	/^void PrintTo(signed char c, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	src/tests/googletest/googletest/src/gtest-printers.cc	/^void PrintTo(unsigned char c, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	src/tests/googletest/googletest/src/gtest-printers.cc	/^void PrintTo(wchar_t wc, ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	src/tests/googletest/googletest/src/gtest.cc	/^  void PrintTo(std::ostream* os) {$/;"	f	class:testing::internal::edit_distance::__anon3f29b7680211::Hunk	typeref:typename:void	file:
PrintTo	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^void PrintTo(EnumWithPrintTo e, std::ostream* os) {$/;"	f	typeref:typename:void
PrintTo	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^void PrintTo(const PrintableViaPrintTo& x, ::std::ostream* os) {$/;"	f	namespace:foo	typeref:typename:void
PrintTo	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^void PrintTo(const PrintableViaPrintToTemplate<T>& x, ::std::ostream* os) {$/;"	f	namespace:foo	typeref:typename:void
PrintTo	src/tests/googletest/googletest/test/gtest_list_tests_unittest_.cc	/^void PrintTo(const MyType& x, std::ostream* os) {$/;"	f	typeref:typename:void
PrintToString	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^::std::string PrintToString(const T& value) {$/;"	f	namespace:testing	typeref:typename:::std::string
PrintToStringParamName	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^struct PrintToStringParamName {$/;"	s	namespace:testing
PrintTriedExpectationsLocked	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  void PrintTriedExpectationsLocked($/;"	f	class:testing::internal::FunctionMockerBase	typeref:typename:void
PrintTupleTo	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^void PrintTupleTo(const Tuple& t, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintValue	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^  static void PrintValue(const T& value, ::std::ostream* os) {$/;"	f	class:testing::internal2::TypeWithoutFormatter	typeref:typename:void
PrintValue	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^::std::string PrintValue($/;"	f	typeref:typename:::std::string
PrintValue	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^::std::string PrintValue(const T& value) {$/;"	f	typeref:typename:::std::string
PrintValue	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^::std::string PrintValue(const tuple<T1, T2, T3>& value) {$/;"	f	typeref:typename:::std::string
PrintValue	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^::std::string PrintValue(const tuple<T1, T2>& value) {$/;"	f	typeref:typename:::std::string
PrintWideStringTo	src/tests/googletest/googletest/src/gtest-printers.cc	/^void PrintWideStringTo(const ::std::wstring& s, ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintWideStringTo	src/tests/googletest/googletest/src/gtest-printers.cc	/^void PrintWideStringTo(const ::wstring& s, ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintXmlTestCase	src/tests/googletest/googletest/src/gtest.cc	/^void XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream* stream,$/;"	f	class:testing::internal::XmlUnitTestResultPrinter	typeref:typename:void
PrintXmlUnitTest	src/tests/googletest/googletest/src/gtest.cc	/^void XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream* stream,$/;"	f	class:testing::internal::XmlUnitTestResultPrinter	typeref:typename:void
Printable	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^struct Printable {$/;"	s	namespace:__anon6b6cf3b20111	file:
PrintableViaPrintTo	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^  PrintableViaPrintTo() : value() {}$/;"	f	struct:foo::PrintableViaPrintTo	file:
PrintableViaPrintTo	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^struct PrintableViaPrintTo {$/;"	s	namespace:foo	file:
PrintableViaPrintToTemplate	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^  explicit PrintableViaPrintToTemplate(const T& a_value) : value_(a_value) {}$/;"	f	class:foo::PrintableViaPrintToTemplate	file:
PrintableViaPrintToTemplate	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^class PrintableViaPrintToTemplate {$/;"	c	namespace:foo	file:
Printer	src/muduo/examples/asio/tutorial/timer4/timer.cc	/^  Printer(muduo::net::EventLoop* loop)$/;"	f	class:Printer	file:
Printer	src/muduo/examples/asio/tutorial/timer4/timer.cc	/^class Printer : muduo::noncopyable$/;"	c	file:
Printer	src/muduo/examples/asio/tutorial/timer5/timer.cc	/^  Printer(muduo::net::EventLoop* loop1, muduo::net::EventLoop* loop2)$/;"	f	class:Printer	file:
Printer	src/muduo/examples/asio/tutorial/timer5/timer.cc	/^class Printer : muduo::noncopyable$/;"	c	file:
Printer	src/muduo/examples/asio/tutorial/timer6/timer.cc	/^  Printer(muduo::net::EventLoop* loop1, muduo::net::EventLoop* loop2)$/;"	f	class:Printer	file:
Printer	src/muduo/examples/asio/tutorial/timer6/timer.cc	/^class Printer : muduo::noncopyable$/;"	c	file:
Private Class Members	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^## Private Class Members ##$/;"	s	chapter:Testing Private Code
Private Class Members	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^## Private Class Members ##$/;"	s	chapter:Testing Private Code
Private Class Members	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^## Private Class Members ##$/;"	s	chapter:Testing Private Code
Private Class Members	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^## Private Class Members ##$/;"	s	chapter:Testing Private Code
PrivateCode	src/tests/googletest/googletest/test/production.cc	/^PrivateCode::PrivateCode() : x_(0) {}$/;"	f	class:PrivateCode
PrivateCode	src/tests/googletest/googletest/test/production.h	/^class PrivateCode {$/;"	c
PrivateCodeFixtureTest	src/tests/googletest/googletest/test/gtest_prod_test.cc	/^typedef testing::Test PrivateCodeFixtureTest;$/;"	t	typeref:typename:testing::Test	file:
Problem	src/tests/googletest/googlemock/docs/DesignDoc.md	/^## Problem ##$/;"	s	chapter:Macros for Defining Actions
ProcessFile	src/tests/googletest/googlemock/scripts/fuse_gmock_files.py	/^  def ProcessFile(gmock_header_path):$/;"	f	function:FuseGMockH	file:
ProcessFile	src/tests/googletest/googlemock/scripts/fuse_gmock_files.py	/^  def ProcessFile(gmock_source_file):$/;"	f	function:FuseGMockAllCcToFile	file:
ProcessFile	src/tests/googletest/googletest/scripts/fuse_gtest_files.py	/^  def ProcessFile(gtest_header_path):$/;"	f	function:FuseGTestH	file:
ProcessFile	src/tests/googletest/googletest/scripts/fuse_gtest_files.py	/^  def ProcessFile(gtest_source_file):$/;"	f	function:FuseGTestAllCcToFile	file:
ProcessInfo	src/muduo/muduo/base/ProcessInfo.h	/^namespace ProcessInfo$/;"	n	namespace:muduo
ProcessInspector	src/muduo/muduo/net/inspect/ProcessInspector.h	/^class ProcessInspector : noncopyable$/;"	c	namespace:muduo::net
Procmon	src/muduo/examples/procmon/procmon.cc	/^  Procmon(EventLoop* loop, pid_t pid, uint16_t port, const char* procname)$/;"	f	class:Procmon	file:
Procmon	src/muduo/examples/procmon/procmon.cc	/^class Procmon : noncopyable$/;"	c	file:
Produce	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    virtual T Produce() { return factory_(); }$/;"	f	class:testing::DefaultValue::FactoryValueProducer	typeref:typename:T
Produce	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    virtual T Produce() { return value_; }$/;"	f	class:testing::DefaultValue::FixedValueProducer	typeref:typename:T
Propagating Fatal Failures	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^## Propagating Fatal Failures ##$/;"	s	chapter:Using Assertions in Sub-routines
Propagating Fatal Failures	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^## Propagating Fatal Failures ##$/;"	s	chapter:Using Assertions in Sub-routines
Propagating Fatal Failures	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^## Propagating Fatal Failures ##$/;"	s	chapter:Using Assertions in Sub-routines
Propagating Fatal Failures	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^## Propagating Fatal Failures ##$/;"	s	chapter:Using Assertions in Sub-routines
Property	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  internal::PropertyMatcher<Class, PropertyType> > Property($/;"	f	namespace:testing	typeref:typename:PolymorphicMatcher<internal::PropertyMatcher<Class,PropertyType>>
PropertyMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  PropertyMatcher(PropertyType (Class::*property)() const,$/;"	f	class:testing::internal::PropertyMatcher
PropertyMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class PropertyMatcher {$/;"	c	namespace:testing::internal
PropertyOne	src/tests/googletest/googletest/test/gtest_xml_outfile1_test_.cc	/^class PropertyOne : public testing::Test {$/;"	c	file:
PropertyRecordingTest	src/tests/googletest/googletest/test/gtest_xml_output_unittest_.cc	/^class PropertyRecordingTest : public Test {$/;"	c	file:
PropertyTwo	src/tests/googletest/googletest/test/gtest_xml_outfile2_test_.cc	/^class PropertyTwo : public testing::Test {$/;"	c	file:
ProtectedFixtureMethodsTest	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class ProtectedFixtureMethodsTest : public Test {$/;"	c	file:
ProtobufCodec	src/muduo/examples/protobuf/codec/codec.h	/^  ProtobufCodec(const ProtobufMessageCallback& messageCb, const ErrorCallback& errorCb)$/;"	f	class:ProtobufCodec
ProtobufCodec	src/muduo/examples/protobuf/codec/codec.h	/^  explicit ProtobufCodec(const ProtobufMessageCallback& messageCb)$/;"	f	class:ProtobufCodec
ProtobufCodec	src/muduo/examples/protobuf/codec/codec.h	/^class ProtobufCodec : muduo::noncopyable$/;"	c
ProtobufCodecLite	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^  ProtobufCodecLite(const ::google::protobuf::Message* prototype,$/;"	f	class:muduo::net::ProtobufCodecLite
ProtobufCodecLite	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^class ProtobufCodecLite : noncopyable$/;"	c	namespace:muduo::net
ProtobufCodecLiteT	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^  explicit ProtobufCodecLiteT(const ProtobufMessageCallback& messageCb,$/;"	f	class:muduo::net::ProtobufCodecLiteT
ProtobufCodecLiteT	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^class ProtobufCodecLiteT$/;"	c	namespace:muduo::net
ProtobufDispatcher	src/muduo/examples/protobuf/codec/dispatcher.h	/^  explicit ProtobufDispatcher(const ProtobufMessageCallback& defaultCb)$/;"	f	class:ProtobufDispatcher
ProtobufDispatcher	src/muduo/examples/protobuf/codec/dispatcher.h	/^class ProtobufDispatcher$/;"	c
ProtobufDispatcherLite	src/muduo/examples/protobuf/codec/dispatcher_lite.h	/^  explicit ProtobufDispatcherLite(const ProtobufMessageCallback& defaultCb)$/;"	f	class:ProtobufDispatcherLite
ProtobufDispatcherLite	src/muduo/examples/protobuf/codec/dispatcher_lite.h	/^class ProtobufDispatcherLite : muduo::noncopyable$/;"	c
ProtobufMessageCallback	src/muduo/examples/protobuf/codec/codec.h	/^                                muduo::Timestamp)> ProtobufMessageCallback;$/;"	t	class:ProtobufCodec
ProtobufMessageCallback	src/muduo/examples/protobuf/codec/dispatcher.h	/^                                muduo::Timestamp)> ProtobufMessageCallback;$/;"	t	class:ProtobufDispatcher
ProtobufMessageCallback	src/muduo/examples/protobuf/codec/dispatcher_lite.h	/^                                muduo::Timestamp)> ProtobufMessageCallback;$/;"	t	class:ProtobufDispatcherLite
ProtobufMessageCallback	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^                              Timestamp)> ProtobufMessageCallback;$/;"	t	class:muduo::net::ProtobufCodecLite
ProtobufMessageCallback	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^                              Timestamp)> ProtobufMessageCallback;$/;"	t	class:muduo::net::ProtobufCodecLiteT
ProtobufMessageTCallback	src/muduo/examples/protobuf/codec/dispatcher.h	/^                                muduo::Timestamp)> ProtobufMessageTCallback;$/;"	t	class:CallbackT
ProtobufVersionCheck	src/muduo/muduo/net/protobuf/ProtobufCodecLite.cc	/^  int ProtobufVersionCheck()$/;"	f	namespace:__anon5ee53c750111	typeref:typename:int
ProtobufVersionCheck	src/muduo/muduo/net/protorpc/RpcCodec.cc	/^  int ProtobufVersionCheck()$/;"	f	namespace:__anon451a24830111	typeref:typename:int
Protocol	src/muduo/examples/memcached/server/Session.h	/^  enum Protocol$/;"	g	class:Session
ProxyPayload_ACK_OK	src/libtfhe-superaic-core/include/tfhe_package.h	/^class ProxyPayload_ACK_OK: public TFHE_Payload {$/;"	c
ProxyPayload_ACK_OK	src/libtfhe-superaic-core/tfhe_package.cpp	/^ProxyPayload_ACK_OK::ProxyPayload_ACK_OK():$/;"	f	class:ProxyPayload_ACK_OK
ProxyPayload_ACK_OK	src/libtfhe-superaic-core/tfhe_package.cpp	/^ProxyPayload_ACK_OK::ProxyPayload_ACK_OK(string &msg):$/;"	f	class:ProxyPayload_ACK_OK
PubSubClient	src/muduo/examples/hub/pubsub.cc	/^PubSubClient::PubSubClient(EventLoop* loop,$/;"	f	class:PubSubClient
PubSubClient	src/muduo/examples/hub/pubsub.h	/^class PubSubClient : muduo::noncopyable$/;"	c	namespace:pubsub
PubSubServer	src/muduo/examples/hub/hub.cc	/^  PubSubServer(muduo::net::EventLoop* loop,$/;"	f	class:pubsub::PubSubServer	file:
PubSubServer	src/muduo/examples/hub/hub.cc	/^class PubSubServer : noncopyable$/;"	c	namespace:pubsub	file:
PushFront	src/tests/googletest/googletest/scripts/pump.py	/^def PushFront(a_list, elem):$/;"	f
PushGTestTrace	src/tests/googletest/googletest/src/gtest.cc	/^void UnitTest::PushGTestTrace(const internal::TraceInfo& trace)$/;"	f	class:testing::UnitTest	typeref:typename:void
PushLine	src/tests/googletest/googletest/src/gtest.cc	/^  void PushLine(char edit, const char* line) {$/;"	f	class:testing::internal::edit_distance::__anon3f29b7680211::Hunk	typeref:typename:void	file:
PushMatch	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  void PushMatch(size_t lhs, size_t rhs) {$/;"	f	class:testing::gmock_matchers_test::__anon745c08170311::BacktrackingMaxBPMState	typeref:typename:void	file:
PushRange	src/tests/googletest/googletest/scripts/pump.py	/^  def PushRange(self, var, lower, upper):$/;"	m	class:Env
PushVariable	src/tests/googletest/googletest/scripts/pump.py	/^  def PushVariable(self, var, value):$/;"	m	class:Env
QEMU_ACC_V0	src/libtfhe-superaic-acc/accs/QEMU-V0/acc_qemu_v0.cpp	/^QEMU_ACC_V0::QEMU_ACC_V0():$/;"	f	class:tfhe_superaic::QEMU_ACC_V0
QEMU_ACC_V0	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^class QEMU_ACC_V0: public TFHE_ACC{$/;"	c	namespace:tfhe_superaic
QuantifierMatcherImpl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit QuantifierMatcherImpl(InnerMatcher inner_matcher)$/;"	f	class:testing::internal::QuantifierMatcherImpl
QuantifierMatcherImpl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class QuantifierMatcherImpl : public MatcherInterface<Container> {$/;"	c	namespace:testing::internal
Query	src/muduo/examples/protobuf/codec/query.proto	/^message Query {$/;"	m	package:muduo
QueryClient	src/muduo/examples/protobuf/codec/client.cc	/^  QueryClient(EventLoop* loop,$/;"	f	class:QueryClient	file:
QueryClient	src/muduo/examples/protobuf/codec/client.cc	/^class QueryClient : noncopyable$/;"	c	file:
QueryData	src/muduo/examples/cdns/Resolver.h	/^    QueryData(Resolver* o, const Callback& cb)$/;"	f	struct:cdns::Resolver::QueryData
QueryData	src/muduo/examples/cdns/Resolver.h	/^  struct QueryData$/;"	s	class:cdns::Resolver
QueryPtr	src/muduo/examples/protobuf/codec/dispatcher_test.cc	/^typedef std::shared_ptr<muduo::Query> QueryPtr;$/;"	t	typeref:typename:std::shared_ptr<muduo::Query>	file:
QueryPtr	src/muduo/examples/protobuf/codec/server.cc	/^typedef std::shared_ptr<muduo::Query> QueryPtr;$/;"	t	typeref:typename:std::shared_ptr<muduo::Query>	file:
QueryServer	src/muduo/examples/protobuf/codec/server.cc	/^  QueryServer(EventLoop* loop,$/;"	f	class:QueryServer	file:
QueryServer	src/muduo/examples/protobuf/codec/server.cc	/^class QueryServer : noncopyable$/;"	c	file:
Queue	src/tests/googletest/googletest/samples/sample3-inl.h	/^  Queue() : head_(NULL), last_(NULL), size_(0) {}$/;"	f	class:Queue
Queue	src/tests/googletest/googletest/samples/sample3-inl.h	/^class Queue {$/;"	c
QueueNode	src/tests/googletest/googletest/samples/sample3-inl.h	/^  explicit QueueNode(const E& an_element) : element_(an_element), next_(NULL) {}$/;"	f	class:QueueNode
QueueNode	src/tests/googletest/googletest/samples/sample3-inl.h	/^class QueueNode {$/;"	c
QueueTest	src/tests/googletest/googletest/samples/sample3_unittest.cc	/^class QueueTest : public testing::Test {$/;"	c	file:
QueueTest	src/tests/googletest/googletest/samples/sample5_unittest.cc	/^class QueueTest : public QuickTest {$/;"	c	file:
Quick Start	src/tests/googletest/googletest/docs/V1_5_XcodeGuide.md	/^# Quick Start #$/;"	c
Quick Start	src/tests/googletest/googletest/docs/V1_6_XcodeGuide.md	/^# Quick Start #$/;"	c
Quick Start	src/tests/googletest/googletest/docs/V1_7_XcodeGuide.md	/^# Quick Start #$/;"	c
Quick Start	src/tests/googletest/googletest/docs/XcodeGuide.md	/^# Quick Start #$/;"	c
QuickTest	src/tests/googletest/googletest/samples/sample5_unittest.cc	/^class QuickTest : public testing::Test {$/;"	c	file:
RE	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  RE(const ::std::string& regex) { Init(regex.c_str()); }  \/\/ NOLINT$/;"	f	class:testing::internal::RE
RE	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  RE(const ::string& regex) { Init(regex.c_str()); }  \/\/ NOLINT$/;"	f	class:testing::internal::RE
RE	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  RE(const RE& other) { Init(other.pattern()); }$/;"	f	class:testing::internal::RE
RE	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  RE(const char* regex) { Init(regex); }  \/\/ NOLINT$/;"	f	class:testing::internal::RE
RE	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^class GTEST_API_ RE {$/;"	c	namespace:testing::internal
README contains outdated information on Google Mock's compatibility with other testing frameworks	src/tests/googletest/googlemock/docs/KnownIssues.md	/^## README contains outdated information on Google Mock's compatibility with other testing framew/;"	s
REGISTER_TYPED_TEST_CASE_P	src/tests/googletest/googletest/include/gtest/gtest-typed-test.h	/^# define REGISTER_TYPED_TEST_CASE_P(/;"	d
REG_PMUL_END_Addr	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint32_t REG_PMUL_END_Addr = 0x00003300;     \/\/ 为1时表示运算结束。当/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint32_t
REG_PMUL_ST_Addr	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint32_t REG_PMUL_ST_Addr = 0x00003000;              \/\/ 0->1时启动计算  $/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint32_t
REG_VERSION_ID_Addr	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static constexpr uint32_t REG_VERSION_ID_Addr = 0x00003300; \/\/ 所有的硬件版本都有/;"	m	class:tfhe_superaic::TFHE_ACC	typeref:typename:uint32_t
REG_XDMA_Interrupt_Clear_Addr	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint32_t REG_XDMA_Interrupt_Clear_Addr = 0x00003000; \/\/ 清除中断状态寄/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint32_t
REG_XDMA_Interrupt_Enable_Addr	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint32_t REG_XDMA_Interrupt_Enable_Addr = 0x00003000; \/\/ 使能中断寄存器$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint32_t
RELEASE	src/muduo/muduo/base/Mutex.h	/^  ~MutexLockGuard() RELEASE()$/;"	f	class:muduo::MutexLockGuard	typeref:typename:~MutexLockGuard ()
RELEASE	src/muduo/muduo/base/Mutex.h	/^#define RELEASE(/;"	d
RELEASE_SHARED	src/muduo/muduo/base/Mutex.h	/^#define RELEASE_SHARED(/;"	d
REQUEST	src/muduo/muduo/net/protorpc/rpc.proto	/^  REQUEST = 1;$/;"	e	enum:muduo.net.MessageType
REQUIRES	src/muduo/muduo/base/Mutex.h	/^#define REQUIRES(/;"	d
REQUIRES_SHARED	src/muduo/muduo/base/Mutex.h	/^#define REQUIRES_SHARED(/;"	d
RESPONSE	src/muduo/muduo/net/protorpc/rpc.proto	/^  RESPONSE = 2;$/;"	e	enum:muduo.net.MessageType
REST_OF_LINE_REGEX	src/tests/googletest/googletest/scripts/pump.py	/^REST_OF_LINE_REGEX = re.compile(r'.*?(?=$|\\$\\$)')$/;"	v
RETURNED	src/tests/googletest/googletest/src/gtest-death-test.cc	/^enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };$/;"	e	enum:testing::internal::DeathTestOutcome	file:
RETURN_CAPABILITY	src/muduo/muduo/base/Mutex.h	/^#define RETURN_CAPABILITY(/;"	d
RETest	src/tests/googletest/googletest/test/gtest-port_test.cc	/^class RETest : public ::testing::Test {};$/;"	c	namespace:testing::internal	file:
RINGLWE_H	src/libtfhe-superaic-core/include/tlwe.h	/^#define RINGLWE_H$/;"	d
RM	buildotests/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	buildotests/driver/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	buildotests/examples/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	buildotests/libtfhe-superaic-acc/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	buildotests/libtfhe-superaic-client/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	buildotests/libtfhe-superaic-core/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	buildotests/libtfhe-superaic-core/fft_processors/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	buildotests/libtfhe-superaic-server/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	buildotests/tests/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	buildotests/tests/googletest/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	buildotests/tests/googletest/googlemock/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	buildotests/tests/googletest/googlemock/gtest/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RStripNewLineFromToken	src/tests/googletest/googletest/scripts/pump.py	/^def RStripNewLineFromToken(token):$/;"	f
RUN_ALL_TESTS	src/tests/googletest/googletest/include/gtest/gtest.h	/^inline int RUN_ALL_TESTS() {$/;"	f	typeref:typename:int
Random	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  explicit Random(UInt32 seed) : state_(seed) {}$/;"	f	class:testing::internal::Random
Random	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^class GTEST_API_ Random {$/;"	c	namespace:testing::internal
RandomSeed	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static Flags RandomSeed(Int32 random_seed) {$/;"	f	struct:testing::Flags	typeref:typename:Flags	file:
RandomSeedFlag	src/tests/googletest/googletest/test/gtest_shuffle_test.py	/^def RandomSeedFlag(n):$/;"	f
Randomize	src/tests/googletest/googlemock/src/gmock-matchers.cc	/^void MatchMatrix::Randomize() {$/;"	f	class:testing::internal::MatchMatrix	typeref:typename:void
Range	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^internal::ParamGenerator<T> Range(T start, T end) {$/;"	f	namespace:testing	typeref:typename:internal::ParamGenerator<T>
Range	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^internal::ParamGenerator<T> Range(T start, T end, IncrementT step) {$/;"	f	namespace:testing	typeref:typename:internal::ParamGenerator<T>
RangeGenerator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  RangeGenerator(T begin, T end, IncrementT step)$/;"	f	class:testing::internal::RangeGenerator
RangeGenerator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^class RangeGenerator : public ParamGeneratorInterface<T> {$/;"	c	namespace:testing::internal
RangeIsShuffled	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static bool RangeIsShuffled(const TestingVector& vector, int begin, int end) {$/;"	f	class:__anonf780395f0111::VectorShuffleTest	typeref:typename:bool	file:
RangeIsUnshuffled	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static bool RangeIsUnshuffled($/;"	f	class:__anonf780395f0111::VectorShuffleTest	typeref:typename:bool	file:
RangeNode	src/tests/googletest/googletest/scripts/pump.py	/^class RangeNode:$/;"	c
RawArgsTuple	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^  typedef GTEST_REMOVE_REFERENCE_AND_CONST_(ArgsTuple) RawArgsTuple;$/;"	t	class:testing::internal::ArgsMatcherImpl
RawCodeNode	src/tests/googletest/googletest/scripts/pump.py	/^class RawCodeNode:$/;"	c
RawContainer	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    typedef GTEST_REMOVE_REFERENCE_AND_CONST_(Container) RawContainer;$/;"	t	function:testing::internal::ElementsAreMatcher::operator Matcher<Container>
RawContainer	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    typedef GTEST_REMOVE_REFERENCE_AND_CONST_(Container) RawContainer;$/;"	t	function:testing::internal::UnorderedElementsAreMatcher::operator Matcher<Container>
RawContainer	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef GTEST_REMOVE_CONST_(Container) RawContainer;$/;"	t	function:testing::ContainerEq
RawContainer	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef GTEST_REMOVE_CONST_(Container) RawContainer;$/;"	t	function:testing::Pointwise
RawContainer	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef GTEST_REMOVE_REFERENCE_AND_CONST_(Container) RawContainer;$/;"	t	class:testing::internal::ElementsAreMatcherImpl
RawContainer	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef GTEST_REMOVE_REFERENCE_AND_CONST_(Container) RawContainer;$/;"	t	class:testing::internal::QuantifierMatcherImpl
RawContainer	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef GTEST_REMOVE_REFERENCE_AND_CONST_(Container) RawContainer;$/;"	t	class:testing::internal::UnorderedElementsAreMatcherImpl
RawElement	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^      typename internal::PointeeOf<ElementPointer>::type) RawElement;$/;"	t	class:testing::internal::StlContainerView
RawElement	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^  typedef GTEST_REMOVE_CONST_(Element) RawElement;$/;"	t	class:testing::internal::StlContainerView
RawMessage	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^  RawMessage(StringPiece m)$/;"	f	struct:RawMessage	file:
RawMessage	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^struct RawMessage$/;"	s	file:
RawMessageCallback	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^                              Timestamp)> RawMessageCallback;$/;"	t	class:muduo::net::ProtobufCodecLite
RawMessageCallback	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^  typedef ProtobufCodecLite::RawMessageCallback RawMessageCallback;$/;"	t	class:muduo::net::ProtobufCodecLiteT	typeref:typename:ProtobufCodecLite::RawMessageCallback
RawPairType	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef GTEST_REMOVE_REFERENCE_AND_CONST_(PairType) RawPairType;$/;"	t	class:testing::internal::KeyMatcherImpl
RawPairType	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef GTEST_REMOVE_REFERENCE_AND_CONST_(PairType) RawPairType;$/;"	t	class:testing::internal::PairMatcherImpl
RawRhsContainer	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef GTEST_REMOVE_CONST_(RhsContainer) RawRhsContainer;$/;"	t	function:testing::UnorderedPointwise
RawT	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    typedef GTEST_REMOVE_REFERENCE_AND_CONST_(T) RawT;$/;"	t	function:testing::SafeMatcherCastImpl::Cast
RawU	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    typedef GTEST_REMOVE_REFERENCE_AND_CONST_(U) RawU;$/;"	t	function:testing::SafeMatcherCastImpl::Cast
ReactionToSharding	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  enum ReactionToSharding {$/;"	g	class:testing::internal::UnitTestImpl
Read	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^inline int Read(int fd, void* buf, unsigned int count) {$/;"	f	namespace:testing::internal::posix	typeref:typename:int
ReadAndInterpretStatusByte	src/tests/googletest/googletest/src/gtest-death-test.cc	/^void DeathTestImpl::ReadAndInterpretStatusByte() {$/;"	f	class:testing::internal::DeathTestImpl	typeref:typename:void
ReadEntireFile	src/tests/googletest/googletest/src/gtest-port.cc	/^std::string ReadEntireFile(FILE* file) {$/;"	f	namespace:testing::internal	typeref:typename:std::string
ReadEventCallback	src/muduo/muduo/net/Channel.h	/^  typedef std::function<void(Timestamp)> ReadEventCallback;$/;"	t	class:muduo::net::Channel
ReadFile	src/tests/googletest/googlemock/scripts/generator/cpp/utils.py	/^def ReadFile(filename, print_error=True):$/;"	f
ReadFile	src/tests/googletest/googlemock/scripts/upload.py	/^  def ReadFile(self, filename):$/;"	m	class:SubversionVCS
ReadFile	src/tests/googletest/googletest/scripts/upload.py	/^  def ReadFile(self, filename):$/;"	m	class:SubversionVCS
ReadProcFileField	src/tests/googletest/googletest/src/gtest-port.cc	/^T ReadProcFileField(const std::string& filename, int field) {$/;"	f	namespace:testing::internal::__anon142d171a0111	typeref:typename:T
ReadSmallFile	src/muduo/muduo/base/FileUtil.cc	/^FileUtil::ReadSmallFile::ReadSmallFile(StringArg filename)$/;"	f	class:FileUtil::ReadSmallFile
ReadSmallFile	src/muduo/muduo/base/FileUtil.h	/^class ReadSmallFile : noncopyable$/;"	c	namespace:muduo::FileUtil
Reader	src/muduo/examples/memcached/server/Session.cc	/^  Reader(Tokenizer::iterator& beg, Tokenizer::iterator end)$/;"	f	struct:Session::Reader	file:
Reader	src/muduo/examples/memcached/server/Session.cc	/^struct Session::Reader$/;"	s	class:Session	file:
Real Examples	src/tests/googletest/googletest/docs/PumpManual.md	/^## Real Examples ##$/;"	s	chapter:Our Solution
Real Examples	src/tests/googletest/googletest/docs/V1_5_PumpManual.md	/^## Real Examples ##$/;"	s	chapter:Our Solution
Real Examples	src/tests/googletest/googletest/docs/V1_6_PumpManual.md	/^## Real Examples ##$/;"	s	chapter:Our Solution
Real Examples	src/tests/googletest/googletest/docs/V1_7_PumpManual.md	/^## Real Examples ##$/;"	s	chapter:Our Solution
RealMain	src/tests/googletest/googlemock/scripts/upload.py	/^def RealMain(argv, data=None):$/;"	f
RealMain	src/tests/googletest/googletest/scripts/upload.py	/^def RealMain(argv, data=None):$/;"	f
RecordHeader	src/muduo/examples/fastcgi/fastcgi.cc	/^struct FastCgiCodec::RecordHeader$/;"	s	class:FastCgiCodec	file:
RecordProperty	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  static void RecordProperty(TestResult* test_result,$/;"	f	class:testing::internal::TestResultAccessor	typeref:typename:void
RecordProperty	src/tests/googletest/googletest/src/gtest.cc	/^void Test::RecordProperty(const std::string& key, const std::string& value) {$/;"	f	class:testing::Test	typeref:typename:void
RecordProperty	src/tests/googletest/googletest/src/gtest.cc	/^void Test::RecordProperty(const std::string& key, int value) {$/;"	f	class:testing::Test	typeref:typename:void
RecordProperty	src/tests/googletest/googletest/src/gtest.cc	/^void TestResult::RecordProperty(const std::string& xml_element,$/;"	f	class:testing::TestResult	typeref:typename:void
RecordProperty	src/tests/googletest/googletest/src/gtest.cc	/^void UnitTest::RecordProperty(const std::string& key,$/;"	f	class:testing::UnitTest	typeref:typename:void
RecordProperty	src/tests/googletest/googletest/src/gtest.cc	/^void UnitTestImpl::RecordProperty(const TestProperty& test_property) {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:void
RecurseInto	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  bool RecurseInto(size_t irhs) {$/;"	f	class:testing::gmock_matchers_test::__anon745c08170311::BacktrackingMaxBPMState	typeref:typename:bool	file:
Ref	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline internal::RefMatcher<T&> Ref(T& x) {  \/\/ NOLINT$/;"	f	namespace:testing	typeref:typename:internal::RefMatcher<T &>
RefMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit RefMatcher(T& x) : object_(x) {}  \/\/ NOLINT$/;"	f	class:testing::internal::RefMatcher
RefMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class RefMatcher<T&> {$/;"	c	namespace:testing::internal
RefToConstProperty	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef GTEST_REFERENCE_TO_CONST_(PropertyType) RefToConstProperty;$/;"	t	class:testing::internal::PropertyMatcher
RefUncopyableFunction	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^Uncopyable& RefUncopyableFunction(Uncopyable& obj) {  \/\/ NOLINT$/;"	f	namespace:testing::gmock_matchers_test	typeref:typename:Uncopyable &
ReferenceHoldingMock	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^  ReferenceHoldingMock() {}$/;"	f	class:__anon6b6cf3b20111::ReferenceHoldingMock	file:
ReferenceHoldingMock	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^class ReferenceHoldingMock {$/;"	c	namespace:__anon6b6cf3b20111	file:
ReferenceOrValueWrapper	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  explicit ReferenceOrValueWrapper(T value)$/;"	f	class:testing::internal::ReferenceOrValueWrapper
ReferenceOrValueWrapper	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  explicit ReferenceOrValueWrapper(reference ref)$/;"	f	class:testing::internal::ReferenceOrValueWrapper
ReferenceOrValueWrapper	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^class ReferenceOrValueWrapper {$/;"	c	namespace:testing::internal
ReferenceOrValueWrapper	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^class ReferenceOrValueWrapper<T&> {$/;"	c	namespace:testing::internal
ReferenceWrapper	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  explicit ReferenceWrapper(T& l_value) : pointer_(&l_value) {}  \/\/ NOLINT$/;"	f	class:testing::internal::ReferenceWrapper
ReferenceWrapper	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^class ReferenceWrapper {$/;"	c	namespace:testing::internal
ReferencesBarOrIsZero	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^PolymorphicMatcher<ReferencesBarOrIsZeroImpl> ReferencesBarOrIsZero() {$/;"	f	namespace:testing::gmock_matchers_test	typeref:typename:PolymorphicMatcher<ReferencesBarOrIsZeroImpl>
ReferencesBarOrIsZeroImpl	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^class ReferencesBarOrIsZeroImpl {$/;"	c	namespace:testing::gmock_matchers_test	file:
ReferencesFooAndIsZero	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^bool ReferencesFooAndIsZero(const int& n) {$/;"	f	namespace:testing::gmock_matchers_test	typeref:typename:bool
ReferencesGlobalDouble	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^bool ReferencesGlobalDouble(const double& x) { return &x == &g_double; }$/;"	f	namespace:testing::gmock_generated_actions_test	typeref:typename:bool
ReferencesGlobalDouble	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^bool ReferencesGlobalDouble(const double& x) { return &x == &g_double; }$/;"	f	namespace:testing::gmock_more_actions_test	typeref:typename:bool
ReferencingFunction	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^const int* ReferencingFunction(const int& n) { return &n; }$/;"	f	namespace:testing::gmock_matchers_test	typeref:typename:const int *
ReferencingFunctor	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^struct ReferencingFunctor {$/;"	s	namespace:testing::gmock_matchers_test	file:
Regenerating Source Files	src/tests/googletest/README.md	/^## Regenerating Source Files ##$/;"	s	chapter:Google Test
Register	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^void Mock::Register(const void* mock_obj,$/;"	f	class:testing::Mock	typeref:typename:void
Register	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  static bool Register(const char* \/*prefix*\/, CodeLocation,$/;"	f	class:testing::internal::TypeParameterizedTest	typeref:typename:bool
Register	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  static bool Register(const char* \/*prefix*\/, CodeLocation,$/;"	f	class:testing::internal::TypeParameterizedTestCase	typeref:typename:bool
Register	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  static bool Register(const char* prefix, CodeLocation code_location,$/;"	f	class:testing::internal::TypeParameterizedTestCase	typeref:typename:bool
Register	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  static bool Register(const char* prefix,$/;"	f	class:testing::internal::TypeParameterizedTest	typeref:typename:bool
RegisterOwner	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^void UntypedFunctionMockerBase::RegisterOwner(const void* mock_obj)$/;"	f	class:testing::internal::UntypedFunctionMockerBase	typeref:typename:void
RegisterParameterizedTests	src/tests/googletest/googletest/src/gtest.cc	/^void UnitTestImpl::RegisterParameterizedTests() {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:void
RegisterTests	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  virtual void RegisterTests() {$/;"	f	class:testing::internal::ParameterizedTestCaseInfo	typeref:typename:void
RegisterTests	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  void RegisterTests() {$/;"	f	class:testing::internal::ParameterizedTestCaseRegistry	typeref:typename:void
RegisterUseByOnCallOrExpectCall	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^void Mock::RegisterUseByOnCallOrExpectCall(const void* mock_obj,$/;"	f	class:testing::Mock	typeref:typename:void
RegisteredTestIter	src/tests/googletest/googletest/src/gtest-typed-test.cc	/^  typedef RegisteredTestsMap::const_iterator RegisteredTestIter;$/;"	t	function:testing::internal::TypedTestCasePState::VerifyRegisteredTestNames	typeref:typename:RegisteredTestsMap::const_iterator	file:
RegisteredTestsMap	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  typedef ::std::map<std::string, CodeLocation> RegisteredTestsMap;$/;"	t	class:testing::internal::TypedTestCasePState	typeref:typename:::std::map<std::string,CodeLocation>
Regular Expression Syntax	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^## Regular Expression Syntax ##$/;"	s	chapter:Death Tests
Regular Expression Syntax	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^## Regular Expression Syntax ##$/;"	s	chapter:Death Tests
Regular Expression Syntax	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^## Regular Expression Syntax ##$/;"	s	chapter:Death Tests
Regular Expression Syntax	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^## Regular Expression Syntax ##$/;"	s	chapter:Death Tests
ReinterpretBits	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  static RawType ReinterpretBits(const Bits bits) {$/;"	f	class:testing::internal::FloatingPoint	typeref:typename:RawType
Related Open Source Projects	src/tests/googletest/README.md	/^## Related Open Source Projects ##$/;"	s	chapter:Google Test
Related Work	src/tests/googletest/googlemock/docs/DesignDoc.md	/^## Related Work ##$/;"	s	chapter:Macros for Defining Actions
RelationToSourceCopy	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^struct RelationToSourceCopy {};$/;"	s	namespace:testing::internal
RelationToSourceReference	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^struct RelationToSourceReference {};$/;"	s	namespace:testing::internal
Release	src/tests/googletest/googletest/src/gtest.cc	/^TestEventListener* TestEventListeners::Release(TestEventListener* listener) {$/;"	f	class:testing::TestEventListeners	typeref:typename:TestEventListener *
Release	src/tests/googletest/googletest/src/gtest.cc	/^TestEventListener* TestEventRepeater::Release(TestEventListener *listener) {$/;"	f	class:testing::internal::TestEventRepeater	typeref:typename:TestEventListener *
Release Process	src/tests/googletest/googlemock/docs/DevGuide.md	/^# Release Process #$/;"	c
Release Process	src/tests/googletest/googletest/docs/DevGuide.md	/^# Release Process #$/;"	c
RemoveConst	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^struct RemoveConst { typedef T type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
RemoveConst	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^struct RemoveConst<T[N]> {$/;"	s	namespace:testing::internal
RemoveConst	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^struct RemoveConst<const T> { typedef T type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
RemoveConst	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^struct RemoveConst<const T[N]> {$/;"	s	namespace:testing::internal
RemoveConstFromKey	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^struct RemoveConstFromKey {$/;"	s	namespace:testing::internal
RemoveConstFromKey	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^struct RemoveConstFromKey<std::pair<const K, V> > {$/;"	s	namespace:testing::internal
RemoveDirectoryName	src/tests/googletest/googletest/src/gtest-filepath.cc	/^FilePath FilePath::RemoveDirectoryName() const {$/;"	f	class:testing::internal::FilePath	typeref:typename:FilePath
RemoveExtension	src/tests/googletest/googletest/src/gtest-filepath.cc	/^FilePath FilePath::RemoveExtension(const char* extension) const {$/;"	f	class:testing::internal::FilePath	typeref:typename:FilePath
RemoveFileName	src/tests/googletest/googletest/src/gtest-filepath.cc	/^FilePath FilePath::RemoveFileName() const {$/;"	f	class:testing::internal::FilePath	typeref:typename:FilePath
RemoveInvalidXmlCharacters	src/tests/googletest/googletest/src/gtest.cc	/^std::string XmlUnitTestResultPrinter::RemoveInvalidXmlCharacters($/;"	f	class:testing::internal::XmlUnitTestResultPrinter	typeref:typename:std::string
RemoveLocations	src/tests/googletest/googlemock/test/gmock_output_test.py	/^def RemoveLocations(output):$/;"	f
RemoveLocations	src/tests/googletest/googletest/test/gtest_output_test.py	/^def RemoveLocations(test_output):$/;"	f
RemoveMatchingTests	src/tests/googletest/googletest/test/gtest_output_test.py	/^def RemoveMatchingTests(test_output, pattern):$/;"	f
RemoveMemoryAddresses	src/tests/googletest/googlemock/test/gmock_output_test.py	/^def RemoveMemoryAddresses(output):$/;"	f
RemoveReference	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^struct RemoveReference { typedef T type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
RemoveReference	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^struct RemoveReference<T&> { typedef T type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
RemoveReportHeaderAndFooter	src/tests/googletest/googlemock/test/gmock_output_test.py	/^def RemoveReportHeaderAndFooter(output):$/;"	f
RemoveStackTraceDetails	src/tests/googletest/googletest/test/gtest_output_test.py	/^def RemoveStackTraceDetails(output):$/;"	f
RemoveStackTraces	src/tests/googletest/googletest/test/gtest_output_test.py	/^def RemoveStackTraces(output):$/;"	f
RemoveTestCounts	src/tests/googletest/googletest/test/gtest_output_test.py	/^def RemoveTestCounts(output):$/;"	f
RemoveTestNamesOfLeakedMocks	src/tests/googletest/googlemock/test/gmock_output_test.py	/^def RemoveTestNamesOfLeakedMocks(output):$/;"	f
RemoveTime	src/tests/googletest/googletest/test/gtest_output_test.py	/^def RemoveTime(output):$/;"	f
RemoveTrailingPathSeparator	src/tests/googletest/googletest/src/gtest-filepath.cc	/^FilePath FilePath::RemoveTrailingPathSeparator() const {$/;"	f	class:testing::internal::FilePath	typeref:typename:FilePath
RemoveTypeInfoDetails	src/tests/googletest/googletest/test/gtest_output_test.py	/^def RemoveTypeInfoDetails(test_output):$/;"	f
RemoveUnsupportedTests	src/tests/googletest/googletest/test/gtest_output_test.py	/^  def RemoveUnsupportedTests(self, test_output):$/;"	m	class:GTestOutputTest
Repeat	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static Flags Repeat(Int32 repeat) {$/;"	f	struct:testing::Flags	typeref:typename:Flags	file:
RepeatFlag	src/tests/googletest/googletest/test/gtest_shuffle_test.py	/^def RepeatFlag(n):$/;"	f
Repeating the Tests	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^## Repeating the Tests ##$/;"	s	chapter:Running Test Programs: Advanced Options
Repeating the Tests	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^## Repeating the Tests ##$/;"	s	chapter:Running Test Programs: Advanced Options
Repeating the Tests	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^## Repeating the Tests ##$/;"	s	chapter:Running Test Programs: Advanced Options
Repeating the Tests	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^## Repeating the Tests ##$/;"	s	chapter:Running Test Programs: Advanced Options
ReplaceDeathTestFactory	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  explicit ReplaceDeathTestFactory(DeathTestFactory* new_factory)$/;"	f	class:testing::internal::ReplaceDeathTestFactory	file:
ReplaceDeathTestFactory	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^class ReplaceDeathTestFactory {$/;"	c	namespace:testing::internal	file:
ReportDestroyed	src/tests/googletest/googletest/test/gtest-port_test.cc	/^  void ReportDestroyed() {$/;"	f	class:testing::internal::DestructorCall	typeref:typename:void	file:
ReportFailure	src/tests/googletest/googlemock/src/gmock-internal-utils.cc	/^  virtual void ReportFailure(FailureType type, const char* file, int line,$/;"	f	class:testing::internal::GoogleTestFailureReporter	typeref:typename:void	file:
ReportFailureInUnknownLocation	src/tests/googletest/googletest/src/gtest.cc	/^void ReportFailureInUnknownLocation(TestPartResult::Type result_type,$/;"	f	namespace:testing::internal	typeref:typename:void
ReportInvalidTestCaseType	src/tests/googletest/googletest/src/gtest.cc	/^void ReportInvalidTestCaseType(const char* test_case_name,$/;"	f	namespace:testing::internal	typeref:typename:void
ReportTestPartResult	src/tests/googletest/googletest/src/gtest-test-part.cc	/^void HasNewFatalFailureHelper::ReportTestPartResult($/;"	f	class:testing::internal::HasNewFatalFailureHelper	typeref:typename:void
ReportTestPartResult	src/tests/googletest/googletest/src/gtest.cc	/^void DefaultGlobalTestPartResultReporter::ReportTestPartResult($/;"	f	class:testing::internal::DefaultGlobalTestPartResultReporter	typeref:typename:void
ReportTestPartResult	src/tests/googletest/googletest/src/gtest.cc	/^void DefaultPerThreadTestPartResultReporter::ReportTestPartResult($/;"	f	class:testing::internal::DefaultPerThreadTestPartResultReporter	typeref:typename:void
ReportTestPartResult	src/tests/googletest/googletest/src/gtest.cc	/^void ScopedFakeTestPartResultReporter::ReportTestPartResult($/;"	f	class:testing::ScopedFakeTestPartResultReporter	typeref:typename:void
ReportUninterestingCall	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^void ReportUninterestingCall(CallReaction reaction, const std::string& msg) {$/;"	f	namespace:testing::internal	typeref:typename:void
Request	src/muduo/examples/curl/Curl.cc	/^Request::Request(Curl* owner, const char* url)$/;"	f	class:Request
Request	src/muduo/examples/curl/Curl.h	/^class Request : public std::enable_shared_from_this<Request>,$/;"	c	namespace:curl
Request	src/muduo/examples/protobuf/rpcbalancer/balancer.cc	/^  struct Request$/;"	s	class:BackendSession	file:
Request	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^  struct Request$/;"	s	class:BackendSession	file:
Request	src/muduo/examples/sudoku/server_hybrid.cc	/^  struct Request$/;"	s	class:SudokuServer	file:
Request	src/muduo/examples/sudoku/server_prod.cc	/^  struct Request$/;"	s	class:SudokuServer	file:
RequestPtr	src/muduo/examples/curl/Curl.h	/^typedef std::shared_ptr<Request> RequestPtr;$/;"	t	namespace:curl	typeref:typename:std::shared_ptr<Request>
Requirements	src/tests/googletest/README.md	/^## Requirements ##$/;"	s	chapter:Google Test
Requirements for Contributors	src/tests/googletest/README.md	/^### Requirements for Contributors ###$/;"	S	section:Google Test""Requirements
Requirements for Contributors	src/tests/googletest/googlemock/README.md	/^### Requirements for Contributors ###$/;"	S	section:Getting Started
Requirements for End Users	src/tests/googletest/googlemock/README.md	/^### Requirements for End Users ###$/;"	S	section:Getting Started
Requires	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def Requires(self, node):$/;"	m	class:Class
Requires	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def Requires(self, node):$/;"	m	class:Expr
Requires	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def Requires(self, node):$/;"	m	class:Function
Requires	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def Requires(self, node):$/;"	m	class:Node
Requires	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def Requires(self, node):$/;"	m	class:Parameter
Requires	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def Requires(self, node):$/;"	m	class:Typedef
Requires	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def Requires(self, node):$/;"	m	class:VariableDeclaration
Reseed	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  void Reseed(UInt32 seed) { state_ = seed; }$/;"	f	class:testing::internal::Random	typeref:typename:void
Reset	src/tests/googletest/googletest/src/gtest-port.cc	/^void AutoHandle::Reset() {$/;"	f	class:testing::internal::AutoHandle	typeref:typename:void
Reset	src/tests/googletest/googletest/src/gtest-port.cc	/^void AutoHandle::Reset(HANDLE handle) {$/;"	f	class:testing::internal::AutoHandle	typeref:typename:void
Reset	src/tests/googletest/googletest/test/gtest_environment_test.cc	/^  void Reset() {$/;"	f	class:__anon7fd7f0f30111::MyEnvironment	typeref:typename:void	file:
ResetCounts	src/tests/googletest/googletest/test/gtest_repeat_test.cc	/^void ResetCounts() {$/;"	f	namespace:__anon83eb3b5f0111	typeref:typename:void
ResetList	src/tests/googletest/googletest/test/gtest-port_test.cc	/^  static void ResetList() {$/;"	f	class:testing::internal::DestructorCall	typeref:typename:void	file:
Resolve	src/muduo/examples/protobuf/resolver/resolver.proto	/^  rpc Resolve (ResolveRequest) returns (ResolveResponse);$/;"	r	service:resolver.ResolverService	typeref:typename:ResolveResponse
Resolve	src/muduo/examples/protobuf/resolver/server.cc	/^  virtual void Resolve(::google::protobuf::RpcController* controller,$/;"	f	class:resolver::ResolverServiceImpl	typeref:typename:void	file:
ResolveRequest	src/muduo/examples/protobuf/resolver/resolver.proto	/^message ResolveRequest {$/;"	m	package:resolver
ResolveResponse	src/muduo/examples/protobuf/resolver/resolver.proto	/^message ResolveResponse {$/;"	m	package:resolver
Resolver	src/muduo/examples/cdns/Resolver.cc	/^Resolver::Resolver(EventLoop* loop, Option opt)$/;"	f	class:Resolver
Resolver	src/muduo/examples/cdns/Resolver.h	/^class Resolver : muduo::noncopyable$/;"	c	namespace:cdns
ResolverService	src/muduo/examples/protobuf/resolver/resolver.proto	/^service ResolverService {$/;"	s	package:resolver
ResolverServiceImpl	src/muduo/examples/protobuf/resolver/server.cc	/^  ResolverServiceImpl(EventLoop* loop)$/;"	f	class:resolver::ResolverServiceImpl	file:
ResolverServiceImpl	src/muduo/examples/protobuf/resolver/server.cc	/^class ResolverServiceImpl : public ResolverService$/;"	c	namespace:resolver	file:
Restricting the Type of an Argument or Parameter	src/tests/googletest/googlemock/docs/DesignDoc.md	/^### Restricting the Type of an Argument or Parameter ###$/;"	S	section:Macros for Defining Actions""Advanced Usages
Restricting the Type of an Argument or Parameter in an ACTION	src/tests/googletest/googlemock/docs/CookBook.md	/^## Restricting the Type of an Argument or Parameter in an ACTION ##$/;"	s	chapter:Extending Google Mock
Restricting the Type of an Argument or Parameter in an ACTION	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Restricting the Type of an Argument or Parameter in an ACTION ##$/;"	s	chapter:Extending Google Mock
Restricting the Type of an Argument or Parameter in an ACTION	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Restricting the Type of an Argument or Parameter in an ACTION ##$/;"	s	chapter:Extending Google Mock
Restricting the Type of an Argument or Parameter in an ACTION	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Restricting the Type of an Argument or Parameter in an ACTION ##$/;"	s	chapter:Extending Google Mock
Result	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    typedef typename Function<F>::Result Result;$/;"	t	class:testing::internal::DoBothAction::Impl	typeref:typename:Function<F>::Result
Result	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    typedef typename Function<F>::Result Result;$/;"	t	class:testing::internal::ReturnAction::Impl	typeref:typename:Function<F>::Result
Result	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    typedef typename Function<F>::Result Result;$/;"	t	class:testing::internal::ReturnRefAction::Impl	typeref:typename:Function<F>::Result
Result	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    typedef typename Function<F>::Result Result;$/;"	t	class:testing::internal::ReturnRefOfCopyAction::Impl	typeref:typename:Function<F>::Result
Result	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    typedef typename Function<F>::Result Result;$/;"	t	function:testing::internal::ReturnAction::operator Action<F>	typeref:typename:Function<F>::Result
Result	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    typedef typename Function<F>::Result Result;$/;"	t	function:testing::internal::ReturnRefAction::operator Action<F>	typeref:typename:Function<F>::Result
Result	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    typedef typename Function<F>::Result Result;$/;"	t	function:testing::internal::ReturnRefOfCopyAction::operator Action<F>	typeref:typename:Function<F>::Result
Result	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    typedef typename internal::Function<F>::Result Result;$/;"	t	class:testing::PolymorphicAction::MonomorphicImpl	typeref:typename:internal::Function<F>::Result
Result	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    typedef typename internal::Function<F>::Result Result;$/;"	t	class:testing::internal::IgnoreResultAction::Impl	typeref:typename:internal::Function<F>::Result
Result	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    typedef typename internal::Function<F>::Result Result;$/;"	t	function:testing::internal::IgnoreResultAction::operator Action<F>	typeref:typename:internal::Function<F>::Result
Result	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  typedef typename internal::Function<F1>::Result Result;$/;"	t	class:testing::internal::ActionAdaptor	typeref:typename:internal::Function<F1>::Result
Result	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  typedef typename internal::Function<F>::Result Result;$/;"	t	class:testing::Action	typeref:typename:internal::Function<F>::Result
Result	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  typedef typename internal::Function<F>::Result Result;$/;"	t	class:testing::ActionInterface	typeref:typename:internal::Function<F>::Result
Result	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^    typedef typename Function<F>::Result Result;$/;"	t	class:testing::internal::WithArgsAction::Impl	typeref:typename:Function<F>::Result
Result	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  typedef typename Function<F>::Result Result;$/;"	t	class:testing::internal::FunctionMockerBase	typeref:typename:Function<F>::Result
Result	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  typedef typename Function<F>::Result Result;$/;"	t	class:testing::internal::TypedExpectation	typeref:typename:Function<F>::Result
Result	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef R Result;$/;"	t	struct:testing::internal::Function	typeref:typename:R
Result	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^class Result {};$/;"	c	namespace:__anon6b6cf3b20111	file:
ResultHolder	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  typedef ActionResultHolder<Result> ResultHolder;$/;"	t	class:testing::internal::FunctionMockerBase	typeref:typename:ActionResultHolder<Result>
ResultIsEven	src/tests/googletest/googletest/test/gtest_unittest.cc	/^AssertionResult ResultIsEven(int n) {$/;"	f	namespace:__anonf780395f0111	typeref:typename:AssertionResult
ResultIsEvenNoExplanation	src/tests/googletest/googletest/test/gtest_unittest.cc	/^AssertionResult ResultIsEvenNoExplanation(int n) {$/;"	f	namespace:__anonf780395f0111	typeref:typename:AssertionResult
ResultOf	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^internal::ResultOfMatcher<Callable> ResultOf($/;"	f	namespace:testing	typeref:typename:internal::ResultOfMatcher<Callable>
ResultOfMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  ResultOfMatcher(Callable callable, const Matcher<ResultType>& matcher)$/;"	f	class:testing::internal::ResultOfMatcher
ResultOfMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class ResultOfMatcher {$/;"	c	namespace:testing::internal
ResultType	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef ResType ResultType;$/;"	t	struct:testing::internal::CallableTraits	typeref:typename:ResType
ResultType	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef typename CallableTraits<Callable>::ResultType ResultType;$/;"	t	class:testing::internal::ResultOfMatcher	typeref:typename:CallableTraits<Callable>::ResultType
ResultType	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef typename Functor::result_type ResultType;$/;"	t	struct:testing::internal::CallableTraits	typeref:typename:Functor::result_type
Retire	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  void Retire()$/;"	f	class:testing::internal::ExpectationBase	typeref:typename:void
RetireAllPreRequisites	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^void ExpectationBase::RetireAllPreRequisites()$/;"	f	class:testing::internal::ExpectationBase	typeref:typename:void
RetiresOnSaturation	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  TypedExpectation& RetiresOnSaturation() {$/;"	f	class:testing::internal::TypedExpectation	typeref:typename:TypedExpectation &
RetrieveThreadLocalValue	src/tests/googletest/googletest/test/gtest-port_test.cc	/^void RetrieveThreadLocalValue($/;"	f	namespace:testing::internal	typeref:typename:void
Return	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^inline PolymorphicAction<internal::ReturnVoidAction> Return() {$/;"	f	namespace:testing	typeref:typename:PolymorphicAction<internal::ReturnVoidAction>
Return	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^internal::ReturnAction<R> Return(R value) {$/;"	f	namespace:testing	typeref:typename:internal::ReturnAction<R>
Return	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^class Return(Expr):$/;"	c
ReturnAction	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  explicit ReturnAction(R value) : value_(new R(internal::move(value))) {}$/;"	f	class:testing::internal::ReturnAction
ReturnAction	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^class ReturnAction {$/;"	c	namespace:testing::internal
ReturnMyNonDefaultConstructible	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^MyNonDefaultConstructible ReturnMyNonDefaultConstructible(double \/* x *\/) {$/;"	f	namespace:__anon550198f10111	typeref:typename:MyNonDefaultConstructible
ReturnNull	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^inline PolymorphicAction<internal::ReturnNullAction> ReturnNull() {$/;"	f	namespace:testing	typeref:typename:PolymorphicAction<internal::ReturnNullAction>
ReturnNullAction	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^class ReturnNullAction {$/;"	c	namespace:testing::internal
ReturnOne	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^int ReturnOne() {$/;"	f	namespace:__anon550198f10111	typeref:typename:int
ReturnRef	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^inline internal::ReturnRefAction<R> ReturnRef(R& x) {  \/\/ NOLINT$/;"	f	namespace:testing	typeref:typename:internal::ReturnRefAction<R>
ReturnRefAction	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  explicit ReturnRefAction(T& ref) : ref_(ref) {}  \/\/ NOLINT$/;"	f	class:testing::internal::ReturnRefAction
ReturnRefAction	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^class ReturnRefAction {$/;"	c	namespace:testing::internal
ReturnRefOfCopy	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^inline internal::ReturnRefOfCopyAction<R> ReturnRefOfCopy(const R& x) {$/;"	f	namespace:testing	typeref:typename:internal::ReturnRefOfCopyAction<R>
ReturnRefOfCopyAction	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  explicit ReturnRefOfCopyAction(const T& value) : value_(value) {}  \/\/ NOLINT$/;"	f	class:testing::internal::ReturnRefOfCopyAction
ReturnRefOfCopyAction	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^class ReturnRefOfCopyAction {$/;"	c	namespace:testing::internal
ReturnSecondArgument	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^PolymorphicAction<ReturnSecondArgumentAction> ReturnSecondArgument() {$/;"	f	namespace:__anon550198f10111	typeref:typename:PolymorphicAction<ReturnSecondArgumentAction>
ReturnSecondArgumentAction	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^class ReturnSecondArgumentAction {$/;"	c	namespace:__anon550198f10111	file:
ReturnSentinel	src/tests/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h	/^    explicit ReturnSentinel(DeathTest* test) : test_(test) { }$/;"	f	class:testing::internal::DeathTest::ReturnSentinel
ReturnSentinel	src/tests/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h	/^  class ReturnSentinel {$/;"	c	class:testing::internal::DeathTest
ReturnVoidAction	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^class ReturnVoidAction {$/;"	c	namespace:testing::internal
ReturnZeroFromNullaryFunction	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^ReturnZeroFromNullaryFunction() {$/;"	f	namespace:__anon550198f10111	typeref:typename:PolymorphicAction<ReturnZeroFromNullaryFunctionAction>
ReturnZeroFromNullaryFunctionAction	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^class ReturnZeroFromNullaryFunctionAction {$/;"	c	namespace:__anon550198f10111	file:
Returning Live Values from Mock Methods	src/tests/googletest/googlemock/docs/CookBook.md	/^## Returning Live Values from Mock Methods ##$/;"	s	chapter:Using Actions
Returning Live Values from Mock Methods	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Returning Live Values from Mock Methods ##$/;"	s	chapter:Using Actions
Returning Live Values from Mock Methods	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Returning Live Values from Mock Methods ##$/;"	s	chapter:Using Actions
Returning References from Mock Methods	src/tests/googletest/googlemock/docs/CookBook.md	/^## Returning References from Mock Methods ##$/;"	s	chapter:Using Actions
Returning References from Mock Methods	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Returning References from Mock Methods ##$/;"	s	chapter:Using Actions
Returning References from Mock Methods	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Returning References from Mock Methods ##$/;"	s	chapter:Using Actions
Returning References from Mock Methods	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Returning References from Mock Methods ##$/;"	s	chapter:Using Actions
Returning a Value	src/tests/googletest/googlemock/docs/CheatSheet.md	/^## Returning a Value ##$/;"	s	chapter:Actions
Returning a Value	src/tests/googletest/googlemock/docs/v1_5/CheatSheet.md	/^## Returning a Value ##$/;"	s	chapter:Actions
Returning a Value	src/tests/googletest/googlemock/docs/v1_6/CheatSheet.md	/^## Returning a Value ##$/;"	s	chapter:Actions
Returning a Value	src/tests/googletest/googlemock/docs/v1_7/CheatSheet.md	/^## Returning a Value ##$/;"	s	chapter:Actions
RhsSize	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  size_t RhsSize() const { return num_matchers_; }$/;"	f	class:testing::internal::MatchMatrix	typeref:typename:size_t
RhsStlContainer	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef typename RhsView::type RhsStlContainer;$/;"	t	class:testing::internal::PointwiseMatcher	typeref:typename:RhsView::type
RhsStlContainer	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef typename RhsView::type RhsStlContainer;$/;"	t	function:testing::UnorderedPointwise	typeref:typename:RhsView::type
RhsValue	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef typename RhsStlContainer::value_type RhsValue;$/;"	t	class:testing::internal::PointwiseMatcher	typeref:typename:RhsStlContainer::value_type
RhsView	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef internal::StlContainerView<RhsContainer> RhsView;$/;"	t	class:testing::internal::PointwiseMatcher	typeref:typename:internal::StlContainerView<RhsContainer>
RhsView	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef typename internal::StlContainerView<RawRhsContainer> RhsView;$/;"	t	function:testing::UnorderedPointwise	typeref:typename:internal::StlContainerView<RawRhsContainer>
RmDir	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^inline int RmDir(const char* dir) { return _rmdir(dir); }$/;"	f	namespace:testing::internal::posix	typeref:typename:int
RpcChannel	src/muduo/muduo/net/protorpc/RpcChannel.cc	/^RpcChannel::RpcChannel()$/;"	f	class:RpcChannel
RpcChannel	src/muduo/muduo/net/protorpc/RpcChannel.cc	/^RpcChannel::RpcChannel(const TcpConnectionPtr& conn)$/;"	f	class:RpcChannel
RpcChannel	src/muduo/muduo/net/protorpc/RpcChannel.h	/^class RpcChannel : public ::google::protobuf::RpcChannel$/;"	c	namespace:muduo::net
RpcChannelPtr	src/muduo/muduo/net/protorpc/RpcChannel.h	/^typedef std::shared_ptr<RpcChannel> RpcChannelPtr;$/;"	t	namespace:muduo::net	typeref:typename:std::shared_ptr<RpcChannel>
RpcClient	src/muduo/examples/protobuf/resolver/client.cc	/^  RpcClient(EventLoop* loop, const InetAddress& serverAddr)$/;"	f	class:RpcClient	file:
RpcClient	src/muduo/examples/protobuf/resolver/client.cc	/^class RpcClient : noncopyable$/;"	c	file:
RpcClient	src/muduo/examples/protobuf/rpc/client.cc	/^  RpcClient(EventLoop* loop, const InetAddress& serverAddr)$/;"	f	class:RpcClient	file:
RpcClient	src/muduo/examples/protobuf/rpc/client.cc	/^class RpcClient : noncopyable$/;"	c	file:
RpcClient	src/muduo/examples/protobuf/rpcbench/client.cc	/^  RpcClient(EventLoop* loop,$/;"	f	class:RpcClient	file:
RpcClient	src/muduo/examples/protobuf/rpcbench/client.cc	/^class RpcClient : noncopyable$/;"	c	file:
RpcCodec	src/muduo/muduo/net/protorpc/RpcCodec.h	/^typedef ProtobufCodecLiteT<RpcMessage, rpctag> RpcCodec;$/;"	t	namespace:muduo::net	typeref:typename:ProtobufCodecLiteT<RpcMessage,rpctag>
RpcMessage	src/muduo/muduo/net/protorpc/rpc.proto	/^message RpcMessage$/;"	m	package:muduo.net
RpcMessagePtr	src/muduo/muduo/net/protorpc/RpcCodec.h	/^typedef std::shared_ptr<RpcMessage> RpcMessagePtr;$/;"	t	namespace:muduo::net	typeref:typename:std::shared_ptr<RpcMessage>
RpcServer	src/muduo/muduo/net/protorpc/RpcServer.cc	/^RpcServer::RpcServer(EventLoop* loop,$/;"	f	class:RpcServer
RpcServer	src/muduo/muduo/net/protorpc/RpcServer.h	/^class RpcServer$/;"	c	namespace:muduo::net
RpcService	src/muduo/muduo/net/protorpc/rpcservice.proto	/^service RpcService$/;"	s	package:muduo.net
Run	src/muduo/muduo/base/tests/BlockingQueue_bench2.cc	/^  void Run()$/;"	f	class:Bench	typeref:typename:void	file:
Run	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  static OutIter Run(Func f, const Tuple& t, OutIter out) {$/;"	f	class:testing::internal::TransformTupleValuesHelper	typeref:typename:OutIter
Run	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^    virtual void Run() {$/;"	f	class:testing::internal::ThreadWithParam::RunnableImpl	typeref:typename:void
Run	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  virtual void Run() {$/;"	f	class:testing::internal::ThreadWithParam	typeref:typename:void
Run	src/tests/googletest/googletest/src/gtest.cc	/^int UnitTest::Run() {$/;"	f	class:testing::UnitTest	typeref:typename:int
Run	src/tests/googletest/googletest/src/gtest.cc	/^void Test::Run() {$/;"	f	class:testing::Test	typeref:typename:void
Run	src/tests/googletest/googletest/src/gtest.cc	/^void TestCase::Run() {$/;"	f	class:testing::TestCase	typeref:typename:void
Run	src/tests/googletest/googletest/src/gtest.cc	/^void TestInfo::Run() {$/;"	f	class:testing::TestInfo	typeref:typename:void
Run	src/tests/googletest/googletest/test/gtest_break_on_failure_unittest.py	/^def Run(command):$/;"	f
Run	src/tests/googletest/googletest/test/gtest_list_tests_unittest.py	/^def Run(args):$/;"	f
Run	src/tests/googletest/googletest/test/gtest_throw_on_failure_test.py	/^def Run(command):$/;"	f
RunAllTests	src/tests/googletest/googletest/src/gtest.cc	/^bool UnitTestImpl::RunAllTests() {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:bool
RunAllTests	src/tests/googletest/googletest/test/gtest_environment_test.cc	/^int RunAllTests(MyEnvironment* env, FailureType failure) {$/;"	f	namespace:__anon7fd7f0f30111	typeref:typename:int
RunAllTests	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^int RunAllTests() {$/;"	f	typeref:typename:int
RunAndExtractTestList	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^def RunAndExtractTestList(args = None):$/;"	f
RunAndReturnOutput	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^def RunAndReturnOutput(args = None):$/;"	f
RunAndReturnOutput	src/tests/googletest/googletest/test/gtest_shuffle_test.py	/^def RunAndReturnOutput(extra_env, args):$/;"	f
RunAndVerify	src/tests/googletest/googletest/test/gtest_break_on_failure_unittest.py	/^  def RunAndVerify(self, env_var_value, flag_value, expect_seg_fault):$/;"	m	class:GTestBreakOnFailureUnitTest
RunAndVerify	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^  def RunAndVerify(self, gtest_filter, tests_to_run):$/;"	m	class:GTestFilterUnitTest
RunAndVerify	src/tests/googletest/googletest/test/gtest_list_tests_unittest.py	/^  def RunAndVerify(self, flag_value, expected_output_re, other_flag):$/;"	m	class:GTestListTestsUnitTest
RunAndVerify	src/tests/googletest/googletest/test/gtest_throw_on_failure_test.py	/^  def RunAndVerify(self, env_var_value, flag_value, should_fail):$/;"	m	class:ThrowOnFailureTest
RunAndVerifyAllowingDisabled	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^  def RunAndVerifyAllowingDisabled(self, gtest_filter, tests_to_run):$/;"	m	class:GTestFilterUnitTest
RunAndVerifyWithSharding	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^  def RunAndVerifyWithSharding(self, gtest_filter, total_shards, tests_to_run,$/;"	m	class:GTestFilterUnitTest
RunAtomicCode	src/tests/googletest/googletest/scripts/pump.py	/^def RunAtomicCode(env, node, output):$/;"	f
RunCode	src/tests/googletest/googletest/scripts/pump.py	/^def RunCode(env, code_node, output):$/;"	f
RunFromThread	src/tests/googletest/googletest/test/gtest-port_test.cc	/^void RunFromThread(void (func)(T), T param) {$/;"	f	namespace:testing::internal	typeref:typename:void
RunReturningDeathTest	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  static void RunReturningDeathTest(bool* flag) {$/;"	f	class:MacroLogicDeathTest	typeref:typename:void	file:
RunSetUpTestCase	src/tests/googletest/googletest/include/gtest/gtest.h	/^  void RunSetUpTestCase() { (*set_up_tc_)(); }$/;"	f	class:testing::TestCase	typeref:typename:void
RunShell	src/tests/googletest/googlemock/scripts/upload.py	/^def RunShell(command, silent_ok=False, universal_newlines=True,$/;"	f
RunShell	src/tests/googletest/googletest/scripts/upload.py	/^def RunShell(command, silent_ok=False, universal_newlines=True,$/;"	f
RunShellWithReturnCode	src/tests/googletest/googlemock/scripts/upload.py	/^def RunShellWithReturnCode(command, print_output=False,$/;"	f
RunShellWithReturnCode	src/tests/googletest/googletest/scripts/upload.py	/^def RunShellWithReturnCode(command, print_output=False,$/;"	f
RunTearDownTestCase	src/tests/googletest/googletest/include/gtest/gtest.h	/^  void RunTearDownTestCase() { (*tear_down_tc_)(); }$/;"	f	class:testing::TestCase	typeref:typename:void
RunWithFlag	src/tests/googletest/googletest/test/gtest_help_test.py	/^def RunWithFlag(flag):$/;"	f
RunWithSharding	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^def RunWithSharding(total_shards, shard_index, command):$/;"	f
Runnable	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  class Runnable {$/;"	c	class:testing::internal::ThreadWithParamBase
RunnableImpl	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^    RunnableImpl(UserThreadFunc* func, T param)$/;"	f	class:testing::internal::ThreadWithParam::RunnableImpl
RunnableImpl	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  class RunnableImpl : public Runnable {$/;"	c	class:testing::internal::ThreadWithParam
Running Test Programs: Advanced Options	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^# Running Test Programs: Advanced Options #$/;"	c
Running Test Programs: Advanced Options	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^# Running Test Programs: Advanced Options #$/;"	c
Running Test Programs: Advanced Options	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^# Running Test Programs: Advanced Options #$/;"	c
Running Test Programs: Advanced Options	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^# Running Test Programs: Advanced Options #$/;"	c
Running Tests in Emacs	src/tests/googletest/googlemock/docs/CookBook.md	/^## Running Tests in Emacs ##$/;"	s	chapter:Misc Recipes on Using Google Mock
Running Tests in Emacs	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Running Tests in Emacs ##$/;"	s	chapter:Misc Recipes on Using Google Mock
Running Tests in Emacs	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Running Tests in Emacs ##$/;"	s	chapter:Misc Recipes on Using Google Mock
Running Tests in Emacs	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Running Tests in Emacs ##$/;"	s	chapter:Misc Recipes on Using Google Mock
Running a Subset of the Tests	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^### Running a Subset of the Tests ###$/;"	S	section:Running Test Programs: Advanced Options""Selecting Tests
Running a Subset of the Tests	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^### Running a Subset of the Tests ###$/;"	S	section:Running Test Programs: Advanced Options""Selecting Tests
Running a Subset of the Tests	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^### Running a Subset of the Tests ###$/;"	S	section:Running Test Programs: Advanced Options""Selecting Tests
Running a Subset of the Tests	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^### Running a Subset of the Tests ###$/;"	S	section:Running Test Programs: Advanced Options""Selecting Tests
SA	src/muduo/muduo/net/SocketsOps.cc	/^typedef struct sockaddr SA;$/;"	t	namespace:__anon4a4088460111	typeref:struct:sockaddr	file:
SAMPLE_DIR	src/tests/googletest/googletest/scripts/test/Makefile	/^SAMPLE_DIR = ..\/..\/samples$/;"	m
SCOPED_CAPABILITY	src/muduo/muduo/base/Mutex.h	/^#define SCOPED_CAPABILITY /;"	d
SCOPED_TRACE	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define SCOPED_TRACE(/;"	d
SCRIPT_DIR	src/tests/googletest/googlemock/test/gmock_test_utils.py	/^SCRIPT_DIR = os.path.dirname(__file__) or '.'$/;"	v
SCRIPT_DIR	src/tests/googletest/googletest/scripts/gen_gtest_pred_impl.py	/^SCRIPT_DIR = os.path.dirname(sys.argv[0])$/;"	v
SHARDED_TESTS	src/tests/googletest/googletest/test/gtest_shuffle_test.py	/^SHARDED_TESTS = []$/;"	v
SHARD_INDEX_ENV_VAR	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^SHARD_INDEX_ENV_VAR = 'GTEST_SHARD_INDEX'$/;"	v
SHARD_INDEX_ENV_VAR	src/tests/googletest/googletest/test/gtest_shuffle_test.py	/^SHARD_INDEX_ENV_VAR = 'GTEST_SHARD_INDEX'$/;"	v
SHARD_STATUS_FILE_ENV_VAR	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^SHARD_STATUS_FILE_ENV_VAR = 'GTEST_SHARD_STATUS_FILE'$/;"	v
SHELL	buildotests/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	buildotests/driver/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	buildotests/examples/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	buildotests/libtfhe-superaic-acc/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	buildotests/libtfhe-superaic-client/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	buildotests/libtfhe-superaic-core/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	buildotests/libtfhe-superaic-core/fft_processors/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	buildotests/libtfhe-superaic-server/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	buildotests/tests/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	buildotests/tests/googletest/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	buildotests/tests/googletest/googlemock/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	buildotests/tests/googletest/googlemock/gtest/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHUFFLED_ACTIVE_TESTS	src/tests/googletest/googletest/test/gtest_shuffle_test.py	/^SHUFFLED_ACTIVE_TESTS = []$/;"	v
SHUFFLED_ALL_TESTS	src/tests/googletest/googletest/test/gtest_shuffle_test.py	/^SHUFFLED_ALL_TESTS = []$/;"	v
SHUFFLED_FILTERED_TESTS	src/tests/googletest/googletest/test/gtest_shuffle_test.py	/^SHUFFLED_FILTERED_TESTS = []$/;"	v
SHUFFLED_SHARDED_TESTS	src/tests/googletest/googletest/test/gtest_shuffle_test.py	/^SHUFFLED_SHARDED_TESTS = []$/;"	v
SIMULATE_ID	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_ID /;"	d	file:
SIMULATE_ID	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_ID /;"	d	file:
SIMULATE_VERSION_MAJOR	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_VERSION_MAJOR /;"	d	file:
SIMULATE_VERSION_MAJOR	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_VERSION_MAJOR /;"	d	file:
SIMULATE_VERSION_MINOR	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_VERSION_MINOR /;"	d	file:
SIMULATE_VERSION_MINOR	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_VERSION_MINOR /;"	d	file:
SIMULATE_VERSION_PATCH	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_VERSION_PATCH /;"	d	file:
SIMULATE_VERSION_PATCH	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_VERSION_PATCH /;"	d	file:
SRCS_AVX	src/libtfhe-superaic-core/fft_processors/nayuki/CMakeLists.txt	/^set(SRCS_AVX$/;"	v
SRCS_PORTABLE	src/libtfhe-superaic-core/fft_processors/nayuki/CMakeLists.txt	/^set(SRCS_PORTABLE$/;"	v
STACK_TRACE_TEMPLATE	src/tests/googletest/googletest/test/gtest_xml_output_unittest.py	/^  STACK_TRACE_TEMPLATE = ''$/;"	v
STACK_TRACE_TEMPLATE	src/tests/googletest/googletest/test/gtest_xml_output_unittest.py	/^  STACK_TRACE_TEMPLATE = '\\nStack trace:\\n*'$/;"	v
STL	src/muduo/muduo/base/tests/SingletonThreadLocal_test.cc	/^#define STL /;"	d	file:
STREAM_RESULT_TO_FLAG	src/tests/googletest/googletest/test/gtest_help_test.py	/^STREAM_RESULT_TO_FLAG = FLAG_PREFIX + 'stream_result_to'$/;"	v
STRINGIFY	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#define STRINGIFY(X) STRINGIFY_/;"	d	file:
STRINGIFY	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define STRINGIFY(X) STRINGIFY_/;"	d	file:
STRINGIFY_HELPER	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#define STRINGIFY_HELPER(/;"	d	file:
STRINGIFY_HELPER	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define STRINGIFY_HELPER(/;"	d	file:
STRINGPIECE_BINARY_PREDICATE	src/muduo/muduo/base/StringPiece.h	/^#define STRINGPIECE_BINARY_PREDICATE(/;"	d
SUBDIRS	src/tests/googletest/googlemock/Makefile.am	/^SUBDIRS = $(subdirs)$/;"	m
SUCCEED	src/tests/googletest/googletest/include/gtest/gtest.h	/^# define SUCCEED() GTEST_SUCCEED(/;"	d
SUFFIXES	buildotests/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	buildotests/driver/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	buildotests/examples/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	buildotests/libtfhe-superaic-acc/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	buildotests/libtfhe-superaic-client/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	buildotests/libtfhe-superaic-core/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	buildotests/libtfhe-superaic-core/fft_processors/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	buildotests/libtfhe-superaic-server/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	buildotests/tests/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	buildotests/tests/googletest/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	buildotests/tests/googletest/googlemock/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	buildotests/tests/googletest/googlemock/gtest/Makefile	/^SUFFIXES =$/;"	m
SUPPORTS_DEATH_TESTS	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^SUPPORTS_DEATH_TESTS = 'HasDeathTest' in gtest_test_utils.Subprocess($/;"	v
SUPPORTS_DEATH_TESTS	src/tests/googletest/googletest/test/gtest_help_test.py	/^SUPPORTS_DEATH_TESTS = "DeathTest" in gtest_test_utils.Subprocess($/;"	v
SUPPORTS_DEATH_TESTS	src/tests/googletest/googletest/test/gtest_output_test.py	/^SUPPORTS_DEATH_TESTS = 'DeathTest' in test_list$/;"	v
SUPPORTS_SEH_EXCEPTIONS	src/tests/googletest/googletest/test/gtest_catch_exceptions_test.py	/^SUPPORTS_SEH_EXCEPTIONS = 'ThrowsSehException' in TEST_LIST$/;"	v
SUPPORTS_STACK_TRACES	src/tests/googletest/googletest/test/gtest_output_test.py	/^SUPPORTS_STACK_TRACES = False$/;"	v
SUPPORTS_STACK_TRACES	src/tests/googletest/googletest/test/gtest_xml_output_unittest.py	/^SUPPORTS_STACK_TRACES = False$/;"	v
SUPPORTS_THREADS	src/tests/googletest/googletest/test/gtest_output_test.py	/^SUPPORTS_THREADS = 'ExpectFailureWithThreadsTest' in test_list$/;"	v
SUPPORTS_TYPED_TESTS	src/tests/googletest/googletest/test/gtest_output_test.py	/^SUPPORTS_TYPED_TESTS = 'TypedTest' in test_list$/;"	v
SUPPORTS_TYPED_TESTS	src/tests/googletest/googletest/test/gtest_xml_output_unittest.py	/^SUPPORTS_TYPED_TESTS = 'TypedTest' in gtest_test_utils.Subprocess($/;"	v
SYNTAX	src/tests/googletest/googlemock/scripts/generator/cpp/tokenize.py	/^SYNTAX = 'SYNTAX'$/;"	v
SafeMatcherCast	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline Matcher<T> SafeMatcherCast(const M& polymorphic_matcher) {$/;"	f	namespace:testing	typeref:typename:Matcher<T>
SafeMatcherCastImpl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class SafeMatcherCastImpl {$/;"	c	namespace:testing
ScopedFakeTestPartResultReporter	src/tests/googletest/googletest/include/gtest/gtest-spi.h	/^class GTEST_API_ ScopedFakeTestPartResultReporter$/;"	c	namespace:testing
ScopedFakeTestPartResultReporter	src/tests/googletest/googletest/src/gtest.cc	/^ScopedFakeTestPartResultReporter::ScopedFakeTestPartResultReporter($/;"	f	class:testing::ScopedFakeTestPartResultReporter
ScopedFakeTestPartResultReporterTest	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^typedef ExpectFailureWithThreadsTest ScopedFakeTestPartResultReporterTest;$/;"	t	typeref:typename:ExpectFailureWithThreadsTest	file:
ScopedFakeTestPartResultReporterTest	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class ScopedFakeTestPartResultReporterTest : public Test {$/;"	c	namespace:__anonf780395f0111	file:
ScopedFakeTestPartResultReporterWithThreadsTest	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class ScopedFakeTestPartResultReporterWithThreadsTest$/;"	c	namespace:__anonf780395f0111	file:
ScopedPrematureExitFile	src/tests/googletest/googletest/src/gtest.cc	/^  explicit ScopedPrematureExitFile(const char* premature_exit_filepath)$/;"	f	class:testing::internal::ScopedPrematureExitFile	file:
ScopedPrematureExitFile	src/tests/googletest/googletest/src/gtest.cc	/^class ScopedPrematureExitFile {$/;"	c	namespace:testing::internal	file:
ScopedTrace	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^class GTEST_API_ ScopedTrace {$/;"	c	namespace:testing::internal
ScopedTrace	src/tests/googletest/googletest/src/gtest.cc	/^ScopedTrace::ScopedTrace(const char* file, int line, const Message& message)$/;"	f	class:testing::internal::ScopedTrace
Second	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef typename RhsStlContainer::value_type Second;$/;"	t	function:testing::UnorderedPointwise	typeref:typename:RhsStlContainer::value_type
SecondType	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef typename RawPairType::second_type SecondType;$/;"	t	class:testing::internal::PairMatcherImpl	typeref:typename:RawPairType::second_type
SehExceptionInConstructorTest	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^  SehExceptionInConstructorTest() { RaiseException(42, 0, 0, NULL); }$/;"	f	class:SehExceptionInConstructorTest	file:
SehExceptionInConstructorTest	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^class SehExceptionInConstructorTest : public Test {$/;"	c	file:
SehExceptionInDestructorTest	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^class SehExceptionInDestructorTest : public Test {$/;"	c	file:
SehExceptionInSetUpTest	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^class SehExceptionInSetUpTest : public Test {$/;"	c	file:
SehExceptionInSetUpTestCaseTest	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^class SehExceptionInSetUpTestCaseTest : public Test {$/;"	c	file:
SehExceptionInTearDownTest	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^class SehExceptionInTearDownTest : public Test {$/;"	c	file:
SehExceptionInTearDownTestCaseTest	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^class SehExceptionInTearDownTestCaseTest : public Test {$/;"	c	file:
Select	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^  static SelectedArgs Select(const ArgumentTuple& \/* args *\/) {$/;"	f	class:testing::internal::SelectArgs	typeref:typename:SelectedArgs
Select	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^  static SelectedArgs Select(const ArgumentTuple& args) {$/;"	f	class:testing::internal::SelectArgs	typeref:typename:SelectedArgs
SelectArgs	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^class SelectArgs {$/;"	c	namespace:testing::internal
SelectArgs	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^class SelectArgs<Result, ArgumentTuple,$/;"	c	namespace:testing::internal
SelectedArgs	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^  typedef typename Function<type>::ArgumentTuple SelectedArgs;$/;"	t	class:testing::internal::SelectArgs	typeref:typename:Function<type>::ArgumentTuple
SelectedArgs	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^      k6, k7, k8, k9>::type SelectedArgs;$/;"	t	class:testing::internal::ArgsMatcherImpl	typeref:typename:internal::TupleFields<RawArgsTuple,k0,k1,k2,k3,k4,k5,k6,k7,k8,k9>::type
Selecting Between Overloaded Functions	src/tests/googletest/googlemock/docs/CookBook.md	/^## Selecting Between Overloaded Functions ##$/;"	s	chapter:Using Matchers
Selecting Between Overloaded Functions	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Selecting Between Overloaded Functions ##$/;"	s	chapter:Using Matchers
Selecting Between Overloaded Functions	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Selecting Between Overloaded Functions ##$/;"	s	chapter:Using Matchers
Selecting Between Overloaded Functions	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Selecting Between Overloaded Functions ##$/;"	s	chapter:Using Matchers
Selecting Tests	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^## Selecting Tests ##$/;"	s	chapter:Running Test Programs: Advanced Options
Selecting Tests	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^## Selecting Tests ##$/;"	s	chapter:Running Test Programs: Advanced Options
Selecting Tests	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^## Selecting Tests ##$/;"	s	chapter:Running Test Programs: Advanced Options
Selecting Tests	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^## Selecting Tests ##$/;"	s	chapter:Running Test Programs: Advanced Options
Selecting an Action's Arguments	src/tests/googletest/googlemock/docs/CookBook.md	/^## Selecting an Action's Arguments ##$/;"	s	chapter:Using Actions
Selecting an Action's Arguments	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Selecting an Action's Arguments ##$/;"	s	chapter:Using Actions
Selecting an Action's Arguments	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Selecting an Action's Arguments ##$/;"	s	chapter:Using Actions
Selecting an Action's Arguments	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Selecting an Action's Arguments ##$/;"	s	chapter:Using Actions
Send	src/tests/googletest/googlemock/scripts/upload.py	/^  def Send(self, request_path, payload=None,$/;"	m	class:AbstractRpcServer
Send	src/tests/googletest/googletest/scripts/upload.py	/^  def Send(self, request_path, payload=None,$/;"	m	class:AbstractRpcServer
Send	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^    virtual void Send(const std::string& message) {$/;"	f	class:testing::internal::StreamingListener::SocketWriter	typeref:typename:void
Send	src/tests/googletest/googletest/test/gtest_unittest.cc	/^    virtual void Send(const std::string& message) { output_ += message; }$/;"	f	class:testing::internal::StreamingListenerTest::FakeSocketWriter	typeref:typename:void	file:
SendLn	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^    void SendLn(const std::string& message) { Send(message + "\\n"); }$/;"	f	class:testing::internal::StreamingListener::AbstractSocketWriter	typeref:typename:void
SendLn	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  void SendLn(const std::string& message) { socket_writer_->SendLn(message); }$/;"	f	class:testing::internal::StreamingListener	typeref:typename:void
SendThrottler	src/muduo/examples/wordcount/hasher.cc	/^  SendThrottler(EventLoop* loop, const InetAddress& addr)$/;"	f	class:SendThrottler	file:
SendThrottler	src/muduo/examples/wordcount/hasher.cc	/^class SendThrottler : muduo::noncopyable$/;"	c	file:
SeparateInstanceTest	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  SeparateInstanceTest() : count_(0) {}$/;"	f	class:SeparateInstanceTest	file:
SeparateInstanceTest	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^class SeparateInstanceTest : public TestWithParam<int> {$/;"	c	file:
Sequence	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  Sequence() : last_expectation_(new Expectation) {}$/;"	f	class:testing::Sequence
Sequence	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^class GTEST_API_ Sequence {$/;"	c	namespace:testing
SequenceTestingListener	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  SequenceTestingListener(std::vector<std::string>* vector, const char* id)$/;"	f	class:SequenceTestingListener	file:
SequenceTestingListener	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class SequenceTestingListener : public EmptyTestEventListener {$/;"	c	file:
Sequences	src/tests/googletest/googlemock/docs/CheatSheet.md	/^## Sequences ##$/;"	s	chapter:Expectation Order
Sequences	src/tests/googletest/googlemock/docs/v1_5/CheatSheet.md	/^## Sequences ##$/;"	s	chapter:Expectation Order
Sequences	src/tests/googletest/googlemock/docs/v1_6/CheatSheet.md	/^## Sequences ##$/;"	s	chapter:Expectation Order
Sequences	src/tests/googletest/googlemock/docs/v1_7/CheatSheet.md	/^## Sequences ##$/;"	s	chapter:Expectation Order
ServerClient	src/muduo/examples/socks4a/tunnel.h	/^  enum ServerClient$/;"	g	class:Tunnel
ServerKey	src/tests/classic_PBS_parameters.cpp	/^struct ServerKey{$/;"	s	file:
Session	src/libtfhe-superaic-core/include/tfhe_session.h	/^class Session{$/;"	c	namespace:tfhe_superaic
Session	src/libtfhe-superaic-core/tfhe_session.cpp	/^Session::Session(Session_ID_t sessionID , shared_ptr<LweBootstrappingKey_Wrap> bootstrap_key_wra/;"	f	class:tfhe_superaic::Session
Session	src/muduo/examples/ace/logging/server.cc	/^  explicit Session(const TcpConnectionPtr& conn)$/;"	f	class:logging::Session	file:
Session	src/muduo/examples/ace/logging/server.cc	/^class Session : noncopyable$/;"	c	namespace:logging	file:
Session	src/muduo/examples/memcached/server/Session.h	/^  Session(MemcacheServer* owner, const muduo::net::TcpConnectionPtr& conn)$/;"	f	class:Session
Session	src/muduo/examples/memcached/server/Session.h	/^class Session : public std::enable_shared_from_this<Session>,$/;"	c
Session	src/muduo/examples/pingpong/client.cc	/^  Session(EventLoop* loop,$/;"	f	class:Session	file:
Session	src/muduo/examples/pingpong/client.cc	/^class Session : noncopyable$/;"	c	file:
SessionMessage	src/muduo/examples/ace/ttcp/common.h	/^struct SessionMessage$/;"	s
SessionPtr	src/muduo/examples/ace/logging/server.cc	/^typedef std::shared_ptr<Session> SessionPtr;$/;"	t	namespace:logging	typeref:typename:std::shared_ptr<Session>	file:
SessionPtr	src/muduo/examples/memcached/server/Session.h	/^typedef std::shared_ptr<Session> SessionPtr;$/;"	t	typeref:typename:std::shared_ptr<Session>
SessionTest	src/tests/session_test.cpp	/^    class SessionTest : public ::testing::Test {$/;"	c	namespace:__anon23f859320111	file:
Session_ID_t	src/libtfhe-superaic-core/include/tfhe_session.h	/^typedef string Session_ID_t;$/;"	t	namespace:tfhe_superaic	typeref:typename:string
Set	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  static void Set(T x) {$/;"	f	class:testing::DefaultValue	typeref:typename:void
Set	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  static void Set(T& x) {  \/\/ NOLINT$/;"	f	class:testing::DefaultValue	typeref:typename:void
Set	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  typedef ::std::set<Expectation, Less> Set;$/;"	t	class:testing::Expectation	typeref:typename:::std::set<Expectation,Less>
Set	src/tests/googletest/googletest/include/gtest/internal/gtest-filepath.h	/^  void Set(const FilePath& rhs) {$/;"	f	class:testing::internal::FilePath	typeref:typename:void
Set	src/tests/googletest/googletest/samples/sample2.cc	/^void MyString::Set(const char* a_c_string) {$/;"	f	class:MyString	typeref:typename:void
Set Up the Executable Run Environment	src/tests/googletest/googletest/docs/V1_5_XcodeGuide.md	/^# Set Up the Executable Run Environment #$/;"	c
Set Up the Executable Run Environment	src/tests/googletest/googletest/docs/V1_6_XcodeGuide.md	/^# Set Up the Executable Run Environment #$/;"	c
Set Up the Executable Run Environment	src/tests/googletest/googletest/docs/V1_7_XcodeGuide.md	/^# Set Up the Executable Run Environment #$/;"	c
Set Up the Executable Run Environment	src/tests/googletest/googletest/docs/XcodeGuide.md	/^# Set Up the Executable Run Environment #$/;"	c
SetArgPointee	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^SetArgPointee(const T& x) {$/;"	f	namespace:testing	typeref:typename:PolymorphicAction<internal::SetArgumentPointeeAction<N,T,internal::IsAProtocolMessage<T>::value>>
SetArgPointee	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^SetArgPointee(const char* p) {$/;"	f	namespace:testing	typeref:typename:PolymorphicAction<internal::SetArgumentPointeeAction<N,const char *,false>>
SetArgPointee	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^SetArgPointee(const wchar_t* p) {$/;"	f	namespace:testing	typeref:typename:PolymorphicAction<internal::SetArgumentPointeeAction<N,const wchar_t *,false>>
SetArgumentPointee	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^SetArgumentPointee(const T& x) {$/;"	f	namespace:testing	typeref:typename:PolymorphicAction<internal::SetArgumentPointeeAction<N,T,internal::IsAProtocolMessage<T>::value>>
SetArgumentPointeeAction	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  explicit SetArgumentPointeeAction(const A& value) : value_(value) {}$/;"	f	class:testing::internal::SetArgumentPointeeAction
SetArgumentPointeeAction	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  explicit SetArgumentPointeeAction(const Proto& proto) : proto_(new Proto) {$/;"	f	class:testing::internal::SetArgumentPointeeAction
SetArgumentPointeeAction	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^class SetArgumentPointeeAction {$/;"	c	namespace:testing::internal
SetArgumentPointeeAction	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^class SetArgumentPointeeAction<N, Proto, true> {$/;"	c	namespace:testing::internal
SetCallCount	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^  void SetCallCount(int n, ExpectationBase* exp) {$/;"	f	class:testing::internal::ExpectationTester	typeref:typename:void	file:
SetDefaultResultPrinter	src/tests/googletest/googletest/src/gtest.cc	/^void TestEventListeners::SetDefaultResultPrinter(TestEventListener* listener) {$/;"	f	class:testing::TestEventListeners	typeref:typename:void
SetDefaultResultPrinter	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static void SetDefaultResultPrinter(TestEventListeners* listeners,$/;"	f	class:testing::internal::TestEventListenersAccessor	typeref:typename:void	file:
SetDefaultXmlGenerator	src/tests/googletest/googletest/src/gtest.cc	/^void TestEventListeners::SetDefaultXmlGenerator(TestEventListener* listener) {$/;"	f	class:testing::TestEventListeners	typeref:typename:void
SetDefaultXmlGenerator	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static void SetDefaultXmlGenerator(TestEventListeners* listeners,$/;"	f	class:testing::internal::TestEventListenersAccessor	typeref:typename:void	file:
SetEdge	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  void SetEdge(size_t ilhs, size_t irhs, bool b) {$/;"	f	class:testing::internal::MatchMatrix	typeref:typename:void
SetEnv	src/tests/googletest/googletest/test/gtest_unittest.cc	/^static void SetEnv(const char* name, const char* value) {$/;"	f	namespace:__anonf780395f0111	typeref:typename:void	file:
SetEnvVar	src/tests/googletest/googlemock/test/gmock_leak_test.py	/^SetEnvVar = gmock_test_utils.SetEnvVar$/;"	v
SetEnvVar	src/tests/googletest/googlemock/test/gmock_test_utils.py	/^SetEnvVar = gtest_test_utils.SetEnvVar$/;"	v
SetEnvVar	src/tests/googletest/googletest/test/gtest_break_on_failure_unittest.py	/^SetEnvVar = gtest_test_utils.SetEnvVar$/;"	v
SetEnvVar	src/tests/googletest/googletest/test/gtest_catch_exceptions_test.py	/^SetEnvVar = gtest_test_utils.SetEnvVar$/;"	v
SetEnvVar	src/tests/googletest/googletest/test/gtest_color_test.py	/^def SetEnvVar(env_var, value):$/;"	f
SetEnvVar	src/tests/googletest/googletest/test/gtest_env_var_test.py	/^def SetEnvVar(env_var, value):$/;"	f
SetEnvVar	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^def SetEnvVar(env_var, value):$/;"	f
SetEnvVar	src/tests/googletest/googletest/test/gtest_test_utils.py	/^def SetEnvVar(env_var, value):$/;"	f
SetEnvVar	src/tests/googletest/googletest/test/gtest_throw_on_failure_test.py	/^def SetEnvVar(env_var, value):$/;"	f
SetErrnoAndReturn	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^SetErrnoAndReturn(int errval, T result) {$/;"	f	namespace:testing	typeref:typename:PolymorphicAction<internal::SetErrnoAndReturnAction<T>>
SetErrnoAndReturnAction	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  SetErrnoAndReturnAction(int errno_value, T result)$/;"	f	class:testing::internal::SetErrnoAndReturnAction
SetErrnoAndReturnAction	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^class SetErrnoAndReturnAction {$/;"	c	namespace:testing::internal
SetErrnoAndReturnTest	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^class SetErrnoAndReturnTest : public testing::Test {$/;"	c	namespace:__anon550198f10111	file:
SetFactory	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  static void SetFactory(FactoryFunction factory) {$/;"	f	class:testing::DefaultValue	typeref:typename:void
SetGlobalTestPartResultReporter	src/tests/googletest/googletest/src/gtest.cc	/^void UnitTestImpl::SetGlobalTestPartResultReporter($/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:void
SetInjectableArgvs	src/tests/googletest/googletest/src/gtest-port.cc	/^void SetInjectableArgvs(const ::std::vector<testing::internal::string>* argvs) {$/;"	f	namespace:testing::internal	typeref:typename:void
SetMatchers	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  void SetMatchers(const ArgumentMatcherTuple& matchers) {$/;"	f	class:testing::internal::MockSpec	typeref:typename:void
SetOwnerAndName	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^void UntypedFunctionMockerBase::SetOwnerAndName(const void* mock_obj,$/;"	f	class:testing::internal::UntypedFunctionMockerBase	typeref:typename:void
SetParam	src/tests/googletest/googletest/include/gtest/gtest.h	/^  static void SetParam(const ParamType* parameter) {$/;"	f	class:testing::WithParamInterface	typeref:typename:void
SetParameters	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^void MockDeathTestFactory::SetParameters(bool create,$/;"	f	class:MockDeathTestFactory	typeref:typename:void
SetPthreadFlag	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^void SetPthreadFlag() {$/;"	f	namespace:__anon2b0cfa7f0111	typeref:typename:void
SetReactionOnUninterestingCalls	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^void SetReactionOnUninterestingCalls(const void* mock_obj,$/;"	f	namespace:testing::__anonc1446e5b0111	typeref:typename:void
SetSigprofActionAndTimer	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^void SetSigprofActionAndTimer() {$/;"	f	typeref:typename:void
SetTestPartResultReporterForCurrentThread	src/tests/googletest/googletest/src/gtest.cc	/^void UnitTestImpl::SetTestPartResultReporterForCurrentThread($/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:void
SetTimeZone	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static void SetTimeZone(const char* time_zone) {$/;"	f	class:__anonf780395f0111::FormatEpochTimeInMillisAsIso8601Test	typeref:typename:void	file:
SetUp	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^  virtual void SetUp() { errno = 0; }$/;"	f	class:__anon550198f10111::SetErrnoAndReturnTest	typeref:typename:void	file:
SetUp	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^  virtual void SetUp() {$/;"	f	class:testing::internal::__anonf4b2defb0111::LogIsVisibleTest	typeref:typename:void	file:
SetUp	src/tests/googletest/googletest/include/gtest/gtest.h	/^  virtual void SetUp() {}$/;"	f	class:testing::Environment	typeref:typename:void
SetUp	src/tests/googletest/googletest/samples/sample3_unittest.cc	/^  virtual void SetUp() {$/;"	f	class:QueueTest	typeref:typename:void	file:
SetUp	src/tests/googletest/googletest/samples/sample5_unittest.cc	/^  virtual void SetUp() {$/;"	f	class:QueueTest	typeref:typename:void	file:
SetUp	src/tests/googletest/googletest/samples/sample5_unittest.cc	/^  virtual void SetUp() {$/;"	f	class:QuickTest	typeref:typename:void	file:
SetUp	src/tests/googletest/googletest/samples/sample7_unittest.cc	/^  virtual void SetUp() { table_ = (*GetParam())(); }$/;"	f	class:PrimeTableTest	typeref:typename:void	file:
SetUp	src/tests/googletest/googletest/samples/sample8_unittest.cc	/^  virtual void SetUp() {$/;"	f	class:PrimeTableTest	typeref:typename:void	file:
SetUp	src/tests/googletest/googletest/src/gtest.cc	/^void Test::SetUp() {$/;"	f	class:testing::Test	typeref:typename:void
SetUp	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^  virtual void SetUp() {$/;"	f	class:testing::internal::__anon077d0c590111::DirectoryCreationTest	typeref:typename:void	file:
SetUp	src/tests/googletest/googletest/test/gtest-listener_test.cc	/^  virtual void SetUp() {$/;"	f	class:testing::internal::EnvironmentInvocationCatcher	typeref:typename:void	file:
SetUp	src/tests/googletest/googletest/test/gtest-listener_test.cc	/^  virtual void SetUp() {$/;"	f	class:testing::internal::ListenerTest	typeref:typename:void	file:
SetUp	src/tests/googletest/googletest/test/gtest-options_test.cc	/^  virtual void SetUp() {$/;"	f	class:testing::internal::__anon8f60ad580111::XmlOutputChangeDirTest	typeref:typename:void	file:
SetUp	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  virtual void SetUp() {$/;"	f	class:TestGenerationTest	typeref:typename:void	file:
SetUp	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^  virtual void SetUp() {$/;"	f	class:CommonTest	typeref:typename:void	file:
SetUp	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^  virtual void SetUp() {$/;"	f	class:TypedTestCasePStateTest	typeref:typename:void	file:
SetUp	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^  virtual void SetUp() { RaiseException(42, 0, 0, NULL); }$/;"	f	class:SehExceptionInSetUpTest	typeref:typename:void	file:
SetUp	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^  virtual void SetUp() { throw std::runtime_error("Standard C++ exception"); }$/;"	f	class:CxxExceptionInSetUpTest	typeref:typename:void	file:
SetUp	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^  virtual void SetUp() {$/;"	f	class:CxxExceptionInConstructorTest	typeref:typename:void	file:
SetUp	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^  virtual void SetUp() {$/;"	f	class:CxxExceptionInSetUpTestCaseTest	typeref:typename:void	file:
SetUp	src/tests/googletest/googletest/test/gtest_environment_test.cc	/^  virtual void SetUp() {$/;"	f	class:__anon7fd7f0f30111::MyEnvironment	typeref:typename:void	file:
SetUp	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^  virtual void SetUp() {$/;"	f	class:BarEnvironment	typeref:typename:void	file:
SetUp	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^  virtual void SetUp() {$/;"	f	class:DeathTestAndMultiThreadsTest	typeref:typename:void	file:
SetUp	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^  virtual void SetUp() {$/;"	f	class:FatalFailureInFixtureConstructorTest	typeref:typename:void	file:
SetUp	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^  virtual void SetUp() {$/;"	f	class:FatalFailureInSetUpTest	typeref:typename:void	file:
SetUp	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^  virtual void SetUp() {$/;"	f	class:FooEnvironment	typeref:typename:void	file:
SetUp	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^  virtual void SetUp() {$/;"	f	class:NonFatalFailureInFixtureConstructorTest	typeref:typename:void	file:
SetUp	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^  virtual void SetUp() {$/;"	f	class:NonFatalFailureInSetUpTest	typeref:typename:void	file:
SetUp	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  virtual void SetUp() {$/;"	f	class:Predicate1Test	typeref:typename:void	file:
SetUp	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  virtual void SetUp() {$/;"	f	class:Predicate2Test	typeref:typename:void	file:
SetUp	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  virtual void SetUp() {$/;"	f	class:Predicate3Test	typeref:typename:void	file:
SetUp	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  virtual void SetUp() {$/;"	f	class:Predicate4Test	typeref:typename:void	file:
SetUp	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  virtual void SetUp() {$/;"	f	class:Predicate5Test	typeref:typename:void	file:
SetUp	src/tests/googletest/googletest/test/gtest_repeat_test.cc	/^  virtual void SetUp() { g_environment_set_up_count++; }$/;"	f	class:__anon83eb3b5f0111::MyEnvironment	typeref:typename:void	file:
SetUp	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  virtual void SetUp() {$/;"	f	class:ProtectedFixtureMethodsTest	typeref:typename:void	file:
SetUp	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  virtual void SetUp() {$/;"	f	class:__anonf780395f0111::FloatingPointTest	typeref:typename:void	file:
SetUp	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  virtual void SetUp() {$/;"	f	class:__anonf780395f0111::FormatEpochTimeInMillisAsIso8601Test	typeref:typename:void	file:
SetUp	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  virtual void SetUp() {$/;"	f	class:__anonf780395f0111::ShouldShardTest	typeref:typename:void	file:
SetUp	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  virtual void SetUp() {$/;"	f	class:__anonf780395f0111::TestResultTest	typeref:typename:void	file:
SetUp	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  virtual void SetUp() {$/;"	f	class:testing::FlagfileTest	typeref:typename:void	file:
SetUp	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  virtual void SetUp() {$/;"	f	class:testing::InitGoogleTestTest	typeref:typename:void	file:
SetUp	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  virtual void SetUp() {$/;"	f	class:testing::SetUpTestCaseTest	typeref:typename:void	file:
SetUp	src/tests/googletest/googletest/test/gtest_xml_outfile1_test_.cc	/^  virtual void SetUp() {$/;"	f	class:PropertyOne	typeref:typename:void	file:
SetUp	src/tests/googletest/googletest/test/gtest_xml_outfile2_test_.cc	/^  virtual void SetUp() {$/;"	f	class:PropertyTwo	typeref:typename:void	file:
SetUp	src/tests/polynomial_test.cpp	/^        virtual void SetUp() {$/;"	f	class:__anon87ebe9520111::PolynomialTest	typeref:typename:void	file:
SetUp	src/tests/small_size_test.cpp	/^        virtual void SetUp() {$/;"	f	class:__anon9baab4410111::PolynomialTest	typeref:typename:void	file:
SetUpEnvironment	src/tests/googletest/googletest/src/gtest.cc	/^static void SetUpEnvironment(Environment* env) { env->SetUp(); }$/;"	f	namespace:testing::internal	typeref:typename:void	file:
SetUpExecuted	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  void SetUpExecuted() { set_up_count_++; }$/;"	f	class:TestGenerationEnvironment	typeref:typename:void	file:
SetUpTestCase	src/tests/googletest/googletest/include/gtest/gtest.h	/^  static void SetUpTestCase() {}$/;"	f	class:testing::Test	typeref:typename:void
SetUpTestCase	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  static void SetUpTestCase() {$/;"	f	class:MacroLogicDeathTest	typeref:typename:void	file:
SetUpTestCase	src/tests/googletest/googletest/test/gtest-listener_test.cc	/^  static void SetUpTestCase() {$/;"	f	class:testing::internal::ListenerTest	typeref:typename:void	file:
SetUpTestCase	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  static void SetUpTestCase() {$/;"	f	class:TestGenerationTest	typeref:typename:void	file:
SetUpTestCase	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^  static void SetUpTestCase() {$/;"	f	class:CommonTest	typeref:typename:void	file:
SetUpTestCase	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^  static void SetUpTestCase() { RaiseException(42, 0, 0, NULL); }$/;"	f	class:SehExceptionInSetUpTestCaseTest	typeref:typename:void	file:
SetUpTestCase	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^  static void SetUpTestCase() {$/;"	f	class:CxxExceptionInSetUpTestCaseTest	typeref:typename:void	file:
SetUpTestCase	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static void SetUpTestCase() {$/;"	f	class:__anonf780395f0111::DisabledTestsTest	typeref:typename:void	file:
SetUpTestCase	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static void SetUpTestCase() {$/;"	f	class:__anonf780395f0111::GTestFlagSaverTest	typeref:typename:void	file:
SetUpTestCase	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static void SetUpTestCase() {$/;"	f	class:__anonf780395f0111::UnitTestRecordPropertyTest	typeref:typename:void	file:
SetUpTestCase	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static void SetUpTestCase() {$/;"	f	class:testing::CurrentTestInfoTest	typeref:typename:void	file:
SetUpTestCase	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static void SetUpTestCase() {$/;"	f	class:testing::SetUpTestCaseTest	typeref:typename:void	file:
SetUpTestCase	src/tests/googletest/googletest/test/gtest_xml_output_unittest_.cc	/^  static void SetUpTestCase() { RecordProperty("SetUpTestCase", "yes"); }$/;"	f	class:PropertyRecordingTest	typeref:typename:void	file:
SetUpTestCaseFunc	src/tests/googletest/googletest/include/gtest/gtest.h	/^  typedef internal::SetUpTestCaseFunc SetUpTestCaseFunc;$/;"	t	class:testing::Test	typeref:typename:internal::SetUpTestCaseFunc
SetUpTestCaseFunc	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^typedef void (*SetUpTestCaseFunc)();$/;"	t	namespace:testing::internal	typeref:typename:void (*)()
SetUpTestCaseTest	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class SetUpTestCaseTest : public Test {$/;"	c	namespace:testing	file:
SetValue	src/tests/googletest/googletest/include/gtest/gtest.h	/^  void SetValue(const std::string& new_value) {$/;"	f	class:testing::TestProperty	typeref:typename:void
Setting Default Actions	src/tests/googletest/googlemock/docs/CheatSheet.md	/^# Setting Default Actions #$/;"	c
Setting Default Actions	src/tests/googletest/googlemock/docs/v1_5/CheatSheet.md	/^# Setting Default Actions #$/;"	c
Setting Default Actions	src/tests/googletest/googlemock/docs/v1_6/CheatSheet.md	/^# Setting Default Actions #$/;"	c
Setting Default Actions	src/tests/googletest/googlemock/docs/v1_7/CheatSheet.md	/^# Setting Default Actions #$/;"	c
Setting Expectations	src/tests/googletest/googlemock/docs/CheatSheet.md	/^# Setting Expectations #$/;"	c
Setting Expectations	src/tests/googletest/googlemock/docs/CookBook.md	/^# Setting Expectations #$/;"	c
Setting Expectations	src/tests/googletest/googlemock/docs/ForDummies.md	/^# Setting Expectations #$/;"	c
Setting Expectations	src/tests/googletest/googlemock/docs/v1_5/CheatSheet.md	/^# Setting Expectations #$/;"	c
Setting Expectations	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^# Setting Expectations #$/;"	c
Setting Expectations	src/tests/googletest/googlemock/docs/v1_5/ForDummies.md	/^# Setting Expectations #$/;"	c
Setting Expectations	src/tests/googletest/googlemock/docs/v1_6/CheatSheet.md	/^# Setting Expectations #$/;"	c
Setting Expectations	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^# Setting Expectations #$/;"	c
Setting Expectations	src/tests/googletest/googlemock/docs/v1_6/ForDummies.md	/^# Setting Expectations #$/;"	c
Setting Expectations	src/tests/googletest/googlemock/docs/v1_7/CheatSheet.md	/^# Setting Expectations #$/;"	c
Setting Expectations	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^# Setting Expectations #$/;"	c
Setting Expectations	src/tests/googletest/googlemock/docs/v1_7/ForDummies.md	/^# Setting Expectations #$/;"	c
Setting the Default Actions for a Mock Method	src/tests/googletest/googlemock/docs/CookBook.md	/^## Setting the Default Actions for a Mock Method ##$/;"	s	chapter:Using Actions
Setting the Default Actions for a Mock Method	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Setting the Default Actions for a Mock Method ##$/;"	s	chapter:Using Actions
Setting the Default Actions for a Mock Method	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Setting the Default Actions for a Mock Method ##$/;"	s	chapter:Using Actions
Setting the Default Actions for a Mock Method	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Setting the Default Actions for a Mock Method ##$/;"	s	chapter:Using Actions
Setting the Default Value for a Return Type	src/tests/googletest/googlemock/docs/CookBook.md	/^## Setting the Default Value for a Return Type ##$/;"	s	chapter:Using Actions
Setting the Default Value for a Return Type	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Setting the Default Value for a Return Type ##$/;"	s	chapter:Using Actions
Setting the Default Value for a Return Type	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Setting the Default Value for a Return Type ##$/;"	s	chapter:Using Actions
Setting the Default Value for a Return Type	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Setting the Default Value for a Return Type ##$/;"	s	chapter:Using Actions
Setting up a New Test Project	src/tests/googletest/googletest/docs/Primer.md	/^# Setting up a New Test Project #$/;"	c
Setting up a New Test Project	src/tests/googletest/googletest/docs/V1_5_Primer.md	/^# Setting up a New Test Project #$/;"	c
Setting up a New Test Project	src/tests/googletest/googletest/docs/V1_6_Primer.md	/^# Setting up a New Test Project #$/;"	c
Setting up a New Test Project	src/tests/googletest/googletest/docs/V1_7_Primer.md	/^# Setting up a New Test Project #$/;"	c
Setup	src/tests/googletest/googletest/README.md	/^#### Setup ####$/;"	t	subsection:Generic Build Instructions
Setup	src/tests/googletest/googletest/include/gtest/gtest.h	/^  virtual Setup_should_be_spelled_SetUp* Setup() { return NULL; }$/;"	f	class:testing::Environment	typeref:typename:Setup_should_be_spelled_SetUp *
Setup	src/tests/googletest/googletest/include/gtest/gtest.h	/^  virtual Setup_should_be_spelled_SetUp* Setup() { return NULL; }$/;"	f	class:testing::Test	typeref:typename:Setup_should_be_spelled_SetUp *
Setup_should_be_spelled_SetUp	src/tests/googletest/googletest/include/gtest/gtest.h	/^  struct Setup_should_be_spelled_SetUp {};$/;"	s	class:testing::Environment
Setup_should_be_spelled_SetUp	src/tests/googletest/googletest/include/gtest/gtest.h	/^  struct Setup_should_be_spelled_SetUp {};$/;"	s	class:testing::Test
Sharing Actions	src/tests/googletest/googlemock/docs/CookBook.md	/^## Sharing Actions ##$/;"	s	chapter:Using Actions
Sharing Actions	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Sharing Actions ##$/;"	s	chapter:Using Actions
Sharing Actions	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Sharing Actions ##$/;"	s	chapter:Using Actions
Sharing Actions	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Sharing Actions ##$/;"	s	chapter:Using Actions
Sharing Matchers	src/tests/googletest/googlemock/docs/CookBook.md	/^## Sharing Matchers ##$/;"	s	chapter:Using Matchers
Sharing Matchers	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Sharing Matchers ##$/;"	s	chapter:Using Matchers
Sharing Matchers	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Sharing Matchers ##$/;"	s	chapter:Using Matchers
Sharing Matchers	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Sharing Matchers ##$/;"	s	chapter:Using Matchers
Sharing Resources Between Tests in the Same Test Case	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^# Sharing Resources Between Tests in the Same Test Case #$/;"	c
Sharing Resources Between Tests in the Same Test Case	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^# Sharing Resources Between Tests in the Same Test Case #$/;"	c
Sharing Resources Between Tests in the Same Test Case	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^# Sharing Resources Between Tests in the Same Test Case #$/;"	c
Sharing Resources Between Tests in the Same Test Case	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^# Sharing Resources Between Tests in the Same Test Case #$/;"	c
Short	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^inline short Short(short n) { return n; }  \/\/ NOLINT$/;"	f	namespace:testing::gmock_generated_actions_test	typeref:typename:short
Short	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^inline short Short(short n) { return n; }  \/\/ NOLINT$/;"	f	namespace:testing::gmock_more_actions_test	typeref:typename:short
Should I use the constructor/destructor of the test fixture or the set-up/tear-down function?	src/tests/googletest/googletest/docs/FAQ.md	/^## Should I use the constructor\/destructor of the test fixture or the set-up\/tear-down functio/;"	s
Should I use the constructor/destructor of the test fixture or the set-up/tear-down function?	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## Should I use the constructor\/destructor of the test fixture or the set-up\/tear-down functio/;"	s
Should I use the constructor/destructor of the test fixture or the set-up/tear-down function?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## Should I use the constructor\/destructor of the test fixture or the set-up\/tear-down functio/;"	s
Should I use the constructor/destructor of the test fixture or the set-up/tear-down function?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## Should I use the constructor\/destructor of the test fixture or the set-up\/tear-down functio/;"	s
ShouldHandleArguments	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  bool ShouldHandleArguments(const ArgumentTuple& args) const$/;"	f	class:testing::internal::TypedExpectation	typeref:typename:bool
ShouldRunTest	src/tests/googletest/googletest/include/gtest/gtest.h	/^  static bool ShouldRunTest(const TestInfo* test_info) {$/;"	f	class:testing::TestCase	typeref:typename:bool
ShouldRunTestCase	src/tests/googletest/googletest/src/gtest.cc	/^static bool ShouldRunTestCase(const TestCase* test_case) {$/;"	f	namespace:testing::internal	typeref:typename:bool	file:
ShouldRunTestOnShard	src/tests/googletest/googletest/src/gtest.cc	/^bool ShouldRunTestOnShard(int total_shards, int shard_index, int test_id) {$/;"	f	namespace:testing::internal	typeref:typename:bool
ShouldShard	src/tests/googletest/googletest/src/gtest.cc	/^bool ShouldShard(const char* total_shards_env,$/;"	f	namespace:testing::internal	typeref:typename:bool
ShouldShardDeathTest	src/tests/googletest/googletest/test/gtest_unittest.cc	/^typedef ShouldShardTest ShouldShardDeathTest;$/;"	t	namespace:__anonf780395f0111	typeref:typename:ShouldShardTest	file:
ShouldShardTest	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class ShouldShardTest : public testing::Test {$/;"	c	namespace:__anonf780395f0111	file:
ShouldUseColor	src/tests/googletest/googletest/src/gtest.cc	/^bool ShouldUseColor(bool stdout_is_tty) {$/;"	f	namespace:testing::internal	typeref:typename:bool
ShowWideCString	src/tests/googletest/googletest/src/gtest.cc	/^std::string String::ShowWideCString(const wchar_t * wide_c_str) {$/;"	f	class:testing::internal::String	typeref:typename:std::string
Shuffle	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^inline void Shuffle(internal::Random* random, std::vector<E>* v) {$/;"	f	namespace:testing::internal	typeref:typename:void
Shuffle	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static Flags Shuffle(bool shuffle) {$/;"	f	struct:testing::Flags	typeref:typename:Flags	file:
ShuffleFlag	src/tests/googletest/googletest/test/gtest_shuffle_test.py	/^def ShuffleFlag():$/;"	f
ShuffleRange	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^void ShuffleRange(internal::Random* random, int begin, int end,$/;"	f	namespace:testing::internal	typeref:typename:void
ShuffleTests	src/tests/googletest/googletest/src/gtest.cc	/^void TestCase::ShuffleTests(internal::Random* random) {$/;"	f	class:testing::TestCase	typeref:typename:void
ShuffleTests	src/tests/googletest/googletest/src/gtest.cc	/^void UnitTestImpl::ShuffleTests() {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:void
Shuffling the Tests	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^## Shuffling the Tests ##$/;"	s	chapter:Running Test Programs: Advanced Options
Shuffling the Tests	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^## Shuffling the Tests ##$/;"	s	chapter:Running Test Programs: Advanced Options
Shuffling the Tests	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^## Shuffling the Tests ##$/;"	s	chapter:Running Test Programs: Advanced Options
Shuffling the Tests	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^## Shuffling the Tests ##$/;"	s	chapter:Running Test Programs: Advanced Options
Side Effects	src/tests/googletest/googlemock/docs/CheatSheet.md	/^## Side Effects ##$/;"	s	chapter:Actions
Side Effects	src/tests/googletest/googlemock/docs/v1_5/CheatSheet.md	/^## Side Effects ##$/;"	s	chapter:Actions
Side Effects	src/tests/googletest/googlemock/docs/v1_6/CheatSheet.md	/^## Side Effects ##$/;"	s	chapter:Actions
Side Effects	src/tests/googletest/googlemock/docs/v1_7/CheatSheet.md	/^## Side Effects ##$/;"	s	chapter:Actions
SignAndMagnitudeToBiased	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  static Bits SignAndMagnitudeToBiased(const Bits &sam) {$/;"	f	class:testing::internal::FloatingPoint	typeref:typename:Bits
SigprofAction	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^void SigprofAction(int, siginfo_t*, void*) { \/* no op *\/ }$/;"	f	typeref:typename:void
Simple Tests	src/tests/googletest/googletest/docs/Primer.md	/^# Simple Tests #$/;"	c
Simple Tests	src/tests/googletest/googletest/docs/V1_5_Primer.md	/^# Simple Tests #$/;"	c
Simple Tests	src/tests/googletest/googletest/docs/V1_6_Primer.md	/^# Simple Tests #$/;"	c
Simple Tests	src/tests/googletest/googletest/docs/V1_7_Primer.md	/^# Simple Tests #$/;"	c
Simplifying the Interface without Breaking Existing Code	src/tests/googletest/googlemock/docs/CookBook.md	/^## Simplifying the Interface without Breaking Existing Code ##$/;"	s	chapter:Creating Mock Classes
Simplifying the Interface without Breaking Existing Code	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Simplifying the Interface without Breaking Existing Code ##$/;"	s	chapter:Creating Mock Classes
Simplifying the Interface without Breaking Existing Code	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Simplifying the Interface without Breaking Existing Code ##$/;"	s	chapter:Creating Mock Classes
Simplifying the Interface without Breaking Existing Code	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Simplifying the Interface without Breaking Existing Code ##$/;"	s	chapter:Creating Mock Classes
SingleEvaluationTest	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  SingleEvaluationTest() {$/;"	f	class:__anonf780395f0111::SingleEvaluationTest	file:
SingleEvaluationTest	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class SingleEvaluationTest : public Test {$/;"	c	namespace:__anonf780395f0111	file:
SingleFailureChecker	src/tests/googletest/googletest/include/gtest/gtest-spi.h	/^class GTEST_API_ SingleFailureChecker {$/;"	c	namespace:testing::internal
SingleFailureChecker	src/tests/googletest/googletest/src/gtest.cc	/^SingleFailureChecker::SingleFailureChecker(const TestPartResultArray* results,$/;"	f	class:testing::internal::SingleFailureChecker
Singleton	src/muduo/muduo/base/Singleton.h	/^class Singleton : noncopyable$/;"	c	namespace:muduo
Size	src/tests/googletest/googletest/samples/sample3-inl.h	/^  size_t Size() const { return size_; }$/;"	f	class:Queue	typeref:typename:size_t
SizeIs	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^SizeIs(const SizeMatcher& size_matcher) {$/;"	f	namespace:testing	typeref:typename:internal::SizeIsMatcher<SizeMatcher>
SizeIsMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit SizeIsMatcher(const SizeMatcher& size_matcher)$/;"	f	class:testing::internal::SizeIsMatcher
SizeIsMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class SizeIsMatcher {$/;"	c	namespace:testing::internal
SizeType	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    typedef typename ContainerView::type::size_type SizeType;$/;"	t	class:testing::internal::SizeIsMatcher::Impl	typeref:typename:ContainerView::type::size_type
Skip	src/tests/googletest/googletest/scripts/pump.py	/^def Skip(lines, pos, regex):$/;"	f
SkipComma	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^inline const char* SkipComma(const char* str) {$/;"	f	namespace:testing::internal	typeref:typename:const char *
SkipPrefix	src/tests/googletest/googletest/src/gtest.cc	/^bool SkipPrefix(const char* prefix, const char** pstr) {$/;"	f	namespace:testing::internal	typeref:typename:bool
SkipSpaces	src/tests/googletest/googletest/src/gtest-typed-test.cc	/^static const char* SkipSpaces(const char* str) {$/;"	f	namespace:testing::internal	typeref:typename:const char *	file:
SkipUntil	src/tests/googletest/googletest/scripts/pump.py	/^def SkipUntil(lines, pos, regex, token_type):$/;"	f
SleepMilliseconds	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^inline void SleepMilliseconds(int n) {$/;"	f	namespace:testing::internal	typeref:typename:void
SleepMilliseconds	src/tests/googletest/googletest/src/gtest-port.cc	/^void SleepMilliseconds(int n) {$/;"	f	namespace:testing::internal	typeref:typename:void
Socket	src/muduo/muduo/net/Socket.h	/^  explicit Socket(int sockfd)$/;"	f	class:muduo::net::Socket
Socket	src/muduo/muduo/net/Socket.h	/^class Socket : noncopyable$/;"	c	namespace:muduo::net
SocketWriter	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^    SocketWriter(const std::string& host, const std::string& port)$/;"	f	class:testing::internal::StreamingListener::SocketWriter
SocketWriter	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  class SocketWriter : public AbstractSocketWriter {$/;"	c	class:testing::internal::StreamingListener
Solution	src/tests/googletest/googlemock/docs/DesignDoc.md	/^## Solution ##$/;"	s	chapter:Macros for Defining Actions
Solve	src/muduo/examples/protobuf/rpc/server.cc	/^  virtual void Solve(::google::protobuf::RpcController* controller,$/;"	f	class:sudoku::SudokuServiceImpl	typeref:typename:void	file:
Solve	src/muduo/examples/protobuf/rpc/sudoku.proto	/^  rpc Solve (SudokuRequest) returns (SudokuResponse);$/;"	r	service:sudoku.SudokuService	typeref:typename:SudokuResponse
SourceFile	src/muduo/muduo/base/Logging.h	/^    SourceFile(const char (&arr)[N])$/;"	f	class:muduo::Logger::SourceFile
SourceFile	src/muduo/muduo/base/Logging.h	/^    explicit SourceFile(const char* filename)$/;"	f	class:muduo::Logger::SourceFile
SourceFile	src/muduo/muduo/base/Logging.h	/^  class SourceFile$/;"	c	class:muduo::Logger
SourceType	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^class SourceType {$/;"	c	namespace:__anon550198f10111	file:
SpaceIndex	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  size_t SpaceIndex(size_t ilhs, size_t irhs) const {$/;"	f	class:testing::internal::MatchMatrix	typeref:typename:size_t
SpaceSeparator	src/muduo/examples/memcached/server/Session.h	/^  struct SpaceSeparator$/;"	s	class:Session
SpawnThreadNotifications	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^  SpawnThreadNotifications() {}$/;"	f	struct:SpawnThreadNotifications	file:
SpawnThreadNotifications	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^struct SpawnThreadNotifications {$/;"	s	file:
SpecifyCardinality	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^void ExpectationBase::SpecifyCardinality(const Cardinality& a_cardinality) {$/;"	f	class:testing::internal::ExpectationBase	typeref:typename:void
Specifying Calling Conventions for Mock Functions	src/tests/googletest/googlemock/docs/CheatSheet.md	/^## Specifying Calling Conventions for Mock Functions ##$/;"	s	chapter:Defining a Mock Class
Specifying Calling Conventions for Mock Functions	src/tests/googletest/googlemock/docs/v1_5/CheatSheet.md	/^## Specifying Calling Conventions for Mock Functions ##$/;"	s	chapter:Defining a Mock Class
Specifying Calling Conventions for Mock Functions	src/tests/googletest/googlemock/docs/v1_6/CheatSheet.md	/^## Specifying Calling Conventions for Mock Functions ##$/;"	s	chapter:Defining a Mock Class
Specifying Calling Conventions for Mock Functions	src/tests/googletest/googlemock/docs/v1_7/CheatSheet.md	/^## Specifying Calling Conventions for Mock Functions ##$/;"	s	chapter:Defining a Mock Class
SplitEscapedString	src/tests/googletest/googletest/src/gtest.cc	/^std::vector<std::string> SplitEscapedString(const std::string& str) {$/;"	f	namespace:testing::internal::__anon3f29b7680311	typeref:typename:std::vector<std::string>
SplitIntoTestNames	src/tests/googletest/googletest/src/gtest-typed-test.cc	/^static std::vector<std::string> SplitIntoTestNames(const char* src) {$/;"	f	namespace:testing::internal	typeref:typename:std::vector<std::string>	file:
SplitPatch	src/tests/googletest/googlemock/scripts/upload.py	/^def SplitPatch(data):$/;"	f
SplitPatch	src/tests/googletest/googletest/scripts/upload.py	/^def SplitPatch(data):$/;"	f
SplitString	src/tests/googletest/googletest/src/gtest.cc	/^void SplitString(const ::std::string& str, char delimiter,$/;"	f	namespace:testing::internal	typeref:typename:void
StackGrowsDown	src/tests/googletest/googletest/src/gtest-death-test.cc	/^bool StackGrowsDown() {$/;"	f	namespace:testing::internal	typeref:typename:GTEST_ATTRIBUTE_NO_SANITIZE_ADDRESS_ bool
StackInterface	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^class StackInterface {$/;"	c	namespace:testing::gmock_generated_function_mockers_test	file:
StackInterfaceWithCallType	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^class StackInterfaceWithCallType {$/;"	c	namespace:testing::gmock_generated_function_mockers_test	file:
StackLowerThanAddress	src/tests/googletest/googletest/src/gtest-death-test.cc	/^void StackLowerThanAddress(const void* ptr, bool* result) {$/;"	f	namespace:testing::internal	typeref:typename:void
StackTraceDepth	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static Flags StackTraceDepth(Int32 stack_trace_depth) {$/;"	f	struct:testing::Flags	typeref:typename:Flags	file:
Standalone CMake Project	src/tests/googletest/googletest/README.md	/^#### Standalone CMake Project ####$/;"	t	subsection:Using CMake
Start	src/muduo/muduo/base/tests/BlockingQueue_bench2.cc	/^  void Start()$/;"	f	class:Bench	typeref:typename:void	file:
Start	src/muduo/muduo/base/tests/Thread_bench.cc	/^  void Start()$/;"	f	class:Bench	typeref:typename:void	file:
Start	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  void Start() { SendLn("gtest_streaming_protocol_version=1.0"); }$/;"	f	class:testing::internal::StreamingListener	typeref:typename:void
StartWatcherThreadFor	src/tests/googletest/googletest/src/gtest-port.cc	/^  static void StartWatcherThreadFor(DWORD thread_id) {$/;"	f	class:testing::internal::ThreadLocalRegistryImpl	typeref:typename:void	file:
StartsWith	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    StartsWith(const internal::wstring& prefix) {$/;"	f	namespace:testing	typeref:typename:PolymorphicMatcher<internal::StartsWithMatcher<internal::wstring>>
StartsWith	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline PolymorphicMatcher<internal::StartsWithMatcher<std::string> > StartsWith($/;"	f	namespace:testing	typeref:typename:PolymorphicMatcher<internal::StartsWithMatcher<std::string>>
StartsWith	src/tests/googletest/googletest/scripts/pump.py	/^def StartsWith(lines, pos, string):$/;"	f
StartsWithMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit StartsWithMatcher(const StringType& prefix) : prefix_(prefix) {$/;"	f	class:testing::internal::StartsWithMatcher
StartsWithMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class StartsWithMatcher {$/;"	c	namespace:testing::internal
Stat	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^inline int Stat(const char* path, StatStruct* buf) { return _stat(path, buf); }$/;"	f	namespace:testing::internal::posix	typeref:typename:int
StatData	src/muduo/examples/procmon/procmon.cc	/^struct StatData$/;"	s	file:
StatStruct	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^typedef struct _stat StatStruct;$/;"	t	namespace:testing::internal::posix	typeref:struct:_stat
State	src/muduo/contrib/thrift/ThriftConnection.h	/^  enum State$/;"	g	class:ThriftConnection
State	src/muduo/examples/memcached/server/Session.h	/^  enum State$/;"	g	class:Session
StateE	src/muduo/muduo/net/TcpConnection.h	/^  enum StateE { kDisconnected, kConnecting, kConnected, kDisconnecting };$/;"	g	class:muduo::net::TcpConnection
StateMap	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^  typedef std::map<const void*, MockObjectState> StateMap;$/;"	t	class:testing::__anonc1446e5b0111::MockObjectRegistry	typeref:typename:std::map<const void *,MockObjectState>	file:
StatefulNamingFunctor	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  StatefulNamingFunctor() : sum(0) {}$/;"	f	struct:StatefulNamingFunctor	file:
StatefulNamingFunctor	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^struct StatefulNamingFunctor {$/;"	s	file:
StatefulNamingTest	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  StatefulNamingTest() : sum_(0) {}$/;"	f	class:StatefulNamingTest	file:
StatefulNamingTest	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^class StatefulNamingTest : public ::testing::TestWithParam<int> {$/;"	c	file:
States	src/muduo/muduo/net/Connector.h	/^  enum States { kDisconnected, kConnecting, kConnected };$/;"	g	class:muduo::net::Connector
Static Functions	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^## Static Functions ##$/;"	s	chapter:Testing Private Code
Static Functions	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^## Static Functions ##$/;"	s	chapter:Testing Private Code
Static Functions	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^## Static Functions ##$/;"	s	chapter:Testing Private Code
Static Functions	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^## Static Functions ##$/;"	s	chapter:Testing Private Code
StaticAssertTypeEq	src/tests/googletest/googletest/include/gtest/gtest.h	/^bool StaticAssertTypeEq() {$/;"	f	namespace:testing	typeref:typename:bool
StaticAssertTypeEqHelper	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^struct StaticAssertTypeEqHelper<T, T> {$/;"	s	namespace:testing::internal
StaticAssertTypeEqTestHelper	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  StaticAssertTypeEqTestHelper() { StaticAssertTypeEq<bool, T>(); }$/;"	f	class:StaticAssertTypeEqTestHelper	file:
StaticAssertTypeEqTestHelper	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class StaticAssertTypeEqTestHelper {$/;"	c	file:
StaticBoolFromString	src/tests/googletest/googlemock/test/gmock_link_test.h	/^  static bool StaticBoolFromString(const char* \/* str *\/) { return true; }$/;"	f	class:InvokeHelper	typeref:typename:bool
StaticConstructorSelector	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  enum StaticConstructorSelector { kStaticMutex = 0 };$/;"	g	class:testing::internal::Mutex
StaticIntFromString	src/tests/googletest/googlemock/test/gmock_link_test.h	/^  static int StaticIntFromString(char* \/* str *\/) { return 1; }$/;"	f	class:InvokeHelper	typeref:typename:int
StaticMemberFunction	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  static void StaticMemberFunction() { DieInside("StaticMemberFunction"); }$/;"	f	class:TestForDeathTest	typeref:typename:void	file:
StaticVoidFromString	src/tests/googletest/googlemock/test/gmock_link_test.h	/^  static void StaticVoidFromString(char* \/* str *\/) {}$/;"	f	class:InvokeHelper	typeref:typename:void
StaticVoidFromVoid	src/tests/googletest/googlemock/test/gmock_link_test.h	/^  static void StaticVoidFromVoid() {}$/;"	f	class:InvokeHelper	typeref:typename:void
Stats	src/muduo/examples/memcached/server/MemcacheServer.cc	/^struct MemcacheServer::Stats$/;"	s	class:MemcacheServer	file:
StatusUpdate	src/tests/googletest/googlemock/scripts/upload.py	/^def StatusUpdate(msg):$/;"	f
StatusUpdate	src/tests/googletest/googletest/scripts/upload.py	/^def StatusUpdate(msg):$/;"	f
StdIstream	src/libtfhe-superaic-core/include/tfhe_generic_streams.h	/^    StdIstream(std::istream &in) : in(in) {}$/;"	f	class:StdIstream
StdIstream	src/libtfhe-superaic-core/include/tfhe_generic_streams.h	/^class StdIstream : public Istream {$/;"	c
StdOstream	src/libtfhe-superaic-core/include/tfhe_generic_streams.h	/^    StdOstream(std::ostream &out) : out(out) {}$/;"	f	class:StdOstream
StdOstream	src/libtfhe-superaic-core/include/tfhe_generic_streams.h	/^class StdOstream : public Ostream {$/;"	c
StlContainer	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef typename View::type StlContainer;$/;"	t	class:testing::internal::ContainerEqMatcher	typeref:typename:View::type
StlContainer	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef typename View::type StlContainer;$/;"	t	class:testing::internal::ElementsAreMatcherImpl	typeref:typename:View::type
StlContainer	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef typename View::type StlContainer;$/;"	t	class:testing::internal::QuantifierMatcherImpl	typeref:typename:View::type
StlContainer	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef typename View::type StlContainer;$/;"	t	class:testing::internal::UnorderedElementsAreMatcherImpl	typeref:typename:View::type
StlContainerConstIterator	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef typename StlContainer::const_iterator StlContainerConstIterator;$/;"	t	class:testing::internal::UnorderedElementsAreMatcherImpl	typeref:typename:StlContainer::const_iterator
StlContainerReference	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef typename View::const_reference StlContainerReference;$/;"	t	class:testing::internal::ContainerEqMatcher	typeref:typename:View::const_reference
StlContainerReference	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef typename View::const_reference StlContainerReference;$/;"	t	class:testing::internal::ElementsAreMatcherImpl	typeref:typename:View::const_reference
StlContainerReference	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef typename View::const_reference StlContainerReference;$/;"	t	class:testing::internal::QuantifierMatcherImpl	typeref:typename:View::const_reference
StlContainerReference	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef typename View::const_reference StlContainerReference;$/;"	t	class:testing::internal::UnorderedElementsAreMatcherImpl	typeref:typename:View::const_reference
StlContainerView	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^class StlContainerView {$/;"	c	namespace:testing::internal
StlContainerView	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^class StlContainerView< ::testing::tuple<ElementPointer, Size> > {$/;"	c	namespace:testing::internal
StlContainerView	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^class StlContainerView<Element[N]> {$/;"	c	namespace:testing::internal
Stop	src/muduo/muduo/base/tests/BlockingQueue_bench2.cc	/^  void Stop()$/;"	f	class:Bench	typeref:typename:void	file:
Stop	src/muduo/muduo/base/tests/Thread_bench.cc	/^  void Stop()$/;"	f	class:Bench	typeref:typename:void	file:
StorageType	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef Functor StorageType;$/;"	t	struct:testing::internal::CallableTraits	typeref:typename:Functor
StorageType	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef ResType(*StorageType)(ArgType);$/;"	t	struct:testing::internal::CallableTraits	typeref:typename:ResType (*)(ArgType)
StrCaseCmp	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^inline int StrCaseCmp(const char* s1, const char* s2) {$/;"	f	namespace:testing::internal::posix	typeref:typename:int
StrCaseEq	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    StrCaseEq(const internal::wstring& str) {$/;"	f	namespace:testing	typeref:typename:PolymorphicMatcher<internal::StrEqualityMatcher<internal::wstring>>
StrCaseEq	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline PolymorphicMatcher<internal::StrEqualityMatcher<std::string> > StrCaseEq($/;"	f	namespace:testing	typeref:typename:PolymorphicMatcher<internal::StrEqualityMatcher<std::string>>
StrCaseNe	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    StrCaseNe(const internal::wstring& str) {$/;"	f	namespace:testing	typeref:typename:PolymorphicMatcher<internal::StrEqualityMatcher<internal::wstring>>
StrCaseNe	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline PolymorphicMatcher<internal::StrEqualityMatcher<std::string> > StrCaseNe($/;"	f	namespace:testing	typeref:typename:PolymorphicMatcher<internal::StrEqualityMatcher<std::string>>
StrDup	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^inline char* StrDup(const char* src) { return _strdup(src); }$/;"	f	namespace:testing::internal::posix	typeref:typename:char *
StrDup	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^inline char* StrDup(const char* src) { return strdup(src); }$/;"	f	namespace:testing::internal::posix	typeref:typename:char *
StrEq	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    StrEq(const internal::wstring& str) {$/;"	f	namespace:testing	typeref:typename:PolymorphicMatcher<internal::StrEqualityMatcher<internal::wstring>>
StrEq	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline PolymorphicMatcher<internal::StrEqualityMatcher<std::string> > StrEq($/;"	f	namespace:testing	typeref:typename:PolymorphicMatcher<internal::StrEqualityMatcher<std::string>>
StrEqualityMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  StrEqualityMatcher(const StringType& str, bool expect_eq,$/;"	f	class:testing::internal::StrEqualityMatcher
StrEqualityMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class StrEqualityMatcher {$/;"	c	namespace:testing::internal
StrError	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^inline const char* StrError(int errnum) { return strerror(errnum); }$/;"	f	namespace:testing::internal::posix	typeref:typename:const char *
StrNCpy	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^inline const char* StrNCpy(char* dest, const char* src, size_t n) {$/;"	f	namespace:testing::internal::posix	typeref:typename:GTEST_DISABLE_MSC_WARNINGS_PUSH_ (4996)const char *
StrNe	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    StrNe(const internal::wstring& str) {$/;"	f	namespace:testing	typeref:typename:PolymorphicMatcher<internal::StrEqualityMatcher<internal::wstring>>
StrNe	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline PolymorphicMatcher<internal::StrEqualityMatcher<std::string> > StrNe($/;"	f	namespace:testing	typeref:typename:PolymorphicMatcher<internal::StrEqualityMatcher<std::string>>
StreamHelper	src/tests/googletest/googletest/include/gtest/gtest-message.h	/^  inline void StreamHelper(internal::false_type \/*is_pointer*\/,$/;"	f	class:testing::Message	typeref:typename:void
StreamHelper	src/tests/googletest/googletest/include/gtest/gtest-message.h	/^  inline void StreamHelper(internal::true_type \/*is_pointer*\/, T* pointer) {$/;"	f	class:testing::Message	typeref:typename:void
StreamMatchResultListener	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit StreamMatchResultListener(::std::ostream* os)$/;"	f	class:testing::internal::StreamMatchResultListener
StreamMatchResultListener	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class StreamMatchResultListener : public MatchResultListener {$/;"	c	namespace:testing::internal
StreamResultTo	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static Flags StreamResultTo(const char* stream_result_to) {$/;"	f	struct:testing::Flags	typeref:typename:Flags	file:
StreamWideCharsToMessage	src/tests/googletest/googletest/src/gtest.cc	/^static void StreamWideCharsToMessage(const wchar_t* wstr, size_t length,$/;"	f	namespace:testing::internal	typeref:typename:void	file:
StreamableInGlobal	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^class StreamableInGlobal {$/;"	c	file:
StreamableTemplateInFoo	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^  StreamableTemplateInFoo() : value_() {}$/;"	f	class:foo::StreamableTemplateInFoo	file:
StreamableTemplateInFoo	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^class StreamableTemplateInFoo {$/;"	c	namespace:foo	file:
StreamableToString	src/tests/googletest/googletest/include/gtest/gtest-message.h	/^std::string StreamableToString(const T& streamable) {$/;"	f	namespace:testing::internal	typeref:typename:std::string
StreamingListener	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  StreamingListener(const std::string& host, const std::string& port)$/;"	f	class:testing::internal::StreamingListener
StreamingListener	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  explicit StreamingListener(AbstractSocketWriter* socket_writer)$/;"	f	class:testing::internal::StreamingListener
StreamingListener	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^class GTEST_API_ StreamingListener : public EmptyTestEventListener {$/;"	c	namespace:testing::internal
StreamingListenerTest	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  StreamingListenerTest()$/;"	f	class:testing::internal::StreamingListenerTest	file:
StreamingListenerTest	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class StreamingListenerTest : public Test {$/;"	c	namespace:testing::internal	file:
Streamlike	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  Streamlike(InIter first, InIter last) : remainder_(first, last) {}$/;"	f	class:testing::gmock_matchers_test::Streamlike	file:
Streamlike	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^class Streamlike {$/;"	c	namespace:testing::gmock_matchers_test	file:
StrictMock	src/tests/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h	/^  StrictMock() {$/;"	f	class:testing::StrictMock
StrictMock	src/tests/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h	/^  StrictMock(const A1& a1, const A2& a2) : MockClass(a1, a2) {$/;"	f	class:testing::StrictMock
StrictMock	src/tests/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h	/^  StrictMock(const A1& a1, const A2& a2, const A3& a3) : MockClass(a1, a2, a3) {$/;"	f	class:testing::StrictMock
StrictMock	src/tests/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h	/^  StrictMock(const A1& a1, const A2& a2, const A3& a3, const A4& a4,$/;"	f	class:testing::StrictMock
StrictMock	src/tests/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h	/^  StrictMock(const A1& a1, const A2& a2, const A3& a3,$/;"	f	class:testing::StrictMock
StrictMock	src/tests/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h	/^  explicit StrictMock(const A1& a1) : MockClass(a1) {$/;"	f	class:testing::StrictMock
StrictMock	src/tests/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h	/^class StrictMock : public MockClass {$/;"	c	namespace:testing
String	src/tests/googletest/googletest/include/gtest/internal/gtest-string.h	/^class GTEST_API_ String {$/;"	c	namespace:testing::internal
String Comparison	src/tests/googletest/googletest/docs/Primer.md	/^## String Comparison ##$/;"	s	chapter:Assertions
String Comparison	src/tests/googletest/googletest/docs/V1_5_Primer.md	/^## String Comparison ##$/;"	s	chapter:Assertions
String Comparison	src/tests/googletest/googletest/docs/V1_6_Primer.md	/^## String Comparison ##$/;"	s	chapter:Assertions
String Comparison	src/tests/googletest/googletest/docs/V1_7_Primer.md	/^## String Comparison ##$/;"	s	chapter:Assertions
String Matchers	src/tests/googletest/googlemock/docs/CheatSheet.md	/^## String Matchers ##$/;"	s	chapter:Matchers
String Matchers	src/tests/googletest/googlemock/docs/v1_5/CheatSheet.md	/^## String Matchers ##$/;"	s	chapter:Matchers
String Matchers	src/tests/googletest/googlemock/docs/v1_6/CheatSheet.md	/^## String Matchers ##$/;"	s	chapter:Matchers
String Matchers	src/tests/googletest/googlemock/docs/v1_7/CheatSheet.md	/^## String Matchers ##$/;"	s	chapter:Matchers
StringArg	src/muduo/muduo/base/StringPiece.h	/^  StringArg(const char* str)$/;"	f	class:muduo::StringArg
StringArg	src/muduo/muduo/base/StringPiece.h	/^  StringArg(const string& str)$/;"	f	class:muduo::StringArg
StringArg	src/muduo/muduo/base/StringPiece.h	/^class StringArg \/\/ copyable$/;"	c	namespace:muduo
StringFromGTestEnv	src/tests/googletest/googletest/src/gtest-port.cc	/^std::string StringFromGTestEnv(const char* flag, const char* default_value) {$/;"	f	namespace:testing::internal	typeref:typename:std::string
StringFunction	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^const std::string& StringFunction(const std::string& input) { return input; }$/;"	f	namespace:testing::gmock_matchers_test	typeref:typename:const std::string &
StringMatchResultListener	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  StringMatchResultListener() : MatchResultListener(&ss_) {}$/;"	f	class:testing::StringMatchResultListener
StringMatchResultListener	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class StringMatchResultListener : public MatchResultListener {$/;"	c	namespace:testing
StringMessageCallback	src/muduo/examples/asio/chat/codec.h	/^                                muduo::Timestamp)> StringMessageCallback;$/;"	t	class:LengthHeaderCodec
StringPiece	src/muduo/muduo/base/StringPiece.h	/^  StringPiece()$/;"	f	class:muduo::StringPiece
StringPiece	src/muduo/muduo/base/StringPiece.h	/^  StringPiece(const char* offset, int len)$/;"	f	class:muduo::StringPiece
StringPiece	src/muduo/muduo/base/StringPiece.h	/^  StringPiece(const char* str)$/;"	f	class:muduo::StringPiece
StringPiece	src/muduo/muduo/base/StringPiece.h	/^  StringPiece(const string& str)$/;"	f	class:muduo::StringPiece
StringPiece	src/muduo/muduo/base/StringPiece.h	/^  StringPiece(const unsigned char* str)$/;"	f	class:muduo::StringPiece
StringPiece	src/muduo/muduo/base/StringPiece.h	/^class StringPiece {$/;"	c	namespace:muduo
StringStreamToString	src/tests/googletest/googletest/src/gtest.cc	/^std::string StringStreamToString(::std::stringstream* ss) {$/;"	f	namespace:testing::internal	typeref:typename:std::string
StringTypes	src/tests/googletest/googletest/test/gtest-port_test.cc	/^    const char*> StringTypes;$/;"	t	namespace:testing::internal	typeref:typename:testing::Types<::std::string,::string,const char * >	file:
Strings	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^typedef ::std::vector<string> Strings;$/;"	t	namespace:testing::internal	typeref:typename:::std::vector<string>
StripLeadingWhitespace	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class_test.py	/^  def StripLeadingWhitespace(self, lines):$/;"	m	class:TestCase
StripMetaComments	src/tests/googletest/googletest/scripts/pump.py	/^def StripMetaComments(str):$/;"	f
StripTrailingSpaces	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^inline std::string StripTrailingSpaces(std::string str) {$/;"	f	namespace:testing::internal	typeref:typename:std::string
Struct	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^class Struct(Class):$/;"	c
SubClassOfTest	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class SubClassOfTest : public Test {};$/;"	c	namespace:__anonf780395f0111	file:
SubString	src/tests/googletest/googletest/scripts/pump.py	/^def SubString(lines, start, end):$/;"	f
SubWithTrace	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^void SubWithTrace(int n) {$/;"	f	typeref:typename:void
SubWithoutTrace	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^void SubWithoutTrace(int n) {$/;"	f	typeref:typename:void
Submitting Patches	src/tests/googletest/googlemock/docs/DevGuide.md	/^## Submitting Patches ##$/;"	s	chapter:Contributing Code
Submitting Patches	src/tests/googletest/googletest/docs/DevGuide.md	/^## Submitting Patches ##$/;"	s	chapter:Contributing Code
Subprocess	src/tests/googletest/googlemock/test/gmock_test_utils.py	/^Subprocess = gtest_test_utils.Subprocess$/;"	v
Subprocess	src/tests/googletest/googletest/test/gtest_test_utils.py	/^class Subprocess:$/;"	c
Subroutine	src/tests/googletest/googletest/test/gtest_sole_header_test.cc	/^void Subroutine() {$/;"	f	namespace:__anonc7051ed90111	typeref:typename:void
SubscribeCallback	src/muduo/examples/hub/pubsub.h	/^                              muduo::Timestamp)> SubscribeCallback;$/;"	t	class:pubsub::PubSubClient
SubstractAction	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^class SubstractAction : public ActionInterface<int(int, int)> {  \/\/ NOLINT$/;"	c	namespace:testing::gmock_generated_actions_test	file:
SubversionVCS	src/tests/googletest/googlemock/scripts/upload.py	/^class SubversionVCS(VersionControlSystem):$/;"	c
SubversionVCS	src/tests/googletest/googletest/scripts/upload.py	/^class SubversionVCS(VersionControlSystem):$/;"	c
Succeeds	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  void Succeeds() {}$/;"	f	class:__anonf780395f0111::NoFatalFailureTest	typeref:typename:void	file:
SuccessfulTest	src/tests/googletest/googletest/test/gtest_xml_output_unittest_.cc	/^class SuccessfulTest : public Test {$/;"	c	file:
SudokuClient	src/muduo/examples/sudoku/batch.cc	/^  SudokuClient(EventLoop* loop,$/;"	f	class:SudokuClient	file:
SudokuClient	src/muduo/examples/sudoku/batch.cc	/^class SudokuClient : noncopyable$/;"	c	file:
SudokuClient	src/muduo/examples/sudoku/loadtest.cc	/^  SudokuClient(EventLoop* loop,$/;"	f	class:SudokuClient	file:
SudokuClient	src/muduo/examples/sudoku/loadtest.cc	/^class SudokuClient : noncopyable$/;"	c	file:
SudokuClient	src/muduo/examples/sudoku/pipeline.cc	/^  SudokuClient(EventLoop* loop,$/;"	f	class:SudokuClient	file:
SudokuClient	src/muduo/examples/sudoku/pipeline.cc	/^class SudokuClient : noncopyable$/;"	c	file:
SudokuLoadtest	src/muduo/examples/sudoku/loadtest.cc	/^  SudokuLoadtest()$/;"	f	class:SudokuLoadtest	file:
SudokuLoadtest	src/muduo/examples/sudoku/loadtest.cc	/^class SudokuLoadtest : noncopyable$/;"	c	file:
SudokuRequest	src/muduo/examples/protobuf/rpc/sudoku.proto	/^message SudokuRequest {$/;"	m	package:sudoku
SudokuResponse	src/muduo/examples/protobuf/rpc/sudoku.proto	/^message SudokuResponse {$/;"	m	package:sudoku
SudokuServer	src/muduo/examples/sudoku/server_basic.cc	/^  SudokuServer(EventLoop* loop, const InetAddress& listenAddr)$/;"	f	class:SudokuServer	file:
SudokuServer	src/muduo/examples/sudoku/server_basic.cc	/^class SudokuServer$/;"	c	file:
SudokuServer	src/muduo/examples/sudoku/server_hybrid.cc	/^  SudokuServer(EventLoop* loop,$/;"	f	class:SudokuServer	file:
SudokuServer	src/muduo/examples/sudoku/server_hybrid.cc	/^class SudokuServer : noncopyable$/;"	c	file:
SudokuServer	src/muduo/examples/sudoku/server_multiloop.cc	/^  SudokuServer(EventLoop* loop, const InetAddress& listenAddr, int numThreads)$/;"	f	class:SudokuServer	file:
SudokuServer	src/muduo/examples/sudoku/server_multiloop.cc	/^class SudokuServer$/;"	c	file:
SudokuServer	src/muduo/examples/sudoku/server_prod.cc	/^  SudokuServer(EventLoop* loop,$/;"	f	class:SudokuServer	file:
SudokuServer	src/muduo/examples/sudoku/server_prod.cc	/^class SudokuServer : noncopyable$/;"	c	file:
SudokuServer	src/muduo/examples/sudoku/server_threadpool.cc	/^  SudokuServer(EventLoop* loop, const InetAddress& listenAddr, int numThreads)$/;"	f	class:SudokuServer	file:
SudokuServer	src/muduo/examples/sudoku/server_threadpool.cc	/^class SudokuServer$/;"	c	file:
SudokuService	src/muduo/examples/protobuf/rpc/sudoku.proto	/^service SudokuService {$/;"	s	package:sudoku
SudokuServiceImpl	src/muduo/examples/protobuf/rpc/server.cc	/^class SudokuServiceImpl : public SudokuService$/;"	c	namespace:sudoku	file:
SudokuSolver	src/muduo/examples/sudoku/sudoku.cc	/^    SudokuSolver(int board[kCells])$/;"	f	class:SudokuSolver	file:
SudokuSolver	src/muduo/examples/sudoku/sudoku.cc	/^class SudokuSolver$/;"	c	file:
SudokuStat	src/muduo/examples/sudoku/stat.h	/^  SudokuStat(const ThreadPool& pool)$/;"	f	class:SudokuStat
SudokuStat	src/muduo/examples/sudoku/stat.h	/^class SudokuStat : muduo::noncopyable$/;"	c
SumIsEven2	src/tests/googletest/googletest/test/gtest_unittest.cc	/^bool SumIsEven2(int n1, int n2) {$/;"	f	namespace:__anonf780395f0111	typeref:typename:bool
SumIsEven3Functor	src/tests/googletest/googletest/test/gtest_unittest.cc	/^struct SumIsEven3Functor {$/;"	s	namespace:__anonf780395f0111	file:
SumOf4	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^int SumOf4(int a, int b, int c, int d) { return a + b + c + d; }$/;"	f	namespace:testing::gmock_generated_actions_test	typeref:typename:int
SumOf4	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^  int SumOf4(int a, int b, int c, int d) const {$/;"	f	class:testing::gmock_more_actions_test::Foo	typeref:typename:int	file:
SumOf4	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^int SumOf4(int a, int b, int c, int d) { return a + b + c + d; }$/;"	f	namespace:testing::gmock_more_actions_test	typeref:typename:int
SumOf5	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^int SumOf5(int a, int b, int c, int d, int e) { return a + b + c + d + e; }$/;"	f	namespace:testing::gmock_generated_actions_test	typeref:typename:int
SumOf5	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^  int SumOf5(int a, int b, int c, int d, int e) { return a + b + c + d + e; }$/;"	f	class:testing::gmock_more_actions_test::Foo	typeref:typename:int	file:
SumOf5	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^int SumOf5(int a, int b, int c, int d, int e) { return a + b + c + d + e; }$/;"	f	namespace:testing::gmock_more_actions_test	typeref:typename:int
SumOf5Functor	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^struct SumOf5Functor {$/;"	s	namespace:testing::gmock_generated_actions_test	file:
SumOf5Functor	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^struct SumOf5Functor {$/;"	s	namespace:testing::gmock_more_actions_test	file:
SumOf6	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^int SumOf6(int a, int b, int c, int d, int e, int f) {$/;"	f	namespace:testing::gmock_generated_actions_test	typeref:typename:int
SumOf6	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^  int SumOf6(int a, int b, int c, int d, int e, int f) {$/;"	f	class:testing::gmock_more_actions_test::Foo	typeref:typename:int	file:
SumOf6	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^int SumOf6(int a, int b, int c, int d, int e, int f) {$/;"	f	namespace:testing::gmock_more_actions_test	typeref:typename:int
SumOf6Functor	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^struct SumOf6Functor {$/;"	s	namespace:testing::gmock_generated_actions_test	file:
SumOf6Functor	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^struct SumOf6Functor {$/;"	s	namespace:testing::gmock_more_actions_test	file:
SumOfFirst2	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^int SumOfFirst2(int a, int b, Unused, Unused) { return a + b; }$/;"	f	namespace:testing::gmock_more_actions_test	typeref:typename:int
SumOfLast2	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^  int SumOfLast2(Unused, Unused, int a, int b) const { return a + b; }$/;"	f	class:testing::gmock_more_actions_test::Foo	typeref:typename:int	file:
SumOverTestCaseList	src/tests/googletest/googletest/src/gtest.cc	/^static int SumOverTestCaseList(const std::vector<TestCase*>& case_list,$/;"	f	namespace:testing::internal	typeref:typename:int	file:
Summary	docs/rustops/BlockRecomposer.md	/^## Summary$/;"	s	chapter:BlockRecomposer
Summary	docs/rustops/decrypt.md	/^## Summary$/;"	s	chapter:decrypt
Summary	docs/rustops/key_and_config.md	/^### Summary$/;"	S	section:generate key with default key""`generate_keys`
Summary	docs/rustops/key_and_config.md	/^#### Summary$/;"	t	subsection:generate key with default key""`generate_keys`""`ClientKey::generate(config);`
Summary	docs/rustops/key_and_config.md	/^#### Summary$/;"	t	subsection:generate key with default key""`generate_keys`""`client_kc.generate_server_key();`
Summary	src/tests/googletest/googletest/docs/V1_5_XcodeGuide.md	/^# Summary #$/;"	c
Summary	src/tests/googletest/googletest/docs/V1_6_XcodeGuide.md	/^# Summary #$/;"	c
Summary	src/tests/googletest/googletest/docs/V1_7_XcodeGuide.md	/^# Summary #$/;"	c
Summary	src/tests/googletest/googletest/docs/XcodeGuide.md	/^# Summary #$/;"	c
SuppressEventForwarding	src/tests/googletest/googletest/src/gtest.cc	/^void TestEventListeners::SuppressEventForwarding() {$/;"	f	class:testing::TestEventListeners	typeref:typename:void
SuppressEventForwarding	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static void SuppressEventForwarding(TestEventListeners* listeners) {$/;"	f	class:testing::internal::TestEventListenersAccessor	typeref:typename:void	file:
SuppressTestEventsIfInSubprocess	src/tests/googletest/googletest/src/gtest.cc	/^void UnitTestImpl::SuppressTestEventsIfInSubprocess() {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:void
Suppressing Pop-ups Caused by Exceptions	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^### Suppressing Pop-ups Caused by Exceptions ###$/;"	S	section:Running Test Programs: Advanced Options""Controlling How Failures Are Reported
Suppressing the Elapsed Time	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^### Suppressing the Elapsed Time ###$/;"	S	section:Running Test Programs: Advanced Options""Controlling Test Output
Suppressing the Elapsed Time	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^### Suppressing the Elapsed Time ###$/;"	S	section:Running Test Programs: Advanced Options""Controlling Test Output
Suppressing the Elapsed Time	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^### Suppressing the Elapsed Time ###$/;"	S	section:Running Test Programs: Advanced Options""Controlling Test Output
Suppressing the Elapsed Time	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^### Suppressing the Elapsed Time ###$/;"	S	section:Running Test Programs: Advanced Options""Controlling Test Output
SystemInspector	src/muduo/muduo/net/inspect/SystemInspector.h	/^class SystemInspector : noncopyable$/;"	c	namespace:muduo::net
T	src/muduo/muduo/base/Logging.cc	/^  T(const char* str, unsigned len)$/;"	f	class:muduo::T	file:
T	src/muduo/muduo/base/Logging.cc	/^class T$/;"	c	namespace:muduo	file:
T	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef typename ::std::iterator_traits<Iter>::value_type T;$/;"	t	function:testing::ElementsAreArray	typeref:typename:::std::iterator_traits<Iter>::value_type
T	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef typename ::std::iterator_traits<Iter>::value_type T;$/;"	t	function:testing::UnorderedElementsAreArray	typeref:typename:::std::iterator_traits<Iter>::value_type
T1	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^  typedef T T1;$/;"	t	function:testing::internal::UniversalPrint	typeref:typename:T
TEST	src/tests/arithmetic_test.cpp	/^TEST(ArithmeticTest, doubleToTorus32) $/;"	f
TEST	src/tests/arithmetic_test.cpp	/^TEST(ArithmeticTest, modeSwitchNeg) $/;"	f
TEST	src/tests/arithmetic_test.cpp	/^TEST(ArithmeticTest, modeSwitchPos) $/;"	f
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(ActionInterfaceTest, CanBeImplementedByDefiningPerform) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(ActionInterfaceTest, MakeAction) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(ActionTest, CanBeConstructedFromActionInterface) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(ActionTest, CanBeConvertedToOtherActionType) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(ActionTest, DelegatesWorkToActionInterface) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(ActionTest, IsCopyable) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(AssignTest, CompatibleTypes) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(AssignTest, Int) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(AssignTest, String) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(BuiltInDefaultValueDeathTest, IsUndefinedForNonDefaultConstructibleType) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(BuiltInDefaultValueDeathTest, IsUndefinedForReferences) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(BuiltInDefaultValueTest, BoolExists) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(BuiltInDefaultValueTest, DoesNotExistForNonDefaultConstructibleType) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(BuiltInDefaultValueTest, ExistsForDefaultConstructibleType) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(BuiltInDefaultValueTest, ExistsForNumericTypes) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(BuiltInDefaultValueTest, ExistsForPointerTypes) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(BuiltInDefaultValueTest, ExistsForString) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(BuiltInDefaultValueTest, IsDefaultConstructedForDefaultConstructibleType) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(BuiltInDefaultValueTest, IsEmptyStringForString) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(BuiltInDefaultValueTest, IsFalseForBool) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(BuiltInDefaultValueTest, IsNullForPointerTypes) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(BuiltInDefaultValueTest, IsZeroForNumericTypes) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(BuiltInDefaultValueTest, WorksForConstTypes) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(ByRefTest, ConstValue) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(ByRefTest, ExplicitType) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(ByRefTest, IsCopyable) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(ByRefTest, NonConstValue) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(ByRefTest, PrintsCorrectly) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(DefaultValueDeathTest, GetReturnsBuiltInDefaultValueWhenUnset) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(DefaultValueOfReferenceDeathTest, GetReturnsBuiltInDefaultValueWhenUnset) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(DefaultValueOfReferenceTest, CanBeSetAndUnset) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(DefaultValueOfReferenceTest, IsInitiallyNotExisting) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(DefaultValueOfReferenceTest, IsInitiallyUnset) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(DefaultValueTest, CanBeSetAndUnset) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(DefaultValueTest, GetWorksForMoveOnlyIfSet) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(DefaultValueTest, GetWorksForVoid) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(DefaultValueTest, IsInitiallyUnset) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(DoDefaultDeathTest, DiesForUnknowType) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(DoDefaultDeathTest, DiesIfUsedInCompositeAction) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(DoDefaultTest, CannotBeUsedInOnCall) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(DoDefaultTest, DoesWhatOnCallSpecifies) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(DoDefaultTest, ReturnsBuiltInDefaultValueByDefault) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(DoDefaultTest, ReturnsUserSpecifiedPerTypeDefaultValueWhenThereIsOne) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(IgnoreResultTest, ActionReturningClass) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(IgnoreResultTest, MonomorphicAction) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(IgnoreResultTest, PolymorphicAction) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(InvokeWithoutArgsTest, Function) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(InvokeWithoutArgsTest, Functor) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(InvokeWithoutArgsTest, Method) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(MakePolymorphicActionTest, ConstructsActionFromImpl) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(MakePolymorphicActionTest, WorksWhenPerformHasOneTemplateParameter) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(MockMethodTest, CanReturnMoveOnlyValue_DoAllReturn) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(MockMethodTest, CanReturnMoveOnlyValue_Invoke) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(MockMethodTest, CanReturnMoveOnlyValue_Return) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(ReturnNullTest, WorksInPointerReturningFunction) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(ReturnNullTest, WorksInSmartPointerReturningFunction) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(ReturnRefOfCopyTest, IsCovariant) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(ReturnRefOfCopyTest, WorksForReference) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(ReturnRefTest, IsCovariant) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(ReturnRefTest, WorksForReference) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(ReturnTest, AcceptsStringLiteral) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(ReturnTest, CanConvertArgumentUsingNonConstTypeCastOperator) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(ReturnTest, ConvertsArgumentWhenConverted) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(ReturnTest, IsCovariant) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(ReturnTest, ReturnsGivenValue) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(ReturnTest, SupportsWrapperReturnType) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(ReturnTest, WorksForVoid) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(SetArgPointeeTest, AcceptsCharPointer) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(SetArgPointeeTest, AcceptsStringLiteral) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(SetArgPointeeTest, AcceptsWideCharPointer) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(SetArgPointeeTest, AcceptsWideStringLiteral) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(SetArgPointeeTest, SetsTheNthPointee) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(SetArgPointeeTest, SetsTheNthPointeeOfProto2BufferBaseType) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(SetArgPointeeTest, SetsTheNthPointeeOfProto2BufferType) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(SetArgPointeeTest, SetsTheNthPointeeOfProtoBufferBaseType) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(SetArgPointeeTest, SetsTheNthPointeeOfProtoBufferType) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(SetArgumentPointeeTest, SetsTheNthPointee) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(SetArgumentPointeeTest, SetsTheNthPointeeOfProto2BufferBaseType) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(SetArgumentPointeeTest, SetsTheNthPointeeOfProto2BufferType) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(SetArgumentPointeeTest, SetsTheNthPointeeOfProtoBufferBaseType) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST(SetArgumentPointeeTest, SetsTheNthPointeeOfProtoBufferType) {$/;"	f	namespace:__anon550198f10111
TEST	src/tests/googletest/googlemock/test/gmock-cardinalities_test.cc	/^TEST(AnyNumber, Works) {$/;"	f	namespace:__anon3d3befdc0111
TEST	src/tests/googletest/googlemock/test/gmock-cardinalities_test.cc	/^TEST(AnyNumberTest, HasCorrectBounds) {$/;"	f	namespace:__anon3d3befdc0111
TEST	src/tests/googletest/googlemock/test/gmock-cardinalities_test.cc	/^TEST(AtLeastTest, HasCorrectBounds) {$/;"	f	namespace:__anon3d3befdc0111
TEST	src/tests/googletest/googlemock/test/gmock-cardinalities_test.cc	/^TEST(AtLeastTest, OnNegativeNumber) {$/;"	f	namespace:__anon3d3befdc0111
TEST	src/tests/googletest/googlemock/test/gmock-cardinalities_test.cc	/^TEST(AtLeastTest, OnPositiveNumber) {$/;"	f	namespace:__anon3d3befdc0111
TEST	src/tests/googletest/googlemock/test/gmock-cardinalities_test.cc	/^TEST(AtLeastTest, OnZero) {$/;"	f	namespace:__anon3d3befdc0111
TEST	src/tests/googletest/googlemock/test/gmock-cardinalities_test.cc	/^TEST(AtMostTest, HasCorrectBounds) {$/;"	f	namespace:__anon3d3befdc0111
TEST	src/tests/googletest/googlemock/test/gmock-cardinalities_test.cc	/^TEST(AtMostTest, OnNegativeNumber) {$/;"	f	namespace:__anon3d3befdc0111
TEST	src/tests/googletest/googlemock/test/gmock-cardinalities_test.cc	/^TEST(AtMostTest, OnPositiveNumber) {$/;"	f	namespace:__anon3d3befdc0111
TEST	src/tests/googletest/googlemock/test/gmock-cardinalities_test.cc	/^TEST(AtMostTest, OnZero) {$/;"	f	namespace:__anon3d3befdc0111
TEST	src/tests/googletest/googlemock/test/gmock-cardinalities_test.cc	/^TEST(BetweenTest, HasCorrectBounds) {$/;"	f	namespace:__anon3d3befdc0111
TEST	src/tests/googletest/googlemock/test/gmock-cardinalities_test.cc	/^TEST(BetweenTest, OnDifferentStartAndEnd) {$/;"	f	namespace:__anon3d3befdc0111
TEST	src/tests/googletest/googlemock/test/gmock-cardinalities_test.cc	/^TEST(BetweenTest, OnNegativeEnd) {$/;"	f	namespace:__anon3d3befdc0111
TEST	src/tests/googletest/googlemock/test/gmock-cardinalities_test.cc	/^TEST(BetweenTest, OnNegativeStart) {$/;"	f	namespace:__anon3d3befdc0111
TEST	src/tests/googletest/googlemock/test/gmock-cardinalities_test.cc	/^TEST(BetweenTest, OnSameStartAndEnd) {$/;"	f	namespace:__anon3d3befdc0111
TEST	src/tests/googletest/googlemock/test/gmock-cardinalities_test.cc	/^TEST(BetweenTest, OnStartBiggerThanEnd) {$/;"	f	namespace:__anon3d3befdc0111
TEST	src/tests/googletest/googlemock/test/gmock-cardinalities_test.cc	/^TEST(BetweenTest, OnZeroStartAndNonZeroEnd) {$/;"	f	namespace:__anon3d3befdc0111
TEST	src/tests/googletest/googlemock/test/gmock-cardinalities_test.cc	/^TEST(BetweenTest, OnZeroStartAndZeroEnd) {$/;"	f	namespace:__anon3d3befdc0111
TEST	src/tests/googletest/googlemock/test/gmock-cardinalities_test.cc	/^TEST(CardinalityTest, CanDescribeActualCallCount) {$/;"	f	namespace:__anon3d3befdc0111
TEST	src/tests/googletest/googlemock/test/gmock-cardinalities_test.cc	/^TEST(CardinalityTest, IsCopyable) {$/;"	f	namespace:__anon3d3befdc0111
TEST	src/tests/googletest/googlemock/test/gmock-cardinalities_test.cc	/^TEST(CardinalityTest, IsDefaultConstructable) {$/;"	f	namespace:__anon3d3befdc0111
TEST	src/tests/googletest/googlemock/test/gmock-cardinalities_test.cc	/^TEST(CardinalityTest, IsOverSaturatedByCallCountWorks) {$/;"	f	namespace:__anon3d3befdc0111
TEST	src/tests/googletest/googlemock/test/gmock-cardinalities_test.cc	/^TEST(ExactlyTest, HasCorrectBounds) {$/;"	f	namespace:__anon3d3befdc0111
TEST	src/tests/googletest/googlemock/test/gmock-cardinalities_test.cc	/^TEST(ExactlyTest, OnNegativeNumber) {$/;"	f	namespace:__anon3d3befdc0111
TEST	src/tests/googletest/googlemock/test/gmock-cardinalities_test.cc	/^TEST(ExactlyTest, OnPositiveNumber) {$/;"	f	namespace:__anon3d3befdc0111
TEST	src/tests/googletest/googlemock/test/gmock-cardinalities_test.cc	/^TEST(ExactlyTest, OnZero) {$/;"	f	namespace:__anon3d3befdc0111
TEST	src/tests/googletest/googlemock/test/gmock-cardinalities_test.cc	/^TEST(MakeCardinalityTest, ConstructsCardinalityFromInterface) {$/;"	f	namespace:__anon3d3befdc0111
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(ActionMacroTest, CanDefineOverloadedActions) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(ActionMacroTest, CanReferenceArgumentTuple) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(ActionMacroTest, CanReferenceArgumentType) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(ActionMacroTest, CanReferenceMockFunctionReturnType) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(ActionMacroTest, CanReferenceMockFunctionType) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(ActionMacroTest, WorksForConstReferenceArg) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(ActionMacroTest, WorksForDifferentArgumentNumbers) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(ActionMacroTest, WorksForNonConstReferenceArg) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(ActionMacroTest, WorksInNamespace) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(ActionMacroTest, WorksWhenNotReferencingArguments) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(ActionMacroTest, WorksWhenReturningVoid) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(ActionPMacroTest, CanReferenceArgumentAndParameterTypes) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(ActionPMacroTest, DefinesParameterizedAction) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(ActionPMacroTest, WorksInCompatibleMockFunction) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(ActionPnMacroTest, CanExplicitlyInstantiateWithReferenceTypes) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(ActionPnMacroTest, CanPartiallyRestrictParameterTypes) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(ActionPnMacroTest, SimpleTypePromotion) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(ActionPnMacroTest, TypesAreCorrect) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(ActionPnMacroTest, WorksFor10Parameters) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(ActionPnMacroTest, WorksFor3Parameters) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(ActionPnMacroTest, WorksFor4Parameters) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(ActionPnMacroTest, WorksFor5Parameters) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(ActionPnMacroTest, WorksFor6Parameters) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(ActionPnMacroTest, WorksFor7Parameters) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(ActionPnMacroTest, WorksFor8Parameters) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(ActionPnMacroTest, WorksFor9Parameters) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(ActionTemplateTest, CanBeOverloadedOnNumberOfValueParameters) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(ActionTemplateTest, WorksFor10TemplateParameters) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(ActionTemplateTest, WorksFor10ValueParameters) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(ActionTemplateTest, WorksForIntegralTemplateParams) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(ActionTemplateTest, WorksForTemplateTemplateParameters) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(ActionTemplateTest, WorksWithValueParams) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(ActionTemplateTest, WorksWithoutValueParam) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(DoAllTest, EightActions) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(DoAllTest, FiveActions) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(DoAllTest, FourActions) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(DoAllTest, NineActions) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(DoAllTest, SevenActions) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(DoAllTest, SixActions) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(DoAllTest, TenActions) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(DoAllTest, ThreeActions) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(DoAllTest, TwoActions) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(InvokeArgumentTest, ByConstReferenceFunction) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(InvokeArgumentTest, ByExplicitConstReferenceFunction) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(InvokeArgumentTest, ByPointerFunction) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(InvokeArgumentTest, Function0) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(InvokeArgumentTest, Function10) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(InvokeArgumentTest, Function5) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(InvokeArgumentTest, Function6) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(InvokeArgumentTest, Function7) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(InvokeArgumentTest, Function8) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(InvokeArgumentTest, Function9) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(InvokeArgumentTest, FunctionWithCStringLiteral) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(InvokeArgumentTest, Functor1) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(InvokeArgumentTest, Functor5) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(InvokeArgumentTest, Functor6) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(ReturnNewTest, ConstructorThatTakes10Arguments) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(ReturnNewTest, NoArgs) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(ReturnNewTest, Unary) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(ReturnNewTest, UnaryWorksWhenMockMethodHasArgs) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(ReturnNewTest, UnaryWorksWhenMockMethodReturnsPointerToConst) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(WithArgsTest, ArgsOfCompatibleTypes) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(WithArgsTest, EightArgs) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(WithArgsTest, FiveArgs) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(WithArgsTest, FourArgs) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(WithArgsTest, Identity) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(WithArgsTest, NineArgs) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(WithArgsTest, NonInvokeAction) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(WithArgsTest, OneArg) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(WithArgsTest, RepeatedArguments) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(WithArgsTest, ReversedArgumentOrder) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(WithArgsTest, SevenArgs) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(WithArgsTest, SixArgs) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(WithArgsTest, TenArgs) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(WithArgsTest, ThreeArgs) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(WithArgsTest, TwoArgs) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^TEST(WithArgsTest, VoidAction) {$/;"	f	namespace:testing::gmock_generated_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^TEST(ExpectCallTest, UnmentionedFunctionCanBeCalledAnyNumberOfTimes) {$/;"	f	namespace:testing::gmock_generated_function_mockers_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^TEST(MockFunctionTest, AsStdFunction) {$/;"	f	namespace:testing::gmock_generated_function_mockers_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^TEST(MockFunctionTest, AsStdFunctionReturnsReference) {$/;"	f	namespace:testing::gmock_generated_function_mockers_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^TEST(MockFunctionTest, WorksFor10Arguments) {$/;"	f	namespace:testing::gmock_generated_function_mockers_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^TEST(MockFunctionTest, WorksForNonVoidBinary) {$/;"	f	namespace:testing::gmock_generated_function_mockers_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^TEST(MockFunctionTest, WorksForNonVoidNullary) {$/;"	f	namespace:testing::gmock_generated_function_mockers_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^TEST(MockFunctionTest, WorksForVoidNullary) {$/;"	f	namespace:testing::gmock_generated_function_mockers_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^TEST(MockFunctionTest, WorksForVoidUnary) {$/;"	f	namespace:testing::gmock_generated_function_mockers_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^TEST(OverloadedMockMethodTest, CanOverloadOnArgNumberInMacroBody) {$/;"	f	namespace:testing::gmock_generated_function_mockers_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^TEST(OverloadedMockMethodTest, CanOverloadOnConstnessInMacroBody) {$/;"	f	namespace:testing::gmock_generated_function_mockers_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^TEST(TemplateMockTest, MethodWithCommaInReturnTypeWorks) {$/;"	f	namespace:testing::gmock_generated_function_mockers_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^TEST(TemplateMockTest, Works) {$/;"	f	namespace:testing::gmock_generated_function_mockers_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^TEST(TemplateMockTestWithCallType, Works) {$/;"	f	namespace:testing::gmock_generated_function_mockers_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-internal-utils_test.cc	/^TEST(FunctionTest, Binary) {$/;"	f	namespace:__anonecc711f70111
TEST	src/tests/googletest/googlemock/test/gmock-generated-internal-utils_test.cc	/^TEST(FunctionTest, LongArgumentList) {$/;"	f	namespace:__anonecc711f70111
TEST	src/tests/googletest/googlemock/test/gmock-generated-internal-utils_test.cc	/^TEST(FunctionTest, Nullary) {$/;"	f	namespace:__anonecc711f70111
TEST	src/tests/googletest/googlemock/test/gmock-generated-internal-utils_test.cc	/^TEST(FunctionTest, Unary) {$/;"	f	namespace:__anonecc711f70111
TEST	src/tests/googletest/googlemock/test/gmock-generated-internal-utils_test.cc	/^TEST(MatcherTupleTest, ForSize0) {$/;"	f	namespace:__anonecc711f70111
TEST	src/tests/googletest/googlemock/test/gmock-generated-internal-utils_test.cc	/^TEST(MatcherTupleTest, ForSize1) {$/;"	f	namespace:__anonecc711f70111
TEST	src/tests/googletest/googlemock/test/gmock-generated-internal-utils_test.cc	/^TEST(MatcherTupleTest, ForSize2) {$/;"	f	namespace:__anonecc711f70111
TEST	src/tests/googletest/googlemock/test/gmock-generated-internal-utils_test.cc	/^TEST(MatcherTupleTest, ForSize5) {$/;"	f	namespace:__anonecc711f70111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(AllOfTest, DoesNotCallAllOfUnqualified) {$/;"	f	namespace:__anoncaf4ae130111::adl_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(AllOfTest, HugeMatcher) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(AnyOfTest, DoesNotCallAnyOfUnqualified) {$/;"	f	namespace:__anoncaf4ae130111::adl_test
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(AnyOfTest, HugeMatcher) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ArgsTest, AcceptsDecreasingTemplateArgs) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ArgsTest, AcceptsMoreTemplateArgsThanArityOfOriginalTuple) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ArgsTest, AcceptsOneTemplateArg) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ArgsTest, AcceptsRepeatedTemplateArgs) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ArgsTest, AcceptsTenTemplateArgs) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ArgsTest, AcceptsTwoTemplateArgs) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ArgsTest, AcceptsZeroTemplateArg) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ArgsTest, CanBeNested) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ArgsTest, CanMatchTupleByReference) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ArgsTest, CanMatchTupleByValue) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ArgsTest, DescirbesNestedArgsCorrectly) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ArgsTest, DescirbesSelfCorrectly) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ArgsTest, DescribesNegationCorrectly) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ArgsTest, ExplainsMatchResultWithInnerExplanation) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ArgsTest, ExplainsMatchResultWithoutInnerExplanation) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ContainsTest, AcceptsMatcher) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ContainsTest, ArrayDoesNotMatchWhenElementIsNotInContainer) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ContainsTest, ArrayMatchesWhenElementIsInContainer) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ContainsTest, DescribesItselfCorrectly) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ContainsTest, ExplainsMatchResultCorrectly) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ContainsTest, ListDoesNotMatchWhenElementIsNotInContainer) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ContainsTest, ListMatchesWhenElementIsInContainer) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ContainsTest, MapDoesNotMatchWhenElementIsNotInContainer) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ContainsTest, MapMatchesWhenElementIsInContainer) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ContainsTest, SetDoesNotMatchWhenElementIsNotInContainer) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ContainsTest, SetMatchesWhenElementIsInContainer) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ContainsTest, WorksForNativeArrayAsTuple) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ContainsTest, WorksForTwoDimensionalNativeArray) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreArrayTest, CanBeCreatedWithArraySize) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreArrayTest, CanBeCreatedWithIteratorRange) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreArrayTest, CanBeCreatedWithMatcherArray) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreArrayTest, CanBeCreatedWithMatcherVector) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreArrayTest, CanBeCreatedWithValueArray) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreArrayTest, CanBeCreatedWithVector) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreArrayTest, CanBeCreatedWithoutArraySize) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreArrayTest, SourceLifeSpan) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreArrayTest, TakesInitializerList) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreArrayTest, TakesInitializerListOfCStrings) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreArrayTest, TakesInitializerListOfSameTypedMatchers) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreArrayTest, WorksWithNativeArray) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreArrayTest,$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreTest, AcceptsArrayWithUnknownSize) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreTest, AcceptsStringLiteral) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreTest, CanDescribeExpectingManyElements) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreTest, CanDescribeExpectingNoElement) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreTest, CanDescribeExpectingOneElement) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreTest, CanDescribeNegationOfExpectingManyElements) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreTest, CanDescribeNegationOfExpectingNoElement) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreTest, CanDescribeNegationOfExpectingOneElment) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreTest, CanExplainMismatchRightSize) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreTest, CanExplainMismatchWrongSize) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreTest, DoesNotExplainTrivialMatch) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreTest, DoesNotMatchWrongOrder) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreTest, DoesNotMatchWrongSize) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreTest, DoesNotMatchWrongValue) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreTest, ExplainsNonTrivialMatch) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreTest, MakesCopyOfArguments) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreTest, MatchesOneElementAnyMatcher) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreTest, MatchesOneElementEqMatcher) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreTest, MatchesOneElementList) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreTest, MatchesOneElementValue) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreTest, MatchesOneElementVector) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreTest, MatchesTenElementVector) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreTest, MatchesThreeElementVector) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreTest, MatchesThreeElementsMixedMatchers) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreTest, WorksForNestedContainer) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreTest, WorksWithByRefElementMatchers) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreTest, WorksWithContainerPointerUsingPointee) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreTest, WorksWithNativeArrayPassedAsPointerAndSize) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreTest, WorksWithNativeArrayPassedByReference) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(ElementsAreTest, WorksWithTwoDimensionalNativeArray) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(MatcherMacroTest, CanBeComposedUsingValue) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(MatcherMacroTest, CanExplainMatchResult) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(MatcherMacroTest, CanReferenceArgType) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(MatcherMacroTest, DescriptionCanReferenceNegationAndParameters) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(MatcherMacroTest, Works) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(MatcherMacroTest, WorksInNamespace) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(MatcherPMacroTest, GeneratesCorrectDescription) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(MatcherPMacroTest, Works) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(MatcherPMacroTest, WorksWhenExplicitlyInstantiatedWithReference) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(MatcherPnMacroTest, CanBeOverloadedOnNumberOfParameters) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(MatcherPnMacroTest, CanReferenceParamTypes) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(MatcherPnMacroTest, CanUseMatcherTypedParameterInValue) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(MatcherPnMacroTest, SimpleTypePromotion) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(MatcherPnMacroTest, TypesAreCorrect) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(MatcherPnMacroTest, Works) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(MatcherPnMacroTest, WorksForDifferentParameterTypes) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(MatcherPnMacroTest, WorksWhenExplicitlyInstantiatedWithReferences) {$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^TEST(MatcherPnMacroTest,$/;"	f	namespace:__anoncaf4ae130111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(AssertTest, FailsFatallyOnFalse) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(AssertTest, SucceedsOnTrue) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(ConvertIdentifierNameToWordsTest, WorksWhenNameContainsCamelCaseWords) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(ConvertIdentifierNameToWordsTest, WorksWhenNameContainsDigits) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(ConvertIdentifierNameToWordsTest, WorksWhenNameContainsNoWord) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(ConvertIdentifierNameToWordsTest, WorksWhenNameContains_SeparatedWords) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(ConvertIdentifierNameToWordsTest, WorksWhenNameIsMixture) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(ExpectCallTest,  DoesNotLogWhenVerbosityIsError) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(ExpectCallTest, DoesNotLogWhenVerbosityIsWarning) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(ExpectCallTest, LogsWhenVerbosityIsInfo) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(ExpectTest, FailsNonfatallyOnFalse) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(ExpectTest, SucceedsOnTrue) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(GetRawPointerTest, WorksForRawPointers) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(GetRawPointerTest, WorksForSmartPointers) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(KindOfTest, Bool) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(KindOfTest, FloatingPoint) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(KindOfTest, Integer) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(KindOfTest, Other) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(LogTest, AllLogsArePrintedWhenVerbosityIsInfo) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(LogTest, NoLogsArePrintedWhenVerbosityIsError) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(LogTest, NoSkippingStackFrameInOptMode) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(LogTest, NoStackTraceWhenStackFramesToSkipIsNegative) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(LogTest, OnlyWarningsArePrintedWhenVerbosityIsInvalid) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(LogTest, OnlyWarningsArePrintedWhenVerbosityIsWarning) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(LosslessArithmeticConvertibleTest, BoolToBool) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(LosslessArithmeticConvertibleTest, BoolToFloatingPoint) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(LosslessArithmeticConvertibleTest, BoolToInteger) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(LosslessArithmeticConvertibleTest, FloatingPointToBool) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(LosslessArithmeticConvertibleTest, FloatingPointToFloatingPoint) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(LosslessArithmeticConvertibleTest, FloatingPointToInteger) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(LosslessArithmeticConvertibleTest, IntegerToBool) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(LosslessArithmeticConvertibleTest, IntegerToFloatingPoint) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(LosslessArithmeticConvertibleTest, IntegerToInteger) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(OnCallTest, DoesNotLogWhenVerbosityIsError) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(OnCallTest, DoesNotLogWhenVerbosityIsWarning) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(OnCallTest, LogsAnythingArgument) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(OnCallTest, LogsWhenVerbosityIsInfo) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(PointeeOfTest, WorksForRawPointers) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(PointeeOfTest, WorksForSmartPointers) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(StlContainerViewTest, WorksForDynamicNativeArray) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(StlContainerViewTest, WorksForStaticNativeArray) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(StlContainerViewTest, WorksForStlContainer) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(TupleMatchesTest, WorksForSize0) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(TupleMatchesTest, WorksForSize1) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(TupleMatchesTest, WorksForSize2) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(TupleMatchesTest, WorksForSize5) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(TypeTraitsTest, false_type) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(TypeTraitsTest, is_pointer) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(TypeTraitsTest, is_reference) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(TypeTraitsTest, remove_reference) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(TypeTraitsTest, true_type) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST(TypeTraitsTest, type_equals) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ATest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ATest, MatchesAnyValue) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ATest, WorksForDerivedClass) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(AllArgsTest, WorksForNonTuple) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(AllArgsTest, WorksForTuple) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(AllArgsTest, WorksInWithClause) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(AllOfTest, AllOfMatcherSafelyCastsMonomorphicMatchers) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(AllOfTest, CanDescribeNegation) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(AllOfTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(AllOfTest, ExplainsResult) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(AllOfTest, MatchesWhenAllMatch) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(AllOfTest, VariadicMatchesWhenAllMatch) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(AnTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(AnTest, MatchesAnyValue) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(AnyOfTest, AnyOfMatcherSafelyCastsMonomorphicMatchers) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(AnyOfTest, CanDescribeNegation) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(AnyOfTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(AnyOfTest, ExplainsResult) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(AnyOfTest, MatchesWhenAnyMatches) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(AnyOfTest, VariadicMatchesWhenAnyMatches) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(BeginEndDistanceIsTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(BeginEndDistanceIsTest, ExplainsResult) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(BeginEndDistanceIsTest, WorksWithForwardList) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(BeginEndDistanceIsTest, WorksWithNonStdList) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ByRefTest, AllowsNotCopyableConstValueInMatchers) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ByRefTest, AllowsNotCopyableValueInMatchers) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ContainerEqExtraTest, CopiesNativeArrayParameter) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ContainerEqExtraTest, MultiSetOfIntDuplicateDifference) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ContainerEqExtraTest, MultipleValuesAdded) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ContainerEqExtraTest, MultipleValuesAddedAndRemoved) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ContainerEqExtraTest, MultipleValuesMissing) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ContainerEqExtraTest, WorksForMaps) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ContainerEqExtraTest, WorksForNativeArray) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ContainerEqExtraTest, WorksForNativeArrayAsTuple) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ContainerEqExtraTest, WorksForTwoDimensionalNativeArray) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ContainsRegexTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ContainsRegexTest, MatchesStringContainingGivenRegex) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(EachTest, AcceptsMatcher) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(EachTest, DescribesItselfCorrectly) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(EachTest, ExplainsMatchResultCorrectly) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(EachTest, MatchesMapWhenAllElementsMatch) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(EachTest, MatchesVectorWhenAllElementsMatch) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(EachTest, WorksForNativeArrayAsTuple) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ElemensAreArrayStreamTest, WorksForStreamlike) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ElemensAreStreamTest, WorksForStreamlike) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ElementsAreTest, TakesStlContainer) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ElementsAreTest, WorksWithUncopyable) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(EndsWithTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(EndsWithTest, MatchesStringWithGivenSuffix) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(Eq2Test, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(Eq2Test, MatchesEqualArguments) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(EqTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(EqTest, IsPolymorphic) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(EqTest, MatchesEqualValue) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ExpectThat, TakesFunctions) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ExpectThat, TakesLiterals) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ExplainMatchResultTest, AllOf_False_False) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ExplainMatchResultTest, AllOf_False_True) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ExplainMatchResultTest, AllOf_True_False) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ExplainMatchResultTest, AllOf_True_True) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ExplainMatchResultTest, AllOf_True_True_2) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ExplainMatchResultTest, WorksInsideMATCHER) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ExplainMatchResultTest, WorksWithMonomorphicMatcher) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ExplainMatchResultTest, WorksWithPolymorphicMatcher) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ExplainmatcherResultTest, MonomorphicMatcher) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(FieldForPointerTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(FieldForPointerTest, CanExplainMatchResult) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(FieldForPointerTest, DoesNotMatchNull) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(FieldForPointerTest, WorksForArgumentOfSubType) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(FieldForPointerTest, WorksForPointerToConst) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(FieldForPointerTest, WorksForPointerToNonConst) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(FieldForPointerTest, WorksForReferenceToConstPointer) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(FieldTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(FieldTest, CanExplainMatchResult) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(FieldTest, WorksForArgumentOfSubType) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(FieldTest, WorksForByRefArgument) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(FieldTest, WorksForCompatibleMatcherType) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(FieldTest, WorksForConstField) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(FieldTest, WorksForNonConstField) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(FieldTest, WorksForPointerField) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(FieldTest, WorksForUncopyableField) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(FormatMatcherDescriptionTest, WorksForEmptyDescription) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(Ge2Test, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(Ge2Test, MatchesGreaterThanOrEqualArguments) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(GeTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(GeTest, ImplementsGreaterThanOrEqual) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(GlobalWideEndsWithTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(GlobalWideEndsWithTest, MatchesStringWithGivenSuffix) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(GlobalWideHasSubstrTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(GlobalWideHasSubstrTest, WorksForCStrings) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(GlobalWideHasSubstrTest, WorksForStringClasses) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(GlobalWideStartsWithTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(GlobalWideStartsWithTest, MatchesStringWithGivenPrefix) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(GlobalWideStrCaseEqTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(GlobalWideStrCaseEqTest, MatchesEqualStringIgnoringCase) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(GlobalWideStrCaseEqTest, MatchesEqualStringWith0IgnoringCase) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(GlobalWideStrCaseNeTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(GlobalWideStrCaseNeTest, MatchesUnequalStringIgnoringCase) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(GlobalWideStrEqTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(GlobalWideStrEqTest, MatchesEqual) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(GlobalWideStrNeTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(GlobalWideStrNeTest, MatchesUnequalString) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(Gt2Test, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(Gt2Test, MatchesGreaterThanArguments) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(GtTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(GtTest, ImplementsGreaterThan) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(HasSubstrTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(HasSubstrTest, WorksForCStrings) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(HasSubstrTest, WorksForStringClasses) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(IsEmptyTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(IsEmptyTest, ExplainsResult) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(IsEmptyTest, ImplementsIsEmpty) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(IsEmptyTest, WorksWithString) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(IsNullTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(IsNullTest, LinkedPtr) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(IsNullTest, MatchesNullPointer) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(IsNullTest, ReferenceToConstLinkedPtr) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(IsNullTest, StdFunction) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(IsReadableTypeNameTest, ReturnsFalseForLongFunctionTypeNames) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(IsReadableTypeNameTest, ReturnsFalseForLongTemplateNames) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(IsReadableTypeNameTest, ReturnsTrueForLongNonTemplateNonFunctionNames) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(IsReadableTypeNameTest, ReturnsTrueForShortNames) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(JoinAsTupleTest, JoinsEmptyTuple) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(JoinAsTupleTest, JoinsOneTuple) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(JoinAsTupleTest, JoinsTenTuple) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(JoinAsTupleTest, JoinsTwoTuple) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(KeyTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(KeyTest, ExplainsResult) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(KeyTest, InsideContainsUsingMap) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(KeyTest, InsideContainsUsingMultimap) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(KeyTest, MatchesCorrectly) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(KeyTest, SafelyCastsInnerMatcher) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(Le2Test, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(Le2Test, MatchesLessThanOrEqualArguments) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(LeTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(LeTest, ImplementsLessThanOrEqual) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(Lt2Test, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(Lt2Test, MatchesLessThanArguments) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(LtTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(LtTest, ImplementsLessThan) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(MakeMatcherTest, ConstructsMatcherFromMatcherInterface) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(MakePolymorphicMatcherTest, ConstructsMatcherUsingNewAPI) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(MakePolymorphicMatcherTest, ConstructsMatcherUsingOldAPI) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(MatchResultListenerTest, CanAccessUnderlyingStream) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(MatchResultListenerTest, IsInterestedWorks) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(MatchResultListenerTest, StreamingWorks) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(MatcherAssertionTest, WorksForByRefArguments) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(MatcherAssertionTest, WorksForMonomorphicMatcher) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(MatcherAssertionTest, WorksWhenMatcherIsNotSatisfied) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(MatcherAssertionTest, WorksWhenMatcherIsSatisfied) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(MatcherCastTest, ConversionConstructorIsUsed) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(MatcherCastTest, FromCompatibleType) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(MatcherCastTest, FromConstReferenceToNonReference) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(MatcherCastTest, FromConvertibleFromAny) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(MatcherCastTest, FromNonReferenceToConstReference) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(MatcherCastTest, FromNonReferenceToReference) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(MatcherCastTest, FromPolymorphicMatcher) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(MatcherCastTest, FromReferenceToNonReference) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(MatcherCastTest, FromSameType) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(MatcherCastTest, ValueIsNotCopied) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(MatcherInterfaceTest, CanBeImplementedUsingNewAPI) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(MatcherInterfaceTest, CanBeImplementedUsingPublishedAPI) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(MatcherTest, CanBeConstructedFromMatcherInterface) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(MatcherTest, CanBeDefaultConstructed) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(MatcherTest, CanBeImplicitlyConstructedFromNULL) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(MatcherTest, CanBeImplicitlyConstructedFromValue) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(MatcherTest, CanDescribeItself) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(MatcherTest, IsCopyable) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(MatcherTest, MatchAndExplain) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(MatcherTupleTest, ExplainsMatchFailure) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(MatchesRegexTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(MatchesRegexTest, MatchesStringMatchingGivenRegex) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(MatchesTest, IsSatisfiedByWhatMatchesTheMatcher) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(MatchesTest, WorksOnByRefArguments) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(MatchesTest, WorksWithMatcherOnNonRefType) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(Ne2Test, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(Ne2Test, MatchesUnequalArguments) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(NeTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(NeTest, ImplementsNotEqual) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(NotNullTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(NotNullTest, LinkedPtr) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(NotNullTest, MatchesNonNullPointer) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(NotNullTest, ReferenceToConstLinkedPtr) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(NotNullTest, StdFunction) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(NotTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(NotTest, NegatesMatcher) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(NotTest, NotMatcherSafelyCastsMonomorphicMatchers) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PairTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PairTest, CanExplainMatchResultTo) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PairTest, InsideContainsUsingMap) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PairTest, MatchesCorrectly) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PairTest, SafelyCastsInnerMatchers) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PairTest, Typing) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PointeeTest, AlwaysExplainsPointee) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PointeeTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PointeeTest, CanExplainMatchResult) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PointeeTest, MatchesAgainstAValue) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PointeeTest, NeverMatchesNull) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PointeeTest, RawPointer) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PointeeTest, RawPointerToConst) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PointeeTest, ReferenceToConstRawPointer) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PointeeTest, ReferenceToNonConstRawPointer) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PointeeTest, WorksWithConstPropagatingPointers) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PointwiseTest, AcceptsCorrectContent) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PointwiseTest, AllowsMonomorphicInnerMatcher) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PointwiseTest, DescribesSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PointwiseTest, MakesCopyOfRhs) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PointwiseTest, RejectsWrongContent) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PointwiseTest, RejectsWrongSize) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PointwiseTest, WorksForLhsNativeArray) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PointwiseTest, WorksForRhsInitializerList) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PointwiseTest, WorksForRhsNativeArray) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PolymorphicMatcherTest, CanAccessImpl) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PolymorphicMatcherTest, CanAccessMutableImpl) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PropertyForPointerTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PropertyForPointerTest, CanExplainMatchResult) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PropertyForPointerTest, WorksForArgumentOfSubType) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PropertyForPointerTest, WorksForPointerToConst) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PropertyForPointerTest, WorksForPointerToNonConst) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PropertyForPointerTest, WorksForReferenceToConstPointer) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PropertyForPointerTest, WorksForReferenceToNonConstProperty) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PropertyTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PropertyTest, CanExplainMatchResult) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PropertyTest, WorksForArgumentOfSubType) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PropertyTest, WorksForByValueArgument) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PropertyTest, WorksForCompatibleMatcherType) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PropertyTest, WorksForNonReferenceProperty) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PropertyTest, WorksForReferenceToConstProperty) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(PropertyTest, WorksForReferenceToNonConstProperty) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(RefTest, CanBeUsedAsMatcherForConstReference) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(RefTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(RefTest, ExplainsResult) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(RefTest, IsCovariant) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(RefTest, MatchesSameVariable) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ResultOfDeathTest, DiesOnNullFunctionPointers) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ResultOfTest, CanDescribeItself) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ResultOfTest, CanExplainMatchResult) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ResultOfTest, WorksForCompatibleMatcherTypes) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ResultOfTest, WorksForFunctionPointers) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ResultOfTest, WorksForFunctionReferences) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ResultOfTest, WorksForFunctors) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ResultOfTest, WorksForNonReferenceResults) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ResultOfTest, WorksForPolymorphicFunctors) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ResultOfTest, WorksForReferenceToConstResults) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ResultOfTest, WorksForReferenceToNonConstResults) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ResultOfTest, WorksForReferencingCallables) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(SafeMatcherCastTest, ConversionConstructorIsUsed) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(SafeMatcherCastTest, FromBaseClass) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(SafeMatcherCastTest, FromConstReferenceToReference) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(SafeMatcherCastTest, FromConvertibleFromAny) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(SafeMatcherCastTest, FromLosslesslyConvertibleArithmeticType) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(SafeMatcherCastTest, FromNonReferenceToConstReference) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(SafeMatcherCastTest, FromNonReferenceToReference) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(SafeMatcherCastTest, FromPolymorphicMatcher) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(SafeMatcherCastTest, FromSameType) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(SafeMatcherCastTest, ValueIsNotCopied) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(SizeIsTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(SizeIsTest, ExplainsResult) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(SizeIsTest, ImplementsSizeIs) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(SizeIsTest, WorksWithMap) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(SizeIsTest, WorksWithReferences) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(StartsWithTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(StartsWithTest, MatchesStringWithGivenPrefix) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(StdWideEndsWithTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(StdWideEndsWithTest, MatchesStringWithGivenSuffix) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(StdWideHasSubstrTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(StdWideHasSubstrTest, WorksForCStrings) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(StdWideHasSubstrTest, WorksForStringClasses) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(StdWideStartsWithTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(StdWideStartsWithTest, MatchesStringWithGivenPrefix) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(StdWideStrCaseEqTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(StdWideStrCaseEqTest, MatchesEqualStringIgnoringCase) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(StdWideStrCaseEqTest, MatchesEqualStringWith0IgnoringCase) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(StdWideStrCaseNeTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(StdWideStrCaseNeTest, MatchesUnequalStringIgnoringCase) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(StdWideStrEqTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(StdWideStrEqTest, MatchesEqual) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(StdWideStrNeTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(StdWideStrNeTest, MatchesUnequalString) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(StrCaseEqTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(StrCaseEqTest, MatchesEqualStringIgnoringCase) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(StrCaseEqTest, MatchesEqualStringWith0IgnoringCase) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(StrCaseNeTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(StrCaseNeTest, MatchesUnequalStringIgnoringCase) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(StrEqTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(StrEqTest, MatchesEqualString) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(StrNeTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(StrNeTest, MatchesUnequalString) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(StreamlikeTest, Iteration) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(StringMatcherTest, CanBeImplicitlyConstructedFromCStringLiteral) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(StringMatcherTest, CanBeImplicitlyConstructedFromString) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(StringPieceMatcherTest, CanBeImplicitlyConstructedFromCStringLiteral) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(StringPieceMatcherTest, CanBeImplicitlyConstructedFromString) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(StringPieceMatcherTest, CanBeImplicitlyConstructedFromStringPiece) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(TrulyTest, CanBeUsedWithFunctor) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(TrulyTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(TrulyTest, MatchesWhatSatisfiesThePredicate) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(TrulyTest, PredicateCanReturnAClassConvertibleToBool) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(TrulyTest, WorksForByRefArguments) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(TypedEqTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(TypedEqTest, ChecksEqualityForGivenType) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(TypedEqTest, HasSpecifiedType) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(UnderscoreTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(UnderscoreTest, MatchesAnyValue) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(UnorderedElementsAreArrayTest, SucceedsWhenExpected) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(UnorderedElementsAreArrayTest, TakesInitializerList) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(UnorderedElementsAreArrayTest, TakesInitializerListOfCStrings) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(UnorderedElementsAreArrayTest, TakesInitializerListOfSameTypedMatchers) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(UnorderedElementsAreArrayTest, TakesStlContainer) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(UnorderedElementsAreArrayTest, VectorBool) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(UnorderedElementsAreArrayTest, WorksForStreamlike) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(UnorderedElementsAreArrayTest,$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(UnorderedPointwiseTest, AcceptsCorrectContentInDifferentOrder) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(UnorderedPointwiseTest, AcceptsCorrectContentInSameOrder) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(UnorderedPointwiseTest, AllowsMonomorphicInnerMatcher) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(UnorderedPointwiseTest, DescribesSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(UnorderedPointwiseTest, MakesCopyOfRhs) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(UnorderedPointwiseTest, RejectsWrongContent) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(UnorderedPointwiseTest, RejectsWrongSize) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(UnorderedPointwiseTest, WorksForLhsNativeArray) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(UnorderedPointwiseTest, WorksForRhsInitializerList) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(UnorderedPointwiseTest, WorksForRhsNativeArray) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ValueTest, WorksWithMonomorphicMatcher) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(ValueTest, WorksWithPolymorphicMatcher) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(WhenDynamicCastToTest, AlreadyNull) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(WhenDynamicCastToTest, AmbiguousCast) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(WhenDynamicCastToTest, BadReference) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(WhenDynamicCastToTest, Describe) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(WhenDynamicCastToTest, Explain) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(WhenDynamicCastToTest, GoodReference) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(WhenDynamicCastToTest, SameType) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(WhenDynamicCastToTest, WrongTypes) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(WhenSortedByTest, CanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(WhenSortedByTest, ExplainsMatchResult) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(WhenSortedByTest, WorksForEmptyContainer) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(WhenSortedByTest, WorksForNativeArray) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(WhenSortedByTest, WorksForNonEmptyContainer) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(WhenSortedByTest, WorksForNonVectorContainer) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(WhenSortedTest, WorksForEmptyContainer) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(WhenSortedTest, WorksForMapTypes) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(WhenSortedTest, WorksForMultiMapTypes) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(WhenSortedTest, WorksForNonEmptyContainer) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(WhenSortedTest, WorksForPolymorphicMatcher) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(WhenSortedTest, WorksForStreamlike) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(WhenSortedTest, WorksForVectorConstRefMatcher) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST(WhenSortedTest, WorksForVectorConstRefMatcherOnStreamlike) {$/;"	f	namespace:testing::gmock_matchers_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(DeleteArgActionTest, OneArg) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(DeleteArgActionTest, TenArgs) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(InvokeMethodTest, Binary) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(InvokeMethodTest, MethodThatTakes10Arguments) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(InvokeMethodTest, MethodThatTakes4Arguments) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(InvokeMethodTest, MethodThatTakes5Arguments) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(InvokeMethodTest, MethodThatTakes6Arguments) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(InvokeMethodTest, MethodThatTakes7Arguments) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(InvokeMethodTest, MethodThatTakes8Arguments) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(InvokeMethodTest, MethodThatTakes9Arguments) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(InvokeMethodTest, MethodWithCompatibleType) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(InvokeMethodTest, Nullary) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(InvokeMethodTest, Ternary) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(InvokeMethodTest, Unary) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(InvokeTest, Binary) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(InvokeTest, FunctionThatTakes10Arguments) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(InvokeTest, FunctionThatTakes4Arguments) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(InvokeTest, FunctionThatTakes5Arguments) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(InvokeTest, FunctionThatTakes6Arguments) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(InvokeTest, FunctionThatTakes7Arguments) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(InvokeTest, FunctionThatTakes8Arguments) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(InvokeTest, FunctionThatTakes9Arguments) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(InvokeTest, FunctionWithCompatibleType) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(InvokeTest, FunctionWithUnusedParameters) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(InvokeTest, Functor) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(InvokeTest, MethodWithUnusedParameters) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(InvokeTest, Nullary) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(InvokeTest, Ternary) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(InvokeTest, Unary) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(ReturnArgActionTest, WorksForMultiArgBoolArg0) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(ReturnArgActionTest, WorksForMultiArgStringArg2) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(ReturnArgActionTest, WorksForOneArgIntArg0) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(ReturnPointeeTest, Works) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(SaveArgActionTest, WorksForCompatibleType) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(SaveArgActionTest, WorksForSameType) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(SaveArgPointeeActionTest, WorksForCompatibleType) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(SaveArgPointeeActionTest, WorksForLinkedPtr) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(SaveArgPointeeActionTest, WorksForSameType) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(SetArgRefereeActionTest, WorksForCompatibleType) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(SetArgRefereeActionTest, WorksForSameType) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(SetArgRefereeActionTest, WorksWithExtraArguments) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(SetArrayArgumentTest, SetsTheNthArray) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(SetArrayArgumentTest, SetsTheNthArrayWithConvertibleType) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(SetArrayArgumentTest, SetsTheNthArrayWithEmptyRange) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(SetArrayArgumentTest, SetsTheNthArrayWithIteratorArgument) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(ThrowActionTest, ThrowsGivenExceptionInNonVoidFunction) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(ThrowActionTest, ThrowsGivenExceptionInNullaryFunction) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(ThrowActionTest, ThrowsGivenExceptionInVoidFunction) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(WithArgTest, OneArg) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^TEST(WithoutArgsTest, NoArg) {$/;"	f	namespace:testing::gmock_more_actions_test
TEST	src/tests/googletest/googlemock/test/gmock-nice-strict_test.cc	/^TEST(NaggyMockTest, AcceptsClassNamedMock) {$/;"	f	namespace:testing::gmock_nice_strict_test
TEST	src/tests/googletest/googlemock/test/gmock-nice-strict_test.cc	/^TEST(NaggyMockTest, AllowsExpectedCall) {$/;"	f	namespace:testing::gmock_nice_strict_test
TEST	src/tests/googletest/googlemock/test/gmock-nice-strict_test.cc	/^TEST(NaggyMockTest, NonDefaultConstructor) {$/;"	f	namespace:testing::gmock_nice_strict_test
TEST	src/tests/googletest/googlemock/test/gmock-nice-strict_test.cc	/^TEST(NaggyMockTest, NonDefaultConstructor10) {$/;"	f	namespace:testing::gmock_nice_strict_test
TEST	src/tests/googletest/googlemock/test/gmock-nice-strict_test.cc	/^TEST(NaggyMockTest, UnexpectedCallFails) {$/;"	f	namespace:testing::gmock_nice_strict_test
TEST	src/tests/googletest/googlemock/test/gmock-nice-strict_test.cc	/^TEST(NaggyMockTest, WarningForUninterestingCall) {$/;"	f	namespace:testing::gmock_nice_strict_test
TEST	src/tests/googletest/googlemock/test/gmock-nice-strict_test.cc	/^TEST(NaggyMockTest, WarningForUninterestingCallAfterDeath) {$/;"	f	namespace:testing::gmock_nice_strict_test
TEST	src/tests/googletest/googlemock/test/gmock-nice-strict_test.cc	/^TEST(NiceMockTest, AcceptsClassNamedMock) {$/;"	f	namespace:testing::gmock_nice_strict_test
TEST	src/tests/googletest/googlemock/test/gmock-nice-strict_test.cc	/^TEST(NiceMockTest, AllowsExpectedCall) {$/;"	f	namespace:testing::gmock_nice_strict_test
TEST	src/tests/googletest/googlemock/test/gmock-nice-strict_test.cc	/^TEST(NiceMockTest, InfoForUninterestingCall) {$/;"	f	namespace:testing::gmock_nice_strict_test
TEST	src/tests/googletest/googlemock/test/gmock-nice-strict_test.cc	/^TEST(NiceMockTest, NoWarningForUninterestingCall) {$/;"	f	namespace:testing::gmock_nice_strict_test
TEST	src/tests/googletest/googlemock/test/gmock-nice-strict_test.cc	/^TEST(NiceMockTest, NoWarningForUninterestingCallAfterDeath) {$/;"	f	namespace:testing::gmock_nice_strict_test
TEST	src/tests/googletest/googlemock/test/gmock-nice-strict_test.cc	/^TEST(NiceMockTest, NonDefaultConstructor) {$/;"	f	namespace:testing::gmock_nice_strict_test
TEST	src/tests/googletest/googlemock/test/gmock-nice-strict_test.cc	/^TEST(NiceMockTest, NonDefaultConstructor10) {$/;"	f	namespace:testing::gmock_nice_strict_test
TEST	src/tests/googletest/googlemock/test/gmock-nice-strict_test.cc	/^TEST(NiceMockTest, UnexpectedCallFails) {$/;"	f	namespace:testing::gmock_nice_strict_test
TEST	src/tests/googletest/googlemock/test/gmock-nice-strict_test.cc	/^TEST(RawMockTest, InfoForUninterestingCall) {$/;"	f	namespace:testing::gmock_nice_strict_test
TEST	src/tests/googletest/googlemock/test/gmock-nice-strict_test.cc	/^TEST(RawMockTest, WarningForUninterestingCall) {$/;"	f	namespace:testing::gmock_nice_strict_test
TEST	src/tests/googletest/googlemock/test/gmock-nice-strict_test.cc	/^TEST(RawMockTest, WarningForUninterestingCallAfterDeath) {$/;"	f	namespace:testing::gmock_nice_strict_test
TEST	src/tests/googletest/googlemock/test/gmock-nice-strict_test.cc	/^TEST(StrictMockTest, AcceptsClassNamedMock) {$/;"	f	namespace:testing::gmock_nice_strict_test
TEST	src/tests/googletest/googlemock/test/gmock-nice-strict_test.cc	/^TEST(StrictMockTest, AllowsExpectedCall) {$/;"	f	namespace:testing::gmock_nice_strict_test
TEST	src/tests/googletest/googlemock/test/gmock-nice-strict_test.cc	/^TEST(StrictMockTest, NonDefaultConstructor) {$/;"	f	namespace:testing::gmock_nice_strict_test
TEST	src/tests/googletest/googlemock/test/gmock-nice-strict_test.cc	/^TEST(StrictMockTest, NonDefaultConstructor10) {$/;"	f	namespace:testing::gmock_nice_strict_test
TEST	src/tests/googletest/googlemock/test/gmock-nice-strict_test.cc	/^TEST(StrictMockTest, UnexpectedCallFails) {$/;"	f	namespace:testing::gmock_nice_strict_test
TEST	src/tests/googletest/googlemock/test/gmock-nice-strict_test.cc	/^TEST(StrictMockTest, UninterestingCallFails) {$/;"	f	namespace:testing::gmock_nice_strict_test
TEST	src/tests/googletest/googlemock/test/gmock-nice-strict_test.cc	/^TEST(StrictMockTest, UninterestingCallFailsAfterDeath) {$/;"	f	namespace:testing::gmock_nice_strict_test
TEST	src/tests/googletest/googlemock/test/gmock-port_test.cc	/^TEST(DummyTest, Dummy) {}$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(AfterTest, AcceptsDuplicatedInput) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(AfterTest, AcceptsUpToFiveArguments) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(AfterTest, CallsMustBeInStrictOrderWhenSpecifiedSo1) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(AfterTest, CallsMustBeInStrictOrderWhenSpecifiedSo2) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(AfterTest, CallsMustSatisfyPartialOrderWhenSpecifiedSo) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(AfterTest, CallsMustSatisfyPartialOrderWhenSpecifiedSo2) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(AfterTest, CanBeCalledManyTimes) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(AfterTest, CanBeUsedWithInSequence) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(AfterTest, ChangesToExpectationSetHaveNoEffectAfterwards) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(AfterTest, SucceedsWhenPartialOrderIsSatisfied) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(AfterTest, SucceedsWhenTotalOrderIsSatisfied) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(AllowLeakTest, AllowsLeakingUnusedMockObject) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(AllowLeakTest, CanBeCalledAfterExpectCall) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(AllowLeakTest, CanBeCalledAfterOnCall) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(AllowLeakTest, CanBeCalledBeforeExpectCall) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(AllowLeakTest, CanBeCalledBeforeOnCall) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(AllowLeakTest, WorksWhenBothOnCallAndExpectCallArePresent) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(DeletingMockEarlyTest, CanDeleteSelfInActionReturningValue) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(DeletingMockEarlyTest, CanDeleteSelfInActionReturningVoid) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(DeletingMockEarlyTest, Failure1) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(DeletingMockEarlyTest, Failure2) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(DeletingMockEarlyTest, Success1) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(DeletingMockEarlyTest, Success2) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExcessiveCallTest, DoesDefaultAction) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExcessiveCallTest, GeneratesFailureForNonVoidFunction) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExcessiveCallTest, GeneratesFailureForVoidFunction) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectCallSyntaxTest, AfterMustBeBeforeWillOnce) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectCallSyntaxTest, CompilesWithMethodNameExpandedFromMacro) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectCallSyntaxTest, DefaultCardinalityIsOnce) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectCallSyntaxTest, DoesNotWarnOnAdequateActionCount) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectCallSyntaxTest, EvaluatesFirstArgumentOnce) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectCallSyntaxTest, EvaluatesSecondArgumentOnce) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectCallSyntaxTest, InSequenceCanAppearMultipleTimes) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectCallSyntaxTest, InSequenceIsOptional) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectCallSyntaxTest, InSequenceMustBeBeforeAfter) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectCallSyntaxTest, InSequenceMustBeBeforeWillOnce) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectCallSyntaxTest, RetiresOnSaturationCannotAppearMultipleTimes) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectCallSyntaxTest, RetiresOnSaturationIsOptional) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectCallSyntaxTest, TimesCanAppearAtMostOnce) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectCallSyntaxTest, TimesCanBeInferred) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectCallSyntaxTest, TimesMustBeBeforeInSequence) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectCallSyntaxTest, WarnsOnTooFewActions) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectCallSyntaxTest, WarnsOnTooManyActions) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectCallSyntaxTest, WillCanAppearMultipleTimes) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectCallSyntaxTest, WillIsOptional) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectCallSyntaxTest, WillMustBeBeforeWillRepeatedly) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectCallSyntaxTest, WillRepeatedlyCannotAppearMultipleTimes) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectCallSyntaxTest, WillRepeatedlyIsOptional) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectCallSyntaxTest, WillRepeatedlyMustBeBeforeRetiresOnSaturation) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectCallSyntaxTest, WithCanAppearAtMostOnce) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectCallSyntaxTest, WithIsOptional) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectCallSyntaxTest, WithMustBeFirstClause) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectCallSyntaxTest, WorksWithMethodNameExpandedFromMacro) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectCallTest, AllowsAnyCallWhenNoSpec) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectCallTest, CatchesTooFewCalls) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectCallTest, InfersCardinality1WhenThereIsWillRepeatedly) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectCallTest, InfersCardinalityWhenThereIsNoWillRepeatedly) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectCallTest, NthMatchTakesNthAction) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectCallTest, PicksLastMatchingExpectCall) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectCallTest, TakesDefaultActionWhenWillListIsExhausted) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectCallTest, TakesRepeatedActionWhenWillListIsExhausted) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectationBaseTest,$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectationSetTest, AssignmentWorks) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectationSetTest, ConstructorsWork) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectationSetTest, InsertionWorks) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectationSetTest, IsEnumerable) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectationSetTest, MemberTypesAreCorrect) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectationSetTest, SizeWorks) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectationTest, AssignmentWorks) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(ExpectationTest, ConstrutorsWork) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(FunctionCallMessageTest,$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(FunctionMockerMessageTest, ReportsExpectCallLocationForExhausedActions) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(FunctionMockerMessageTest,$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(InSequenceTest, AllExpectationInScopeAreInSequence) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(InSequenceTest, ExpectationsOutOfScopeAreNotAffected) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(InSequenceTest, NestedInSequence) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(MockMethodTest, CanInstantiateWithIncompleteArgType) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(OnCallSyntaxTest, CompilesWithMethodNameExpandedFromMacro) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(OnCallSyntaxTest, EvaluatesFirstArgumentOnce) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(OnCallSyntaxTest, EvaluatesSecondArgumentOnce) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(OnCallSyntaxTest, WillByDefaultCanAppearAtMostOnce) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(OnCallSyntaxTest, WillByDefaultIsMandatory) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(OnCallSyntaxTest, WithCanAppearAtMostOnce) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(OnCallSyntaxTest, WithIsOptional) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(OnCallSyntaxTest, WorksWithMethodNameExpandedFromMacro) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(OnCallTest, PicksLastMatchingOnCall) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(OnCallTest, TakesBuiltInDefaultActionWhenNoOnCall) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(OnCallTest, TakesBuiltInDefaultActionWhenNoOnCallMatches) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(SequenceTest, AnyOrderIsOkByDefault) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(SequenceTest, CallsMustBeInStrictOrderWhenSaidSo1) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(SequenceTest, CallsMustBeInStrictOrderWhenSaidSo2) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(SequenceTest, Retirement) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(SynchronizationTest, CanCallMockMethodInAction) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(UndefinedReturnValueTest,$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(UnexpectedCallTest, DoesDefaultAction) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(UnexpectedCallTest, GeneartesFailureForNonVoidFunction) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(UnexpectedCallTest, GeneratesFailureForVoidFunction) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(UnexpectedCallTest, RetiredExpectation) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(UnexpectedCallTest, UnmatchedArguments) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(UnexpectedCallTest, UnsatisifiedPrerequisites) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(UninterestingCallTest, DoesDefaultAction) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(VerifyAndClearExpectationsTest, AMethodHasManyExpectations) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(VerifyAndClearExpectationsTest, AllMethodsHaveExpectations) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(VerifyAndClearExpectationsTest, CanCallManyTimes) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(VerifyAndClearExpectationsTest, NoMethodHasExpectations) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(VerifyAndClearExpectationsTest, SomeMethodsHaveExpectationsAndFail) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(VerifyAndClearExpectationsTest, SomeMethodsHaveExpectationsAndSucceed) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(VerifyAndClearTest, AMethodHasManyDefaultActions) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(VerifyAndClearTest, AllMethodsHaveDefaultActions) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(VerifyAndClearTest, CanCallManyTimes) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(VerifyAndClearTest, CanSetDefaultActionsAndExpectationsAfterwards) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(VerifyAndClearTest, Const) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(VerifyAndClearTest, DoesNotAffectOtherMockObjects) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(VerifyAndClearTest, Failure) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(VerifyAndClearTest, NoMethodHasDefaultActions) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(VerifyAndClearTest, SomeMethodsHaveDefaultActions) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(VerifyAndClearTest, Success) {$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST(VerifyAndClearTest,$/;"	f	namespace:__anon6b6cf3b20111
TEST	src/tests/googletest/googlemock/test/gmock_ex_test.cc	/^TEST(DefaultValueTest, ThrowsRuntimeErrorWhenNoDefaultValue) {$/;"	f	namespace:__anon14d5248f0111
TEST	src/tests/googletest/googlemock/test/gmock_leak_test_.cc	/^TEST(LeakTest, CatchesMultipleLeakedMockObjects) {$/;"	f	namespace:__anon357885ae0111
TEST	src/tests/googletest/googlemock/test/gmock_leak_test_.cc	/^TEST(LeakTest, LeakedMockWithExpectCallCausesFailureWhenLeakCheckingIsEnabled) {$/;"	f	namespace:__anon357885ae0111
TEST	src/tests/googletest/googlemock/test/gmock_leak_test_.cc	/^TEST(LeakTest, LeakedMockWithOnCallCausesFailureWhenLeakCheckingIsEnabled) {$/;"	f	namespace:__anon357885ae0111
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestActionMacro) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestActionP2Macro) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestActionPMacro) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestAssign) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestDoAll) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestDoDefault) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestIgnoreResult) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestInvoke) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestInvokeArgument) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestInvokeWithoutArgs) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestMatcherA) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestMatcherAllOf) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestMatcherAnyOf) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestMatcherAnything) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestMatcherCast) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestMatcherContainerEq) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestMatcherContainsRegex) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestMatcherElementsAre) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestMatcherElementsAreArray) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestMatcherField) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestMatcherIsNull) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestMatcherMatchesRegex) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestMatcherNot) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestMatcherNotNull) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestMatcherPointee) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestMatcherProperty) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestMatcherRef) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestMatcherResultOf) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestMatcherTruly) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestMatcherTypedEq) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestMatchersEq) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestMatchersFloatingPoint) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestMatchersRelations) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestMatchersStringEquality) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestMatchersSubstrings) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestReturn) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestReturnNull) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestReturnRef) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestReturnVoid) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestSetArgPointee) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestSetArrayArgument) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestSetErrnoAndReturn) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestThrow) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestWithArg) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestWithArgs) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_link_test.h	/^TEST(LinkTest, TestWithoutArgs) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_stress_test.cc	/^TEST(StressTest, CanUseGMockWithThreads) {$/;"	f	namespace:testing::__anonc83180760111
TEST	src/tests/googletest/googlemock/test/gmock_test.cc	/^TEST(FlagTest, IsAccessibleInCode) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_test.cc	/^TEST(InitGoogleMockTest, ParsesEmptyCommandLine) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_test.cc	/^TEST(InitGoogleMockTest, ParsesGoogleMockFlagAndUnrecognizedFlag) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_test.cc	/^TEST(InitGoogleMockTest, ParsesInvalidCommandLine) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_test.cc	/^TEST(InitGoogleMockTest, ParsesSingleFlag) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_test.cc	/^TEST(InitGoogleMockTest, ParsesUnrecognizedFlag) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_test.cc	/^TEST(WideInitGoogleMockTest, ParsesEmptyCommandLine) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_test.cc	/^TEST(WideInitGoogleMockTest, ParsesGoogleMockFlagAndUnrecognizedFlag) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_test.cc	/^TEST(WideInitGoogleMockTest, ParsesInvalidCommandLine) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_test.cc	/^TEST(WideInitGoogleMockTest, ParsesSingleFlag) {$/;"	f
TEST	src/tests/googletest/googlemock/test/gmock_test.cc	/^TEST(WideInitGoogleMockTest, ParsesUnrecognizedFlag) {$/;"	f
TEST	src/tests/googletest/googletest/include/gtest/gtest.h	/^# define TEST(test_case_name, test_name) GTEST_TEST(/;"	d
TEST	src/tests/googletest/googletest/samples/sample10_unittest.cc	/^TEST(ListenersTest, DoesNotLeak) {$/;"	f	namespace:__anona6935d300111
TEST	src/tests/googletest/googletest/samples/sample10_unittest.cc	/^TEST(ListenersTest, LeaksWater) {$/;"	f	namespace:__anona6935d300111
TEST	src/tests/googletest/googletest/samples/sample1_unittest.cc	/^TEST(FactorialTest, Negative) {$/;"	f
TEST	src/tests/googletest/googletest/samples/sample1_unittest.cc	/^TEST(FactorialTest, Positive) {$/;"	f
TEST	src/tests/googletest/googletest/samples/sample1_unittest.cc	/^TEST(FactorialTest, Zero) {$/;"	f
TEST	src/tests/googletest/googletest/samples/sample1_unittest.cc	/^TEST(IsPrimeTest, Negative) {$/;"	f
TEST	src/tests/googletest/googletest/samples/sample1_unittest.cc	/^TEST(IsPrimeTest, Positive) {$/;"	f
TEST	src/tests/googletest/googletest/samples/sample1_unittest.cc	/^TEST(IsPrimeTest, Trivial) {$/;"	f
TEST	src/tests/googletest/googletest/samples/sample2_unittest.cc	/^TEST(MyString, ConstructorFromCString) {$/;"	f
TEST	src/tests/googletest/googletest/samples/sample2_unittest.cc	/^TEST(MyString, CopyConstructor) {$/;"	f
TEST	src/tests/googletest/googletest/samples/sample2_unittest.cc	/^TEST(MyString, DefaultConstructor) {$/;"	f
TEST	src/tests/googletest/googletest/samples/sample2_unittest.cc	/^TEST(MyString, Set) {$/;"	f
TEST	src/tests/googletest/googletest/samples/sample4_unittest.cc	/^TEST(Counter, Increment) {$/;"	f
TEST	src/tests/googletest/googletest/samples/sample7_unittest.cc	/^TEST(DummyTest, ValueParameterizedTestsAreNotSupportedOnThisPlatform) {}$/;"	f
TEST	src/tests/googletest/googletest/samples/sample8_unittest.cc	/^TEST(DummyTest, CombineIsNotSupportedOnThisPlatform) {}$/;"	f
TEST	src/tests/googletest/googletest/samples/sample9_unittest.cc	/^TEST(CustomOutputTest, Fails) {$/;"	f	namespace:__anon75bdd3680111
TEST	src/tests/googletest/googletest/samples/sample9_unittest.cc	/^TEST(CustomOutputTest, PrintsMessage) {$/;"	f	namespace:__anon75bdd3680111
TEST	src/tests/googletest/googletest/samples/sample9_unittest.cc	/^TEST(CustomOutputTest, Succeeds) {$/;"	f	namespace:__anon75bdd3680111
TEST	src/tests/googletest/googletest/test/gtest-death-test_ex_test.cc	/^TEST(CxxExceptionDeathTest, ExceptionIsFailure) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-death-test_ex_test.cc	/^TEST(CxxExceptionDeathTest, PrintsMessageForStdExceptions) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-death-test_ex_test.cc	/^TEST(SehExceptionDeasTest, CatchExceptionsDoesNotInterfere) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST(AutoHandleTest, AutoHandleWorks) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST(ConditionalDeathMacrosDeathTest, ExpectsDeathWhenDeathTestsAvailable) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST(ConditionalDeathMacrosSyntaxDeathTest, SingleStatement) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST(ConditionalDeathMacrosSyntaxDeathTest, SwitchStatement) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST(ConditionalDeathMacrosTest, AssertDeatDoesNotReturnhIfUnsupported) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST(ConditionalDeathMacrosTest, WarnsWhenDeathTestsNotAvailable) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST(EnvironmentTest, HandleFitsIntoSizeT) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST(ExitStatusPredicateTest, ExitedWithCode) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST(ExitStatusPredicateTest, KilledBySignal) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST(GetLastErrnoDescription, GetLastErrnoDescriptionWorks) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST(InDeathTestChildDeathTest, ReportsDeathTestCorrectlyInFastStyle) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST(InDeathTestChildDeathTest, ReportsDeathTestCorrectlyInThreadSafeStyle) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST(NotADeathTest, Test) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST(ParseNaturalNumberTest, AcceptsTypeLimits) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST(ParseNaturalNumberTest, AcceptsValidNumbers) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST(ParseNaturalNumberTest, RejectsInvalidFormat) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST(ParseNaturalNumberTest, RejectsOverflownNumbers) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST(ParseNaturalNumberTest, WorksForShorterIntegers) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST(PopUpDeathTest, DoesNotShowPopUpOnAbort) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST(StreamingAssertionsDeathTest, DeathTest) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST(SuccessRegistrationDeathTest, NoSuccessPart) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(AssignmentOperatorTest, ConstAssignedToNonConst) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(AssignmentOperatorTest, DefaultAssignedToNonDefault) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(AssignmentOperatorTest, NonDefaultAssignedToDefault) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(ConcatPathsTest, BothPathBeingEmpty) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(ConcatPathsTest, Path1BeingEmpty) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(ConcatPathsTest, Path1ContainsPathSep) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(ConcatPathsTest, Path2BeingEmpty) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(ConcatPathsTest, Path2ContainsPathSep) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(ConcatPathsTest, Path2EndsWithPathSep) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(ConcatPathsTest, WorksWhenDirDoesNotEndWithPathSep) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(ConcatPathsTest, WorksWhenPath1EndsWithPathSep) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(DirectoryTest, CurrentDirectoryExists) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(DirectoryTest, EmptyPathDirectoryDoesNotExist) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(DirectoryTest, RootDirectoryExists) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(DirectoryTest, RootOfWrongDriveDoesNotExists) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(FilePathTest, CharAndCopyConstructors) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(FilePathTest, DefaultConstructor) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(FilePathTest, IsAbsolutePath) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(FilePathTest, IsDirectory) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(FilePathTest, IsRootDirectory) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(FilePathTest, RemoveExtension) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(FilePathTest, RemoveExtensionWhenThereIsNoExtension) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(FilePathTest, Set) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(FilePathTest, StringConstructor) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(FilePathTest, ToString) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(IsEmptyTest, ReturnsFalseForNonEmptyPath) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(IsEmptyTest, ReturnsTrueForEmptyPath) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(MakeFileNameTest, GenerateFileNameNumberGtZero) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(MakeFileNameTest, GenerateFileNameWithSlashNumberGtZero) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(MakeFileNameTest, GenerateFileNameWithSlashNumberIsZero) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(MakeFileNameTest, GenerateWhenNumberIsNotZeroAndDirIsEmpty) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(MakeFileNameTest, GenerateWhenNumberIsZero) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(MakeFileNameTest, GenerateWhenNumberIsZeroAndDirIsEmpty) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(NoDirectoryCreationTest, CreateNoDirectoriesForDefaultXmlFile) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(NormalizeTest, MixAlternateSeparatorAtStringEnd) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(NormalizeTest, MultipleConsecutiveSepaparatorsAtStringEnd) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(NormalizeTest, MultipleConsecutiveSepaparatorsAtStringStart) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(NormalizeTest, MultipleConsecutiveSepaparatorsInMidstring) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(RemoveDirectoryNameTest, ButNoDirectory) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(RemoveDirectoryNameTest, RootFileShouldGiveFileName) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(RemoveDirectoryNameTest, RootFileShouldGiveFileNameForAlternateSeparator) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(RemoveDirectoryNameTest, ShouldAlsoGiveFileName) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(RemoveDirectoryNameTest, ShouldAlsoGiveFileNameForAlternateSeparator) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(RemoveDirectoryNameTest, ShouldGiveFileName) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(RemoveDirectoryNameTest, ShouldGiveFileNameForAlternateSeparator) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(RemoveDirectoryNameTest, WhenEmptyName) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(RemoveDirectoryNameTest, WhereThereIsNoFileName) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(RemoveDirectoryNameTest, WhereThereIsNoFileNameForAlternateSeparator) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(RemoveFileNameTest, ButNoFile) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(RemoveFileNameTest, ButNoFileForAlternateSeparator) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(RemoveFileNameTest, EmptyName) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(RemoveFileNameTest, GivesDirAndSubDirName) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(RemoveFileNameTest, GivesDirAndSubDirNameForAlternateSeparator) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(RemoveFileNameTest, GivesDirName) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(RemoveFileNameTest, GivesDirNameForAlternateSeparator) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(RemoveFileNameTest, GivesRootDir) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(RemoveFileNameTest, GivesRootDirForAlternateSeparator) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(RemoveTrailingPathSeparatorTest, EmptyString) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(RemoveTrailingPathSeparatorTest, FileNoSlashString) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(RemoveTrailingPathSeparatorTest, ShouldRemoveLastSeparator) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(RemoveTrailingPathSeparatorTest, ShouldRemoveTrailingSeparator) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST(RemoveTrailingPathSeparatorTest, ShouldReturnUnmodified) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST	src/tests/googletest/googletest/test/gtest-message_test.cc	/^TEST(MessageTest, ConstructsFromCString) {$/;"	f	namespace:__anon9107e4b10111
TEST	src/tests/googletest/googletest/test/gtest-message_test.cc	/^TEST(MessageTest, CopyConstructor) {$/;"	f	namespace:__anon9107e4b10111
TEST	src/tests/googletest/googletest/test/gtest-message_test.cc	/^TEST(MessageTest, DefaultConstructor) {$/;"	f	namespace:__anon9107e4b10111
TEST	src/tests/googletest/googletest/test/gtest-message_test.cc	/^TEST(MessageTest, DoesNotTakeUpMuchStackSpace) {$/;"	f	namespace:__anon9107e4b10111
TEST	src/tests/googletest/googletest/test/gtest-message_test.cc	/^TEST(MessageTest, GetString) {$/;"	f	namespace:__anon9107e4b10111
TEST	src/tests/googletest/googletest/test/gtest-message_test.cc	/^TEST(MessageTest, StreamsBasicIoManip) {$/;"	f	namespace:__anon9107e4b10111
TEST	src/tests/googletest/googletest/test/gtest-message_test.cc	/^TEST(MessageTest, StreamsCString) {$/;"	f	namespace:__anon9107e4b10111
TEST	src/tests/googletest/googletest/test/gtest-message_test.cc	/^TEST(MessageTest, StreamsDouble) {$/;"	f	namespace:__anon9107e4b10111
TEST	src/tests/googletest/googletest/test/gtest-message_test.cc	/^TEST(MessageTest, StreamsFloat) {$/;"	f	namespace:__anon9107e4b10111
TEST	src/tests/googletest/googletest/test/gtest-message_test.cc	/^TEST(MessageTest, StreamsInt) {$/;"	f	namespace:__anon9107e4b10111
TEST	src/tests/googletest/googletest/test/gtest-message_test.cc	/^TEST(MessageTest, StreamsNULChar) {$/;"	f	namespace:__anon9107e4b10111
TEST	src/tests/googletest/googletest/test/gtest-message_test.cc	/^TEST(MessageTest, StreamsNullCString) {$/;"	f	namespace:__anon9107e4b10111
TEST	src/tests/googletest/googletest/test/gtest-message_test.cc	/^TEST(MessageTest, StreamsNullPointer) {$/;"	f	namespace:__anon9107e4b10111
TEST	src/tests/googletest/googletest/test/gtest-message_test.cc	/^TEST(MessageTest, StreamsPointer) {$/;"	f	namespace:__anon9107e4b10111
TEST	src/tests/googletest/googletest/test/gtest-message_test.cc	/^TEST(MessageTest, StreamsString) {$/;"	f	namespace:__anon9107e4b10111
TEST	src/tests/googletest/googletest/test/gtest-message_test.cc	/^TEST(MessageTest, StreamsStringWithEmbeddedNUL) {$/;"	f	namespace:__anon9107e4b10111
TEST	src/tests/googletest/googletest/test/gtest-message_test.cc	/^TEST(MessageTest, StreamsToOStream) {$/;"	f	namespace:__anon9107e4b10111
TEST	src/tests/googletest/googletest/test/gtest-options_test.cc	/^TEST(OutputFileHelpersTest, GetCurrentExecutableName) {$/;"	f	namespace:testing::internal::__anon8f60ad580111
TEST	src/tests/googletest/googletest/test/gtest-options_test.cc	/^TEST(XmlOutputTest, GetOutputFileDefault) {$/;"	f	namespace:testing::internal::__anon8f60ad580111
TEST	src/tests/googletest/googletest/test/gtest-options_test.cc	/^TEST(XmlOutputTest, GetOutputFileFromDirectoryPath) {$/;"	f	namespace:testing::internal::__anon8f60ad580111
TEST	src/tests/googletest/googletest/test/gtest-options_test.cc	/^TEST(XmlOutputTest, GetOutputFileSingleFile) {$/;"	f	namespace:testing::internal::__anon8f60ad580111
TEST	src/tests/googletest/googletest/test/gtest-options_test.cc	/^TEST(XmlOutputTest, GetOutputFormat) {$/;"	f	namespace:testing::internal::__anon8f60ad580111
TEST	src/tests/googletest/googletest/test/gtest-options_test.cc	/^TEST(XmlOutputTest, GetOutputFormatDefault) {$/;"	f	namespace:testing::internal::__anon8f60ad580111
TEST	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST(BoolTest, BoolWorks) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST(CombineTest, CombineWithFirstParameterEmptyRange) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST(CombineTest, CombineWithFirstParameterSingleValue) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST(CombineTest, CombineWithMaxNumberOfParameters) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST(CombineTest, CombineWithSecondParameterEmptyRange) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST(CombineTest, CombineWithSecondParameterSingleValue) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST(CombineTest, CombineWithThreeParameters) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST(CombineTest, CombineWithTwoParameters) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST(CompileTest, CombineIsDefinedOnlyWhenGtestHasParamTestIsDefined) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST(CustomNamingTest, CheckNameRegistry) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST(IteratorTest, ParamIteratorConformsToForwardIteratorConcept) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST(ParamGeneratorTest, AssignmentWorks) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST(RangeTest, IntRangeEmpty) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST(RangeTest, IntRangeSingleValue) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST(RangeTest, IntRangeWithCustomStep) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST(RangeTest, IntRangeWithCustomStepOverUpperBound) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST(RangeTest, IntRangeWithDefaultStep) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST(RangeTest, WorksWithACustomType) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST(RangeTest, WorksWithACustomTypeWithDifferentIncrementType) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST(ValuesInTest, ValuesInArray) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST(ValuesInTest, ValuesInConstArray) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST(ValuesInTest, ValuesInEmptyIteratorRange) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST(ValuesInTest, ValuesInIteratorRange) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST(ValuesInTest, ValuesInSingleElementArray) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST(ValuesInTest, ValuesInSingleElementIteratorRange) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST(ValuesInTest, ValuesInVector) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST(ValuesTest, ValuesWithSingleParameter) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST(ValuesTest, ValuesWorks) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST(ValuesTest, ValuesWorksForMaxLengthList) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST(ValuesTest, ValuesWorksForValuesOfCompatibleTypes) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(AtomMatchesCharTest, EscapedPunct) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(AtomMatchesCharTest, EscapedWhiteSpace) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(AtomMatchesCharTest, Escaped_D) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(AtomMatchesCharTest, Escaped_S) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(AtomMatchesCharTest, Escaped_W) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(AtomMatchesCharTest, Escaped_d) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(AtomMatchesCharTest, Escaped_s) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(AtomMatchesCharTest, Escaped_w) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(AtomMatchesCharTest, UnescapedChar) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(AtomMatchesCharTest, UnescapedDot) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(CaptureDeathTest, CannotReenterStdoutCapture) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(CaptureTest, CapturesStderr) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(CaptureTest, CapturesStdout) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(CaptureTest, CapturesStdoutAndStderr) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(FormatCompilerIndependentFileLocationTest, FormatsFileLocation) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(FormatCompilerIndependentFileLocationTest, FormatsUknownFile) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(FormatCompilerIndependentFileLocationTest, FormatsUknownFileAndLine) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(FormatCompilerIndependentFileLocationTest, FormatsUknownLine) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(FormatFileLocationTest, FormatsFileLocation) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(FormatFileLocationTest, FormatsUknownFileAndLine) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(FormatFileLocationTest, FormatsUknownLine) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(FormatFileLocationTest, FormatsUnknownFile) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(GetThreadCountTest, ReturnsCorrectValue) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(GetThreadCountTest, ReturnsZeroWhenUnableToCountThreads) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(GtestCheckDeathTest, DiesWithCorrectOutputOnFailure) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(GtestCheckDeathTest, LivesSilentlyOnSuccess) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(GtestCheckSyntaxTest, BehavesLikeASingleStatement) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(GtestCheckSyntaxTest, WorksWithSwitch) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(ImplicitCastTest, CanSelectBetweenConstAndNonConstCasrAppropriately) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(ImplicitCastTest, CanUseConstCastOperatorOnConstValues) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(ImplicitCastTest, CanUseImplicitConstructor) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(ImplicitCastTest, CanUseInheritance) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(ImplicitCastTest, CanUseNonConstCastOperator) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(ImplicitCastTest, ConvertsPointers) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(IsAsciiDigitTest, IsFalseForNonDigit) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(IsAsciiDigitTest, IsTrueForDigit) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(IsAsciiPunctTest, IsFalseForNonPunct) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(IsAsciiPunctTest, IsTrueForPunct) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(IsAsciiWhiteSpaceTest, IsFalseForNonWhiteSpace) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(IsAsciiWhiteSpaceTest, IsTrueForWhiteSpace) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(IsAsciiWordCharTest, IsFalseForNonWordChar) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(IsAsciiWordCharTest, IsTrueForDigit) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(IsAsciiWordCharTest, IsTrueForLetter) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(IsAsciiWordCharTest, IsTrueForUnderscore) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(IsInSetTest, NulCharIsNotInAnySet) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(IsInSetTest, WorksForNonNulChars) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(IsRepeatTest, IsFalseForNonRepeatChar) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(IsRepeatTest, IsTrueForRepeatChar) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(IsValidEscapeTest, IsFalseForDigit) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(IsValidEscapeTest, IsFalseForNonPrintable) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(IsValidEscapeTest, IsFalseForSomeLetter) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(IsValidEscapeTest, IsFalseForWhiteSpace) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(IsValidEscapeTest, IsTrueForPunct) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(IsValidEscapeTest, IsTrueForSomeLetter) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(IsXDigitTest, ReturnsFalseForNarrowNonAscii) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(IsXDigitTest, ReturnsFalseForWideNonAscii) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(IsXDigitTest, WorksForNarrowAscii) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(IsXDigitTest, WorksForWideAscii) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(IteratorTraitsTest, WorksForPointerToConst) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(IteratorTraitsTest, WorksForPointerToNonConst) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(IteratorTraitsTest, WorksForSTLContainerIterators) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(MatchRegexAnywhereTest, ReturnsFalseWhenNoMatch) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(MatchRegexAnywhereTest, ReturnsFalseWhenStringIsNull) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(MatchRegexAnywhereTest, ReturnsTrueWhenMatchingNonPrefix) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(MatchRegexAnywhereTest, ReturnsTrueWhenMatchingPrefix) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(MatchRegexAnywhereTest, WorksWhenRegexStartsWithCaret) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(MatchRegexAtHeadTest, MatchesSequentially) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(MatchRegexAtHeadTest, ReturnsTrueForEmptyRegex) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(MatchRegexAtHeadTest, WorksWhenDollarIsInRegex) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(MatchRegexAtHeadTest, WorksWhenRegexStartsWithEscapeSequence) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(MatchRegexAtHeadTest, WorksWhenRegexStartsWithRepetition) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(MatchRegexAtHeadTest,$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(MatchRepetitionAndRegexAtHeadTest, WorksForOneOrMany) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(MatchRepetitionAndRegexAtHeadTest, WorksForZeroOrMany) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(MatchRepetitionAndRegexAtHeadTest, WorksForZeroOrOne) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(MutexDeathTest, AssertHeldShouldAssertWhenNotLocked) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(MutexTest, AssertHeldShouldNotAssertWhenLocked) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(MutexTest, OnlyOneThreadCanLockAtATime) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(RETest, FullMatchWorks) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(RETest, ImplicitConstructorWorks) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(RETest, PartialMatchWorks) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(RETest, RejectsInvalidRegex) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(RegexEngineSelectionTest, SelectsCorrectRegexEngine) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(ScopedPtrTest, DefinesElementType) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(ThreadLocalTest, DefaultConstructorInitializesToDefaultValues) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(ThreadLocalTest, DestroysManagedObjectAtThreadExit) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(ThreadLocalTest, DestroysManagedObjectForOwnThreadWhenDying) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(ThreadLocalTest, GetAndPointerReturnSameValue) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(ThreadLocalTest, ParameterizedConstructorSetsDefault) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(ThreadLocalTest, PointerAndConstPointerReturnSameValue) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(ThreadLocalTest, SingleParamConstructorInitializesToParam) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(ThreadLocalTest, ThreadLocalMutationsAffectOnlyCurrentThread) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(ThreadLocalTest, ValueDefaultContructorIsNotRequiredForParamVersion) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(ThreadWithParamTest, ConstructorExecutesThreadFunc) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(ValidateRegexTest, GeneratesFailureAndReturnsFalseForInvalid) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(ValidateRegexTest, ReturnsTrueForValid) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(WindowsTypesTest, CRITICAL_SECTIONIs_RTL_CRITICAL_SECTION) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(WindowsTypesTest, HANDLEIsVoidStar) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TEST(WindowsTypesTest, _CRITICAL_SECTIONIs_CRITICAL_SECTION) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(FormatForComparisonFailureMessageTest, FormatsNonCharArrayAsPointer) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(FormatForComparisonFailureMessageTest, WorksForCharArrayVsCharArray) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(FormatForComparisonFailureMessageTest, WorksForCharArrayVsPointer) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(FormatForComparisonFailureMessageTest, WorksForCharArrayVsStdString) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(FormatForComparisonFailureMessageTest, WorksForCharArrayVsString) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(FormatForComparisonFailureMessageTest, WorksForCharPointerVsPointer) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(FormatForComparisonFailureMessageTest, WorksForCharPointerVsStdString) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(FormatForComparisonFailureMessageTest, WorksForCharPointerVsString) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(FormatForComparisonFailureMessageTest, WorksForNonCharPointer) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(FormatForComparisonFailureMessageTest, WorksForScalar) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(FormatForComparisonFailureMessageTest, WorksForWCharArrayVsPointer) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(FormatForComparisonFailureMessageTest, WorksForWCharArrayVsStdWString) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(FormatForComparisonFailureMessageTest, WorksForWCharArrayVsWCharArray) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(FormatForComparisonFailureMessageTest, WorksForWCharArrayVsWString) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(FormatForComparisonFailureMessageTest, WorksForWCharPointerVsPointer) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(FormatForComparisonFailureMessageTest, WorksForWCharPointerVsStdWString) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(FormatForComparisonFailureMessageTest, WorksForWCharPointerVsWString) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintArrayTest, BigArray) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintArrayTest, CharArrayWithNoTerminatingNul) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintArrayTest, ConstArray) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintArrayTest, ConstCharArrayWithTerminatingNul) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintArrayTest, ObjectArray) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintArrayTest, OneDimensionalArray) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintArrayTest, TwoDimensionalArray) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintArrayTest, WCharArrayWithNoTerminatingNul) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintArrayTest, WConstCharArrayWithTerminatingNul) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintBuiltInTypeTest, Bool) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintBuiltInTypeTest, FloatingPoints) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintBuiltInTypeTest, Integer) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintBuiltInTypeTest, Size_t) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintBuiltInTypeTest, Wchar_t) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintCStringTest, Const) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintCStringTest, EscapesProperly) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintCStringTest, NonConst) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintCStringTest, Null) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintCharPointerTest, ConstSignedChar) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintCharPointerTest, ConstUnsignedChar) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintCharPointerTest, SignedChar) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintCharPointerTest, UnsignedChar) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintCharTest, PlainChar) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintCharTest, SignedChar) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintCharTest, UnsignedChar) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintClassTest, BiggestIntConvertible) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintEnumTest, AnonymousEnum) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintEnumTest, EnumWithPrintTo) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintEnumTest, EnumWithStreaming) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintEnumTest, EnumWithoutPrinter) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintPointerTest, MemberFunctionPointer) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintPointerTest, MemberVariablePointer) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintPointerTest, NonMemberFunctionPointer) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintPointerToBuiltInTypeTest, Bool) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintPointerToBuiltInTypeTest, ConstVoid) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintPointerToBuiltInTypeTest, Void) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintPointerToPointerTest, IntPointerPointer) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintPrintableTypeTest, InUserNamespace) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintPrintableTypeTest, PointerInUserNamespace) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintPrintableTypeTest, TemplateInUserNamespace) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintReferenceTest, HandlesFunctionPointer) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintReferenceTest, HandlesMemberFunctionPointer) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintReferenceTest, HandlesMemberVariablePointer) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintReferenceTest, PrintsAddressAndValue) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintStdTupleTest, NestedTuple) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintStdTupleTest, VariousSizes) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintStlContainerTest, ConstIterator) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintStlContainerTest, EmptyDeque) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintStlContainerTest, HashMultiMap) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintStlContainerTest, HashMultiSet) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintStlContainerTest, HashSet) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintStlContainerTest, Iterator) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintStlContainerTest, List) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintStlContainerTest, LongSequence) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintStlContainerTest, Map) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintStlContainerTest, MultiMap) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintStlContainerTest, MultiSet) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintStlContainerTest, NestedContainer) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintStlContainerTest, NonEmptyDeque) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintStlContainerTest, OneDimensionalNativeArray) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintStlContainerTest, OneElementHashMap) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintStlContainerTest, Pair) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintStlContainerTest, Set) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintStlContainerTest, SinglyLinkedList) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintStlContainerTest, TwoDimensionalNativeArray) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintStlContainerTest, Vector) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintStreamableTypeTest, InGlobalNamespace) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintStreamableTypeTest, TemplateTypeInUserNamespace) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintStringPieceTest, SimpleStringPiece) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintStringPieceTest, UnprintableCharacters) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintStringTest, StringAmbiguousHex) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintStringTest, StringInGlobalNamespace) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintStringTest, StringInStdNamespace) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintToStringTest, EscapesForPointerToConstChar) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintToStringTest, EscapesForPointerToNonConstChar) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintToStringTest, WorksForArray) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintToStringTest, WorksForCharArray) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintToStringTest, WorksForCharArrayWithEmbeddedNul) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintToStringTest, WorksForPointerToConstChar) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintToStringTest, WorksForPointerToNonConstChar) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintToStringTest, WorksForScalar) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintTr1TupleTest, NestedTuple) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintTr1TupleTest, VariousSizes) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintTypeSizeTest, Wchar_t) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintTypeWithGenericStreamingTest, NonTemplateType) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintTypeWithGenericStreamingTest, TemplateType) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintTypeWithGenericStreamingTest, TypeImplicitlyConvertible) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintUnprintableTypeTest, InGlobalNamespace) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintUnprintableTypeTest, InUserNamespace) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintUnpritableTypeTest, BigObject) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintWideCStringTest, Const) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintWideCStringTest, EscapesProperly) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintWideCStringTest, NonConst) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintWideCStringTest, Null) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintWideStringTest, StringAmbiguousHex) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintWideStringTest, StringInGlobalNamespace) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(PrintWideStringTest, StringInStdNamespace) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(UniversalPrintTest, WorksForCString) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(UniversalPrintTest, WorksForCharArray) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(UniversalPrintTest, WorksForNonReference) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(UniversalPrintTest, WorksForReference) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(UniversalTersePrintTest, WorksForCString) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(UniversalTersePrintTest, WorksForNonReference) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(UniversalTersePrintTest, WorksForReference) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(UniversalTersePrintTupleFieldsToStringsTestWithStd, PrintsEmptyTuple) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(UniversalTersePrintTupleFieldsToStringsTestWithStd, PrintsOneTuple) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(UniversalTersePrintTupleFieldsToStringsTestWithStd, PrintsTersely) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(UniversalTersePrintTupleFieldsToStringsTestWithStd, PrintsTwoTuple) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(UniversalTersePrintTupleFieldsToStringsTestWithTr1, PrintsEmptyTuple) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(UniversalTersePrintTupleFieldsToStringsTestWithTr1, PrintsOneTuple) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(UniversalTersePrintTupleFieldsToStringsTestWithTr1, PrintsTersely) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^TEST(UniversalTersePrintTupleFieldsToStringsTestWithTr1, PrintsTwoTuple) {$/;"	f	namespace:testing::gtest_printers_test
TEST	src/tests/googletest/googletest/test/gtest-tuple_test.cc	/^TEST(ComparisonTest, ComparesEqualTuples) {$/;"	f	namespace:__anona47613760111
TEST	src/tests/googletest/googletest/test/gtest-tuple_test.cc	/^TEST(ComparisonTest, ComparesUnequalTuplesWithReferenceFields) {$/;"	f	namespace:__anona47613760111
TEST	src/tests/googletest/googletest/test/gtest-tuple_test.cc	/^TEST(ComparisonTest, ComparesUnequalTuplesWithoutReferenceFields) {$/;"	f	namespace:__anona47613760111
TEST	src/tests/googletest/googletest/test/gtest-tuple_test.cc	/^TEST(ComparisonTest, ComparesWithSelf) {$/;"	f	namespace:__anona47613760111
TEST	src/tests/googletest/googletest/test/gtest-tuple_test.cc	/^TEST(MakeTupleTest, WorksForPointers) {$/;"	f	namespace:__anona47613760111
TEST	src/tests/googletest/googletest/test/gtest-tuple_test.cc	/^TEST(MakeTupleTest, WorksForScalarTypes) {$/;"	f	namespace:__anona47613760111
TEST	src/tests/googletest/googletest/test/gtest-tuple_test.cc	/^TEST(ReferenceFieldTest, IsAliasOfReferencedVariable) {$/;"	f	namespace:__anona47613760111
TEST	src/tests/googletest/googletest/test/gtest-tuple_test.cc	/^TEST(TupleAssignmentTest, AssignsFromPair) {$/;"	f	namespace:__anona47613760111
TEST	src/tests/googletest/googletest/test/gtest-tuple_test.cc	/^TEST(TupleAssignmentTest, AssignsToDifferentTupleType) {$/;"	f	namespace:__anona47613760111
TEST	src/tests/googletest/googletest/test/gtest-tuple_test.cc	/^TEST(TupleAssignmentTest, AssignsToSameTupleType) {$/;"	f	namespace:__anona47613760111
TEST	src/tests/googletest/googletest/test/gtest-tuple_test.cc	/^TEST(TupleConstructorTest, ConstructsFromDifferentTupleType) {$/;"	f	namespace:__anona47613760111
TEST	src/tests/googletest/googletest/test/gtest-tuple_test.cc	/^TEST(TupleConstructorTest, ConstructsFromFields) {$/;"	f	namespace:__anona47613760111
TEST	src/tests/googletest/googletest/test/gtest-tuple_test.cc	/^TEST(TupleConstructorTest, ConstructsFromPair) {$/;"	f	namespace:__anona47613760111
TEST	src/tests/googletest/googletest/test/gtest-tuple_test.cc	/^TEST(TupleConstructorTest, CopyConstructor) {$/;"	f	namespace:__anona47613760111
TEST	src/tests/googletest/googletest/test/gtest-tuple_test.cc	/^TEST(TupleConstructorTest, DefaultConstructorDefaultInitializesEachField) {$/;"	f	namespace:__anona47613760111
TEST	src/tests/googletest/googletest/test/gtest-tuple_test.cc	/^TEST(tuple_element_Test, ReturnsElementType) {$/;"	f	namespace:__anona47613760111
TEST	src/tests/googletest/googletest/test/gtest-tuple_test.cc	/^TEST(tuple_size_Test, ReturnsNumberOfFields) {$/;"	f	namespace:__anona47613760111
TEST	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^TEST(DummyTest, TypedTestsAreNotSupportedOnThisPlatform) {}$/;"	f
TEST	src/tests/googletest/googletest/test/gtest-unittest-api_test.cc	/^TEST(ApiTest, DISABLED_Dummy1) {}$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-unittest-api_test.cc	/^TEST(ApiTest, TestCaseDisabledAccessorsWork) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-unittest-api_test.cc	/^TEST(ApiTest, TestCaseImmutableAccessorsWork) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-unittest-api_test.cc	/^TEST(ApiTest, UnitTestImmutableAccessorsWork) {$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest-unittest-api_test.cc	/^TEST(DISABLED_Test, Dummy2) {}$/;"	f	namespace:testing::internal
TEST	src/tests/googletest/googletest/test/gtest_break_on_failure_unittest_.cc	/^TEST(Foo, Bar) {$/;"	f	namespace:__anon99f2cee50111
TEST	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^TEST(CxxExceptionTest, ThrowsNonStdCxxException) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^TEST(SehExceptionTest, ThrowsSehException) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_color_test_.cc	/^TEST(GTestColorTest, Dummy) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_env_var_test_.cc	/^TEST(GTestEnvVarTest, Dummy) {$/;"	f	namespace:testing
TEST	src/tests/googletest/googletest/test/gtest_environment_test.cc	/^TEST(FooTest, Bar) {$/;"	f	namespace:__anon7fd7f0f30111
TEST	src/tests/googletest/googletest/test/gtest_filter_unittest_.cc	/^TEST(BarTest, DISABLED_TestFive) {$/;"	f	namespace:__anon37ac2de30111
TEST	src/tests/googletest/googletest/test/gtest_filter_unittest_.cc	/^TEST(BarTest, DISABLED_TestFour) {$/;"	f	namespace:__anon37ac2de30111
TEST	src/tests/googletest/googletest/test/gtest_filter_unittest_.cc	/^TEST(BarTest, TestOne) {$/;"	f	namespace:__anon37ac2de30111
TEST	src/tests/googletest/googletest/test/gtest_filter_unittest_.cc	/^TEST(BarTest, TestThree) {$/;"	f	namespace:__anon37ac2de30111
TEST	src/tests/googletest/googletest/test/gtest_filter_unittest_.cc	/^TEST(BarTest, TestTwo) {$/;"	f	namespace:__anon37ac2de30111
TEST	src/tests/googletest/googletest/test/gtest_filter_unittest_.cc	/^TEST(BazTest, DISABLED_TestC) {$/;"	f	namespace:__anon37ac2de30111
TEST	src/tests/googletest/googletest/test/gtest_filter_unittest_.cc	/^TEST(BazTest, TestA) {$/;"	f	namespace:__anon37ac2de30111
TEST	src/tests/googletest/googletest/test/gtest_filter_unittest_.cc	/^TEST(BazTest, TestB) {$/;"	f	namespace:__anon37ac2de30111
TEST	src/tests/googletest/googletest/test/gtest_filter_unittest_.cc	/^TEST(BazTest, TestOne) {$/;"	f	namespace:__anon37ac2de30111
TEST	src/tests/googletest/googletest/test/gtest_filter_unittest_.cc	/^TEST(DISABLED_FoobarTest, DISABLED_Test2) {$/;"	f	namespace:__anon37ac2de30111
TEST	src/tests/googletest/googletest/test/gtest_filter_unittest_.cc	/^TEST(DISABLED_FoobarTest, Test1) {$/;"	f	namespace:__anon37ac2de30111
TEST	src/tests/googletest/googletest/test/gtest_filter_unittest_.cc	/^TEST(DISABLED_FoobarbazTest, TestA) {$/;"	f	namespace:__anon37ac2de30111
TEST	src/tests/googletest/googletest/test/gtest_filter_unittest_.cc	/^TEST(HasDeathTest, Test1) {$/;"	f	namespace:__anon37ac2de30111
TEST	src/tests/googletest/googletest/test/gtest_filter_unittest_.cc	/^TEST(HasDeathTest, Test2) {$/;"	f	namespace:__anon37ac2de30111
TEST	src/tests/googletest/googletest/test/gtest_help_test_.cc	/^TEST(DeathTest, UsedByPythonScriptToDetectSupportForDeathTestsInThisBinary) {}$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_help_test_.cc	/^TEST(HelpFlagTest, ShouldNotBeRun) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_list_tests_unittest_.cc	/^TEST(Abc, Def) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_list_tests_unittest_.cc	/^TEST(Abc, Xyz) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_list_tests_unittest_.cc	/^TEST(Foo, Bar1) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_list_tests_unittest_.cc	/^TEST(Foo, Bar2) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_list_tests_unittest_.cc	/^TEST(Foo, DISABLED_Bar3) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_list_tests_unittest_.cc	/^TEST(FooBar, Baz) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_list_tests_unittest_.cc	/^TEST(FooDeathTest, Test1) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_main_unittest.cc	/^TEST(GTestMainTest, ShouldSucceed) {$/;"	f	namespace:__anonf292eaa30111
TEST	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST(ADeathTest, ShouldRunFirst) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST(AddFailureAtTest, MessageContainsSpecifiedFileAndLineNumber) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST(DisabledTestsWarningTest,$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST(ExpectFatalFailureTest, CanReferenceGlobalVariables) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST(ExpectFatalFailureTest, CanReferenceLocalStaticVariables) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST(ExpectFatalFailureTest, FailsWhenStatementReturns) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST(ExpectFatalFailureTest, FailsWhenStatementThrows) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST(ExpectFatalFailureTest, FailsWhenThereAreTwoFatalFailures) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST(ExpectFatalFailureTest, FailsWhenThereIsNoFatalFailure) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST(ExpectFatalFailureTest, FailsWhenThereIsOneNonfatalFailure) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST(ExpectFatalFailureTest, SucceedsWhenThereIsOneFatalFailure) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST(ExpectNonfatalFailureTest, CanReferenceGlobalVariables) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST(ExpectNonfatalFailureTest, CanReferenceLocalVariables) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST(ExpectNonfatalFailureTest, FailsWhenStatementReturns) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST(ExpectNonfatalFailureTest, FailsWhenStatementThrows) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST(ExpectNonfatalFailureTest, FailsWhenThereAreTwoNonfatalFailures) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST(ExpectNonfatalFailureTest, FailsWhenThereIsNoNonfatalFailure) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST(ExpectNonfatalFailureTest, FailsWhenThereIsOneFatalFailure) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST(ExpectNonfatalFailureTest, SucceedsWhenThereIsOneNonfatalFailure) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST(FatalFailureTest, FatalFailureInNestedSubroutine) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST(FatalFailureTest, FatalFailureInSubroutine) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST(FatalFailureTest, NonfatalFailureInSubroutine) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST(LoggingTest, InterleavingLoggingAndAssertions) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST(NonfatalFailureTest, DiffForLongStrings) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST(NonfatalFailureTest, EscapesStringOperands) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST(PassingTest, PassingTest1) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST(PassingTest, PassingTest2) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST(SCOPED_TRACETest, CanBeNested) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST(SCOPED_TRACETest, CanBeRepeated) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST(SCOPED_TRACETest, ObeysScopes) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST(SCOPED_TRACETest, WorksConcurrently) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST(SCOPED_TRACETest, WorksInLoop) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST(SCOPED_TRACETest, WorksInSubroutine) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST(TEST_F_before_TEST_in_same_test_case, DefinedUsingTESTAndShouldFail) {}$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST(TEST_before_TEST_F_in_same_test_case, DefinedUsingTEST) {}$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_prod_test.cc	/^TEST(PrivateCodeTest, CanAccessPrivateMembers) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_repeat_test.cc	/^TEST(BarDeathTest, ThreadSafeAndFast) {$/;"	f	namespace:__anon83eb3b5f0111
TEST	src/tests/googletest/googletest/test/gtest_repeat_test.cc	/^TEST(FooTest, ShouldFail) {$/;"	f	namespace:__anon83eb3b5f0111
TEST	src/tests/googletest/googletest/test/gtest_repeat_test.cc	/^TEST(FooTest, ShouldPass) {$/;"	f	namespace:__anon83eb3b5f0111
TEST	src/tests/googletest/googletest/test/gtest_shuffle_test_.cc	/^TEST(ADeathTest, A) {}$/;"	f	namespace:__anon91ff1dea0111
TEST	src/tests/googletest/googletest/test/gtest_shuffle_test_.cc	/^TEST(ADeathTest, B) {}$/;"	f	namespace:__anon91ff1dea0111
TEST	src/tests/googletest/googletest/test/gtest_shuffle_test_.cc	/^TEST(ADeathTest, C) {}$/;"	f	namespace:__anon91ff1dea0111
TEST	src/tests/googletest/googletest/test/gtest_shuffle_test_.cc	/^TEST(B, A) {}$/;"	f	namespace:__anon91ff1dea0111
TEST	src/tests/googletest/googletest/test/gtest_shuffle_test_.cc	/^TEST(B, B) {}$/;"	f	namespace:__anon91ff1dea0111
TEST	src/tests/googletest/googletest/test/gtest_shuffle_test_.cc	/^TEST(B, C) {}$/;"	f	namespace:__anon91ff1dea0111
TEST	src/tests/googletest/googletest/test/gtest_shuffle_test_.cc	/^TEST(B, DISABLED_D) {}$/;"	f	namespace:__anon91ff1dea0111
TEST	src/tests/googletest/googletest/test/gtest_shuffle_test_.cc	/^TEST(B, DISABLED_E) {}$/;"	f	namespace:__anon91ff1dea0111
TEST	src/tests/googletest/googletest/test/gtest_shuffle_test_.cc	/^TEST(BDeathTest, A) {}$/;"	f	namespace:__anon91ff1dea0111
TEST	src/tests/googletest/googletest/test/gtest_shuffle_test_.cc	/^TEST(BDeathTest, B) {}$/;"	f	namespace:__anon91ff1dea0111
TEST	src/tests/googletest/googletest/test/gtest_shuffle_test_.cc	/^TEST(C, A) {}$/;"	f	namespace:__anon91ff1dea0111
TEST	src/tests/googletest/googletest/test/gtest_shuffle_test_.cc	/^TEST(C, B) {}$/;"	f	namespace:__anon91ff1dea0111
TEST	src/tests/googletest/googletest/test/gtest_shuffle_test_.cc	/^TEST(C, C) {}$/;"	f	namespace:__anon91ff1dea0111
TEST	src/tests/googletest/googletest/test/gtest_shuffle_test_.cc	/^TEST(C, DISABLED_D) {}$/;"	f	namespace:__anon91ff1dea0111
TEST	src/tests/googletest/googletest/test/gtest_shuffle_test_.cc	/^TEST(CDeathTest, A) {}$/;"	f	namespace:__anon91ff1dea0111
TEST	src/tests/googletest/googletest/test/gtest_shuffle_test_.cc	/^TEST(DISABLED_D, A) {}$/;"	f	namespace:__anon91ff1dea0111
TEST	src/tests/googletest/googletest/test/gtest_shuffle_test_.cc	/^TEST(DISABLED_D, DISABLED_B) {}$/;"	f	namespace:__anon91ff1dea0111
TEST	src/tests/googletest/googletest/test/gtest_sole_header_test.cc	/^TEST(NoFatalFailureTest, AssertNoFatalFailure) {$/;"	f	namespace:__anonc7051ed90111
TEST	src/tests/googletest/googletest/test/gtest_sole_header_test.cc	/^TEST(NoFatalFailureTest, ExpectNoFatalFailure) {$/;"	f	namespace:__anonc7051ed90111
TEST	src/tests/googletest/googletest/test/gtest_stress_test.cc	/^TEST(FatalFailureOnAllThreadsTest, ExpectFatalFailureOnAllThreads) {$/;"	f	namespace:testing::__anon9be581a20111
TEST	src/tests/googletest/googletest/test/gtest_stress_test.cc	/^TEST(FatalFailureTest, ExpectFatalFailureIgnoresFailuresInOtherThreads) {$/;"	f	namespace:testing::__anon9be581a20111
TEST	src/tests/googletest/googletest/test/gtest_stress_test.cc	/^TEST(NoFatalFailureTest, AssertNoFatalFailureIgnoresFailuresInOtherThreads) {$/;"	f	namespace:testing::__anon9be581a20111
TEST	src/tests/googletest/googletest/test/gtest_stress_test.cc	/^TEST(NoFatalFailureTest, ExpectNoFatalFailureIgnoresFailuresInOtherThreads) {$/;"	f	namespace:testing::__anon9be581a20111
TEST	src/tests/googletest/googletest/test/gtest_stress_test.cc	/^TEST(NonFatalFailureOnAllThreadsTest, ExpectNonFatalFailureOnAllThreads) {$/;"	f	namespace:testing::__anon9be581a20111
TEST	src/tests/googletest/googletest/test/gtest_stress_test.cc	/^TEST(NonFatalFailureTest, ExpectNonFatalFailureIgnoresFailuresInOtherThreads) {$/;"	f	namespace:testing::__anon9be581a20111
TEST	src/tests/googletest/googletest/test/gtest_stress_test.cc	/^TEST(StressTest, CanUseScopedTraceAndAssertionsInManyThreads) {$/;"	f	namespace:testing::__anon9be581a20111
TEST	src/tests/googletest/googletest/test/gtest_stress_test.cc	/^TEST(StressTest,$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_uninitialized_test_.cc	/^TEST(DummyTest, Dummy) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AddReferenceTest, AddsReference) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AddReferenceTest, DoesNotAffectReferenceType) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AddReferenceTest, MacroVersion) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ArrayAwareFindTest, WorksForOneDimensionalArray) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ArrayAwareFindTest, WorksForTwoDimensionalArray) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ArrayEqTest, WorksForDegeneratedArrays) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ArrayEqTest, WorksForOneDimensionalArrays) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ArrayEqTest, WorksForTwoDimensionalArrays) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertHelperTest, AssertHelperIsSmall) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionResultTest, CanStreamOstreamManipulators) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionResultTest, ConstructibleFromContextuallyConvertibleToBool) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionResultTest, ConstructibleFromImplicitlyConvertible) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionResultTest, ConstructionWorks) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionResultTest, CopyConstructorWorksWhenNotOptimied) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionResultTest, NegationWorks) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionResultTest, StreamingWorks) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionSyntaxTest, BasicAssertionsBehavesLikeSingleStatement) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionSyntaxTest, ExceptionAssertionsBehavesLikeSingleStatement) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionSyntaxTest, NoFatalFailureAssertionsBehavesLikeSingleStatement) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionSyntaxTest, WorksWithConst) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionSyntaxTest, WorksWithSwitch) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionTest, ASSERT_ANY_THROW) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionTest, ASSERT_EQ) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionTest, ASSERT_EQ_NULL) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionTest, ASSERT_FALSE) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionTest, ASSERT_GE) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionTest, ASSERT_GT) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionTest, ASSERT_LE) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionTest, ASSERT_LT) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionTest, ASSERT_NE) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionTest, ASSERT_NO_THROW) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionTest, ASSERT_THROW) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionTest, ASSERT_TRUE) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionTest, AnonymousEnum) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionTest, AppendUserMessage) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionTest, AssertFalseWithAssertionResult) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionTest, AssertPrecedence) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionTest, AssertTrueWithAssertionResult) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionTest, AssertWorksWithUncopyableObject) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionTest, EqFailure) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionTest, EqFailureWithDiff) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionTest, ExpectWorksWithUncopyableObject) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionTest, NamedEnum) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionTest, NonFixtureSubroutine) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionWithMessageTest, ASSERT) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionWithMessageTest, ASSERT_FALSE) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionWithMessageTest, ASSERT_FLOATING) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionWithMessageTest, ASSERT_STR) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionWithMessageTest, ASSERT_TRUE) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionWithMessageTest, EXPECT) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionWithMessageTest, FAIL) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionWithMessageTest, SUCCEED) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(AssertionWithMessageTest, WideStringMessage) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(CodeLocationForTEST, Verify) {$/;"	f	namespace:testing
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(CodePointToUtf8Test, CanEncode12To16Bits) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(CodePointToUtf8Test, CanEncode17To21Bits) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(CodePointToUtf8Test, CanEncode8To11Bits) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(CodePointToUtf8Test, CanEncodeAscii) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(CodePointToUtf8Test, CanEncodeInvalidCodePoint) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(CodePointToUtf8Test, CanEncodeNul) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ColoredOutputTest, UsesColorsWhenGTestColorFlagIsAliasOfYes) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ColoredOutputTest, UsesColorsWhenGTestColorFlagIsYes) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ColoredOutputTest, UsesColorsWhenStdoutIsTty) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ColoredOutputTest, UsesColorsWhenTermSupportsColors) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ColoredOutputTest, UsesNoColorWhenGTestColorFlagIsInvalid) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ColoredOutputTest, UsesNoColorWhenGTestColorFlagIsNo) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(CommandLineFlagsTest, CanBeAccessedInCodeOnceGTestHIsIncluded) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ComparisonAssertionTest, AcceptsUnprintableArgs) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(CompileAssertTypesEqual, CompilesWhenTypesAreEqual) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ContainerUtilityDeathTest, ShuffleRange) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ContainerUtilityTest, CountIf) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ContainerUtilityTest, ForEach) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ContainerUtilityTest, GetElementOr) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(CopyArrayTest, WorksForDegeneratedArrays) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(CopyArrayTest, WorksForOneDimensionalArrays) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(CopyArrayTest, WorksForTwoDimensionalArrays) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(DISABLED_TestCase, DISABLED_TestShouldNotRun) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(DISABLED_TestCase, TestShouldNotRun) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(DisabledTest, DISABLED_TestShouldNotRun) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(DisabledTest, NotDISABLED_TestShouldRun) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(EditDistance, TestCases) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(EqAssertionTest, Bool) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(EqAssertionTest, Char) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(EqAssertionTest, CharPointer) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(EqAssertionTest, GlobalString) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(EqAssertionTest, GlobalWideString) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(EqAssertionTest, Int) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(EqAssertionTest, OtherPointer) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(EqAssertionTest, StdString) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(EqAssertionTest, StdWideString) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(EqAssertionTest, Time_T) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(EqAssertionTest, WideChar) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(EqAssertionTest, WideCharPointer) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(EventListenerDeathTest, EventsNotForwardedInDeathTestSubprecesses) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(EventListenerTest, AppendKeepsOrder) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(EventListenerTest, RemovingDefaultResultPrinterWorks) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(EventListenerTest, RemovingDefaultXmlGeneratorWorks) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(EventListenerTest, SuppressEventForwarding) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(EventListenerTest, default_result_printer) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(EventListenerTest, default_xml_generator) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ExpectTest, ASSERT_EQ_0) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ExpectTest, ASSERT_EQ_Double) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ExpectTest, EXPECT_ANY_THROW) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ExpectTest, EXPECT_EQ) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ExpectTest, EXPECT_EQ_0) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ExpectTest, EXPECT_EQ_Double) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ExpectTest, EXPECT_EQ_NULL) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ExpectTest, EXPECT_FALSE) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ExpectTest, EXPECT_GE) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ExpectTest, EXPECT_GT) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ExpectTest, EXPECT_LE) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ExpectTest, EXPECT_LT) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ExpectTest, EXPECT_NE) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ExpectTest, EXPECT_NO_THROW) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ExpectTest, EXPECT_THROW) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ExpectTest, EXPECT_TRUE) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ExpectTest, ExpectFalseWithAssertionResult) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ExpectTest, ExpectPrecedence) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ExpectTest, ExpectTrueWithAssertionResult) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ExpectThrowTest, DoesNotGenerateUnreachableCodeWarning) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(FRIEND_TEST_Test, TEST) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(FormatTimeInMillisAsSecondsTest, FormatsNegativeNumber) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(FormatTimeInMillisAsSecondsTest, FormatsPositiveNumber) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(FormatTimeInMillisAsSecondsTest, FormatsZero) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(GTestReferenceToConstTest, Works) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(GetCurrentOsStackTraceExceptTopTest, ReturnsTheStackTrace) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(GetNextRandomSeedTest, WorksForValidInput) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(GetRandomSeedFromFlagTest, HandlesZero) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(GetRandomSeedFromFlagTest, NormalizesInvalidSeed) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(GetRandomSeedFromFlagTest, PreservesValidSeed) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(GetTestTypeIdTest, ReturnsTheSameValueInsideOrOutsideOfGoogleTest) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(GetTypeIdTest, ReturnsDifferentValuesForDifferentTypes) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(GetTypeIdTest, ReturnsSameValueForSameType) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(HRESULTAssertionTest, ASSERT_HRESULT_FAILED) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(HRESULTAssertionTest, ASSERT_HRESULT_SUCCEEDED) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(HRESULTAssertionTest, EXPECT_HRESULT_FAILED) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(HRESULTAssertionTest, EXPECT_HRESULT_SUCCEEDED) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(HRESULTAssertionTest, Streaming) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(HasFailureTest, ReturnsFalseWhenThereIsNoFailure) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(HasFailureTest, ReturnsTrueWhenThereAreFatalAndNonfatalFailures) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(HasFailureTest, ReturnsTrueWhenThereIsFatalFailure) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(HasFailureTest, ReturnsTrueWhenThereIsNonfatalFailure) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(HasFailureTest, WorksOutsideOfTestBody) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(HasFailureTest, WorksOutsideOfTestBody2) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(HasNonfatalFailureTest, ReturnsFalseWhenThereIsNoFailure) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(HasNonfatalFailureTest, ReturnsFalseWhenThereIsOnlyFatalFailure) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(HasNonfatalFailureTest, ReturnsTrueWhenThereAreFatalAndNonfatalFailures) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(HasNonfatalFailureTest, ReturnsTrueWhenThereIsNonfatalFailure) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(HasNonfatalFailureTest, WorksOutsideOfTestBody) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(HasNonfatalFailureTest, WorksOutsideOfTestBody2) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ImplicitlyConvertibleTest, ValueIsCompileTimeConstant) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ImplicitlyConvertibleTest, ValueIsFalseWhenNotConvertible) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ImplicitlyConvertibleTest, ValueIsTrueWhenConvertible) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(Int32FromEnvOrDieDeathTest, AbortsOnFailure) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(Int32FromEnvOrDieDeathTest, AbortsOnInt32Overflow) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(Int32FromEnvOrDieTest, ParsesAndReturnsValidValue) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(Int32FromGTestEnvTest, ParsesAndReturnsValidValue) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(Int32FromGTestEnvTest, ReturnsDefaultWhenValueIsInvalid) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(Int32FromGTestEnvTest, ReturnsDefaultWhenValueOverflows) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(Int32FromGTestEnvTest, ReturnsDefaultWhenVariableIsNotSet) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(IsAProtocolMessageTest, ValueIsCompileTimeConstant) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(IsAProtocolMessageTest, ValueIsFalseWhenTypeIsNotAProtocolMessage) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(IsAProtocolMessageTest, ValueIsTrueWhenTypeIsAProtocolMessage) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(IsContainerTestTest, WorksForContainer) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(IsContainerTestTest, WorksForNonContainer) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(IsNotSubstringTest, GeneratesCorrectMessageForStdString) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(IsNotSubstringTest, GeneratesCorrectMessageForWideCString) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(IsNotSubstringTest, ReturnsCorrectResultForCString) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(IsNotSubstringTest, ReturnsCorrectResultForStdWstring) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(IsNotSubstringTest, ReturnsCorrectResultForWideCString) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(IsNotSubstringTest, ReturnsCorrectResultsForStdString) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(IsSubstringTest, GeneratesCorrectMessageForCString) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(IsSubstringTest, GeneratesCorrectMessageForWstring) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(IsSubstringTest, ReturnsCorrectResultForCString) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(IsSubstringTest, ReturnsCorrectResultForStdWstring) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(IsSubstringTest, ReturnsCorrectResultForWideCString) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(IsSubstringTest, ReturnsCorrectResultsForStdString) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(MacroTest, ADD_FAILURE) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(MacroTest, ADD_FAILURE_AT) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(MacroTest, FAIL) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(MacroTest, SUCCEED) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(MessageTest, CanStreamUserTypeInGlobalNameSpace) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(MessageTest, CanStreamUserTypeInUnnamedNameSpace) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(MessageTest, CanStreamUserTypeInUserNameSpace) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(MessageTest, CanStreamUserTypeInUserNameSpaceWithStreamOperatorInGlobal) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(MessageTest, NullPointers) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(MessageTest, WideStrings) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(NativeArrayTest, ConstructorFromArrayWorks) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(NativeArrayTest, CreatesAndDeletesCopyOfArrayWhenAskedTo) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(NativeArrayTest, MethodsWork) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(NativeArrayTest, TypeMembersAreCorrect) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(NativeArrayTest, WorksForTwoDimensionalArray) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(NestedTestingNamespaceTest, Failure) {$/;"	f	namespace:my_namespace::testing
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(NestedTestingNamespaceTest, Success) {$/;"	f	namespace:my_namespace::testing
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(NullLiteralTest, IsFalseForNonNullLiterals) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(NullLiteralTest, IsTrueForNullLiterals) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ParseInt32FlagTest, ParsesAndReturnsValidValue) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ParseInt32FlagTest, ReturnsDefaultWhenValueIsInvalid) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ParseInt32FlagTest, ReturnsDefaultWhenValueOverflows) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ParseInt32FlagTest, ReturnsFalseForInvalidFlag) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(Pred1Test, SingleEvaluationOnFailure) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(Pred1Test, WithFormat) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(Pred1Test, WithoutFormat) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(PredTest, SingleEvaluationOnFailure) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(PredTest, WithFormat) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(PredTest, WithoutFormat) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(PredicateAssertionTest, AcceptsOverloadedFunction) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(PredicateAssertionTest, AcceptsTemplateFunction) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(PredicateFormatAssertionTest, AcceptsOverloadedFunction) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(PredicateFormatAssertionTest, AcceptsTemplateFunction) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(RandomDeathTest, GeneratesCrashesOnInvalidRange) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(RandomTest, GeneratesNumbersWithinRange) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(RandomTest, RepeatsWhenReseeded) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(RemoveConstTest, DoesNotAffectNonConstType) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(RemoveConstTest, MacroVersion) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(RemoveConstTest, RemovesConst) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(RemoveReferenceTest, DoesNotAffectNonReferenceType) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(RemoveReferenceTest, MacroVersion) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(RemoveReferenceTest, RemovesReference) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(RemoveReferenceToConstTest, Works) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ShouldRunTestOnShardTest, IsPartitionWhenThereAreFiveShards) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(ShouldRunTestOnShardTest, IsPartitionWhenThereIsOneShard) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(SkipPrefixTest, DoesNotSkipWhenPrefixDoesNotMatch) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(SkipPrefixTest, SkipsWhenPrefixMatches) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(StaticAssertTypeEqTest, CompilesForEqualTypes) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(StaticAssertTypeEqTest, WorksInClass) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(StreamableTest, BasicIoManip) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(StreamableTest, NULChar) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(StreamableTest, NullCharPtr) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(StreamableTest, int) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(StreamableTest, string) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(StreamableTest, stringWithEmbeddedNUL) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(StreamableToStringTest, CString) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(StreamableToStringTest, NullCString) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(StreamableToStringTest, NullPointer) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(StreamableToStringTest, Pointer) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(StreamableToStringTest, Scalar) {$/;"	f	namespace:__anonf780395f0311
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(StreamingAssertionsTest, AnyThrow) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(StreamingAssertionsTest, FloatingPointEquals) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(StreamingAssertionsTest, IntegerEquals) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(StreamingAssertionsTest, IntegerLessThan) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(StreamingAssertionsTest, NoThrow) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(StreamingAssertionsTest, StringNotEqualIgnoringCase) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(StreamingAssertionsTest, StringsEqual) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(StreamingAssertionsTest, StringsEqualIgnoringCase) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(StreamingAssertionsTest, StringsNotEqual) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(StreamingAssertionsTest, Throw) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(StreamingAssertionsTest, Truth) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(StreamingAssertionsTest, Truth2) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(StreamingAssertionsTest, Unconditional) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(StringAssertionTest, ASSERT_STRCASEEQ) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(StringAssertionTest, ASSERT_STRCASENE) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(StringAssertionTest, ASSERT_STREQ) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(StringAssertionTest, ASSERT_STREQ_Null) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(StringAssertionTest, ASSERT_STREQ_Null2) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(StringAssertionTest, ASSERT_STRNE) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(StringAssertionTest, STREQ_Wide) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(StringAssertionTest, STRNE_Wide) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(StringTest, AnsiAndUtf16ConvertBasic) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(StringTest, AnsiAndUtf16ConvertPathChars) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(StringTest, AnsiAndUtf16Null) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(StringTest, CaseInsensitiveWideCStringEquals) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(StringTest, EndsWithCaseInsensitive) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(StringTest, ShowWideCString) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(SuccessfulAssertionTest, ASSERT) {$/;"	f	namespace:testing
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(SuccessfulAssertionTest, ASSERT_STR) {$/;"	f	namespace:testing
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(SuccessfulAssertionTest, EXPECT) {$/;"	f	namespace:testing
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(SuccessfulAssertionTest, EXPECT_STR) {$/;"	f	namespace:testing
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(SuccessfulAssertionTest, SUCCEED) {$/;"	f	namespace:testing
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(TestEventListenersTest, Append) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(TestEventListenersTest, ConstructionWorks) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(TestEventListenersTest, DestructionWorks) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(TestEventListenersTest, Release) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(TestPropertyTest, ConstructorWorks) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(TestPropertyTest, ReplaceStringValue) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(TestPropertyTest, SetValue) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(TestPropertyTest, StringValue) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(TestResultPropertyTest, GetTestProperty) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(TestResultPropertyTest, MultiplePropertiesFoundWhenAdded) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(TestResultPropertyTest, NoPropertiesFoundWhenNoneAreAdded) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(TestResultPropertyTest, OnePropertyFoundWhenAdded) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(TestResultPropertyTest, OverridesValuesForDuplicateKeys) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(UnitTestTest, CanGetOriginalWorkingDir) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(UnitTestTest, ReturnsPlausibleTimestamp) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(WideStringToUtf8Test, CanEncode12To16Bits) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(WideStringToUtf8Test, CanEncode17To21Bits) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(WideStringToUtf8Test, CanEncode8To11Bits) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(WideStringToUtf8Test, CanEncodeAscii) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(WideStringToUtf8Test, CanEncodeInvalidCodePoint) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(WideStringToUtf8Test, CanEncodeInvalidUtf16SurrogatePair) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(WideStringToUtf8Test, CanEncodeNul) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(WideStringToUtf8Test, CanEncodeValidUtf16SUrrogatePairs) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(WideStringToUtf8Test, ConcatenatesCodepointsCorrectly) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(WideStringToUtf8Test, StopsOnNulCharacter) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST(WideStringToUtf8Test, StopsWhenLengthLimitReached) {$/;"	f	namespace:__anonf780395f0111
TEST	src/tests/googletest/googletest/test/gtest_xml_output_unittest_.cc	/^TEST(InvalidCharactersTest, InvalidCharactersInMessage) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_xml_output_unittest_.cc	/^TEST(MixedResultTest, DISABLED_test) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_xml_output_unittest_.cc	/^TEST(MixedResultTest, Fails) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_xml_output_unittest_.cc	/^TEST(MixedResultTest, Succeeds) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_xml_output_unittest_.cc	/^TEST(NoFixtureTest, ExternalUtilityThatCallsRecordIntValuedProperty) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_xml_output_unittest_.cc	/^TEST(NoFixtureTest, ExternalUtilityThatCallsRecordStringValuedProperty) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_xml_output_unittest_.cc	/^TEST(NoFixtureTest, RecordProperty) {$/;"	f
TEST	src/tests/googletest/googletest/test/gtest_xml_output_unittest_.cc	/^TEST(XmlQuotingTest, OutputsCData) {$/;"	f
TEST	src/tests/googletest/googletest/xcode/Samples/FrameworkSample/widget_test.cc	/^TEST(WidgetInitializerTest, TestConstructor) {$/;"	f
TEST	src/tests/googletest/googletest/xcode/Samples/FrameworkSample/widget_test.cc	/^TEST(WidgetInitializerTest, TestConversion) {$/;"	f
TEST	src/tests/io_test.cpp	/^    TEST(IOTest, LweBootstrappingKeyIO) {$/;"	f	namespace:__anon2d72c1c60111
TEST	src/tests/io_test.cpp	/^    TEST(IOTest, LweKeyIO) {$/;"	f	namespace:__anon2d72c1c60111
TEST	src/tests/io_test.cpp	/^    TEST(IOTest, LweKeySwitchKeyIO) {$/;"	f	namespace:__anon2d72c1c60111
TEST	src/tests/io_test.cpp	/^    TEST(IOTest, LweParamsIO) {$/;"	f	namespace:__anon2d72c1c60111
TEST	src/tests/io_test.cpp	/^    TEST(IOTest, LweSampleIO) {$/;"	f	namespace:__anon2d72c1c60111
TEST	src/tests/io_test.cpp	/^    TEST(IOTest, TFheGateBootstrappingParameterSetIO) {$/;"	f	namespace:__anon2d72c1c60111
TEST	src/tests/io_test.cpp	/^    TEST(IOTest, TGswKeyIO) {$/;"	f	namespace:__anon2d72c1c60111
TEST	src/tests/io_test.cpp	/^    TEST(IOTest, TGswParamsIO) {$/;"	f	namespace:__anon2d72c1c60111
TEST	src/tests/io_test.cpp	/^    TEST(IOTest, TGswSampleIO) {$/;"	f	namespace:__anon2d72c1c60111
TEST	src/tests/io_test.cpp	/^    TEST(IOTest, TLweKeyIO) {$/;"	f	namespace:__anon2d72c1c60111
TEST	src/tests/io_test.cpp	/^    TEST(IOTest, TLweParamsIO) {$/;"	f	namespace:__anon2d72c1c60111
TEST	src/tests/io_test.cpp	/^    TEST(IOTest, TLweSampleIO) {$/;"	f	namespace:__anon2d72c1c60111
TEST	src/tests/lagrangehalfc_test.cpp	/^TEST(LagrangeHalfcTest, LagrangeHalfCPolynomialAddTo) {$/;"	f
TEST	src/tests/lagrangehalfc_test.cpp	/^TEST(LagrangeHalfcTest, LagrangeHalfCPolynomialAddTorusConstant) {$/;"	f
TEST	src/tests/lagrangehalfc_test.cpp	/^TEST(LagrangeHalfcTest, LagrangeHalfCPolynomialClear) {$/;"	f
TEST	src/tests/lagrangehalfc_test.cpp	/^TEST(LagrangeHalfcTest, LagrangeHalfCPolynomialSetTorusConstant) {$/;"	f
TEST	src/tests/lagrangehalfc_test.cpp	/^TEST(LagrangeHalfcTest, fftIsBijective) {$/;"	f
TEST	src/tests/lagrangehalfc_test.cpp	/^TEST(LagrangeHalfcTest, torusPolynomialAddMulRFFT) {$/;"	f
TEST	src/tests/lagrangehalfc_test.cpp	/^TEST(LagrangeHalfcTest, torusPolynomialMultFFT) {$/;"	f
TEST	src/tests/lagrangehalfc_test.cpp	/^TEST(LagrangeHalfcTest, torusPolynomialSubMulRFFT) {$/;"	f
TEST	src/tests/unit_test_torus.cpp	/^TEST(ExampleTest, AddsTwoNumbers) $/;"	f
TEST	src/tests/unit_test_torus.cpp	/^TEST(ExampleTest, SubtractsTwoNumbers) $/;"	f
TEST	src/tests/unit_test_torus.cpp	/^TEST(ExampleTest, approxPhase) $/;"	f
TEST	src/tests/unit_test_torus.cpp	/^TEST(ExampleTest, doubleToTorus32) $/;"	f
TESTS	src/tests/googletest/googlemock/Makefile.am	/^TESTS=$/;"	m
TESTS	src/tests/googletest/googlemock/make/Makefile	/^TESTS = gmock_test$/;"	m
TESTS	src/tests/googletest/googletest/Makefile.am	/^TESTS=$/;"	m
TESTS	src/tests/googletest/googletest/make/Makefile	/^TESTS = sample1_unittest$/;"	m
TESTS_ENVIRONMENT	src/tests/googletest/googletest/Makefile.am	/^TESTS_ENVIRONMENT = GTEST_SOURCE_DIR="$(srcdir)\/test" \\$/;"	m
TEST_CASE_REGEX	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^TEST_CASE_REGEX = re.compile(r'^\\[\\-+\\] \\d+ tests? from (\\w+(\/\\w+)?)')$/;"	v
TEST_DID_NOT_DIE	src/tests/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h	/^    TEST_DID_NOT_DIE$/;"	e	enum:testing::internal::DeathTest::AbortReason
TEST_ENCOUNTERED_RETURN_STATEMENT	src/tests/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h	/^    TEST_ENCOUNTERED_RETURN_STATEMENT,$/;"	e	enum:testing::internal::DeathTest::AbortReason
TEST_F	src/tests/ACC_test.cpp	/^    TEST_F (ACCTest, tSessionID) {$/;"	f	namespace:__anonef2481d50111
TEST_F	src/tests/ACC_test.cpp	/^    TEST_F (ACCTest, tSwap) {$/;"	f	namespace:__anonef2481d50111
TEST_F	src/tests/ACC_test.cpp	/^    TEST_F(ACCTest, CPU_ACC_bootstrappingTest) {$/;"	f	namespace:__anonef2481d50111
TEST_F	src/tests/FPGA_ACC_test.cpp	/^    TEST_F (ACCTest, exector_async) {$/;"	f	namespace:__anon88d438720111
TEST_F	src/tests/FPGA_ACC_test.cpp	/^    TEST_F (ACCTest, tSessionID) {$/;"	f	namespace:__anon88d438720111
TEST_F	src/tests/FPGA_ACC_test.cpp	/^    TEST_F (ACCTest, tSwap) {$/;"	f	namespace:__anon88d438720111
TEST_F	src/tests/FPGA_ACC_test.cpp	/^    TEST_F(ACCTest, FPGA_ACC_bootstrappingTest) {$/;"	f	namespace:__anon88d438720111
TEST_F	src/tests/FPGA_ACC_test.cpp	/^    TEST_F(ACCTest, FPGA_exec_interrupt) {$/;"	f	namespace:__anon88d438720111
TEST_F	src/tests/FPGA_ACC_test.cpp	/^    TEST_F(ACCTest, FPGA_exec_interrupt_executors) {$/;"	f	namespace:__anon88d438720111
TEST_F	src/tests/FPGA_ACC_test.cpp	/^    TEST_F(ACCTest, FPGA_exec_none_interrupt) {$/;"	f	namespace:__anon88d438720111
TEST_F	src/tests/FPGA_ACC_test.cpp	/^    TEST_F(ACCTest, FPGA_exec_poll_executors) {$/;"	f	namespace:__anon88d438720111
TEST_F	src/tests/FPGA_ACC_test.cpp	/^    TEST_F(ACCTest, FPGA_full_read_write_coef) {$/;"	f	namespace:__anon88d438720111
TEST_F	src/tests/FPGA_ACC_test.cpp	/^    TEST_F(ACCTest, FPGA_get_exector_number) {$/;"	f	namespace:__anon88d438720111
TEST_F	src/tests/FPGA_ACC_test.cpp	/^    TEST_F(ACCTest, FPGA_init) {$/;"	f	namespace:__anon88d438720111
TEST_F	src/tests/FPGA_ACC_test.cpp	/^    TEST_F(ACCTest, get_FPGA_version) {$/;"	f	namespace:__anon88d438720111
TEST_F	src/tests/QEMU_test.cpp	/^    TEST_F (ACCTest, tSessionID) {$/;"	f	namespace:__anon4f389dc60111
TEST_F	src/tests/QEMU_test.cpp	/^    TEST_F (ACCTest, tSwap) {$/;"	f	namespace:__anon4f389dc60111
TEST_F	src/tests/QEMU_test.cpp	/^    TEST_F(ACCTest, CPU_ACC_bootstrappingTest) {$/;"	f	namespace:__anon4f389dc60111
TEST_F	src/tests/bootstrapping_classic_PBS_parameters_test.cpp	/^    TEST_F(TfheCreateBootstrapKeyTest, bootstrappingTest) {$/;"	f	namespace:__anon8153b4f20111
TEST_F	src/tests/bootstrapping_direct_test.cpp	/^    TEST_F(TfheCreateBootstrapKeyTest, bootstrappingTest) {$/;"	f	namespace:__anon560166140111
TEST_F	src/tests/bootstrapping_test.cpp	/^    TEST_F(TfheBlindRotateAndExtractTest, tfheBlindRotateAndExtractTest) {$/;"	f	namespace:__anonf36cd29a0111
TEST_F	src/tests/bootstrapping_test.cpp	/^    TEST_F(TfheBlindRotateTest, tfheBlindRotateTest) {$/;"	f	namespace:__anonf36cd29a0111
TEST_F	src/tests/bootstrapping_test.cpp	/^    TEST_F(TfheBootstrapTest, tfheBootstrapTest) {$/;"	f	namespace:__anonf36cd29a0111
TEST_F	src/tests/bootstrapping_test.cpp	/^    TEST_F(TfheBootstrapWoKSTest, tfheBootstrapWoKSTest) {$/;"	f	namespace:__anonf36cd29a0111
TEST_F	src/tests/bootstrapping_test.cpp	/^    TEST_F(TfheCreateBootstrapKeyTest, createBootstrappingKeyTest) {$/;"	f	namespace:__anonf36cd29a0111
TEST_F	src/tests/decrypt_with_plaintext_modulus.cpp	/^    TEST_F(TfheCreateBootstrapKeyTest, PLAINTEXT_MODULUS_VALUES) {$/;"	f	namespace:__anondb55d4a50111
TEST_F	src/tests/decrypt_with_plaintext_modulus.cpp	/^    TEST_F(TfheCreateBootstrapKeyTest, PLAINTEXT_MODULUS_VALUES_WITH_PBS) {$/;"	f	namespace:__anondb55d4a50111
TEST_F	src/tests/decrypt_with_plaintext_modulus.cpp	/^    TEST_F(TfheCreateBootstrapKeyTest, TFHE_PROGRAMMABLE_BOOTSTRAP_TEST) {$/;"	f	namespace:__anondb55d4a50111
TEST_F	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST_F(SetErrnoAndReturnTest, CompatibleTypes) {$/;"	f	namespace:__anon550198f10111
TEST_F	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST_F(SetErrnoAndReturnTest, Int) {$/;"	f	namespace:__anon550198f10111
TEST_F	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^TEST_F(SetErrnoAndReturnTest, Ptr) {$/;"	f	namespace:__anon550198f10111
TEST_F	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^TEST_F(FunctionMockerTest, MocksBinaryFunction) {$/;"	f	namespace:testing::gmock_generated_function_mockers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^TEST_F(FunctionMockerTest, MocksDecimalFunction) {$/;"	f	namespace:testing::gmock_generated_function_mockers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^TEST_F(FunctionMockerTest, MocksDecimalFunctionWithCallType) {$/;"	f	namespace:testing::gmock_generated_function_mockers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^TEST_F(FunctionMockerTest, MocksFunctionWithConstArgument) {$/;"	f	namespace:testing::gmock_generated_function_mockers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^TEST_F(FunctionMockerTest, MocksFunctionWithConstReferenceArgument) {$/;"	f	namespace:testing::gmock_generated_function_mockers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^TEST_F(FunctionMockerTest, MocksFunctionWithNonConstReferenceArgument) {$/;"	f	namespace:testing::gmock_generated_function_mockers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^TEST_F(FunctionMockerTest, MocksFunctionsConstFunctionWithCallType) {$/;"	f	namespace:testing::gmock_generated_function_mockers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^TEST_F(FunctionMockerTest, MocksFunctionsOverloadedOnArgumentNumber) {$/;"	f	namespace:testing::gmock_generated_function_mockers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^TEST_F(FunctionMockerTest, MocksFunctionsOverloadedOnArgumentType) {$/;"	f	namespace:testing::gmock_generated_function_mockers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^TEST_F(FunctionMockerTest, MocksFunctionsOverloadedOnConstnessOfThis) {$/;"	f	namespace:testing::gmock_generated_function_mockers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^TEST_F(FunctionMockerTest, MocksNullaryFunction) {$/;"	f	namespace:testing::gmock_generated_function_mockers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^TEST_F(FunctionMockerTest, MocksNullaryFunctionWithCallType) {$/;"	f	namespace:testing::gmock_generated_function_mockers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^TEST_F(FunctionMockerTest, MocksReturnTypeWithComma) {$/;"	f	namespace:testing::gmock_generated_function_mockers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^TEST_F(FunctionMockerTest, MocksReturnTypeWithCommaAndCallType) {$/;"	f	namespace:testing::gmock_generated_function_mockers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^TEST_F(FunctionMockerTest, MocksUnaryFunction) {$/;"	f	namespace:testing::gmock_generated_function_mockers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^TEST_F(FunctionMockerTest, MocksUnaryFunctionWithCallType) {$/;"	f	namespace:testing::gmock_generated_function_mockers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^TEST_F(FunctionMockerTest, MocksVoidFunction) {$/;"	f	namespace:testing::gmock_generated_function_mockers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST_F(LogIsVisibleTest, AlwaysReturnsFalseIfVerbosityIsError) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST_F	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST_F(LogIsVisibleTest, AlwaysReturnsTrueIfVerbosityIsInfo) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST_F	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^TEST_F(LogIsVisibleTest, WorksWhenVerbosityIsWarning) {$/;"	f	namespace:testing::internal::__anonf4b2defb0111
TEST_F	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_F(BipartiteNonSquareTest, SimpleBacktracking) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_F(DoubleNearTest, DoubleNearCanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_F(DoubleNearTest, DoubleNearCannotMatchNaN) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_F(DoubleNearTest, DoubleNearMatches) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_F(DoubleNearTest, ExplainsResultWhenMatchFails) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_F(DoubleNearTest, NanSensitiveDoubleNearApproximatelyMatchesDoubles) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_F(DoubleNearTest, NanSensitiveDoubleNearCanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_F(DoubleNearTest, NanSensitiveDoubleNearCanMatchNaN) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_F(DoubleTest, DoubleEqApproximatelyMatchesDoubles) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_F(DoubleTest, DoubleEqCanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_F(DoubleTest, DoubleEqCannotMatchNaN) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_F(DoubleTest, NanSensitiveDoubleEqApproximatelyMatchesDoubles) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_F(DoubleTest, NanSensitiveDoubleEqCanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_F(DoubleTest, NanSensitiveDoubleEqCanMatchNaN) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_F(FloatNearTest, FloatNearCanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_F(FloatNearTest, FloatNearCannotMatchNaN) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_F(FloatNearTest, FloatNearMatches) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_F(FloatNearTest, NanSensitiveFloatNearApproximatelyMatchesFloats) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_F(FloatNearTest, NanSensitiveFloatNearCanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_F(FloatNearTest, NanSensitiveFloatNearCanMatchNaN) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_F(FloatTest, FloatEqApproximatelyMatchesFloats) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_F(FloatTest, FloatEqCanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_F(FloatTest, FloatEqCannotMatchNaN) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_F(FloatTest, NanSensitiveFloatEqApproximatelyMatchesFloats) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_F(FloatTest, NanSensitiveFloatEqCanDescribeSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_F(FloatTest, NanSensitiveFloatEqCanMatchNaN) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_F(UnorderedElementsAreTest, Describe) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_F(UnorderedElementsAreTest, DescribeNegation) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_F(UnorderedElementsAreTest, FailMessageCountWrong) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_F(UnorderedElementsAreTest, FailMessageCountWrongZero) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_F(UnorderedElementsAreTest, FailMessageImperfectMatchOnly) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_F(UnorderedElementsAreTest, FailMessageUnmatchedElements) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_F(UnorderedElementsAreTest, FailMessageUnmatchedMatcherAndElement) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_F(UnorderedElementsAreTest, FailMessageUnmatchedMatchers) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_F(UnorderedElementsAreTest, FailsWhenAnElementMatchesNoMatcher) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_F(UnorderedElementsAreTest, Performance) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_F(UnorderedElementsAreTest, PerformanceHalfStrict) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_F(UnorderedElementsAreTest, SucceedsWhenExpected) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_F(UnorderedElementsAreTest, WorksForStreamlike) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_F(UnorderedElementsAreTest, WorksWithUncopyable) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_F	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST_F(GMockLogTest, DoesNotPrintGoodCallInternallyIfVerbosityIsError) {$/;"	f	namespace:__anon6b6cf3b20111
TEST_F	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST_F(GMockLogTest, DoesNotPrintGoodCallInternallyIfVerbosityIsWarning) {$/;"	f	namespace:__anon6b6cf3b20111
TEST_F	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST_F(GMockLogTest, DoesNotPrintWarningInternallyIfVerbosityIsError) {$/;"	f	namespace:__anon6b6cf3b20111
TEST_F	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST_F(GMockVerboseFlagTest, Error) {$/;"	f	namespace:__anon6b6cf3b20111
TEST_F	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST_F(GMockVerboseFlagTest, Info) {$/;"	f	namespace:__anon6b6cf3b20111
TEST_F	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST_F(GMockVerboseFlagTest, InvalidFlagIsTreatedAsWarning) {$/;"	f	namespace:__anon6b6cf3b20111
TEST_F	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST_F(GMockVerboseFlagTest, Warning) {$/;"	f	namespace:__anon6b6cf3b20111
TEST_F	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST_F(PartialOrderTest, CallsMustConformToSpecifiedDag1) {$/;"	f	namespace:__anon6b6cf3b20111
TEST_F	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST_F(PartialOrderTest, CallsMustConformToSpecifiedDag2) {$/;"	f	namespace:__anon6b6cf3b20111
TEST_F	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST_F(PartialOrderTest, CallsMustConformToSpecifiedDag3) {$/;"	f	namespace:__anon6b6cf3b20111
TEST_F	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^TEST_F(PartialOrderTest, CallsMustConformToSpecifiedDag4) {$/;"	f	namespace:__anon6b6cf3b20111
TEST_F	src/tests/googletest/googlemock/test/gmock_output_test_.cc	/^TEST_F(GMockOutputTest, CatchesLeakedMocks) {$/;"	f
TEST_F	src/tests/googletest/googlemock/test/gmock_output_test_.cc	/^TEST_F(GMockOutputTest, ExcessiveCall) {$/;"	f
TEST_F	src/tests/googletest/googlemock/test/gmock_output_test_.cc	/^TEST_F(GMockOutputTest, ExcessiveCallToVoidFunction) {$/;"	f
TEST_F	src/tests/googletest/googlemock/test/gmock_output_test_.cc	/^TEST_F(GMockOutputTest, ExcessiveCallWithDefaultAction) {$/;"	f
TEST_F	src/tests/googletest/googlemock/test/gmock_output_test_.cc	/^TEST_F(GMockOutputTest, ExpectedCall) {$/;"	f
TEST_F	src/tests/googletest/googlemock/test/gmock_output_test_.cc	/^TEST_F(GMockOutputTest, ExpectedCallToVoidFunction) {$/;"	f
TEST_F	src/tests/googletest/googlemock/test/gmock_output_test_.cc	/^TEST_F(GMockOutputTest, ExplicitActionsRunOut) {$/;"	f
TEST_F	src/tests/googletest/googlemock/test/gmock_output_test_.cc	/^TEST_F(GMockOutputTest, ExplicitActionsRunOutWithDefaultAction) {$/;"	f
TEST_F	src/tests/googletest/googlemock/test/gmock_output_test_.cc	/^TEST_F(GMockOutputTest, MismatchArguments) {$/;"	f
TEST_F	src/tests/googletest/googlemock/test/gmock_output_test_.cc	/^TEST_F(GMockOutputTest, MismatchArgumentsAndWith) {$/;"	f
TEST_F	src/tests/googletest/googlemock/test/gmock_output_test_.cc	/^TEST_F(GMockOutputTest, MismatchWith) {$/;"	f
TEST_F	src/tests/googletest/googlemock/test/gmock_output_test_.cc	/^TEST_F(GMockOutputTest, RetiredExpectation) {$/;"	f
TEST_F	src/tests/googletest/googlemock/test/gmock_output_test_.cc	/^TEST_F(GMockOutputTest, UnexpectedCall) {$/;"	f
TEST_F	src/tests/googletest/googlemock/test/gmock_output_test_.cc	/^TEST_F(GMockOutputTest, UnexpectedCallToVoidFunction) {$/;"	f
TEST_F	src/tests/googletest/googlemock/test/gmock_output_test_.cc	/^TEST_F(GMockOutputTest, UnexpectedCallWithDefaultAction) {$/;"	f
TEST_F	src/tests/googletest/googlemock/test/gmock_output_test_.cc	/^TEST_F(GMockOutputTest, UninterestingCall) {$/;"	f
TEST_F	src/tests/googletest/googlemock/test/gmock_output_test_.cc	/^TEST_F(GMockOutputTest, UninterestingCallToVoidFunction) {$/;"	f
TEST_F	src/tests/googletest/googlemock/test/gmock_output_test_.cc	/^TEST_F(GMockOutputTest, UninterestingCallWithDefaultAction) {$/;"	f
TEST_F	src/tests/googletest/googlemock/test/gmock_output_test_.cc	/^TEST_F(GMockOutputTest, UnsatisfiedExpectation) {$/;"	f
TEST_F	src/tests/googletest/googlemock/test/gmock_output_test_.cc	/^TEST_F(GMockOutputTest, UnsatisfiedPrerequisite) {$/;"	f
TEST_F	src/tests/googletest/googlemock/test/gmock_output_test_.cc	/^TEST_F(GMockOutputTest, UnsatisfiedPrerequisites) {$/;"	f
TEST_F	src/tests/googletest/googlemock/test/gmock_output_test_.cc	/^TEST_F(GMockOutputTest, UnsatisfiedWith) {$/;"	f
TEST_F	src/tests/googletest/googletest/include/gtest/gtest.h	/^#define TEST_F(/;"	d
TEST_F	src/tests/googletest/googletest/samples/sample3_unittest.cc	/^TEST_F(QueueTest, DefaultConstructor) {$/;"	f
TEST_F	src/tests/googletest/googletest/samples/sample3_unittest.cc	/^TEST_F(QueueTest, Dequeue) {$/;"	f
TEST_F	src/tests/googletest/googletest/samples/sample3_unittest.cc	/^TEST_F(QueueTest, Map) {$/;"	f
TEST_F	src/tests/googletest/googletest/samples/sample5_unittest.cc	/^TEST_F(IntegerFunctionTest, Factorial) {$/;"	f
TEST_F	src/tests/googletest/googletest/samples/sample5_unittest.cc	/^TEST_F(IntegerFunctionTest, IsPrime) {$/;"	f
TEST_F	src/tests/googletest/googletest/samples/sample5_unittest.cc	/^TEST_F(QueueTest, DefaultConstructor) {$/;"	f
TEST_F	src/tests/googletest/googletest/samples/sample5_unittest.cc	/^TEST_F(QueueTest, Dequeue) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(MacroLogicDeathTest, ChildDoesNotDie) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(MacroLogicDeathTest, ChildExitsSuccessfully) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(MacroLogicDeathTest, ChildExitsUnsuccessfully) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(MacroLogicDeathTest, ChildPerformsReturn) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(MacroLogicDeathTest, NothingHappens) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, ASSERT_DEATH) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, AcceptsAnythingConvertibleToRE) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, AssertDebugDeathAborts) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, AssertDebugDeathAborts10) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, AssertDebugDeathAborts2) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, AssertDebugDeathAborts3) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, AssertDebugDeathAborts4) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, AssertDebugDeathAborts5) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, AssertDebugDeathAborts6) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, AssertDebugDeathAborts7) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, AssertDebugDeathAborts8) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, AssertDebugDeathAborts9) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, CompoundStatement) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, DeathTestBadExitCodeOutput) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, DeathTestFailedOutput) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, DeathTestMultiLineMatchFail) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, DeathTestMultiLineMatchPass) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, DeathTestUnexpectedReturnOutput) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, DoesNotDie) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, DoesNotExecuteAtforkHooks) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, EXPECT_DEATH) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, EmbeddedNulInMessage) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, ErrorMessageMismatch) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, ExitMacros) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, ExitMacrosUsingFork) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, ExpectDebugDeathDoesNotAbort) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, FastDeathTestInChangedDir) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, FastSigprofActionSet) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, FunctionWithParameter) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, GlobalFunction) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, InsideLoop) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, InvalidStyle) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, MemberFunctionFastStyle) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, MemberFunctionThreadsafeStyle) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, MethodOfAnotherClass) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, MixedStyles) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, NonVoidFunction) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, OutsideFixture) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, ReturnIsFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, RunawayIsFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, SingleEvaluation) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, SingleStatement) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, StaticMemberFunctionFastStyle) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, StaticMemberFunctionThreadsafeStyle) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, SwitchStatement) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, TestAssertDebugDeath) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, TestExpectDebugDeath) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, ThreadSafeSigprofActionSet) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, ThreadsafeDeathTestInChangedDir) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, ThreadsafeDeathTestInLoop) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST_F(DirectoryCreationTest, CreateDirectoriesAndUniqueFilename) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST_F	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST_F(DirectoryCreationTest, CreateDirectoriesFail) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST_F	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST_F(DirectoryCreationTest, CreateDirectoriesForAlreadyExistingPath) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST_F	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^TEST_F(DirectoryCreationTest, CreateDirectoriesRecursively) {$/;"	f	namespace:testing::internal::__anon077d0c590111
TEST_F	src/tests/googletest/googletest/test/gtest-linked_ptr_test.cc	/^TEST_F(LinkedPtrTest, GeneralTest) {$/;"	f	namespace:__anonf616d1f80111
TEST_F	src/tests/googletest/googletest/test/gtest-listener_test.cc	/^TEST_F(ListenerTest, DoesBar) {$/;"	f	namespace:testing::internal
TEST_F	src/tests/googletest/googletest/test/gtest-listener_test.cc	/^TEST_F(ListenerTest, DoesFoo) {$/;"	f	namespace:testing::internal
TEST_F	src/tests/googletest/googletest/test/gtest-options_test.cc	/^TEST_F(XmlOutputChangeDirTest, PreserveOriginalWorkingDirWithAbsoluteFile) {$/;"	f	namespace:testing::internal::__anon8f60ad580111
TEST_F	src/tests/googletest/googletest/test/gtest-options_test.cc	/^TEST_F(XmlOutputChangeDirTest, PreserveOriginalWorkingDirWithAbsolutePath) {$/;"	f	namespace:testing::internal::__anon8f60ad580111
TEST_F	src/tests/googletest/googletest/test/gtest-options_test.cc	/^TEST_F(XmlOutputChangeDirTest, PreserveOriginalWorkingDirWithDefault) {$/;"	f	namespace:testing::internal::__anon8f60ad580111
TEST_F	src/tests/googletest/googletest/test/gtest-options_test.cc	/^TEST_F(XmlOutputChangeDirTest, PreserveOriginalWorkingDirWithDefaultXML) {$/;"	f	namespace:testing::internal::__anon8f60ad580111
TEST_F	src/tests/googletest/googletest/test/gtest-options_test.cc	/^TEST_F(XmlOutputChangeDirTest, PreserveOriginalWorkingDirWithRelativeFile) {$/;"	f	namespace:testing::internal::__anon8f60ad580111
TEST_F	src/tests/googletest/googletest/test/gtest-options_test.cc	/^TEST_F(XmlOutputChangeDirTest, PreserveOriginalWorkingDirWithRelativePath) {$/;"	f	namespace:testing::internal::__anon8f60ad580111
TEST_F	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST_F(NonParameterizedBaseTest, FixtureIsInitialized) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST_F(ParameterizedDeathTest, GetParamDiesFromTestF) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-test-part_test.cc	/^TEST_F(TestPartResultArrayDeathTest, DiesWhenIndexIsOutOfBound) {$/;"	f	namespace:__anona7ba7e300111
TEST_F	src/tests/googletest/googletest/test/gtest-test-part_test.cc	/^TEST_F(TestPartResultArrayTest, ContainsGivenResultAfterAppend) {$/;"	f	namespace:__anona7ba7e300111
TEST_F	src/tests/googletest/googletest/test/gtest-test-part_test.cc	/^TEST_F(TestPartResultArrayTest, ContainsGivenResultsAfterTwoAppends) {$/;"	f	namespace:__anona7ba7e300111
TEST_F	src/tests/googletest/googletest/test/gtest-test-part_test.cc	/^TEST_F(TestPartResultArrayTest, InitialSizeIsZero) {$/;"	f	namespace:__anona7ba7e300111
TEST_F	src/tests/googletest/googletest/test/gtest-test-part_test.cc	/^TEST_F(TestPartResultTest, ConstructorWorks) {$/;"	f	namespace:__anona7ba7e300111
TEST_F	src/tests/googletest/googletest/test/gtest-test-part_test.cc	/^TEST_F(TestPartResultTest, Failed) {$/;"	f	namespace:__anona7ba7e300111
TEST_F	src/tests/googletest/googletest/test/gtest-test-part_test.cc	/^TEST_F(TestPartResultTest, FatallyFailed) {$/;"	f	namespace:__anona7ba7e300111
TEST_F	src/tests/googletest/googletest/test/gtest-test-part_test.cc	/^TEST_F(TestPartResultTest, NonfatallyFailed) {$/;"	f	namespace:__anona7ba7e300111
TEST_F	src/tests/googletest/googletest/test/gtest-test-part_test.cc	/^TEST_F(TestPartResultTest, Passed) {$/;"	f	namespace:__anona7ba7e300111
TEST_F	src/tests/googletest/googletest/test/gtest-test-part_test.cc	/^TEST_F(TestPartResultTest, ResultAccessorsWork) {$/;"	f	namespace:__anona7ba7e300111
TEST_F	src/tests/googletest/googletest/test/gtest-test-part_test.cc	/^TEST_F(TestPartResultTest, file_name) {$/;"	f	namespace:__anona7ba7e300111
TEST_F	src/tests/googletest/googletest/test/gtest-test-part_test.cc	/^TEST_F(TestPartResultTest, line_number) {$/;"	f	namespace:__anona7ba7e300111
TEST_F	src/tests/googletest/googletest/test/gtest-test-part_test.cc	/^TEST_F(TestPartResultTest, message) {$/;"	f	namespace:__anona7ba7e300111
TEST_F	src/tests/googletest/googletest/test/gtest-test-part_test.cc	/^TEST_F(TestPartResultTest, type) {$/;"	f	namespace:__anona7ba7e300111
TEST_F	src/tests/googletest/googletest/test/gtest-tuple_test.cc	/^TEST_F(BigTupleTest, Comparisons) {$/;"	f	namespace:__anona47613760111
TEST_F	src/tests/googletest/googletest/test/gtest-tuple_test.cc	/^TEST_F(BigTupleTest, Construction) {$/;"	f	namespace:__anona47613760111
TEST_F	src/tests/googletest/googletest/test/gtest-tuple_test.cc	/^TEST_F(BigTupleTest, get) {$/;"	f	namespace:__anona47613760111
TEST_F	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^TEST_F(TypedTestCasePStateDeathTest, DetectsDuplicates) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^TEST_F(TypedTestCasePStateDeathTest, DetectsExtraTest) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^TEST_F(TypedTestCasePStateDeathTest, DetectsMissedTest) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^TEST_F(TypedTestCasePStateDeathTest, DetectsTestAfterRegistration) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^TEST_F(TypedTestCasePStateTest, IgnoresOrderAndSpaces) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^TEST_F(TypedTestCasePStateTest, SucceedsForMatchingList) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^TEST_F(CxxExceptionInConstructorTest, ThrowsExceptionInConstructor) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^TEST_F(CxxExceptionInDestructorTest, ThrowsExceptionInDestructor) {}$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^TEST_F(CxxExceptionInSetUpTest, ThrowsExceptionInSetUp) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^TEST_F(CxxExceptionInSetUpTestCaseTest, ThrowsExceptionInSetUpTestCase) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^TEST_F(CxxExceptionInTearDownTest, ThrowsExceptionInTearDown) {}$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^TEST_F(CxxExceptionInTearDownTestCaseTest, ThrowsExceptionInTearDownTestCase) {}$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^TEST_F(CxxExceptionInTestBodyTest, ThrowsStdCxxException) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^TEST_F(SehExceptionInConstructorTest, ThrowsExceptionInConstructor) {}$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^TEST_F(SehExceptionInDestructorTest, ThrowsExceptionInDestructor) {}$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^TEST_F(SehExceptionInSetUpTest, ThrowsExceptionInSetUp) {}$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^TEST_F(SehExceptionInSetUpTestCaseTest, ThrowsExceptionInSetUpTestCase) {}$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^TEST_F(SehExceptionInTearDownTest, ThrowsExceptionInTearDown) {}$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^TEST_F(SehExceptionInTearDownTestCaseTest, ThrowsExceptionInTearDownTestCase) {}$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_filter_unittest_.cc	/^TEST_F(FooTest, Abc) {$/;"	f	namespace:__anon37ac2de30111
TEST_F	src/tests/googletest/googletest/test/gtest_filter_unittest_.cc	/^TEST_F(FooTest, Xyz) {$/;"	f	namespace:__anon37ac2de30111
TEST_F	src/tests/googletest/googletest/test/gtest_list_tests_unittest_.cc	/^TEST_F(FooTest, DISABLED_Test2) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_list_tests_unittest_.cc	/^TEST_F(FooTest, Test1) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_list_tests_unittest_.cc	/^TEST_F(FooTest, Test3) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST_F(ExpectFailureTest, ExpectFatalFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST_F(ExpectFailureTest, ExpectFatalFailureOnAllThreads) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST_F(ExpectFailureTest, ExpectNonFatalFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST_F(ExpectFailureTest, ExpectNonFatalFailureOnAllThreads) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST_F(ExpectFailureWithThreadsTest, ExpectFatalFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST_F(ExpectFailureWithThreadsTest, ExpectNonFatalFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST_F(FatalFailureInFixtureConstructorTest, FailureInConstructor) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST_F(FatalFailureInSetUpTest, FailureInSetUp) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST_F(MixedUpTestCaseTest, FirstTestFromNamespaceFoo) {}$/;"	f	namespace:foo
TEST_F	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST_F(MixedUpTestCaseTest, SecondTestFromNamespaceFoo) {}$/;"	f	namespace:foo
TEST_F	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST_F(MixedUpTestCaseTest, ThisShouldFail) {}$/;"	f	namespace:bar
TEST_F	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST_F(MixedUpTestCaseTest, ThisShouldFailToo) {}$/;"	f	namespace:bar
TEST_F	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST_F(MixedUpTestCaseWithSameTestNameTest,$/;"	f	namespace:bar
TEST_F	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST_F(MixedUpTestCaseWithSameTestNameTest,$/;"	f	namespace:foo
TEST_F	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST_F(NonFatalFailureInFixtureConstructorTest, FailureInConstructor) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST_F(NonFatalFailureInSetUpTest, FailureInSetUp) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST_F(ScopedFakeTestPartResultReporterTest, InterceptOnlyCurrentThread) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST_F(TEST_F_before_TEST_in_same_test_case, DefinedUsingTEST_F) {}$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST_F(TEST_before_TEST_F_in_same_test_case, DefinedUsingTEST_FAndShouldFail) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED1Test, FunctionOnBuiltInTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED1Test, FunctionOnBuiltInTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED1Test, FunctionOnUserTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED1Test, FunctionOnUserTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED1Test, FunctorOnBuiltInTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED1Test, FunctorOnBuiltInTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED1Test, FunctorOnUserTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED1Test, FunctorOnUserTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED2Test, FunctionOnBuiltInTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED2Test, FunctionOnBuiltInTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED2Test, FunctionOnUserTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED2Test, FunctionOnUserTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED2Test, FunctorOnBuiltInTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED2Test, FunctorOnBuiltInTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED2Test, FunctorOnUserTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED2Test, FunctorOnUserTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED3Test, FunctionOnBuiltInTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED3Test, FunctionOnBuiltInTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED3Test, FunctionOnUserTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED3Test, FunctionOnUserTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED3Test, FunctorOnBuiltInTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED3Test, FunctorOnBuiltInTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED3Test, FunctorOnUserTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED3Test, FunctorOnUserTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED4Test, FunctionOnBuiltInTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED4Test, FunctionOnBuiltInTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED4Test, FunctionOnUserTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED4Test, FunctionOnUserTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED4Test, FunctorOnBuiltInTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED4Test, FunctorOnBuiltInTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED4Test, FunctorOnUserTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED4Test, FunctorOnUserTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED5Test, FunctionOnBuiltInTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED5Test, FunctionOnBuiltInTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED5Test, FunctionOnUserTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED5Test, FunctionOnUserTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED5Test, FunctorOnBuiltInTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED5Test, FunctorOnBuiltInTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED5Test, FunctorOnUserTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED5Test, FunctorOnUserTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT1Test, FunctionOnBuiltInTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT1Test, FunctionOnBuiltInTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT1Test, FunctionOnUserTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT1Test, FunctionOnUserTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT1Test, FunctorOnBuiltInTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT1Test, FunctorOnBuiltInTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT1Test, FunctorOnUserTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT1Test, FunctorOnUserTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT2Test, FunctionOnBuiltInTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT2Test, FunctionOnBuiltInTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT2Test, FunctionOnUserTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT2Test, FunctionOnUserTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT2Test, FunctorOnBuiltInTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT2Test, FunctorOnBuiltInTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT2Test, FunctorOnUserTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT2Test, FunctorOnUserTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT3Test, FunctionOnBuiltInTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT3Test, FunctionOnBuiltInTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT3Test, FunctionOnUserTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT3Test, FunctionOnUserTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT3Test, FunctorOnBuiltInTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT3Test, FunctorOnBuiltInTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT3Test, FunctorOnUserTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT3Test, FunctorOnUserTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT4Test, FunctionOnBuiltInTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT4Test, FunctionOnBuiltInTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT4Test, FunctionOnUserTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT4Test, FunctionOnUserTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT4Test, FunctorOnBuiltInTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT4Test, FunctorOnBuiltInTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT4Test, FunctorOnUserTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT4Test, FunctorOnUserTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT5Test, FunctionOnBuiltInTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT5Test, FunctionOnBuiltInTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT5Test, FunctionOnUserTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT5Test, FunctionOnUserTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT5Test, FunctorOnBuiltInTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT5Test, FunctorOnBuiltInTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT5Test, FunctorOnUserTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT5Test, FunctorOnUserTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED1Test, FunctionOnBuiltInTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED1Test, FunctionOnBuiltInTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED1Test, FunctionOnUserTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED1Test, FunctionOnUserTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED1Test, FunctorOnBuiltInTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED1Test, FunctorOnBuiltInTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED1Test, FunctorOnUserTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED1Test, FunctorOnUserTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED2Test, FunctionOnBuiltInTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED2Test, FunctionOnBuiltInTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED2Test, FunctionOnUserTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED2Test, FunctionOnUserTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED2Test, FunctorOnBuiltInTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED2Test, FunctorOnBuiltInTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED2Test, FunctorOnUserTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED2Test, FunctorOnUserTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED3Test, FunctionOnBuiltInTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED3Test, FunctionOnBuiltInTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED3Test, FunctionOnUserTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED3Test, FunctionOnUserTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED3Test, FunctorOnBuiltInTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED3Test, FunctorOnBuiltInTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED3Test, FunctorOnUserTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED3Test, FunctorOnUserTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED4Test, FunctionOnBuiltInTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED4Test, FunctionOnBuiltInTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED4Test, FunctionOnUserTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED4Test, FunctionOnUserTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED4Test, FunctorOnBuiltInTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED4Test, FunctorOnBuiltInTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED4Test, FunctorOnUserTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED4Test, FunctorOnUserTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED5Test, FunctionOnBuiltInTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED5Test, FunctionOnBuiltInTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED5Test, FunctionOnUserTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED5Test, FunctionOnUserTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED5Test, FunctorOnBuiltInTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED5Test, FunctorOnBuiltInTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED5Test, FunctorOnUserTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED5Test, FunctorOnUserTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT1Test, FunctionOnBuiltInTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT1Test, FunctionOnBuiltInTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT1Test, FunctionOnUserTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT1Test, FunctionOnUserTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT1Test, FunctorOnBuiltInTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT1Test, FunctorOnBuiltInTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT1Test, FunctorOnUserTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT1Test, FunctorOnUserTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT2Test, FunctionOnBuiltInTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT2Test, FunctionOnBuiltInTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT2Test, FunctionOnUserTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT2Test, FunctionOnUserTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT2Test, FunctorOnBuiltInTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT2Test, FunctorOnBuiltInTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT2Test, FunctorOnUserTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT2Test, FunctorOnUserTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT3Test, FunctionOnBuiltInTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT3Test, FunctionOnBuiltInTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT3Test, FunctionOnUserTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT3Test, FunctionOnUserTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT3Test, FunctorOnBuiltInTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT3Test, FunctorOnBuiltInTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT3Test, FunctorOnUserTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT3Test, FunctorOnUserTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT4Test, FunctionOnBuiltInTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT4Test, FunctionOnBuiltInTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT4Test, FunctionOnUserTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT4Test, FunctionOnUserTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT4Test, FunctorOnBuiltInTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT4Test, FunctorOnBuiltInTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT4Test, FunctorOnUserTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT4Test, FunctorOnUserTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT5Test, FunctionOnBuiltInTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT5Test, FunctionOnBuiltInTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT5Test, FunctionOnUserTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT5Test, FunctionOnUserTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT5Test, FunctorOnBuiltInTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT5Test, FunctorOnBuiltInTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT5Test, FunctorOnUserTypeFailure) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT5Test, FunctorOnUserTypeSuccess) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_premature_exit_test.cc	/^TEST_F(PrematureExitDeathTest, FileExistsDuringExecutionOfDeathTest) {$/;"	f	namespace:__anonb806fa6c0111
TEST_F	src/tests/googletest/googletest/test/gtest_premature_exit_test.cc	/^TEST_F(PrematureExitTest, PrematureExitFileExistsDuringTestExecution) {$/;"	f	namespace:__anonb806fa6c0111
TEST_F	src/tests/googletest/googletest/test/gtest_prod_test.cc	/^TEST_F(PrivateCodeFixtureTest, CanAccessPrivateMembers) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_shuffle_test_.cc	/^TEST_F(A, A) {}$/;"	f	namespace:__anon91ff1dea0111
TEST_F	src/tests/googletest/googletest/test/gtest_shuffle_test_.cc	/^TEST_F(A, B) {}$/;"	f	namespace:__anon91ff1dea0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(CodeLocationForTESTF, Verify) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(CurrentTestInfoTest, WorksForFirstTestInATestCase) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(CurrentTestInfoTest, WorksForSecondTestInATestCase) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(DisabledTestsTest, DISABLED_TestShouldNotRun_1) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(DisabledTestsTest, DISABLED_TestShouldNotRun_2) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(DoubleTest, ASSERT_NEAR) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(DoubleTest, AlmostZeros) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(DoubleTest, Commutative) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(DoubleTest, DoubleLEFails) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(DoubleTest, DoubleLESucceeds) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(DoubleTest, EXPECT_NEAR) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(DoubleTest, Infinity) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(DoubleTest, LargeDiff) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(DoubleTest, NaN) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(DoubleTest, Reflexive) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(DoubleTest, Size) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(DoubleTest, SmallDiff) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(DoubleTest, Zeros) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(ExpectFailureWithThreadsTest, ExpectFatalFailureOnAllThreads) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(ExpectFailureWithThreadsTest, ExpectNonFatalFailureOnAllThreads) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(ExpectFatalFailureTest, AcceptsMacroThatExpandsToUnprotectedComma) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(ExpectFatalFailureTest, AcceptsStdStringObject) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(ExpectFatalFailureTest, AcceptsStringObject) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(ExpectFatalFailureTest, CanBeUsedInNonVoidFunction) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(ExpectFatalFailureTest, CatchesFatalFailureOnAllThreads) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(ExpectFatalFailureTest, CatchesFatalFaliure) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(ExpectFatalFailureTest, DoesNotAbort) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(ExpectNonfatalFailureTest, AcceptsMacroThatExpandsToUnprotectedComma) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(ExpectNonfatalFailureTest, AcceptsStdStringObject) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(ExpectNonfatalFailureTest, AcceptsStringObject) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(ExpectNonfatalFailureTest, CatchesNonfatalFailure) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(ExpectNonfatalFailureTest, CatchesNonfatalFailureOnAllThreads) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(FRIEND_TEST_Test2, TEST_F) {$/;"	f	namespace:__anonf780395f0311
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(FlagfileTest, Empty) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(FlagfileTest, FilterNonEmpty) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(FlagfileTest, SeveralFlags) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(FloatTest, ASSERT_NEAR) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(FloatTest, AlmostZeros) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(FloatTest, Commutative) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(FloatTest, EXPECT_NEAR) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(FloatTest, FloatLEFails) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(FloatTest, FloatLESucceeds) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(FloatTest, Infinity) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(FloatTest, LargeDiff) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(FloatTest, NaN) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(FloatTest, Reflexive) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(FloatTest, Size) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(FloatTest, SmallDiff) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(FloatTest, Zeros) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(FormatEpochTimeInMillisAsIso8601Test, MillisecondsDoNotAffectResult) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(FormatEpochTimeInMillisAsIso8601Test, Prints24HourTime) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(FormatEpochTimeInMillisAsIso8601Test, PrintsEpochStart) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(FormatEpochTimeInMillisAsIso8601Test, PrintsLeadingZeroes) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(FormatEpochTimeInMillisAsIso8601Test, PrintsTwoDigitSegments) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(GTestFlagSaverTest, ModifyGTestFlags) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(GTestFlagSaverTest, VerifyGTestFlags) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, AlsoRunDisabledTestsFalse) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, AlsoRunDisabledTestsFlag) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, AlsoRunDisabledTestsTrue) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, BreakOnFailureFalse_0) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, BreakOnFailureFalse_F) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, BreakOnFailureFalse_f) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, BreakOnFailureTrue) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, BreakOnFailureWithoutValue) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, CatchExceptions) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, DeathTestUseFork) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, DuplicatedFlags) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, Empty) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, FilterBad) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, FilterEmpty) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, FilterNonEmpty) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, ListTestsFalse) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, ListTestsFalse_F) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, ListTestsFalse_f) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, ListTestsFlag) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, ListTestsTrue) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, NoFlag) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, OutputEmpty) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, OutputXml) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, OutputXmlDirectory) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, OutputXmlFile) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, PrintTimeFalse) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, PrintTimeFalse_F) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, PrintTimeFalse_f) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, PrintTimeFlag) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, PrintTimeTrue) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, RandomSeed) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, Repeat) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, ShuffleFalse_0) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, ShuffleTrue) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, ShuffleWithoutValue) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, StackTraceDepth) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, StreamResultTo) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, ThrowOnFailureFalse_0) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, ThrowOnFailureTrue) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, ThrowOnFailureWithoutValue) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, UnrecognizedFlag) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, WideStrings) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(NoFatalFailureTest, AssertNoFatalFailureOnFatalFailure) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(NoFatalFailureTest, ExpectNoFatalFailureOnFatalFailure) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(NoFatalFailureTest, MessageIsStreamable) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(NoFatalFailureTest, NoFailure) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(NoFatalFailureTest, NonFatalIsNoFailure) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(ScopedFakeTestPartResultReporterTest, DeprecatedConstructor) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(ScopedFakeTestPartResultReporterTest, InterceptsTestFailures) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(ScopedFakeTestPartResultReporterWithThreadsTest,$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(SetUpTestCaseTest, Test1) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(SetUpTestCaseTest, Test2) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(ShouldShardDeathTest, AbortsWhenShardingEnvVarsAreInvalid) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(ShouldShardTest, ReturnsFalseWhenNeitherEnvVarIsSet) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(ShouldShardTest, ReturnsFalseWhenTotalShardIsOne) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(ShouldShardTest, WorksWhenShardEnvVarsAreValid) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(SingleEvaluationTest, ASSERT_STR) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(SingleEvaluationTest, ExceptionTests) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(SingleEvaluationTest, FailedASSERT_NE) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(SingleEvaluationTest, FailedASSERT_STREQ) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(SingleEvaluationTest, OtherCases) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(StreamingListenerTest, OnTestCaseEnd) {$/;"	f	namespace:testing::internal
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(StreamingListenerTest, OnTestCaseStart) {$/;"	f	namespace:testing::internal
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(StreamingListenerTest, OnTestEnd) {$/;"	f	namespace:testing::internal
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(StreamingListenerTest, OnTestIterationEnd) {$/;"	f	namespace:testing::internal
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(StreamingListenerTest, OnTestPartResult) {$/;"	f	namespace:testing::internal
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(StreamingListenerTest, OnTestProgramEnd) {$/;"	f	namespace:testing::internal
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(StreamingListenerTest, OnTestStart) {$/;"	f	namespace:testing::internal
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(TestInfoTest, Names) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(TestInfoTest, result) {$/;"	f	namespace:testing
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(TestLifeCycleTest, Test1) {$/;"	f	namespace:__anonf780395f0311
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(TestLifeCycleTest, Test2) {$/;"	f	namespace:__anonf780395f0311
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(TestResultDeathTest, GetTestPartResult) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(TestResultTest, Failed) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(TestResultTest, Passed) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(TestResultTest, total_part_count) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(UnitTestRecordPropertyTest, MultiplePropertiesFoundWhenAdded) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(UnitTestRecordPropertyTest, OnePropertyFoundWhenAdded) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(UnitTestRecordPropertyTest, OverridesValuesForDuplicateKeys) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(UnitTestRecordPropertyTest,$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(VectorShuffleTest, HandlesEmptyRange) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(VectorShuffleTest, HandlesRangeOfSizeOne) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(VectorShuffleTest, ShufflesEndOfVector) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(VectorShuffleTest, ShufflesEntireVector) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(VectorShuffleTest, ShufflesMiddleOfVector) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(VectorShuffleTest, ShufflesRepeatably) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_F(VectorShuffleTest, ShufflesStartOfVector) {$/;"	f	namespace:__anonf780395f0111
TEST_F	src/tests/googletest/googletest/test/gtest_xml_outfile1_test_.cc	/^TEST_F(PropertyOne, TestSomeProperties) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_xml_outfile2_test_.cc	/^TEST_F(PropertyTwo, TestSomeProperties) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_xml_output_unittest_.cc	/^TEST_F(DisabledTest, DISABLED_test_not_run) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_xml_output_unittest_.cc	/^TEST_F(FailedTest, Fails) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_xml_output_unittest_.cc	/^TEST_F(PropertyRecordingTest, IntValuedProperty) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_xml_output_unittest_.cc	/^TEST_F(PropertyRecordingTest, OneProperty) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_xml_output_unittest_.cc	/^TEST_F(PropertyRecordingTest, ThreeProperties) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_xml_output_unittest_.cc	/^TEST_F(PropertyRecordingTest, TwoValuesForOneKeyUsesLastValue) {$/;"	f
TEST_F	src/tests/googletest/googletest/test/gtest_xml_output_unittest_.cc	/^TEST_F(SuccessfulTest, Succeeds) {$/;"	f
TEST_F	src/tests/io_test.cpp	/^    TEST_F(IOTest2, TFheGateBootstrappingCloudKeySetIO) {$/;"	f	namespace:__anon2d72c1c60111
TEST_F	src/tests/io_test.cpp	/^    TEST_F(IOTest2, TFheGateBootstrappingSecretKeySetIO) {$/;"	f	namespace:__anon2d72c1c60111
TEST_F	src/tests/lwe_test.cpp	/^    TEST_F (LweTest, lweSymEncryptDecrypt) {$/;"	f	namespace:__anonc84148b60111
TEST_F	src/tests/lwe_test.cpp	/^    TEST_F (LweTest, lweSymEncryptPhaseDecrypt) {$/;"	f	namespace:__anonc84148b60111
TEST_F	src/tests/lwe_test.cpp	/^    TEST_F(LweTest, lweAddMulTo) {$/;"	f	namespace:__anonc84148b60111
TEST_F	src/tests/lwe_test.cpp	/^    TEST_F(LweTest, lweAddTo) {$/;"	f	namespace:__anonc84148b60111
TEST_F	src/tests/lwe_test.cpp	/^    TEST_F(LweTest, lweClear) {$/;"	f	namespace:__anonc84148b60111
TEST_F	src/tests/lwe_test.cpp	/^    TEST_F(LweTest, lweKeyGen) {$/;"	f	namespace:__anonc84148b60111
TEST_F	src/tests/lwe_test.cpp	/^    TEST_F(LweTest, lweNoiselessTrivial) {$/;"	f	namespace:__anonc84148b60111
TEST_F	src/tests/lwe_test.cpp	/^    TEST_F(LweTest, lweSubMulTo) {$/;"	f	namespace:__anonc84148b60111
TEST_F	src/tests/lwe_test.cpp	/^    TEST_F(LweTest, lweSubTo) {$/;"	f	namespace:__anonc84148b60111
TEST_F	src/tests/lwekeyswitch_test.cpp	/^    TEST_F(LweKeySwitchTest, lweCreateKeySwitchKey_fromArray) {$/;"	f	namespace:__anon0e34bff10111
TEST_F	src/tests/lwekeyswitch_test.cpp	/^    TEST_F(LweKeySwitchTest, lweKeySwitchTranslate_fromArray) {$/;"	f	namespace:__anon0e34bff10111
TEST_F	src/tests/macros_modSwitch_with_plaintext_modulus_macros.cpp	/^    TEST_F(TfheCreateBootstrapKeyTest, MODSWITCH_TEST){$/;"	f	namespace:__anon4cdaee640111
TEST_F	src/tests/macros_modSwitch_with_plaintext_modulus_macros.cpp	/^    TEST_F(TfheCreateBootstrapKeyTest, MODSWITCH_TEST_63BIT){$/;"	f	namespace:__anon4cdaee640111
TEST_F	src/tests/moduo_test.cpp	/^    TEST_F (MuduoTest, compileTest) {$/;"	f	namespace:__anon1f7e76720111
TEST_F	src/tests/ops_add.cpp	/^    TEST_F(TfheCreateBootstrapKeyTest, ENCRYPT_WITH_PRIVATE_KEY) {$/;"	f	namespace:__anonb1f413890111
TEST_F	src/tests/ops_add.cpp	/^    TEST_F(TfheCreateBootstrapKeyTest, bootstrappingTest) {$/;"	f	namespace:__anonb1f413890111
TEST_F	src/tests/ops_add_with_carry.cpp	/^    TEST_F(TfheCreateBootstrapKeyTest, OPS_OF_ADD_BLOCKS) {$/;"	f	namespace:__anon662e63c40111
TEST_F	src/tests/ops_add_with_carry.cpp	/^    TEST_F(TfheCreateBootstrapKeyTest, OPS_OF_ADD_WITH_CARRY) {$/;"	f	namespace:__anon662e63c40111
TEST_F	src/tests/ops_add_with_carry.cpp	/^    TEST_F(TfheCreateBootstrapKeyTest, bootstrappingTest) {$/;"	f	namespace:__anon662e63c40111
TEST_F	src/tests/package_test.cpp	/^    TEST_F (PackageTest, strMsgTest) {$/;"	f	namespace:__anon6c5f9b3a0111
TEST_F	src/tests/polynomial_test.cpp	/^    TEST_F(PolynomialTest, intPolynomialMulByXaiMinusOne) {$/;"	f	namespace:__anon87ebe9520111
TEST_F	src/tests/polynomial_test.cpp	/^    TEST_F(PolynomialTest, intPolynomialNormSq2) {$/;"	f	namespace:__anon87ebe9520111
TEST_F	src/tests/polynomial_test.cpp	/^    TEST_F(PolynomialTest, torusPolynomialAdd) {$/;"	f	namespace:__anon87ebe9520111
TEST_F	src/tests/polynomial_test.cpp	/^    TEST_F(PolynomialTest, torusPolynomialAddMulRKaratsuba) {$/;"	f	namespace:__anon87ebe9520111
TEST_F	src/tests/polynomial_test.cpp	/^    TEST_F(PolynomialTest, torusPolynomialAddMulRNavie) {$/;"	f	namespace:__anon87ebe9520111
TEST_F	src/tests/polynomial_test.cpp	/^    TEST_F(PolynomialTest, torusPolynomialAddMulZ) {$/;"	f	namespace:__anon87ebe9520111
TEST_F	src/tests/polynomial_test.cpp	/^    TEST_F(PolynomialTest, torusPolynomialAddMulZTo) {$/;"	f	namespace:__anon87ebe9520111
TEST_F	src/tests/polynomial_test.cpp	/^    TEST_F(PolynomialTest, torusPolynomialAddTo) {$/;"	f	namespace:__anon87ebe9520111
TEST_F	src/tests/polynomial_test.cpp	/^    TEST_F(PolynomialTest, torusPolynomialClear) {$/;"	f	namespace:__anon87ebe9520111
TEST_F	src/tests/polynomial_test.cpp	/^    TEST_F(PolynomialTest, torusPolynomialCopy) {$/;"	f	namespace:__anon87ebe9520111
TEST_F	src/tests/polynomial_test.cpp	/^    TEST_F(PolynomialTest, torusPolynomialMulByXai) {$/;"	f	namespace:__anon87ebe9520111
TEST_F	src/tests/polynomial_test.cpp	/^    TEST_F(PolynomialTest, torusPolynomialMulByXaiMinusOne) {$/;"	f	namespace:__anon87ebe9520111
TEST_F	src/tests/polynomial_test.cpp	/^    TEST_F(PolynomialTest, torusPolynomialMultKaratsuba) {$/;"	f	namespace:__anon87ebe9520111
TEST_F	src/tests/polynomial_test.cpp	/^    TEST_F(PolynomialTest, torusPolynomialMultNaive) {$/;"	f	namespace:__anon87ebe9520111
TEST_F	src/tests/polynomial_test.cpp	/^    TEST_F(PolynomialTest, torusPolynomialSub) {$/;"	f	namespace:__anon87ebe9520111
TEST_F	src/tests/polynomial_test.cpp	/^    TEST_F(PolynomialTest, torusPolynomialSubMulRKaratsuba) {$/;"	f	namespace:__anon87ebe9520111
TEST_F	src/tests/polynomial_test.cpp	/^    TEST_F(PolynomialTest, torusPolynomialSubMulRNaive) {$/;"	f	namespace:__anon87ebe9520111
TEST_F	src/tests/polynomial_test.cpp	/^    TEST_F(PolynomialTest, torusPolynomialSubMulZ) {$/;"	f	namespace:__anon87ebe9520111
TEST_F	src/tests/polynomial_test.cpp	/^    TEST_F(PolynomialTest, torusPolynomialSubMulZTo) {$/;"	f	namespace:__anon87ebe9520111
TEST_F	src/tests/polynomial_test.cpp	/^    TEST_F(PolynomialTest, torusPolynomialSubTo) {$/;"	f	namespace:__anon87ebe9520111
TEST_F	src/tests/polynomial_test.cpp	/^    TEST_F(PolynomialTest, torusPolynomialUniform) {$/;"	f	namespace:__anon87ebe9520111
TEST_F	src/tests/session_test.cpp	/^    TEST_F (SessionTest, tLweBootstrappingKey_Wrap) {$/;"	f	namespace:__anon23f859320111
TEST_F	src/tests/session_test.cpp	/^    TEST_F (SessionTest, tSessionID) {$/;"	f	namespace:__anon23f859320111
TEST_F	src/tests/session_test.cpp	/^    TEST_F (SessionTest, tSessionMap) {$/;"	f	namespace:__anon23f859320111
TEST_F	src/tests/small_size_test.cpp	/^    TEST_F (LweTest, lweSymEncryptDecrypt) {$/;"	f	namespace:__anon9baab4410111
TEST_F	src/tests/small_size_test.cpp	/^    TEST_F (TLweTest, tKeySwitch) {$/;"	f	namespace:__anon9baab4410111
TEST_F	src/tests/small_size_test.cpp	/^    TEST_F (TLweTest, tLweSymEncryptPhaseDecrypt) {$/;"	f	namespace:__anon9baab4410111
TEST_F	src/tests/small_size_test.cpp	/^    TEST_F (TLweTest, tLweSymEncryptPhaseDecryptT) {$/;"	f	namespace:__anon9baab4410111
TEST_F	src/tests/small_size_test.cpp	/^    TEST_F (TLweTest, tSampleExtract) {$/;"	f	namespace:__anon9baab4410111
TEST_F	src/tests/small_size_test.cpp	/^    TEST_F(PolynomialTest, torusPolynomialAdd) {$/;"	f	namespace:__anon9baab4410111
TEST_F	src/tests/small_size_test.cpp	/^    TEST_F(PolynomialTest, torusPolynomialMultNaive) {$/;"	f	namespace:__anon9baab4410111
TEST_F	src/tests/small_size_test.cpp	/^    TEST_F(PolynomialTest, torusPolynomialMultNaive1024) {$/;"	f	namespace:__anon9baab4410111
TEST_F	src/tests/small_size_test.cpp	/^    TEST_F(TGswTest, tCMux) {$/;"	f	namespace:__anon9baab4410111
TEST_F	src/tests/small_size_test.cpp	/^    TEST_F(TGswTest, tGswExternProduct) {$/;"	f	namespace:__anon9baab4410111
TEST_F	src/tests/small_size_test.cpp	/^    TEST_F(TGswTest, tGswSymEncrypt) {$/;"	f	namespace:__anon9baab4410111
TEST_F	src/tests/small_size_test.cpp	/^    TEST_F(TGswTest, tblindRotate) {$/;"	f	namespace:__anon9baab4410111
TEST_F	src/tests/tgsw_direct_test.cpp	/^    TEST_F(TGswDirectTest, tGswAddH) {$/;"	f	namespace:__anon2d2168ad0111
TEST_F	src/tests/tgsw_direct_test.cpp	/^    TEST_F(TGswDirectTest, tGswAddMuH) {$/;"	f	namespace:__anon2d2168ad0111
TEST_F	src/tests/tgsw_direct_test.cpp	/^    TEST_F(TGswDirectTest, tGswAddMuIntH) {$/;"	f	namespace:__anon2d2168ad0111
TEST_F	src/tests/tgsw_direct_test.cpp	/^    TEST_F(TGswDirectTest, tGswSymEncrypt) {$/;"	f	namespace:__anon2d2168ad0111
TEST_F	src/tests/tgsw_direct_test.cpp	/^    TEST_F(TGswDirectTest, tGswTLweDecompH) {$/;"	f	namespace:__anon2d2168ad0111
TEST_F	src/tests/tgsw_direct_test.cpp	/^    TEST_F(TGswDirectTest, tGswTorus32PolynomialDecompH) {$/;"	f	namespace:__anon2d2168ad0111
TEST_F	src/tests/tgsw_test.cpp	/^    TEST_F(TGswFakeTest, tGswNoiselessTrivial) {$/;"	f	namespace:__anonfeb37f530111
TEST_F	src/tests/tgsw_test.cpp	/^    TEST_F(TGswFakeTest, tGswSymEncrypt) {$/;"	f	namespace:__anonfeb37f530111
TEST_F	src/tests/tgsw_test.cpp	/^    TEST_F(TGswFakeTest, tGswSymEncryptInt) {$/;"	f	namespace:__anonfeb37f530111
TEST_F	src/tests/tgsw_test.cpp	/^    TEST_F(TGswTest, tGswClear) {$/;"	f	namespace:__anonfeb37f530111
TEST_F	src/tests/tgsw_test.cpp	/^    TEST_F(TGswTest, tGswEncryptZero) {$/;"	f	namespace:__anonfeb37f530111
TEST_F	src/tests/tgsw_test.cpp	/^    TEST_F(TGswTest, tGswExternMulToTLwe) {$/;"	f	namespace:__anonfeb37f530111
TEST_F	src/tests/tgsw_test.cpp	/^    TEST_F(TGswTest, tGswExternProduct) {$/;"	f	namespace:__anonfeb37f530111
TEST_F	src/tests/tgsw_test.cpp	/^    TEST_F(TGswTest, tGswKeyGen) {$/;"	f	namespace:__anonfeb37f530111
TEST_F	src/tests/tgsw_test.cpp	/^    TEST_F(TGswTest, tGswMulByXaiMinusOne) {$/;"	f	namespace:__anonfeb37f530111
TEST_F	src/tests/tlwe_test.cpp	/^    TEST_F (TLweTest, tLweSymEncryptPhaseDecrypt) {$/;"	f	namespace:__anonc028f2ea0111
TEST_F	src/tests/tlwe_test.cpp	/^    TEST_F (TLweTest, tLweSymEncryptPhaseDecryptT) {$/;"	f	namespace:__anonc028f2ea0111
TEST_F	src/tests/tlwe_test.cpp	/^    TEST_F(TLweTest, tLweAddMulTo) {$/;"	f	namespace:__anonc028f2ea0111
TEST_F	src/tests/tlwe_test.cpp	/^    TEST_F(TLweTest, tLweAddRTTo) {$/;"	f	namespace:__anonc028f2ea0111
TEST_F	src/tests/tlwe_test.cpp	/^    TEST_F(TLweTest, tLweAddTTo) {$/;"	f	namespace:__anonc028f2ea0111
TEST_F	src/tests/tlwe_test.cpp	/^    TEST_F(TLweTest, tLweAddTo) {$/;"	f	namespace:__anonc028f2ea0111
TEST_F	src/tests/tlwe_test.cpp	/^    TEST_F(TLweTest, tLweClear) {$/;"	f	namespace:__anonc028f2ea0111
TEST_F	src/tests/tlwe_test.cpp	/^    TEST_F(TLweTest, tLweCopy) {$/;"	f	namespace:__anonc028f2ea0111
TEST_F	src/tests/tlwe_test.cpp	/^    TEST_F(TLweTest, tLweKeyGen) {$/;"	f	namespace:__anonc028f2ea0111
TEST_F	src/tests/tlwe_test.cpp	/^    TEST_F(TLweTest, tLweNoiselessTrivial) {$/;"	f	namespace:__anonc028f2ea0111
TEST_F	src/tests/tlwe_test.cpp	/^    TEST_F(TLweTest, tLweSubMulTo) {$/;"	f	namespace:__anonc028f2ea0111
TEST_F	src/tests/tlwe_test.cpp	/^    TEST_F(TLweTest, tLweSubTo) {$/;"	f	namespace:__anonc028f2ea0111
TEST_F	src/tests/zpf_for_bootstrap_detail.cpp	/^    TEST_F(TfheCreateBootstrapKeyTest, BOOTSTRAP_DETAILS) {$/;"	f	namespace:__anonc07144f40111
TEST_FILTER	src/tests/googletest/googletest/test/gtest_shuffle_test.py	/^TEST_FILTER = 'A*.A:A*.B:C*'$/;"	v
TEST_F_before_TEST_in_same_test_case	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^class TEST_F_before_TEST_in_same_test_case : public testing::Test {$/;"	c	file:
TEST_LIST	src/tests/googletest/googletest/test/gtest_catch_exceptions_test.py	/^TEST_LIST = gtest_test_utils.Subprocess($/;"	v
TEST_MULTIPLE_LEAKS	src/tests/googletest/googlemock/test/gmock_leak_test.py	/^TEST_MULTIPLE_LEAKS = [PROGRAM_PATH, '--gtest_filter=*MultipleLeaked*']$/;"	v
TEST_P	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_P(BipartiteNonSquareTest, Exhaustive) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_P	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_P(BipartiteRandomTest, LargerNets) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_P	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TEST_P(BipartiteTest, Exhaustive) {$/;"	f	namespace:testing::gmock_matchers_test
TEST_P	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^# define TEST_P(/;"	d
TEST_P	src/tests/googletest/googletest/samples/sample7_unittest.cc	/^TEST_P(PrimeTableTest, CanGetNextPrime) {$/;"	f
TEST_P	src/tests/googletest/googletest/samples/sample7_unittest.cc	/^TEST_P(PrimeTableTest, ReturnsFalseForNonPrimes) {$/;"	f
TEST_P	src/tests/googletest/googletest/samples/sample7_unittest.cc	/^TEST_P(PrimeTableTest, ReturnsTrueForPrimes) {$/;"	f
TEST_P	src/tests/googletest/googletest/samples/sample8_unittest.cc	/^TEST_P(PrimeTableTest, CanGetNextPrime) {$/;"	f
TEST_P	src/tests/googletest/googletest/samples/sample8_unittest.cc	/^TEST_P(PrimeTableTest, ReturnsFalseForNonPrimes) {$/;"	f
TEST_P	src/tests/googletest/googletest/samples/sample8_unittest.cc	/^TEST_P(PrimeTableTest, ReturnsTrueForPrimes) {$/;"	f
TEST_P	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST_P(CommentTest, TestsCorrectlyReportUnstreamableParams) {$/;"	f
TEST_P	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST_P(CustomFunctionNamingTest, CustomTestNames) {}$/;"	f
TEST_P	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST_P(CustomFunctorNamingTest, CustomTestNames) {}$/;"	f
TEST_P	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST_P(CustomIntegerNamingTest, TestsReportCorrectNames) {$/;"	f
TEST_P	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST_P(CustomLambdaNamingTest, CustomTestNames) {}$/;"	f
TEST_P	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST_P(CustomStructNamingTest, TestsReportCorrectNames) {$/;"	f
TEST_P	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST_P(ExternalGeneratorTest, ExternalGenerator) {$/;"	f
TEST_P	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST_P(ExternalInstantiationTest, IsMultipleOf33) {$/;"	f
TEST_P	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST_P(GeneratorEvaluationTest, GeneratorsEvaluatedInMain) {$/;"	f
TEST_P	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST_P(InstantiationInMultipleTranslaionUnitsTest, IsMultipleOf42) {$/;"	f
TEST_P	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST_P(MultipleInstantiationTest, AllowsMultipleInstances) {$/;"	f
TEST_P	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST_P(NamingTest, TestsReportCorrectNamesAndParameters) {$/;"	f
TEST_P	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST_P(ParameterizedDerivedTest, SeesSequence) {$/;"	f
TEST_P	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST_P(SeparateInstanceTest, TestsRunInSeparateInstances) {$/;"	f
TEST_P	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST_P(StatefulNamingTest, TestsReportCorrectNames) {$/;"	f
TEST_P	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^TEST_P(TestGenerationTest, TestsExpandedAndRun) {$/;"	f
TEST_P	src/tests/googletest/googletest/test/gtest_filter_unittest_.cc	/^TEST_P(ParamTest, TestX) {$/;"	f	namespace:__anon37ac2de30111
TEST_P	src/tests/googletest/googletest/test/gtest_filter_unittest_.cc	/^TEST_P(ParamTest, TestY) {$/;"	f	namespace:__anon37ac2de30111
TEST_P	src/tests/googletest/googletest/test/gtest_list_tests_unittest_.cc	/^TEST_P(ValueParamTest, TestA) {$/;"	f
TEST_P	src/tests/googletest/googletest/test/gtest_list_tests_unittest_.cc	/^TEST_P(ValueParamTest, TestB) {$/;"	f
TEST_P	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST_P(FailingParamTest, Fails) {$/;"	f
TEST_P	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST_P(ParamTest, Failure) {$/;"	f
TEST_P	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TEST_P(ParamTest, Success) {$/;"	f
TEST_P	src/tests/googletest/googletest/test/gtest_repeat_test.cc	/^TEST_P(MyParamTest, ShouldPass) {$/;"	f	namespace:__anon83eb3b5f0111
TEST_P	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TEST_P(CodeLocationForTESTP, Verify) {$/;"	f	namespace:testing
TEST_P	src/tests/googletest/googletest/test/gtest_xml_output_unittest_.cc	/^TEST_P(ValueParamTest, AnotherTestThatHasValueParamAttribute) {}$/;"	f
TEST_P	src/tests/googletest/googletest/test/gtest_xml_output_unittest_.cc	/^TEST_P(ValueParamTest, HasValueParamAttribute) {}$/;"	f
TEST_PARAM_MESSAGE_8_KS_PBS_GAUSSAIN	src/libtfhe-superaic-core/include/classic_PBS_parameters.h	/^EXPORT const ClassicPBSParameters TEST_PARAM_MESSAGE_8_KS_PBS_GAUSSAIN = {$/;"	v	typeref:typename:EXPORT const ClassicPBSParameters
TEST_PARAM_MESSAGE_8_KS_PBS_GAUSSAIN	src/tests/classic_PBS_parameters.cpp	/^const ClassicPBSParameters TEST_PARAM_MESSAGE_8_KS_PBS_GAUSSAIN = {$/;"	v	typeref:typename:const ClassicPBSParameters
TEST_REGEX	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^TEST_REGEX = re.compile(r'^\\[\\s*RUN\\s*\\].*\\.(\\w+(\/\\w+)?)')$/;"	v
TEST_THREW_EXCEPTION	src/tests/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h	/^    TEST_THREW_EXCEPTION,$/;"	e	enum:testing::internal::DeathTest::AbortReason
TEST_WITH_EXPECT_CALL	src/tests/googletest/googlemock/test/gmock_leak_test.py	/^TEST_WITH_EXPECT_CALL = [PROGRAM_PATH, '--gtest_filter=*ExpectCall*']$/;"	v
TEST_WITH_ON_CALL	src/tests/googletest/googlemock/test/gmock_leak_test.py	/^TEST_WITH_ON_CALL = [PROGRAM_PATH, '--gtest_filter=*OnCall*']$/;"	v
TEST_before_TEST_F_in_same_test_case	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^class TEST_before_TEST_F_in_same_test_case : public testing::Test {$/;"	c	file:
TFHE_ACC	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^class TFHE_ACC{$/;"	c	namespace:tfhe_superaic
TFHE_ACC	src/libtfhe-superaic-acc/tfhe_acc.cpp	/^TFHE_ACC::TFHE_ACC(int max_sessions):$/;"	f	class:tfhe_superaic::TFHE_ACC
TFHE_ACC	src/libtfhe-superaic-acc/tfhe_acc.cpp	/^TFHE_ACC::TFHE_ACC(int max_sessions, ACC_TYPE type, CAPABILITY capability):$/;"	f	class:tfhe_superaic::TFHE_ACC
TFHE_Comm_Pack	src/libtfhe-superaic-core/include/tfhe_package.h	/^typedef struct __attribute__ ((packed)) TFHE_Comm_Pack{$/;"	s
TFHE_Comm_Pack_t	src/libtfhe-superaic-core/include/tfhe_package.h	/^}TFHE_Comm_Pack_t;$/;"	t	typeref:struct:TFHE_Comm_Pack
TFHE_GARBAGE_COLLECTOR_H	src/libtfhe-superaic-core/include/tfhe_garbage_collector.h	/^#define TFHE_GARBAGE_COLLECTOR_H$/;"	d
TFHE_GATE_BOOTSTRAPPING_FUNCTIONS_H	src/libtfhe-superaic-core/include/tfhe_gate_bootstrapping_functions.h	/^#define TFHE_GATE_BOOTSTRAPPING_FUNCTIONS_H$/;"	d
TFHE_GATE_BOOTSTRAPPING_STRUCTURES_H	src/libtfhe-superaic-core/include/tfhe_gate_bootstrapping_structures.h	/^#define TFHE_GATE_BOOTSTRAPPING_STRUCTURES_H$/;"	d
TFHE_GENERIC_STREAMS_H	src/libtfhe-superaic-core/include/tfhe_generic_streams.h	/^#define TFHE_GENERIC_STREAMS_H$/;"	d
TFHE_GENERIC_TEMPLATES	src/libtfhe-superaic-core/include/tfhe_generic_templates.h	/^#define TFHE_GENERIC_TEMPLATES$/;"	d
TFHE_H	src/libtfhe-superaic-core/include/tfhe.h	/^#define TFHE_H$/;"	d
TFHE_IO_H	src/libtfhe-superaic-core/include/tfhe_io.h	/^#define TFHE_IO_H$/;"	d
TFHE_PACKAGE_H	src/libtfhe-superaic-core/include/tfhe_package.h	/^#define TFHE_PACKAGE_H$/;"	d
TFHE_Payload	src/libtfhe-superaic-core/include/tfhe_package.h	/^class TFHE_Payload $/;"	c
TFHE_Payload	src/libtfhe-superaic-core/tfhe_package.cpp	/^TFHE_Payload::TFHE_Payload(TFHE_PayloadType_e payload_type)$/;"	f	class:TFHE_Payload
TFHE_PayloadType_	src/libtfhe-superaic-core/include/tfhe_package.h	/^typedef enum TFHE_PayloadType_{$/;"	g
TFHE_PayloadType_ACK_NG	src/libtfhe-superaic-core/include/tfhe_package.h	/^    TFHE_PayloadType_ACK_NG = 2 ,$/;"	e	enum:TFHE_PayloadType_
TFHE_PayloadType_ACK_OK	src/libtfhe-superaic-core/include/tfhe_package.h	/^    TFHE_PayloadType_ACK_OK = 1,$/;"	e	enum:TFHE_PayloadType_
TFHE_PayloadType_Greeting	src/libtfhe-superaic-core/include/tfhe_package.h	/^    TFHE_PayloadType_Greeting = 0,$/;"	e	enum:TFHE_PayloadType_
TFHE_PayloadType_QUERY_BT_KEY_ID	src/libtfhe-superaic-core/include/tfhe_package.h	/^    TFHE_PayloadType_QUERY_BT_KEY_ID = 4,     \/\/ 发送本地bootstrap key的hash code，如果/;"	e	enum:TFHE_PayloadType_
TFHE_PayloadType_SEND_BT_KEY_STRING	src/libtfhe-superaic-core/include/tfhe_package.h	/^    TFHE_PayloadType_SEND_BT_KEY_STRING = 3,  $/;"	e	enum:TFHE_PayloadType_
TFHE_PayloadType_SESSION_ID	src/libtfhe-superaic-core/include/tfhe_package.h	/^    TFHE_PayloadType_SESSION_ID = 5 ,         \/\/ 发送bootstrap key 对应的session ID，在/;"	e	enum:TFHE_PayloadType_
TFHE_PayloadType_e	src/libtfhe-superaic-core/include/tfhe_package.h	/^}TFHE_PayloadType_e;$/;"	t	typeref:enum:TFHE_PayloadType_
TFHE_SESSION_H	src/libtfhe-superaic-core/include/tfhe_session.h	/^#define TFHE_SESSION_H$/;"	d
TFHE_TESTING_ENVIRONMENT	src/tests/io_test.cpp	/^#define TFHE_TESTING_ENVIRONMENT$/;"	d	file:
TFHE_TEST_ENVIRONMENT	src/tests/bootstrapping_classic_PBS_parameters_test.cpp	/^#define TFHE_TEST_ENVIRONMENT /;"	d	file:
TFHE_TEST_ENVIRONMENT	src/tests/bootstrapping_direct_test.cpp	/^#define TFHE_TEST_ENVIRONMENT /;"	d	file:
TFHE_TEST_ENVIRONMENT	src/tests/bootstrapping_test.cpp	/^#define TFHE_TEST_ENVIRONMENT /;"	d	file:
TFHE_TEST_ENVIRONMENT	src/tests/decrypt_with_plaintext_modulus.cpp	/^#define TFHE_TEST_ENVIRONMENT /;"	d	file:
TFHE_TEST_ENVIRONMENT	src/tests/lwekeyswitch_test.cpp	/^#define TFHE_TEST_ENVIRONMENT /;"	d	file:
TFHE_TEST_ENVIRONMENT	src/tests/macros_decrypt_with_plaintext_modulus_macros.cpp	/^#define TFHE_TEST_ENVIRONMENT /;"	d	file:
TFHE_TEST_ENVIRONMENT	src/tests/macros_modSwitch_with_plaintext_modulus_macros.cpp	/^#define TFHE_TEST_ENVIRONMENT /;"	d	file:
TFHE_TEST_ENVIRONMENT	src/tests/ops_add.cpp	/^#define TFHE_TEST_ENVIRONMENT /;"	d	file:
TFHE_TEST_ENVIRONMENT	src/tests/ops_add_with_carry.cpp	/^#define TFHE_TEST_ENVIRONMENT /;"	d	file:
TFHE_TEST_ENVIRONMENT	src/tests/small_size_test.cpp	/^#define TFHE_TEST_ENVIRONMENT /;"	d	file:
TFHE_TEST_ENVIRONMENT	src/tests/tgsw_direct_test.cpp	/^#define TFHE_TEST_ENVIRONMENT /;"	d	file:
TFHE_TEST_ENVIRONMENT	src/tests/tgsw_test.cpp	/^#define TFHE_TEST_ENVIRONMENT /;"	d	file:
TFHE_TEST_ENVIRONMENT	src/tests/zpf_for_bootstrap_detail.cpp	/^#define TFHE_TEST_ENVIRONMENT /;"	d	file:
TFheGateBootstrappingCloudKeySet	src/libtfhe-superaic-core/include/tfhe_gate_bootstrapping_structures.h	/^struct TFheGateBootstrappingCloudKeySet {$/;"	s
TFheGateBootstrappingCloudKeySet	src/libtfhe-superaic-core/include/tfhe_superaic_torus.h	/^typedef struct TFheGateBootstrappingCloudKeySet TFheGateBootstrappingCloudKeySet;$/;"	t	typeref:struct:TFheGateBootstrappingCloudKeySet
TFheGateBootstrappingCloudKeySet	src/libtfhe-superaic-core/tfhe_gate_bootstrapping_structures.cpp	/^TFheGateBootstrappingCloudKeySet::TFheGateBootstrappingCloudKeySet($/;"	f	class:TFheGateBootstrappingCloudKeySet
TFheGateBootstrappingParameterSet	src/libtfhe-superaic-core/include/tfhe_gate_bootstrapping_structures.h	/^struct TFheGateBootstrappingParameterSet {$/;"	s
TFheGateBootstrappingParameterSet	src/libtfhe-superaic-core/include/tfhe_superaic_torus.h	/^typedef struct TFheGateBootstrappingParameterSet TFheGateBootstrappingParameterSet;$/;"	t	typeref:struct:TFheGateBootstrappingParameterSet
TFheGateBootstrappingParameterSet	src/libtfhe-superaic-core/tfhe_gate_bootstrapping_structures.cpp	/^TFheGateBootstrappingParameterSet::TFheGateBootstrappingParameterSet(const int32_t ks_t, const i/;"	f	class:TFheGateBootstrappingParameterSet
TFheGateBootstrappingSecretKeySet	src/libtfhe-superaic-core/include/tfhe_gate_bootstrapping_structures.h	/^struct TFheGateBootstrappingSecretKeySet {$/;"	s
TFheGateBootstrappingSecretKeySet	src/libtfhe-superaic-core/include/tfhe_superaic_torus.h	/^typedef struct TFheGateBootstrappingSecretKeySet TFheGateBootstrappingSecretKeySet;$/;"	t	typeref:struct:TFheGateBootstrappingSecretKeySet
TFheGateBootstrappingSecretKeySet	src/libtfhe-superaic-core/tfhe_gate_bootstrapping_structures.cpp	/^TFheGateBootstrappingSecretKeySet::TFheGateBootstrappingSecretKeySet($/;"	f	class:TFheGateBootstrappingSecretKeySet
TGSW x TGLWE	docs/code_note.md	/^## TGSW x TGLWE$/;"	s	chapter:TGsw
TGSWSample的内存格式	docs/code_note.md	/^## TGSWSample的内存格式$/;"	s	chapter:TGsw
TGSW_FUNCTIONS_H	src/libtfhe-superaic-core/include/tgsw_functions.h	/^#define TGSW_FUNCTIONS_H$/;"	d
TGSW_H	src/libtfhe-superaic-core/include/tgsw.h	/^#define TGSW_H$/;"	d
TGSW_KEY_TYPE_UID	src/libtfhe-superaic-core/include/tfhe_generic_streams.h	/^const int32_t TGSW_KEY_TYPE_UID = 169;$/;"	v	typeref:typename:const int32_t
TGSW_SAMPLE_FFT_TYPE_UID	src/libtfhe-superaic-core/include/tfhe_generic_streams.h	/^const int32_t TGSW_SAMPLE_FFT_TYPE_UID = 167;$/;"	v	typeref:typename:const int32_t
TGSW_SAMPLE_TYPE_UID	src/libtfhe-superaic-core/include/tfhe_generic_streams.h	/^const int32_t TGSW_SAMPLE_TYPE_UID = 168;$/;"	v	typeref:typename:const int32_t
TGlev	docs/code_note.md	/^# TGlev  $/;"	c
TGsw	docs/code_note.md	/^# TGsw$/;"	c
TGswDirectTest	src/tests/tgsw_direct_test.cpp	/^    class TGswDirectTest : public ::testing::Test {$/;"	c	namespace:__anon2d2168ad0111	file:
TGswFakeTest	src/tests/tgsw_test.cpp	/^    class TGswFakeTest : public ::testing::Test {$/;"	c	namespace:__anonfeb37f530111	file:
TGswKey	docs/code_note.md	/^## TGswKey   $/;"	s	chapter:TGsw
TGswKey	src/libtfhe-superaic-core/include/tfhe_superaic_torus.h	/^typedef struct TGswKey          TGswKey;$/;"	t	typeref:struct:TGswKey
TGswKey	src/libtfhe-superaic-core/include/tgsw.h	/^struct TGswKey {$/;"	s
TGswKey	src/libtfhe-superaic-core/tgsw.cpp	/^TGswKey::TGswKey(const TGswParams *params) :$/;"	f	class:TGswKey
TGswParams	docs/code_note.md	/^## TGswParams$/;"	s	chapter:TGsw
TGswParams	src/libtfhe-superaic-core/include/tfhe_superaic_torus.h	/^typedef struct TGswParams       TGswParams;$/;"	t	typeref:struct:TGswParams
TGswParams	src/libtfhe-superaic-core/include/tgsw.h	/^struct TGswParams {$/;"	s
TGswParams	src/libtfhe-superaic-core/tgsw.cpp	/^TGswParams::TGswParams(int32_t l, int32_t Bgbit, const TLweParams *tlwe_params) :$/;"	f	class:TGswParams
TGswSample	src/libtfhe-superaic-core/include/tfhe_superaic_torus.h	/^typedef struct TGswSample       TGswSample;$/;"	t	typeref:struct:TGswSample
TGswSample	src/libtfhe-superaic-core/include/tgsw.h	/^    inline TGswSample(TLweSample *all_sample, TLweSample **bloc_sample, const int32_t k, const i/;"	f	struct:TGswSample
TGswSample	src/libtfhe-superaic-core/include/tgsw.h	/^struct TGswSample {$/;"	s
TGswSampleFFT	src/libtfhe-superaic-core/include/tfhe_superaic_torus.h	/^typedef struct TGswSampleFFT       TGswSampleFFT;$/;"	t	typeref:struct:TGswSampleFFT
TGswSampleFFT	src/libtfhe-superaic-core/include/tgsw.h	/^struct TGswSampleFFT {$/;"	s
TGswSampleFFT	src/libtfhe-superaic-core/tgsw.cpp	/^TGswSampleFFT::TGswSampleFFT(const TGswParams *params, TLweSampleFFT *all_samples_raw) : k(param/;"	f	class:TGswSampleFFT
TGswTest	src/tests/small_size_test.cpp	/^    class TGswTest : public ::testing::Test {$/;"	c	namespace:__anon9baab4410111	file:
TGswTest	src/tests/tgsw_test.cpp	/^    class TGswTest : public ::testing::Test {$/;"	c	namespace:__anonfeb37f530111	file:
THREAD_ANNOTATION_ATTRIBUTE__	src/muduo/muduo/base/Mutex.h	/^#define THREAD_ANNOTATION_ATTRIBUTE__(/;"	d
THREW	src/tests/googletest/googletest/src/gtest-death-test.cc	/^enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };$/;"	e	enum:testing::internal::DeathTestOutcome	file:
THROW_ON_FAILURE	src/tests/googletest/googletest/test/gtest_throw_on_failure_test.py	/^THROW_ON_FAILURE = 'gtest_throw_on_failure'$/;"	v
THROW_ON_FAILURE_ENV_VAR	src/tests/googletest/googletest/test/gtest_break_on_failure_unittest.py	/^THROW_ON_FAILURE_ENV_VAR = 'GTEST_THROW_ON_FAILURE'$/;"	v
TIMEOUT	src/muduo/muduo/net/protorpc/rpc.proto	/^  TIMEOUT = 6;$/;"	e	enum:muduo.net.ErrorCode
TLWE_FUNCTIONS_H	src/libtfhe-superaic-core/include/tlwe_functions.h	/^#define TLWE_FUNCTIONS_H$/;"	d
TLWE_KEY_TYPE_UID	src/libtfhe-superaic-core/include/tfhe_generic_streams.h	/^const int32_t TLWE_KEY_TYPE_UID = 85;$/;"	v	typeref:typename:const int32_t
TLWE_SAMPLE_FFT_TYPE_UID	src/libtfhe-superaic-core/include/tfhe_generic_streams.h	/^const int32_t TLWE_SAMPLE_FFT_TYPE_UID = 83;$/;"	v	typeref:typename:const int32_t
TLWE_SAMPLE_TYPE_UID	src/libtfhe-superaic-core/include/tfhe_generic_streams.h	/^const int32_t TLWE_SAMPLE_TYPE_UID = 84;$/;"	v	typeref:typename:const int32_t
TLwe	docs/code_note.md	/^# TLwe$/;"	c
TLweKey	docs/code_note.md	/^## TLweKey   $/;"	s	chapter:TLwe
TLweKey	src/libtfhe-superaic-core/include/tfhe_superaic_torus.h	/^typedef struct TLweKey          TLweKey;$/;"	t	typeref:struct:TLweKey
TLweKey	src/libtfhe-superaic-core/include/tlwe.h	/^struct TLweKey {$/;"	s
TLweKey	src/libtfhe-superaic-core/tlwe.cpp	/^TLweKey::TLweKey(const TLweParams *params) :$/;"	f	class:TLweKey
TLweParams	src/libtfhe-superaic-core/include/tfhe_superaic_torus.h	/^typedef struct TLweParams       TLweParams;$/;"	t	typeref:struct:TLweParams
TLweParams	src/libtfhe-superaic-core/include/tlwe.h	/^struct TLweParams {$/;"	s
TLweParams	src/libtfhe-superaic-core/tlwe.cpp	/^TLweParams::TLweParams(int32_t N, int32_t k, int32_t plaintext_modulus, double alpha_min, double/;"	f	class:TLweParams
TLweSample	docs/code_note.md	/^## TLweSample $/;"	s	chapter:TLwe
TLweSample	src/libtfhe-superaic-core/include/tfhe_superaic_torus.h	/^typedef struct TLweSample       TLweSample;$/;"	t	typeref:struct:TLweSample
TLweSample	src/libtfhe-superaic-core/include/tlwe.h	/^struct TLweSample {$/;"	s
TLweSample	src/libtfhe-superaic-core/tlwe.cpp	/^TLweSample::TLweSample(const TLweParams *params) : k(params->k) {$/;"	f	class:TLweSample
TLweSampleFFT	src/libtfhe-superaic-core/include/tfhe_superaic_torus.h	/^typedef struct TLweSampleFFT       TLweSampleFFT;$/;"	t	typeref:struct:TLweSampleFFT
TLweSampleFFT	src/libtfhe-superaic-core/include/tlwe.h	/^struct TLweSampleFFT {$/;"	s
TLweSampleFFT	src/libtfhe-superaic-core/tlwe.cpp	/^TLweSampleFFT::TLweSampleFFT(const TLweParams *params, LagrangeHalfCPolynomial *arr, double curr/;"	f	class:TLweSampleFFT
TLweTest	src/tests/small_size_test.cpp	/^    class TLweTest : public ::testing::Test {$/;"	c	namespace:__anon9baab4410111	file:
TLweTest	src/tests/tlwe_test.cpp	/^    class TLweTest : public ::testing::Test {$/;"	c	namespace:__anonc028f2ea0111	file:
TOKEN_TABLE	src/tests/googletest/googletest/scripts/pump.py	/^TOKEN_TABLE = [$/;"	v
TOTAL_MUL_EXECULTORS	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint8_t TOTAL_MUL_EXECULTORS = 4;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint8_t
TOTAL_SHARDS_ENV_VAR	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^TOTAL_SHARDS_ENV_VAR = 'GTEST_TOTAL_SHARDS'$/;"	v
TOTAL_SHARDS_ENV_VAR	src/tests/googletest/googletest/test/gtest_shuffle_test.py	/^TOTAL_SHARDS_ENV_VAR = 'GTEST_TOTAL_SHARDS'$/;"	v
TPRVector	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  typedef std::vector<TestPartResult> TPRVector;$/;"	t	class:__anonf780395f0111::TestResultTest	typeref:typename:std::vector<TestPartResult>	file:
TRACE	src/muduo/muduo/base/Logging.h	/^    TRACE,$/;"	e	enum:muduo::Logger::LogLevel
TRY_ACQUIRE	src/muduo/muduo/base/Mutex.h	/^#define TRY_ACQUIRE(/;"	d
TRY_ACQUIRE_SHARED	src/muduo/muduo/base/Mutex.h	/^#define TRY_ACQUIRE_SHARED(/;"	d
TYPED_TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TYPED_TEST(ContainerEqTest, DuplicateDifference) {$/;"	f	namespace:testing::gmock_matchers_test
TYPED_TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TYPED_TEST(ContainerEqTest, EqualsSelf) {$/;"	f	namespace:testing::gmock_matchers_test
TYPED_TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TYPED_TEST(ContainerEqTest, ValueAdded) {$/;"	f	namespace:testing::gmock_matchers_test
TYPED_TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TYPED_TEST(ContainerEqTest, ValueAddedAndRemoved) {$/;"	f	namespace:testing::gmock_matchers_test
TYPED_TEST	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^TYPED_TEST(ContainerEqTest, ValueMissing) {$/;"	f	namespace:testing::gmock_matchers_test
TYPED_TEST	src/tests/googletest/googletest/include/gtest/gtest-typed-test.h	/^# define TYPED_TEST(/;"	d
TYPED_TEST	src/tests/googletest/googletest/samples/sample6_unittest.cc	/^TYPED_TEST(PrimeTableTest, CanGetNextPrime) {$/;"	f
TYPED_TEST	src/tests/googletest/googletest/samples/sample6_unittest.cc	/^TYPED_TEST(PrimeTableTest, ReturnsFalseForNonPrimes) {$/;"	f
TYPED_TEST	src/tests/googletest/googletest/samples/sample6_unittest.cc	/^TYPED_TEST(PrimeTableTest, ReturnsTrueForPrimes) {$/;"	f
TYPED_TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TYPED_TEST(RETest, FullMatchWorks) {$/;"	f	namespace:testing::internal
TYPED_TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TYPED_TEST(RETest, ImplicitConstructorWorks) {$/;"	f	namespace:testing::internal
TYPED_TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TYPED_TEST(RETest, PartialMatchWorks) {$/;"	f	namespace:testing::internal
TYPED_TEST	src/tests/googletest/googletest/test/gtest-port_test.cc	/^TYPED_TEST(RETest, RejectsInvalidRegex) {$/;"	f	namespace:testing::internal
TYPED_TEST	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^TYPED_TEST(CommonTest, ValuesAreCorrect) {$/;"	f
TYPED_TEST	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^TYPED_TEST(CommonTest, ValuesAreStillCorrect) {$/;"	f
TYPED_TEST	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^TYPED_TEST(NumericTest, DefaultIsZero) {$/;"	f	namespace:library1
TYPED_TEST	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^TYPED_TEST(TypedTest1, A) {}$/;"	f
TYPED_TEST	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^TYPED_TEST(TypedTest2, A) {}$/;"	f
TYPED_TEST	src/tests/googletest/googletest/test/gtest-unittest-api_test.cc	/^TYPED_TEST(TestCaseWithCommentTest, Dummy) {}$/;"	f	namespace:testing::internal
TYPED_TEST	src/tests/googletest/googletest/test/gtest_list_tests_unittest_.cc	/^TYPED_TEST(TypedTest, TestA) {$/;"	f
TYPED_TEST	src/tests/googletest/googletest/test/gtest_list_tests_unittest_.cc	/^TYPED_TEST(TypedTest, TestB) {$/;"	f
TYPED_TEST	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TYPED_TEST(ATypedDeathTest, ShouldRunFirst) {$/;"	f
TYPED_TEST	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TYPED_TEST(TypedTest, Failure) {$/;"	f
TYPED_TEST	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TYPED_TEST(TypedTest, Success) {$/;"	f
TYPED_TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TYPED_TEST(CodeLocationForTYPEDTEST, Verify) {$/;"	f	namespace:testing
TYPED_TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TYPED_TEST(DISABLED_TypedTest, ShouldNotRun) {$/;"	f	namespace:__anonf780395f0111
TYPED_TEST	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TYPED_TEST(TypedTest, DISABLED_ShouldNotRun) {$/;"	f	namespace:__anonf780395f0111
TYPED_TEST	src/tests/googletest/googletest/test/gtest_xml_output_unittest_.cc	/^TYPED_TEST(TypedTest, HasTypeParamAttribute) {}$/;"	f
TYPED_TEST_CASE	src/tests/googletest/googletest/include/gtest/gtest-typed-test.h	/^# define TYPED_TEST_CASE(/;"	d
TYPED_TEST_CASE_P	src/tests/googletest/googletest/include/gtest/gtest-typed-test.h	/^# define TYPED_TEST_CASE_P(/;"	d
TYPED_TEST_P	src/tests/googletest/googletest/include/gtest/gtest-typed-test.h	/^# define TYPED_TEST_P(/;"	d
TYPED_TEST_P	src/tests/googletest/googletest/samples/sample6_unittest.cc	/^TYPED_TEST_P(PrimeTableTest2, CanGetNextPrime) {$/;"	f
TYPED_TEST_P	src/tests/googletest/googletest/samples/sample6_unittest.cc	/^TYPED_TEST_P(PrimeTableTest2, ReturnsFalseForNonPrimes) {$/;"	f
TYPED_TEST_P	src/tests/googletest/googletest/samples/sample6_unittest.cc	/^TYPED_TEST_P(PrimeTableTest2, ReturnsTrueForPrimes) {$/;"	f
TYPED_TEST_P	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^TYPED_TEST_P(DerivedTest, ValuesAreCorrect) {$/;"	f
TYPED_TEST_P	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^TYPED_TEST_P(DerivedTest, ValuesAreStillCorrect) {$/;"	f
TYPED_TEST_P	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^TYPED_TEST_P(NumericTest, DefaultIsZero) {$/;"	f	namespace:library2
TYPED_TEST_P	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^TYPED_TEST_P(NumericTest, ZeroIsLessThanOne) {$/;"	f	namespace:library2
TYPED_TEST_P	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^TYPED_TEST_P(TrimmedTest, Test1) { EXPECT_STREQ("Test1", GetTestName()); }$/;"	f	namespace:library2
TYPED_TEST_P	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^TYPED_TEST_P(TrimmedTest, Test2) { EXPECT_STREQ("Test2", GetTestName()); }$/;"	f	namespace:library2
TYPED_TEST_P	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^TYPED_TEST_P(TrimmedTest, Test3) { EXPECT_STREQ("Test3", GetTestName()); }$/;"	f	namespace:library2
TYPED_TEST_P	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^TYPED_TEST_P(TrimmedTest, Test4) { EXPECT_STREQ("Test4", GetTestName()); }$/;"	f	namespace:library2
TYPED_TEST_P	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^TYPED_TEST_P(TrimmedTest, Test5) { EXPECT_STREQ("Test5", GetTestName()); }$/;"	f	namespace:library2
TYPED_TEST_P	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^TYPED_TEST_P(TypedTestP1, A) {}$/;"	f
TYPED_TEST_P	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^TYPED_TEST_P(TypedTestP1, B) {}$/;"	f
TYPED_TEST_P	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^TYPED_TEST_P(TypedTestP2, A) {}$/;"	f
TYPED_TEST_P	src/tests/googletest/googletest/test/gtest-typed-test_test.h	/^TYPED_TEST_P(ContainerTest, CanBeDefaultConstructed) {$/;"	f
TYPED_TEST_P	src/tests/googletest/googletest/test/gtest-typed-test_test.h	/^TYPED_TEST_P(ContainerTest, InitialSizeIsZero) {$/;"	f
TYPED_TEST_P	src/tests/googletest/googletest/test/gtest_list_tests_unittest_.cc	/^TYPED_TEST_P(TypeParamTest, TestA) {$/;"	f
TYPED_TEST_P	src/tests/googletest/googletest/test/gtest_list_tests_unittest_.cc	/^TYPED_TEST_P(TypeParamTest, TestB) {$/;"	f
TYPED_TEST_P	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TYPED_TEST_P(ATypeParamDeathTest, ShouldRunFirst) {$/;"	f
TYPED_TEST_P	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TYPED_TEST_P(TypedTestP, Failure) {$/;"	f
TYPED_TEST_P	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^TYPED_TEST_P(TypedTestP, Success) {$/;"	f
TYPED_TEST_P	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TYPED_TEST_P(CodeLocationForTYPEDTESTP, Verify) {$/;"	f	namespace:testing
TYPED_TEST_P	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TYPED_TEST_P(DISABLED_TypedTestP, ShouldNotRun) {$/;"	f	namespace:__anonf780395f0111
TYPED_TEST_P	src/tests/googletest/googletest/test/gtest_unittest.cc	/^TYPED_TEST_P(TypedTestP, DISABLED_ShouldNotRun) {$/;"	f	namespace:__anonf780395f0111
TYPED_TEST_P	src/tests/googletest/googletest/test/gtest_xml_output_unittest_.cc	/^TYPED_TEST_P(TypeParameterizedTestCase, HasTypeParamAttribute) {}$/;"	f
TYPES	src/tests/googletest/googlemock/scripts/generator/cpp/keywords.py	/^TYPES = set('bool char int long short double float void wchar_t unsigned signed'.split())$/;"	v
TYPE_MODIFIERS	src/tests/googletest/googlemock/scripts/generator/cpp/keywords.py	/^TYPE_MODIFIERS = set('auto register const inline extern static virtual volatile mutable'.split()/;"	v
T_must_be_complete_type	src/muduo/muduo/base/Singleton.h	/^    typedef char T_must_be_complete_type[sizeof(T) == 0 ? -1 : 1];$/;"	t	function:muduo::Singleton::destroy	typeref:typename:char[sizeof (T)==0?-1:1]
T_must_be_complete_type	src/muduo/muduo/base/ThreadLocal.h	/^    typedef char T_must_be_complete_type[sizeof(T) == 0 ? -1 : 1];$/;"	t	function:muduo::ThreadLocal::destructor	typeref:typename:char[sizeof (T)==0?-1:1]
T_must_be_complete_type	src/muduo/muduo/base/ThreadLocalSingleton.h	/^    typedef char T_must_be_complete_type[sizeof(T) == 0 ? -1 : 1];$/;"	t	function:muduo::ThreadLocalSingleton::destructor	typeref:typename:char[sizeof (T)==0?-1:1]
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T14> Tail;$/;"	t	struct:testing::internal::Templates14	typeref:typename:Templates13<T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14>
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> Tail;$/;"	t	struct:testing::internal::Templates27
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> Tail;$/;"	t	struct:testing::internal::Templates26
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> Tail;$/;"	t	struct:testing::internal::Templates25
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> Tail;$/;"	t	struct:testing::internal::Templates24
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T15, T16, T17, T18, T19, T20, T21, T22, T23> Tail;$/;"	t	struct:testing::internal::Templates23
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T15, T16, T17, T18, T19, T20, T21, T22> Tail;$/;"	t	struct:testing::internal::Templates22
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T15, T16, T17, T18, T19, T20, T21> Tail;$/;"	t	struct:testing::internal::Templates21
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T15, T16, T17, T18, T19, T20> Tail;$/;"	t	struct:testing::internal::Templates20
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T15, T16, T17, T18, T19> Tail;$/;"	t	struct:testing::internal::Templates19
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T15, T16, T17, T18> Tail;$/;"	t	struct:testing::internal::Templates18
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T15, T16, T17> Tail;$/;"	t	struct:testing::internal::Templates17
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T15, T16> Tail;$/;"	t	struct:testing::internal::Templates16
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T15> Tail;$/;"	t	struct:testing::internal::Templates15	typeref:typename:Templates14<T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15>
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T15> Tail;$/;"	t	struct:testing::internal::Types15	typeref:typename:Types14<T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15>
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> Tail;$/;"	t	struct:testing::internal::Types28
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> Tail;$/;"	t	struct:testing::internal::Types27
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> Tail;$/;"	t	struct:testing::internal::Types26
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> Tail;$/;"	t	struct:testing::internal::Types25
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T16, T17, T18, T19, T20, T21, T22, T23, T24> Tail;$/;"	t	struct:testing::internal::Types24
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T16, T17, T18, T19, T20, T21, T22, T23> Tail;$/;"	t	struct:testing::internal::Types23
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T16, T17, T18, T19, T20, T21, T22> Tail;$/;"	t	struct:testing::internal::Types22
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T16, T17, T18, T19, T20, T21> Tail;$/;"	t	struct:testing::internal::Types21
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T16, T17, T18, T19, T20> Tail;$/;"	t	struct:testing::internal::Types20
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T16, T17, T18, T19> Tail;$/;"	t	struct:testing::internal::Types19
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T16, T17, T18> Tail;$/;"	t	struct:testing::internal::Types18
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T16, T17> Tail;$/;"	t	struct:testing::internal::Types17
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T16> Tail;$/;"	t	struct:testing::internal::Types16
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T28> Tail;$/;"	t	struct:testing::internal::Templates28
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41> Tail;$/;"	t	struct:testing::internal::Templates41
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40> Tail;$/;"	t	struct:testing::internal::Templates40
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39> Tail;$/;"	t	struct:testing::internal::Templates39
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T29, T30, T31, T32, T33, T34, T35, T36, T37, T38> Tail;$/;"	t	struct:testing::internal::Templates38
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T29, T30, T31, T32, T33, T34, T35, T36, T37> Tail;$/;"	t	struct:testing::internal::Templates37
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T29, T30, T31, T32, T33, T34, T35, T36> Tail;$/;"	t	struct:testing::internal::Templates36
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T29, T30, T31, T32, T33, T34, T35> Tail;$/;"	t	struct:testing::internal::Templates35
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T29, T30, T31, T32, T33, T34> Tail;$/;"	t	struct:testing::internal::Templates34
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T29, T30, T31, T32, T33> Tail;$/;"	t	struct:testing::internal::Templates33
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T29, T30, T31, T32> Tail;$/;"	t	struct:testing::internal::Templates32
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T29, T30, T31> Tail;$/;"	t	struct:testing::internal::Templates31
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T29, T30> Tail;$/;"	t	struct:testing::internal::Templates30
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T29> Tail;$/;"	t	struct:testing::internal::Templates29
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T29> Tail;$/;"	t	struct:testing::internal::Types29
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42> Tail;$/;"	t	struct:testing::internal::Types42
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41> Tail;$/;"	t	struct:testing::internal::Types41
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40> Tail;$/;"	t	struct:testing::internal::Types40
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T30, T31, T32, T33, T34, T35, T36, T37, T38, T39> Tail;$/;"	t	struct:testing::internal::Types39
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T30, T31, T32, T33, T34, T35, T36, T37, T38> Tail;$/;"	t	struct:testing::internal::Types38
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T30, T31, T32, T33, T34, T35, T36, T37> Tail;$/;"	t	struct:testing::internal::Types37
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T30, T31, T32, T33, T34, T35, T36> Tail;$/;"	t	struct:testing::internal::Types36
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T30, T31, T32, T33, T34, T35> Tail;$/;"	t	struct:testing::internal::Types35
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T30, T31, T32, T33, T34> Tail;$/;"	t	struct:testing::internal::Types34
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T30, T31, T32, T33> Tail;$/;"	t	struct:testing::internal::Types33
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T30, T31, T32> Tail;$/;"	t	struct:testing::internal::Types32
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T30, T31> Tail;$/;"	t	struct:testing::internal::Types31
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T30> Tail;$/;"	t	struct:testing::internal::Types30
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T42> Tail;$/;"	t	struct:testing::internal::Templates42
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T43, T44, T45, T46, T47, T48, T49, T50> Tail;$/;"	t	struct:testing::internal::Templates50
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T43, T44, T45, T46, T47, T48, T49> Tail;$/;"	t	struct:testing::internal::Templates49
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T43, T44, T45, T46, T47, T48> Tail;$/;"	t	struct:testing::internal::Templates48
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T43, T44, T45, T46, T47> Tail;$/;"	t	struct:testing::internal::Templates47
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T43, T44, T45, T46> Tail;$/;"	t	struct:testing::internal::Templates46
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T43, T44, T45> Tail;$/;"	t	struct:testing::internal::Templates45
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T43, T44> Tail;$/;"	t	struct:testing::internal::Templates44
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T43> Tail;$/;"	t	struct:testing::internal::Templates43
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T43> Tail;$/;"	t	struct:testing::internal::Types43
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T44, T45, T46, T47, T48, T49, T50> Tail;$/;"	t	struct:testing::internal::Types50
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T44, T45, T46, T47, T48, T49> Tail;$/;"	t	struct:testing::internal::Types49
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T44, T45, T46, T47, T48> Tail;$/;"	t	struct:testing::internal::Types48
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T44, T45, T46, T47> Tail;$/;"	t	struct:testing::internal::Types47
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T44, T45, T46> Tail;$/;"	t	struct:testing::internal::Types46
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T44, T45> Tail;$/;"	t	struct:testing::internal::Types45
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T44> Tail;$/;"	t	struct:testing::internal::Types44
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates0 Tail;$/;"	t	struct:testing::internal::Templates1	typeref:typename:Templates0
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates10<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Tail;$/;"	t	struct:testing::internal::Templates11	typeref:typename:Templates10<T2,T3,T4,T5,T6,T7,T8,T9,T10,T11>
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates11<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Tail;$/;"	t	struct:testing::internal::Templates12	typeref:typename:Templates11<T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12>
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates12<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Tail;$/;"	t	struct:testing::internal::Templates13	typeref:typename:Templates12<T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13>
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates1<T2> Tail;$/;"	t	struct:testing::internal::Templates2	typeref:typename:Templates1<T2>
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates2<T2, T3> Tail;$/;"	t	struct:testing::internal::Templates3	typeref:typename:Templates2<T2,T3>
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates3<T2, T3, T4> Tail;$/;"	t	struct:testing::internal::Templates4	typeref:typename:Templates3<T2,T3,T4>
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates4<T2, T3, T4, T5> Tail;$/;"	t	struct:testing::internal::Templates5	typeref:typename:Templates4<T2,T3,T4,T5>
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates5<T2, T3, T4, T5, T6> Tail;$/;"	t	struct:testing::internal::Templates6	typeref:typename:Templates5<T2,T3,T4,T5,T6>
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates6<T2, T3, T4, T5, T6, T7> Tail;$/;"	t	struct:testing::internal::Templates7	typeref:typename:Templates6<T2,T3,T4,T5,T6,T7>
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates7<T2, T3, T4, T5, T6, T7, T8> Tail;$/;"	t	struct:testing::internal::Templates8	typeref:typename:Templates7<T2,T3,T4,T5,T6,T7,T8>
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates8<T2, T3, T4, T5, T6, T7, T8, T9> Tail;$/;"	t	struct:testing::internal::Templates9	typeref:typename:Templates8<T2,T3,T4,T5,T6,T7,T8,T9>
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates9<T2, T3, T4, T5, T6, T7, T8, T9, T10> Tail;$/;"	t	struct:testing::internal::Templates10	typeref:typename:Templates9<T2,T3,T4,T5,T6,T7,T8,T9,T10>
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Types0 Tail;$/;"	t	struct:testing::internal::Types1	typeref:typename:Types0
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Types10<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Tail;$/;"	t	struct:testing::internal::Types11	typeref:typename:Types10<T2,T3,T4,T5,T6,T7,T8,T9,T10,T11>
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Types11<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Tail;$/;"	t	struct:testing::internal::Types12	typeref:typename:Types11<T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12>
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Types12<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Tail;$/;"	t	struct:testing::internal::Types13	typeref:typename:Types12<T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13>
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Types13<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Tail;$/;"	t	struct:testing::internal::Types14	typeref:typename:Types13<T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14>
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Types1<T2> Tail;$/;"	t	struct:testing::internal::Types2	typeref:typename:Types1<T2>
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Types2<T2, T3> Tail;$/;"	t	struct:testing::internal::Types3	typeref:typename:Types2<T2,T3>
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Types3<T2, T3, T4> Tail;$/;"	t	struct:testing::internal::Types4	typeref:typename:Types3<T2,T3,T4>
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Types4<T2, T3, T4, T5> Tail;$/;"	t	struct:testing::internal::Types5	typeref:typename:Types4<T2,T3,T4,T5>
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Types5<T2, T3, T4, T5, T6> Tail;$/;"	t	struct:testing::internal::Types6	typeref:typename:Types5<T2,T3,T4,T5,T6>
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Types6<T2, T3, T4, T5, T6, T7> Tail;$/;"	t	struct:testing::internal::Types7	typeref:typename:Types6<T2,T3,T4,T5,T6,T7>
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Types7<T2, T3, T4, T5, T6, T7, T8> Tail;$/;"	t	struct:testing::internal::Types8	typeref:typename:Types7<T2,T3,T4,T5,T6,T7,T8>
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Types8<T2, T3, T4, T5, T6, T7, T8, T9> Tail;$/;"	t	struct:testing::internal::Types9	typeref:typename:Types8<T2,T3,T4,T5,T6,T7,T8,T9>
Tail	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Types9<T2, T3, T4, T5, T6, T7, T8, T9, T10> Tail;$/;"	t	struct:testing::internal::Types10	typeref:typename:Types9<T2,T3,T4,T5,T6,T7,T8,T9,T10>
Task	src/muduo/muduo/base/ThreadPool.h	/^  typedef std::function<void ()> Task;$/;"	t	class:muduo::ThreadPool
TcpClient	src/muduo/muduo/net/TcpClient.cc	/^TcpClient::TcpClient(EventLoop* loop,$/;"	f	class:TcpClient
TcpClient	src/muduo/muduo/net/TcpClient.h	/^class TcpClient : noncopyable$/;"	c	namespace:muduo::net
TcpClientPtr	src/muduo/examples/multiplexer/demux.cc	/^typedef std::shared_ptr<TcpClient> TcpClientPtr;$/;"	t	typeref:typename:std::shared_ptr<TcpClient>	file:
TcpConnection	src/muduo/muduo/net/TcpConnection.cc	/^TcpConnection::TcpConnection(EventLoop* loop,$/;"	f	class:TcpConnection
TcpConnection	src/muduo/muduo/net/TcpConnection.h	/^class TcpConnection : noncopyable,$/;"	c	namespace:muduo::net
TcpConnectionPtr	src/muduo/muduo/net/Callbacks.h	/^typedef std::shared_ptr<TcpConnection> TcpConnectionPtr;$/;"	t	namespace:muduo::net	typeref:typename:std::shared_ptr<TcpConnection>
TcpConnectionPtr	src/muduo/muduo/net/TcpConnection.h	/^typedef std::shared_ptr<TcpConnection> TcpConnectionPtr;$/;"	t	namespace:muduo::net	typeref:typename:std::shared_ptr<TcpConnection>
TcpConnectionPtr	src/muduo/muduo/net/protorpc/RpcCodec.h	/^typedef std::shared_ptr<TcpConnection> TcpConnectionPtr;$/;"	t	namespace:muduo::net	typeref:typename:std::shared_ptr<TcpConnection>
TcpServer	src/muduo/muduo/net/TcpServer.cc	/^TcpServer::TcpServer(EventLoop* loop,$/;"	f	class:TcpServer
TcpServer	src/muduo/muduo/net/TcpServer.h	/^class TcpServer : noncopyable$/;"	c	namespace:muduo::net
Teaching Google Mock How to Print Your Values	src/tests/googletest/googlemock/docs/CookBook.md	/^## Teaching Google Mock How to Print Your Values ##$/;"	s	chapter:Extending Google Mock
Teaching Google Mock How to Print Your Values	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Teaching Google Mock How to Print Your Values ##$/;"	s	chapter:Extending Google Mock
Teaching Google Mock How to Print Your Values	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Teaching Google Mock How to Print Your Values ##$/;"	s	chapter:Extending Google Mock
Teaching Google Mock How to Print Your Values	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Teaching Google Mock How to Print Your Values ##$/;"	s	chapter:Extending Google Mock
Teaching Google Test How to Print Your Values	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^# Teaching Google Test How to Print Your Values #$/;"	c
Teaching Google Test How to Print Your Values	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^# Teaching Google Test How to Print Your Values #$/;"	c
Teaching Google Test How to Print Your Values	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^# Teaching Google Test How to Print Your Values #$/;"	c
TearDown	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^  virtual void TearDown() { errno = 0; }$/;"	f	class:__anon550198f10111::SetErrnoAndReturnTest	typeref:typename:void	file:
TearDown	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^  virtual void TearDown() { GMOCK_FLAG(verbose) = original_verbose_; }$/;"	f	class:testing::internal::__anonf4b2defb0111::LogIsVisibleTest	typeref:typename:void	file:
TearDown	src/tests/googletest/googletest/include/gtest/gtest.h	/^  virtual void TearDown() {}$/;"	f	class:testing::Environment	typeref:typename:void
TearDown	src/tests/googletest/googletest/samples/sample5_unittest.cc	/^  virtual void TearDown() {$/;"	f	class:QuickTest	typeref:typename:void	file:
TearDown	src/tests/googletest/googletest/samples/sample7_unittest.cc	/^  virtual void TearDown() {$/;"	f	class:PrimeTableTest	typeref:typename:void	file:
TearDown	src/tests/googletest/googletest/samples/sample8_unittest.cc	/^  virtual void TearDown() {$/;"	f	class:PrimeTableTest	typeref:typename:void	file:
TearDown	src/tests/googletest/googletest/src/gtest.cc	/^void Test::TearDown() {$/;"	f	class:testing::Test	typeref:typename:void
TearDown	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^  virtual void TearDown() {$/;"	f	class:testing::internal::__anon077d0c590111::DirectoryCreationTest	typeref:typename:void	file:
TearDown	src/tests/googletest/googletest/test/gtest-listener_test.cc	/^  virtual void TearDown() {$/;"	f	class:testing::internal::EnvironmentInvocationCatcher	typeref:typename:void	file:
TearDown	src/tests/googletest/googletest/test/gtest-listener_test.cc	/^  virtual void TearDown() {$/;"	f	class:testing::internal::ListenerTest	typeref:typename:void	file:
TearDown	src/tests/googletest/googletest/test/gtest-options_test.cc	/^  virtual void TearDown() {$/;"	f	class:testing::internal::__anon8f60ad580111::XmlOutputChangeDirTest	typeref:typename:void	file:
TearDown	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  virtual void TearDown() {$/;"	f	class:TestGenerationEnvironment	typeref:typename:void	file:
TearDown	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  virtual void TearDown() {$/;"	f	class:TestGenerationTest	typeref:typename:void	file:
TearDown	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^  virtual void TearDown() {$/;"	f	class:CommonTest	typeref:typename:void	file:
TearDown	src/tests/googletest/googletest/test/gtest-unittest-api_test.cc	/^  virtual void TearDown() {$/;"	f	class:testing::internal::FinalSuccessChecker	typeref:typename:void	file:
TearDown	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^  virtual void TearDown() { RaiseException(42, 0, 0, NULL); }$/;"	f	class:SehExceptionInTearDownTest	typeref:typename:void	file:
TearDown	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^  virtual void TearDown() {$/;"	f	class:CxxExceptionInConstructorTest	typeref:typename:void	file:
TearDown	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^  virtual void TearDown() {$/;"	f	class:CxxExceptionInSetUpTest	typeref:typename:void	file:
TearDown	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^  virtual void TearDown() {$/;"	f	class:CxxExceptionInSetUpTestCaseTest	typeref:typename:void	file:
TearDown	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^  virtual void TearDown() {$/;"	f	class:CxxExceptionInTearDownTest	typeref:typename:void	file:
TearDown	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^  virtual void TearDown() {$/;"	f	class:CxxExceptionInTestBodyTest	typeref:typename:void	file:
TearDown	src/tests/googletest/googletest/test/gtest_environment_test.cc	/^  virtual void TearDown() {$/;"	f	class:__anon7fd7f0f30111::MyEnvironment	typeref:typename:void	file:
TearDown	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^  virtual void TearDown() {$/;"	f	class:BarEnvironment	typeref:typename:void	file:
TearDown	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^  virtual void TearDown() {$/;"	f	class:DeathTestAndMultiThreadsTest	typeref:typename:void	file:
TearDown	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^  virtual void TearDown() {$/;"	f	class:FatalFailureInFixtureConstructorTest	typeref:typename:void	file:
TearDown	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^  virtual void TearDown() {$/;"	f	class:FatalFailureInSetUpTest	typeref:typename:void	file:
TearDown	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^  virtual void TearDown() {$/;"	f	class:FooEnvironment	typeref:typename:void	file:
TearDown	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^  virtual void TearDown() {$/;"	f	class:NonFatalFailureInFixtureConstructorTest	typeref:typename:void	file:
TearDown	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^  virtual void TearDown() {$/;"	f	class:NonFatalFailureInSetUpTest	typeref:typename:void	file:
TearDown	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  virtual void TearDown() {$/;"	f	class:Predicate1Test	typeref:typename:void	file:
TearDown	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  virtual void TearDown() {$/;"	f	class:Predicate2Test	typeref:typename:void	file:
TearDown	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  virtual void TearDown() {$/;"	f	class:Predicate3Test	typeref:typename:void	file:
TearDown	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  virtual void TearDown() {$/;"	f	class:Predicate4Test	typeref:typename:void	file:
TearDown	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  virtual void TearDown() {$/;"	f	class:Predicate5Test	typeref:typename:void	file:
TearDown	src/tests/googletest/googletest/test/gtest_repeat_test.cc	/^  virtual void TearDown() { g_environment_tear_down_count++; }$/;"	f	class:__anon83eb3b5f0111::MyEnvironment	typeref:typename:void	file:
TearDown	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  virtual void TearDown() {$/;"	f	class:ProtectedFixtureMethodsTest	typeref:typename:void	file:
TearDown	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  virtual void TearDown() {$/;"	f	class:__anonf780395f0111::FormatEpochTimeInMillisAsIso8601Test	typeref:typename:void	file:
TearDown	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  virtual void TearDown() {$/;"	f	class:__anonf780395f0111::ShouldShardTest	typeref:typename:void	file:
TearDown	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  virtual void TearDown() {$/;"	f	class:__anonf780395f0111::TestResultTest	typeref:typename:void	file:
TearDown	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  virtual void TearDown() {$/;"	f	class:__anonf780395f0111::UnitTestRecordPropertyTestEnvironment	typeref:typename:void	file:
TearDown	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  virtual void TearDown() {$/;"	f	class:testing::FlagfileTest	typeref:typename:void	file:
TearDown	src/tests/googletest/googletest/test/gtest_xml_outfile1_test_.cc	/^  virtual void TearDown() {$/;"	f	class:PropertyOne	typeref:typename:void	file:
TearDown	src/tests/googletest/googletest/test/gtest_xml_outfile2_test_.cc	/^  virtual void TearDown() {$/;"	f	class:PropertyTwo	typeref:typename:void	file:
TearDown	src/tests/polynomial_test.cpp	/^        virtual void TearDown() {$/;"	f	class:__anon87ebe9520111::PolynomialTest	typeref:typename:void	file:
TearDown	src/tests/small_size_test.cpp	/^        virtual void TearDown() {$/;"	f	class:__anon9baab4410111::PolynomialTest	typeref:typename:void	file:
TearDownEnvironment	src/tests/googletest/googletest/src/gtest.cc	/^static void TearDownEnvironment(Environment* env) { env->TearDown(); }$/;"	f	namespace:testing::internal	typeref:typename:void	file:
TearDownExecuted	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  void TearDownExecuted() { tear_down_count_++; }$/;"	f	class:TestGenerationEnvironment	typeref:typename:void	file:
TearDownTestCase	src/tests/googletest/googletest/include/gtest/gtest.h	/^  static void TearDownTestCase() {}$/;"	f	class:testing::Test	typeref:typename:void
TearDownTestCase	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  static void TearDownTestCase() {$/;"	f	class:MacroLogicDeathTest	typeref:typename:void	file:
TearDownTestCase	src/tests/googletest/googletest/test/gtest-listener_test.cc	/^  static void TearDownTestCase() {$/;"	f	class:testing::internal::ListenerTest	typeref:typename:void	file:
TearDownTestCase	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  static void TearDownTestCase() {$/;"	f	class:SeparateInstanceTest	typeref:typename:void	file:
TearDownTestCase	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  static void TearDownTestCase() {$/;"	f	class:TestGenerationTest	typeref:typename:void	file:
TearDownTestCase	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^  static void TearDownTestCase() {$/;"	f	class:CommonTest	typeref:typename:void	file:
TearDownTestCase	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^  static void TearDownTestCase() { RaiseException(42, 0, 0, NULL); }$/;"	f	class:SehExceptionInTearDownTestCaseTest	typeref:typename:void	file:
TearDownTestCase	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^  static void TearDownTestCase() {$/;"	f	class:CxxExceptionInConstructorTest	typeref:typename:void	file:
TearDownTestCase	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^  static void TearDownTestCase() {$/;"	f	class:CxxExceptionInDestructorTest	typeref:typename:void	file:
TearDownTestCase	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^  static void TearDownTestCase() {$/;"	f	class:CxxExceptionInSetUpTest	typeref:typename:void	file:
TearDownTestCase	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^  static void TearDownTestCase() {$/;"	f	class:CxxExceptionInSetUpTestCaseTest	typeref:typename:void	file:
TearDownTestCase	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^  static void TearDownTestCase() {$/;"	f	class:CxxExceptionInTearDownTest	typeref:typename:void	file:
TearDownTestCase	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^  static void TearDownTestCase() {$/;"	f	class:CxxExceptionInTearDownTestCaseTest	typeref:typename:void	file:
TearDownTestCase	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^  static void TearDownTestCase() {$/;"	f	class:CxxExceptionInTestBodyTest	typeref:typename:void	file:
TearDownTestCase	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static void TearDownTestCase() {$/;"	f	class:__anonf780395f0111::DisabledTestsTest	typeref:typename:void	file:
TearDownTestCase	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static void TearDownTestCase() {$/;"	f	class:__anonf780395f0111::GTestFlagSaverTest	typeref:typename:void	file:
TearDownTestCase	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static void TearDownTestCase() {$/;"	f	class:testing::CurrentTestInfoTest	typeref:typename:void	file:
TearDownTestCase	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static void TearDownTestCase() {$/;"	f	class:testing::SetUpTestCaseTest	typeref:typename:void	file:
TearDownTestCase	src/tests/googletest/googletest/test/gtest_xml_output_unittest_.cc	/^  static void TearDownTestCase() { RecordProperty("TearDownTestCase", "aye"); }$/;"	f	class:PropertyRecordingTest	typeref:typename:void	file:
TearDownTestCaseFunc	src/tests/googletest/googletest/include/gtest/gtest.h	/^  typedef internal::TearDownTestCaseFunc TearDownTestCaseFunc;$/;"	t	class:testing::Test	typeref:typename:internal::TearDownTestCaseFunc
TearDownTestCaseFunc	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^typedef void (*TearDownTestCaseFunc)();$/;"	t	namespace:testing::internal	typeref:typename:void (*)()
TempDir	src/tests/googletest/googletest/src/gtest.cc	/^std::string TempDir() {$/;"	f	namespace:testing	typeref:typename:std::string
TemplateSel	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct TemplateSel {$/;"	s	namespace:testing::internal
Templates	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates {$/;"	s	namespace:testing::internal
Templates	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates<NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates<T1, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates<T1, T2, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates<T1, T2, T3, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates<T1, T2, T3, T4, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates<T1, T2, T3, T4, T5, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates<T1, T2, T3, T4, T5, T6, NoneT, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates<T1, T2, T3, T4, T5, T6, T7, NoneT, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, NoneT,$/;"	s	namespace:testing::internal
Templates	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, NoneT,$/;"	s	namespace:testing::internal
Templates	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,$/;"	s	namespace:testing::internal
Templates0	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates0 {};$/;"	s	namespace:testing::internal
Templates1	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates1 {$/;"	s	namespace:testing::internal
Templates10	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates10 {$/;"	s	namespace:testing::internal
Templates11	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates11 {$/;"	s	namespace:testing::internal
Templates12	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates12 {$/;"	s	namespace:testing::internal
Templates13	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates13 {$/;"	s	namespace:testing::internal
Templates14	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates14 {$/;"	s	namespace:testing::internal
Templates15	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates15 {$/;"	s	namespace:testing::internal
Templates16	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates16 {$/;"	s	namespace:testing::internal
Templates17	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates17 {$/;"	s	namespace:testing::internal
Templates18	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates18 {$/;"	s	namespace:testing::internal
Templates19	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates19 {$/;"	s	namespace:testing::internal
Templates2	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates2 {$/;"	s	namespace:testing::internal
Templates20	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates20 {$/;"	s	namespace:testing::internal
Templates21	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates21 {$/;"	s	namespace:testing::internal
Templates22	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates22 {$/;"	s	namespace:testing::internal
Templates23	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates23 {$/;"	s	namespace:testing::internal
Templates24	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates24 {$/;"	s	namespace:testing::internal
Templates25	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates25 {$/;"	s	namespace:testing::internal
Templates26	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates26 {$/;"	s	namespace:testing::internal
Templates27	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates27 {$/;"	s	namespace:testing::internal
Templates28	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates28 {$/;"	s	namespace:testing::internal
Templates29	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates29 {$/;"	s	namespace:testing::internal
Templates3	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates3 {$/;"	s	namespace:testing::internal
Templates30	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates30 {$/;"	s	namespace:testing::internal
Templates31	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates31 {$/;"	s	namespace:testing::internal
Templates32	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates32 {$/;"	s	namespace:testing::internal
Templates33	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates33 {$/;"	s	namespace:testing::internal
Templates34	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates34 {$/;"	s	namespace:testing::internal
Templates35	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates35 {$/;"	s	namespace:testing::internal
Templates36	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates36 {$/;"	s	namespace:testing::internal
Templates37	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates37 {$/;"	s	namespace:testing::internal
Templates38	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates38 {$/;"	s	namespace:testing::internal
Templates39	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates39 {$/;"	s	namespace:testing::internal
Templates4	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates4 {$/;"	s	namespace:testing::internal
Templates40	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates40 {$/;"	s	namespace:testing::internal
Templates41	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates41 {$/;"	s	namespace:testing::internal
Templates42	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates42 {$/;"	s	namespace:testing::internal
Templates43	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates43 {$/;"	s	namespace:testing::internal
Templates44	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates44 {$/;"	s	namespace:testing::internal
Templates45	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates45 {$/;"	s	namespace:testing::internal
Templates46	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates46 {$/;"	s	namespace:testing::internal
Templates47	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates47 {$/;"	s	namespace:testing::internal
Templates48	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates48 {$/;"	s	namespace:testing::internal
Templates49	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates49 {$/;"	s	namespace:testing::internal
Templates5	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates5 {$/;"	s	namespace:testing::internal
Templates50	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates50 {$/;"	s	namespace:testing::internal
Templates6	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates6 {$/;"	s	namespace:testing::internal
Templates7	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates7 {$/;"	s	namespace:testing::internal
Templates8	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates8 {$/;"	s	namespace:testing::internal
Templates9	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Templates9 {$/;"	s	namespace:testing::internal
Temporarily Disabling Tests	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^### Temporarily Disabling Tests ###$/;"	S	section:Running Test Programs: Advanced Options""Selecting Tests
Temporarily Disabling Tests	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^### Temporarily Disabling Tests ###$/;"	S	section:Running Test Programs: Advanced Options""Selecting Tests
Temporarily Disabling Tests	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^### Temporarily Disabling Tests ###$/;"	S	section:Running Test Programs: Advanced Options""Selecting Tests
Temporarily Disabling Tests	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^### Temporarily Disabling Tests ###$/;"	S	section:Running Test Programs: Advanced Options""Selecting Tests
Temporarily Enabling Disabled Tests	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^### Temporarily Enabling Disabled Tests ###$/;"	S	section:Running Test Programs: Advanced Options""Selecting Tests
Temporarily Enabling Disabled Tests	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^### Temporarily Enabling Disabled Tests ###$/;"	S	section:Running Test Programs: Advanced Options""Selecting Tests
Temporarily Enabling Disabled Tests	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^### Temporarily Enabling Disabled Tests ###$/;"	S	section:Running Test Programs: Advanced Options""Selecting Tests
Temporarily Enabling Disabled Tests	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^### Temporarily Enabling Disabled Tests ###$/;"	S	section:Running Test Programs: Advanced Options""Selecting Tests
TenArgConstructorClass	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^  TenArgConstructorClass(int a1, int a2, int a3, int a4, int a5,$/;"	f	class:testing::gmock_generated_actions_test::TenArgConstructorClass	file:
TenArgConstructorClass	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^class TenArgConstructorClass {$/;"	c	namespace:testing::gmock_generated_actions_test	file:
TerminateHandler	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^void TerminateHandler() {$/;"	f	typeref:typename:void
TerminateHandler	src/tests/googletest/googletest/test/gtest_throw_on_failure_test_.cc	/^void TerminateHandler() {$/;"	f	typeref:typename:void
Ternary	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^int Ternary(int x, char y, short z) { return x + y + z; }  \/\/ NOLINT$/;"	f	namespace:testing::gmock_generated_actions_test	typeref:typename:int
Ternary	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^  int Ternary(int x, bool y, char z) { return value_ + x + y*z; }$/;"	f	class:testing::gmock_more_actions_test::Foo	typeref:typename:int	file:
Ternary	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^int Ternary(int x, char y, short z) { return x + y + z; }  \/\/ NOLINT$/;"	f	namespace:testing::gmock_more_actions_test	typeref:typename:int
TersePrintPrefixToStrings	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^  static void TersePrintPrefixToStrings(const Tuple& t, Strings* strings) {$/;"	f	struct:testing::internal::TuplePrefixPrinter	typeref:typename:void
TersePrintPrefixToStrings	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^  static void TersePrintPrefixToStrings(const Tuple&, Strings*) {}$/;"	f	struct:testing::internal::TuplePrefixPrinter	typeref:typename:void
TersePrinter	src/tests/googletest/googletest/samples/sample9_unittest.cc	/^class TersePrinter : public EmptyTestEventListener {$/;"	c	namespace:__anon75bdd3680111	file:
Test	src/muduo/muduo/base/tests/BlockingQueue_test.cc	/^  Test(int numThreads)$/;"	f	class:Test	file:
Test	src/muduo/muduo/base/tests/BlockingQueue_test.cc	/^class Test$/;"	c	file:
Test	src/muduo/muduo/base/tests/BoundedBlockingQueue_test.cc	/^  Test(int numThreads)$/;"	f	class:Test	file:
Test	src/muduo/muduo/base/tests/BoundedBlockingQueue_test.cc	/^class Test$/;"	c	file:
Test	src/muduo/muduo/base/tests/SingletonThreadLocal_test.cc	/^  Test()$/;"	f	class:Test	file:
Test	src/muduo/muduo/base/tests/SingletonThreadLocal_test.cc	/^class Test : muduo::noncopyable$/;"	c	file:
Test	src/muduo/muduo/base/tests/Singleton_test.cc	/^  Test()$/;"	f	class:Test	file:
Test	src/muduo/muduo/base/tests/Singleton_test.cc	/^class Test : muduo::noncopyable$/;"	c	file:
Test	src/muduo/muduo/base/tests/ThreadLocalSingleton_test.cc	/^  Test()$/;"	f	class:Test	file:
Test	src/muduo/muduo/base/tests/ThreadLocalSingleton_test.cc	/^class Test : muduo::noncopyable$/;"	c	file:
Test	src/muduo/muduo/base/tests/ThreadLocal_test.cc	/^  Test()$/;"	f	class:Test	file:
Test	src/muduo/muduo/base/tests/ThreadLocal_test.cc	/^class Test : muduo::noncopyable$/;"	c	file:
Test	src/tests/googletest/googletest/include/gtest/gtest.h	/^class GTEST_API_ Test {$/;"	c	namespace:testing
Test	src/tests/googletest/googletest/src/gtest.cc	/^Test::Test()$/;"	f	class:testing::Test
Test	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class Test {};$/;"	c	namespace:my_namespace::testing	file:
Test Fixtures: Using the Same Data Configuration for Multiple Tests	src/tests/googletest/googletest/docs/Primer.md	/^# Test Fixtures: Using the Same Data Configuration for Multiple Tests #$/;"	c
Test Fixtures: Using the Same Data Configuration for Multiple Tests	src/tests/googletest/googletest/docs/V1_5_Primer.md	/^# Test Fixtures: Using the Same Data Configuration for Multiple Tests #$/;"	c
Test Fixtures: Using the Same Data Configuration for Multiple Tests	src/tests/googletest/googletest/docs/V1_6_Primer.md	/^# Test Fixtures: Using the Same Data Configuration for Multiple Tests #$/;"	c
Test Fixtures: Using the Same Data Configuration for Multiple Tests	src/tests/googletest/googletest/docs/V1_7_Primer.md	/^# Test Fixtures: Using the Same Data Configuration for Multiple Tests #$/;"	c
TestAssertEqualsUncopyable	src/tests/googletest/googletest/test/gtest_unittest.cc	/^void TestAssertEqualsUncopyable() {$/;"	f	namespace:__anonf780395f0111	typeref:typename:void
TestAssertNonPositive	src/tests/googletest/googletest/test/gtest_unittest.cc	/^void TestAssertNonPositive() {$/;"	f	namespace:__anonf780395f0111	typeref:typename:void
TestBodyExecuted	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  void TestBodyExecuted() { test_body_count_++; }$/;"	f	class:TestGenerationEnvironment	typeref:typename:void	file:
TestCase	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/TestCase.java	/^public abstract class TestCase {$/;"	c
TestCase	src/muduo/muduo/base/tests/TimeZone_unittest.cc	/^struct TestCase$/;"	s	file:
TestCase	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class_test.py	/^class TestCase(unittest.TestCase):$/;"	c
TestCase	src/tests/googletest/googlemock/test/gmock_test_utils.py	/^TestCase = gtest_test_utils.TestCase$/;"	v
TestCase	src/tests/googletest/googletest/include/gtest/gtest.h	/^class GTEST_API_ TestCase {$/;"	c	namespace:testing
TestCase	src/tests/googletest/googletest/src/gtest.cc	/^TestCase::TestCase(const char* a_name, const char* a_type_param,$/;"	f	class:testing::TestCase
TestCase	src/tests/googletest/googletest/test/gtest_test_utils.py	/^TestCase = _test_module.TestCase  # pylint: disable-msg=C6409$/;"	v
TestCaseFailed	src/tests/googletest/googletest/src/gtest.cc	/^static bool TestCaseFailed(const TestCase* test_case) {$/;"	f	namespace:testing::internal	typeref:typename:bool	file:
TestCaseInfoContainer	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  typedef ::std::vector<ParameterizedTestCaseInfoBase*> TestCaseInfoContainer;$/;"	t	class:testing::internal::ParameterizedTestCaseRegistry	typeref:typename:::std::vector<ParameterizedTestCaseInfoBase * >
TestCaseNameIs	src/tests/googletest/googletest/src/gtest.cc	/^  explicit TestCaseNameIs(const std::string& name)$/;"	f	class:testing::internal::TestCaseNameIs	file:
TestCaseNameIs	src/tests/googletest/googletest/src/gtest.cc	/^class TestCaseNameIs {$/;"	c	namespace:testing::internal	file:
TestCasePassed	src/tests/googletest/googletest/src/gtest.cc	/^static bool TestCasePassed(const TestCase* test_case) {$/;"	f	namespace:testing::internal	typeref:typename:bool	file:
TestCaseWithCommentTest	src/tests/googletest/googletest/test/gtest-unittest-api_test.cc	/^template <typename T> class TestCaseWithCommentTest : public Test {};$/;"	c	namespace:testing::internal	file:
TestCatchesLeakedMocksInAdHocTests	src/tests/googletest/googlemock/test/gmock_output_test_.cc	/^void TestCatchesLeakedMocksInAdHocTests() {$/;"	f	typeref:typename:void
TestClass	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^    typedef typename GTEST_BIND_(TestSel, Type) TestClass;$/;"	t	function:testing::internal::TypeParameterizedTest::Register
TestConcurrentCallsOnSameObject	src/tests/googletest/googlemock/test/gmock_stress_test.cc	/^void TestConcurrentCallsOnSameObject(Dummy \/* dummy *\/) {$/;"	f	namespace:testing::__anonc83180760111	typeref:typename:void
TestConcurrentCopyAndReadLinkedPtr	src/tests/googletest/googlemock/test/gmock_stress_test.cc	/^void TestConcurrentCopyAndReadLinkedPtr(Dummy \/* dummy *\/) {$/;"	f	namespace:testing::__anonc83180760111	typeref:typename:void
TestConcurrentMockObjects	src/tests/googletest/googlemock/test/gmock_stress_test.cc	/^void TestConcurrentMockObjects(Dummy \/* dummy *\/) {$/;"	f	namespace:testing::__anonc83180760111	typeref:typename:void
TestConcurrentWriteToEqualLinkedPtr	src/tests/googletest/googlemock/test/gmock_stress_test.cc	/^void TestConcurrentWriteToEqualLinkedPtr(Dummy \/* dummy *\/) {$/;"	f	namespace:testing::__anonc83180760111	typeref:typename:void
TestDeleted	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  bool TestDeleted() const { return test_deleted_; }$/;"	f	class:MockDeathTestFactory	typeref:typename:bool	file:
TestDisabled	src/tests/googletest/googletest/include/gtest/gtest.h	/^  static bool TestDisabled(const TestInfo* test_info) {$/;"	f	class:testing::TestCase	typeref:typename:bool
TestEq1	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^void TestEq1(int x) {$/;"	f	typeref:typename:void
TestEq1	src/tests/googletest/googletest/test/gtest_unittest.cc	/^void TestEq1(int x) {$/;"	f	namespace:__anonf780395f0111	typeref:typename:void
TestEventListener	src/tests/googletest/googletest/include/gtest/gtest.h	/^class TestEventListener {$/;"	c	namespace:testing
TestEventListeners	src/tests/googletest/googletest/include/gtest/gtest.h	/^class GTEST_API_ TestEventListeners {$/;"	c	namespace:testing
TestEventListeners	src/tests/googletest/googletest/src/gtest.cc	/^TestEventListeners::TestEventListeners()$/;"	f	class:testing::TestEventListeners
TestEventListenersAccessor	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class TestEventListenersAccessor {$/;"	c	namespace:testing::internal	file:
TestEventRepeater	src/tests/googletest/googletest/src/gtest.cc	/^  TestEventRepeater() : forwarding_enabled_(true) {}$/;"	f	class:testing::internal::TestEventRepeater	file:
TestEventRepeater	src/tests/googletest/googletest/src/gtest.cc	/^class TestEventRepeater : public TestEventListener {$/;"	c	namespace:testing::internal	file:
TestException	src/tests/googletest/googletest/test/gtest-death-test_ex_test.cc	/^class TestException : public std::exception {$/;"	c	file:
TestExists	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  bool TestExists(const std::string& test_name) const {$/;"	f	class:testing::internal::TypedTestCasePState	typeref:typename:bool
TestExitCodeAndOutput	src/tests/googletest/googletest/test/gtest_uninitialized_test.py	/^def TestExitCodeAndOutput(command):$/;"	f
TestExitMacros	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^static void TestExitMacros() {$/;"	f	typeref:typename:void	file:
TestExpectedCall	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^  void TestExpectedCall(bool should_print) {$/;"	f	class:__anon6b6cf3b20111::GMockVerboseFlagTest	typeref:typename:void	file:
TestFactoryBase	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  TestFactoryBase() {}$/;"	f	class:testing::internal::TestFactoryBase
TestFactoryBase	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^class TestFactoryBase {$/;"	c	namespace:testing::internal
TestFactoryImpl	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^class TestFactoryImpl : public TestFactoryBase {$/;"	c	namespace:testing::internal
TestFailed	src/tests/googletest/googletest/include/gtest/gtest.h	/^  static bool TestFailed(const TestInfo* test_info) {$/;"	f	class:testing::TestCase	typeref:typename:bool
TestFailedException	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/TestFailedException.java	/^    public TestFailedException(String message) {$/;"	m	class:TestFailedException
TestFailedException	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/TestFailedException.java	/^public class TestFailedException extends RuntimeException {$/;"	c
TestFailureThrowsRuntimeError	src/tests/googletest/googletest/test/gtest_throw_on_failure_ex_test.cc	/^void TestFailureThrowsRuntimeError() {$/;"	f	typeref:typename:void
TestFlag	src/tests/googletest/googletest/test/gtest_env_var_test.py	/^def TestFlag(flag, test_val, default_val):$/;"	f
TestForDeathTest	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  TestForDeathTest() : original_dir_(FilePath::GetCurrentDir()) {}$/;"	f	class:TestForDeathTest	file:
TestForDeathTest	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^class TestForDeathTest : public testing::Test {$/;"	c	file:
TestGTestAddReference	src/tests/googletest/googletest/test/gtest_unittest.cc	/^void TestGTestAddReference() {$/;"	f	typeref:typename:void
TestGTestReferenceToConst	src/tests/googletest/googletest/test/gtest_unittest.cc	/^void TestGTestReferenceToConst() {$/;"	f	typeref:typename:void
TestGTestRemoveConst	src/tests/googletest/googletest/test/gtest_unittest.cc	/^void TestGTestRemoveConst() {$/;"	f	typeref:typename:void
TestGTestRemoveReference	src/tests/googletest/googletest/test/gtest_unittest.cc	/^void TestGTestRemoveReference() {$/;"	f	typeref:typename:void
TestGTestRemoveReferenceAndConst	src/tests/googletest/googletest/test/gtest_unittest.cc	/^void TestGTestRemoveReferenceAndConst() {$/;"	f	typeref:typename:void
TestGenerationEnvironment	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  TestGenerationEnvironment() : fixture_constructor_count_(0), set_up_count_(0),$/;"	f	class:TestGenerationEnvironment	file:
TestGenerationEnvironment	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^class TestGenerationEnvironment : public ::testing::Environment {$/;"	c	file:
TestGenerationTest	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  TestGenerationTest() {$/;"	f	class:TestGenerationTest	file:
TestGenerationTest	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^class TestGenerationTest : public TestWithParam<int> {$/;"	c	file:
TestHelpFlag	src/tests/googletest/googletest/test/gtest_help_test.py	/^  def TestHelpFlag(self, flag):$/;"	m	class:GTestHelpTest
TestInfo	src/tests/googletest/googletest/include/gtest/gtest.h	/^class GTEST_API_ TestInfo {$/;"	c	namespace:testing
TestInfo	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^    TestInfo(const char* a_test_case_base_name,$/;"	f	struct:testing::internal::ParameterizedTestCaseInfo::TestInfo
TestInfo	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  struct TestInfo {$/;"	s	class:testing::internal::ParameterizedTestCaseInfo
TestInfo	src/tests/googletest/googletest/src/gtest.cc	/^TestInfo::TestInfo(const std::string& a_test_case_name,$/;"	f	class:testing::TestInfo
TestInfoContainer	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  typedef ::std::vector<linked_ptr<TestInfo> > TestInfoContainer;$/;"	t	class:testing::internal::ParameterizedTestCaseInfo	typeref:typename:::std::vector<linked_ptr<TestInfo>>
TestInfoTest	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class TestInfoTest : public Test {$/;"	c	namespace:testing	file:
TestInitGoogleMock	src/tests/googletest/googlemock/test/gmock_test.cc	/^void TestInitGoogleMock(const Char* (&argv)[M], const Char* (&new_argv)[N],$/;"	f	typeref:typename:void
TestLifeCycleTest	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  TestLifeCycleTest() { count_++; }$/;"	f	class:__anonf780395f0311::TestLifeCycleTest	file:
TestLifeCycleTest	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class TestLifeCycleTest : public Test {$/;"	c	namespace:__anonf780395f0311	file:
TestListener	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  TestListener() : on_start_counter_(NULL), is_destroyed_(NULL) {}$/;"	f	class:TestListener	file:
TestListener	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  TestListener(int* on_start_counter, bool* is_destroyed)$/;"	f	class:TestListener	file:
TestListener	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class TestListener : public EmptyTestEventListener {$/;"	c	file:
TestLogWithSeverity	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^void TestLogWithSeverity(const std::string& verbosity, LogSeverity severity,$/;"	f	namespace:testing::internal::__anonf4b2defb0111	typeref:typename:void
TestMatches	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  void TestMatches($/;"	f	class:testing::gmock_matchers_test::FloatingPointTest	typeref:typename:void	file:
TestMetaFactory	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  TestMetaFactory() {}$/;"	f	class:testing::internal::TestMetaFactory
TestMetaFactory	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^class TestMetaFactory$/;"	c	namespace:testing::internal
TestMetaFactoryBase	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^class TestMetaFactoryBase {$/;"	c	namespace:testing::internal
TestNameIs	src/tests/googletest/googletest/src/gtest.cc	/^  explicit TestNameIs(const char* name)$/;"	f	class:testing::__anon3f29b7680611::TestNameIs	file:
TestNameIs	src/tests/googletest/googletest/src/gtest.cc	/^class TestNameIs {$/;"	c	namespace:testing::__anon3f29b7680611	file:
TestNamePrinter	src/tests/googletest/googletest/test/gtest_shuffle_test_.cc	/^class TestNamePrinter : public EmptyTestEventListener {$/;"	c	namespace:__anon91ff1dea0111	file:
TestNearMatches	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  void TestNearMatches($/;"	f	class:testing::gmock_matchers_test::FloatingPointNearTest	typeref:typename:void	file:
TestNoDestroy	src/muduo/muduo/base/tests/Singleton_test.cc	/^  TestNoDestroy()$/;"	f	class:TestNoDestroy	file:
TestNoDestroy	src/muduo/muduo/base/tests/Singleton_test.cc	/^class TestNoDestroy : muduo::noncopyable$/;"	c	file:
TestNonHelpFlag	src/tests/googletest/googletest/test/gtest_help_test.py	/^  def TestNonHelpFlag(self, flag):$/;"	m	class:GTestHelpTest
TestOneClientBackendSend	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/testcase/TestOneClientBackendSend.java	/^public class TestOneClientBackendSend extends TestCase {$/;"	c
TestOneClientBothSend	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/testcase/TestOneClientBothSend.java	/^public class TestOneClientBothSend extends TestCase {$/;"	c
TestOneClientNoData	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/testcase/TestOneClientNoData.java	/^public class TestOneClientNoData extends TestCase {$/;"	c
TestOneClientSend	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/testcase/TestOneClientSend.java	/^public class TestOneClientSend extends TestCase {$/;"	c
TestParamInfo	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  TestParamInfo(const ParamType& a_param, size_t an_index) :$/;"	f	struct:testing::TestParamInfo
TestParamInfo	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^struct TestParamInfo {$/;"	s	namespace:testing
TestParsingFlags	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static void TestParsingFlags(int argc1, const CharType** argv1,$/;"	f	class:testing::InitGoogleTestTest	typeref:typename:void	file:
TestPartFatallyFailed	src/tests/googletest/googletest/src/gtest.cc	/^static bool TestPartFatallyFailed(const TestPartResult& result) {$/;"	f	namespace:testing	typeref:typename:bool	file:
TestPartNonfatallyFailed	src/tests/googletest/googletest/src/gtest.cc	/^static bool TestPartNonfatallyFailed(const TestPartResult& result) {$/;"	f	namespace:testing	typeref:typename:bool	file:
TestPartResult	src/tests/googletest/googletest/include/gtest/gtest-test-part.h	/^  TestPartResult(Type a_type,$/;"	f	class:testing::TestPartResult
TestPartResult	src/tests/googletest/googletest/include/gtest/gtest-test-part.h	/^class GTEST_API_ TestPartResult {$/;"	c	namespace:testing
TestPartResultArray	src/tests/googletest/googletest/include/gtest/gtest-test-part.h	/^  TestPartResultArray() {}$/;"	f	class:testing::TestPartResultArray
TestPartResultArray	src/tests/googletest/googletest/include/gtest/gtest-test-part.h	/^class GTEST_API_ TestPartResultArray {$/;"	c	namespace:testing
TestPartResultArrayDeathTest	src/tests/googletest/googletest/test/gtest-test-part_test.cc	/^typedef TestPartResultArrayTest TestPartResultArrayDeathTest;$/;"	t	namespace:__anona7ba7e300111	typeref:typename:TestPartResultArrayTest	file:
TestPartResultArrayTest	src/tests/googletest/googletest/test/gtest-test-part_test.cc	/^  TestPartResultArrayTest()$/;"	f	class:__anona7ba7e300111::TestPartResultArrayTest	file:
TestPartResultArrayTest	src/tests/googletest/googletest/test/gtest-test-part_test.cc	/^class TestPartResultArrayTest : public Test {$/;"	c	namespace:__anona7ba7e300111	file:
TestPartResultReporterInterface	src/tests/googletest/googletest/include/gtest/gtest-test-part.h	/^class TestPartResultReporterInterface {$/;"	c	namespace:testing
TestPartResultTest	src/tests/googletest/googletest/test/gtest-test-part_test.cc	/^  TestPartResultTest()$/;"	f	class:__anona7ba7e300111::TestPartResultTest	file:
TestPartResultTest	src/tests/googletest/googletest/test/gtest-test-part_test.cc	/^class TestPartResultTest : public Test {$/;"	c	namespace:__anona7ba7e300111	file:
TestPartResultTypeToString	src/tests/googletest/googletest/src/gtest.cc	/^static const char * TestPartResultTypeToString(TestPartResult::Type type) {$/;"	f	namespace:testing	typeref:typename:const char *	file:
TestPartiallyOrderedExpectationsWithThreads	src/tests/googletest/googlemock/test/gmock_stress_test.cc	/^void TestPartiallyOrderedExpectationsWithThreads(Dummy \/* dummy *\/) {$/;"	f	namespace:testing::__anonc83180760111	typeref:typename:void
TestPassed	src/tests/googletest/googletest/include/gtest/gtest.h	/^  static bool TestPassed(const TestInfo* test_info) {$/;"	f	class:testing::TestCase	typeref:typename:bool
TestPropertiesAsXmlAttributes	src/tests/googletest/googletest/src/gtest.cc	/^std::string XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes($/;"	f	class:testing::internal::XmlUnitTestResultPrinter	typeref:typename:std::string
TestProperty	src/tests/googletest/googletest/include/gtest/gtest.h	/^  TestProperty(const std::string& a_key, const std::string& a_value) :$/;"	f	class:testing::TestProperty
TestProperty	src/tests/googletest/googletest/include/gtest/gtest.h	/^class TestProperty {$/;"	c	namespace:testing
TestPropertyKeyIs	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  explicit TestPropertyKeyIs(const std::string& key) : key_(key) {}$/;"	f	class:testing::internal::TestPropertyKeyIs
TestPropertyKeyIs	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^class TestPropertyKeyIs {$/;"	c	namespace:testing::internal
TestRepeat	src/tests/googletest/googletest/test/gtest_repeat_test.cc	/^void TestRepeat(int repeat) {$/;"	f	namespace:__anon83eb3b5f0111	typeref:typename:void
TestRepeatUnspecified	src/tests/googletest/googletest/test/gtest_repeat_test.cc	/^void TestRepeatUnspecified() {$/;"	f	namespace:__anon83eb3b5f0111	typeref:typename:void
TestRepeatWithEmptyFilter	src/tests/googletest/googletest/test/gtest_repeat_test.cc	/^void TestRepeatWithEmptyFilter(int repeat) {$/;"	f	namespace:__anon83eb3b5f0111	typeref:typename:void
TestRepeatWithFilterForFailedTests	src/tests/googletest/googletest/test/gtest_repeat_test.cc	/^void TestRepeatWithFilterForFailedTests(int repeat) {$/;"	f	namespace:__anon83eb3b5f0111	typeref:typename:void
TestRepeatWithFilterForSuccessfulTests	src/tests/googletest/googletest/test/gtest_repeat_test.cc	/^void TestRepeatWithFilterForSuccessfulTests(int repeat) {$/;"	f	namespace:__anon83eb3b5f0111	typeref:typename:void
TestReportable	src/tests/googletest/googletest/include/gtest/gtest.h	/^  static bool TestReportable(const TestInfo* test_info) {$/;"	f	class:testing::TestCase	typeref:typename:bool
TestReportableDisabled	src/tests/googletest/googletest/include/gtest/gtest.h	/^  static bool TestReportableDisabled(const TestInfo* test_info) {$/;"	f	class:testing::TestCase	typeref:typename:bool
TestResult	src/tests/googletest/googletest/include/gtest/gtest.h	/^class GTEST_API_ TestResult {$/;"	c	namespace:testing
TestResult	src/tests/googletest/googletest/src/gtest.cc	/^TestResult::TestResult()$/;"	f	class:testing::TestResult
TestResultAccessor	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^class TestResultAccessor {$/;"	c	namespace:testing::internal
TestResultDeathTest	src/tests/googletest/googletest/test/gtest_unittest.cc	/^typedef TestResultTest TestResultDeathTest;$/;"	t	namespace:__anonf780395f0111	typeref:typename:TestResultTest	file:
TestResultTest	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class TestResultTest : public Test {$/;"	c	namespace:__anonf780395f0111	file:
TestRole	src/tests/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h	/^  enum TestRole { OVERSEE_TEST, EXECUTE_TEST };$/;"	g	class:testing::internal::DeathTest
TestSehExceptions	src/tests/googletest/googletest/test/gtest_catch_exceptions_test.py	/^    def TestSehExceptions(self, test_output):$/;"	m	class:CatchSehExceptionsTest
TestSize	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  void TestSize() {$/;"	f	class:testing::gmock_matchers_test::FloatingPointTest	typeref:typename:void	file:
TestSize	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  void TestSize() {$/;"	f	class:__anonf780395f0111::FloatingPointTest	typeref:typename:void	file:
TestTwoClients	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/testcase/TestTwoClients.java	/^public class TestTwoClients extends TestCase {$/;"	c
TestUninterestingCallOnNaggyMock	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^  void TestUninterestingCallOnNaggyMock(bool should_print) {$/;"	f	class:__anon6b6cf3b20111::GMockVerboseFlagTest	typeref:typename:void	file:
TestValues	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  struct TestValues {$/;"	s	class:__anonf780395f0111::FloatingPointTest	file:
TestWithParam	src/tests/googletest/googletest/include/gtest/gtest.h	/^class TestWithParam : public Test, public WithParamInterface<T> {$/;"	c	namespace:testing
Testing	src/tests/googletest/googlemock/docs/DevGuide.md	/^## Testing ##$/;"	s	chapter:Working with the Code
Testing	src/tests/googletest/googletest/docs/DevGuide.md	/^## Testing ##$/;"	s	chapter:Working with the Code
Testing Google Mock Itself	src/tests/googletest/googlemock/README.md	/^#### Testing Google Mock Itself ####$/;"	t	subsection:Getting Started""Developing Google Mock
Testing Google Test Itself	src/tests/googletest/googletest/README.md	/^### Testing Google Test Itself ###$/;"	S	section:Developing Google Test
Testing Private Code	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^# Testing Private Code #$/;"	c
Testing Private Code	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^# Testing Private Code #$/;"	c
Testing Private Code	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^# Testing Private Code #$/;"	c
Testing Private Code	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^# Testing Private Code #$/;"	c
Testing a Certain Property of an Object	src/tests/googletest/googlemock/docs/CookBook.md	/^## Testing a Certain Property of an Object ##$/;"	s	chapter:Using Matchers
Testing a Certain Property of an Object	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Testing a Certain Property of an Object ##$/;"	s	chapter:Using Matchers
Testing a Certain Property of an Object	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Testing a Certain Property of an Object ##$/;"	s	chapter:Using Matchers
Testing a Certain Property of an Object	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Testing a Certain Property of an Object ##$/;"	s	chapter:Using Matchers
TestingVector	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class TestingVector : public std::vector<int> {$/;"	c	file:
Tests failing on machines using Power PC CPUs (e.g. some Macs)	src/tests/googletest/googlemock/docs/KnownIssues.md	/^## Tests failing on machines using Power PC CPUs (e.g. some Macs) ##$/;"	s
TestsForArity	src/tests/googletest/googletest/scripts/gen_gtest_pred_impl.py	/^def TestsForArity(n):$/;"	f
TextModeProperties	src/libtfhe-superaic-core/include/tfhe_generic_streams.h	/^class TextModeProperties {$/;"	c
TfheBlindRotateAndExtractTest	src/tests/bootstrapping_test.cpp	/^    class TfheBlindRotateAndExtractTest : public ::testing::Test {$/;"	c	namespace:__anonf36cd29a0111	file:
TfheBlindRotateTest	src/tests/bootstrapping_test.cpp	/^    class TfheBlindRotateTest : public ::testing::Test {$/;"	c	namespace:__anonf36cd29a0111	file:
TfheBootstrapTest	src/tests/bootstrapping_test.cpp	/^    class TfheBootstrapTest : public ::testing::Test {$/;"	c	namespace:__anonf36cd29a0111	file:
TfheBootstrapWoKSTest	src/tests/bootstrapping_test.cpp	/^    class TfheBootstrapWoKSTest : public ::testing::Test {$/;"	c	namespace:__anonf36cd29a0111	file:
TfheCreateBootstrapKeyTest	src/tests/bootstrapping_classic_PBS_parameters_test.cpp	/^    class TfheCreateBootstrapKeyTest : public ::testing::Test {$/;"	c	namespace:__anon8153b4f20111	file:
TfheCreateBootstrapKeyTest	src/tests/bootstrapping_direct_test.cpp	/^    class TfheCreateBootstrapKeyTest : public ::testing::Test {$/;"	c	namespace:__anon560166140111	file:
TfheCreateBootstrapKeyTest	src/tests/bootstrapping_test.cpp	/^    class TfheCreateBootstrapKeyTest : public ::testing::Test {$/;"	c	namespace:__anonf36cd29a0111	file:
TfheCreateBootstrapKeyTest	src/tests/decrypt_with_plaintext_modulus.cpp	/^    class TfheCreateBootstrapKeyTest : public ::testing::Test {$/;"	c	namespace:__anondb55d4a50111	file:
TfheCreateBootstrapKeyTest	src/tests/macros_decrypt_with_plaintext_modulus_macros.cpp	/^    class TfheCreateBootstrapKeyTest : public ::testing::Test {$/;"	c	namespace:__anon478224cd0111	file:
TfheCreateBootstrapKeyTest	src/tests/macros_modSwitch_with_plaintext_modulus_macros.cpp	/^    class TfheCreateBootstrapKeyTest : public ::testing::Test {$/;"	c	namespace:__anon4cdaee640111	file:
TfheCreateBootstrapKeyTest	src/tests/ops_add.cpp	/^    class TfheCreateBootstrapKeyTest : public ::testing::Test {$/;"	c	namespace:__anonb1f413890111	file:
TfheCreateBootstrapKeyTest	src/tests/ops_add_with_carry.cpp	/^    class TfheCreateBootstrapKeyTest : public ::testing::Test {$/;"	c	namespace:__anon662e63c40111	file:
TfheCreateBootstrapKeyTest	src/tests/zpf_for_bootstrap_detail.cpp	/^    class TfheCreateBootstrapKeyTest : public ::testing::Test {$/;"	c	namespace:__anonc07144f40111	file:
TfheGarbageCollector	src/libtfhe-superaic-core/include/tfhe_garbage_collector.h	/^class TfheGarbageCollector {$/;"	c
TfheGarbageCollector	src/libtfhe-superaic-core/tfhe_garbage_collector.cpp	/^TfheGarbageCollector::TfheGarbageCollector() {}$/;"	f	class:TfheGarbageCollector
The "newer expectations override older ones" rule makes writing expectations awkward.  Why does Google Mock do that?	src/tests/googletest/googlemock/docs/FrequentlyAskedQuestions.md	/^## The "newer expectations override older ones" rule makes writing expectations awkward.  Why do/;"	s
The "newer expectations override older ones" rule makes writing expectations awkward.  Why does Google Mock do that?	src/tests/googletest/googlemock/docs/v1_5/FrequentlyAskedQuestions.md	/^## The "newer expectations override older ones" rule makes writing expectations awkward.  Why do/;"	s
The "newer expectations override older ones" rule makes writing expectations awkward.  Why does Google Mock do that?	src/tests/googletest/googlemock/docs/v1_6/FrequentlyAskedQuestions.md	/^## The "newer expectations override older ones" rule makes writing expectations awkward.  Why do/;"	s
The "newer expectations override older ones" rule makes writing expectations awkward.  Why does Google Mock do that?	src/tests/googletest/googlemock/docs/v1_7/FrequentlyAskedQuestions.md	/^## The "newer expectations override older ones" rule makes writing expectations awkward.  Why do/;"	s
The After Clause	src/tests/googletest/googlemock/docs/CheatSheet.md	/^## The After Clause ##$/;"	s	chapter:Expectation Order
The After Clause	src/tests/googletest/googlemock/docs/v1_5/CheatSheet.md	/^## The After Clause ##$/;"	s	chapter:Expectation Order
The After Clause	src/tests/googletest/googlemock/docs/v1_6/CheatSheet.md	/^## The After Clause ##$/;"	s	chapter:Expectation Order
The After Clause	src/tests/googletest/googlemock/docs/v1_7/CheatSheet.md	/^## The After Clause ##$/;"	s	chapter:Expectation Order
The Google Mock Community	src/tests/googletest/googlemock/docs/DevGuide.md	/^## The Google Mock Community ##$/;"	s	chapter:Introduction
The Google Test Community	src/tests/googletest/googletest/docs/DevGuide.md	/^## The Google Test Community ##$/;"	s	chapter:Introduction
The Google Test output is buried in a whole bunch of log messages. What do I do?	src/tests/googletest/googletest/docs/FAQ.md	/^## The Google Test output is buried in a whole bunch of log messages. What do I do? ##$/;"	s
The Google Test output is buried in a whole bunch of log messages. What do I do?	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## The Google Test output is buried in a whole bunch of log messages. What do I do? ##$/;"	s
The Google Test output is buried in a whole bunch of log messages. What do I do?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## The Google Test output is buried in a whole bunch of log messages. What do I do? ##$/;"	s
The Google Test output is buried in a whole bunch of log messages. What do I do?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## The Google Test output is buried in a whole bunch of log messages. What do I do? ##$/;"	s
The Nice, the Strict, and the Naggy	src/tests/googletest/googlemock/docs/CookBook.md	/^## The Nice, the Strict, and the Naggy ##$/;"	s	chapter:Creating Mock Classes
The Nice, the Strict, and the Naggy	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## The Nice, the Strict, and the Naggy ##$/;"	s	chapter:Creating Mock Classes
The Problem	src/tests/googletest/googletest/docs/PumpManual.md	/^# The Problem #$/;"	c
The Problem	src/tests/googletest/googletest/docs/V1_5_PumpManual.md	/^# The Problem #$/;"	c
The Problem	src/tests/googletest/googletest/docs/V1_6_PumpManual.md	/^# The Problem #$/;"	c
The Problem	src/tests/googletest/googletest/docs/V1_7_PumpManual.md	/^# The Problem #$/;"	c
The compiler complains "no matching function to call" when I use ASSERT\\_PREDn. How do I fix it?	src/tests/googletest/googletest/docs/FAQ.md	/^## The compiler complains "no matching function to call" when I use ASSERT\\_PREDn. How do I fix/;"	s
The compiler complains "no matching function to call" when I use ASSERT\\_PREDn. How do I fix it?	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## The compiler complains "no matching function to call" when I use ASSERT\\_PREDn. How do I fix/;"	s
The compiler complains "no matching function to call" when I use ASSERT\\_PREDn. How do I fix it?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## The compiler complains "no matching function to call" when I use ASSERT\\_PREDn. How do I fix/;"	s
The compiler complains "no matching function to call" when I use ASSERT\\_PREDn. How do I fix it?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## The compiler complains "no matching function to call" when I use ASSERT\\_PREDn. How do I fix/;"	s
The compiler complains about "no match for 'operator<<'" when I use an assertion. What gives?	src/tests/googletest/googletest/docs/FAQ.md	/^## The compiler complains about "no match for 'operator<<'" when I use an assertion. What gives?/;"	s
The compiler complains about "no match for 'operator<<'" when I use an assertion. What gives?	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## The compiler complains about "no match for 'operator<<'" when I use an assertion. What gives?/;"	s
The compiler complains about "no match for 'operator<<'" when I use an assertion. What gives?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## The compiler complains about "no match for 'operator<<'" when I use an assertion. What gives?/;"	s
The compiler complains about "no match for 'operator<<'" when I use an assertion. What gives?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## The compiler complains about "no match for 'operator<<'" when I use an assertion. What gives?/;"	s
The compiler complains about "undefined references" to some static const member variables, but I did define them in the class body. What's wrong?	src/tests/googletest/googletest/docs/FAQ.md	/^## The compiler complains about "undefined references" to some static const member variables, bu/;"	s
The compiler complains about "undefined references" to some static const member variables, but I did define them in the class body. What's wrong?	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## The compiler complains about "undefined references" to some static const member variables, bu/;"	s
The compiler complains about "undefined references" to some static const member variables, but I did define them in the class body. What's wrong?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## The compiler complains about "undefined references" to some static const member variables, bu/;"	s
The compiler complains about "undefined references" to some static const member variables, but I did define them in the class body. What's wrong?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## The compiler complains about "undefined references" to some static const member variables, bu/;"	s
Thread	src/muduo/muduo/base/Thread.cc	/^Thread::Thread(ThreadFunc func, const string& n)$/;"	f	class:muduo::Thread
Thread	src/muduo/muduo/base/Thread.h	/^class Thread : noncopyable$/;"	c	namespace:muduo
ThreadData	src/muduo/muduo/base/Thread.cc	/^  ThreadData(ThreadFunc func,$/;"	f	struct:muduo::detail::ThreadData	file:
ThreadData	src/muduo/muduo/base/Thread.cc	/^struct ThreadData$/;"	s	namespace:muduo::detail	file:
ThreadFunc	src/muduo/muduo/base/Thread.cc	/^  typedef muduo::Thread::ThreadFunc ThreadFunc;$/;"	t	struct:muduo::detail::ThreadData	typeref:typename:muduo::Thread::ThreadFunc	file:
ThreadFunc	src/muduo/muduo/base/Thread.h	/^  typedef std::function<void ()> ThreadFunc;$/;"	t	class:muduo::Thread
ThreadFunc	src/tests/googletest/googletest/test/gtest-port_test.cc	/^void* ThreadFunc(void* data) {$/;"	f	namespace:testing::internal	typeref:typename:void *
ThreadFuncWithCLinkage	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^extern "C" inline void* ThreadFuncWithCLinkage(void* thread) {$/;"	f	namespace:testing::internal	typeref:typename:void *
ThreadIdAndHandle	src/tests/googletest/googletest/src/gtest-port.cc	/^  typedef std::pair<DWORD, HANDLE> ThreadIdAndHandle;$/;"	t	class:testing::internal::ThreadLocalRegistryImpl	typeref:typename:std::pair<DWORD,HANDLE>	file:
ThreadIdToThreadLocals	src/tests/googletest/googletest/src/gtest-port.cc	/^  typedef std::map<DWORD, ThreadLocalValues> ThreadIdToThreadLocals;$/;"	t	class:testing::internal::ThreadLocalRegistryImpl	typeref:typename:std::map<DWORD,ThreadLocalValues>	file:
ThreadInitCallback	src/muduo/muduo/net/EventLoopThread.h	/^  typedef std::function<void(EventLoop*)> ThreadInitCallback;$/;"	t	class:muduo::net::EventLoopThread
ThreadInitCallback	src/muduo/muduo/net/EventLoopThreadPool.h	/^  typedef std::function<void(EventLoop*)> ThreadInitCallback;$/;"	t	class:muduo::net::EventLoopThreadPool
ThreadInitCallback	src/muduo/muduo/net/TcpServer.h	/^  typedef std::function<void(EventLoop*)> ThreadInitCallback;$/;"	t	class:muduo::net::TcpServer
ThreadLocal	src/muduo/muduo/base/ThreadLocal.h	/^  ThreadLocal()$/;"	f	class:muduo::ThreadLocal
ThreadLocal	src/muduo/muduo/base/ThreadLocal.h	/^class ThreadLocal : noncopyable$/;"	c	namespace:muduo
ThreadLocal	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  ThreadLocal() : default_factory_(new DefaultValueHolderFactory()) {}$/;"	f	class:testing::internal::ThreadLocal
ThreadLocal	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  ThreadLocal() : value_() {}$/;"	f	class:testing::internal::ThreadLocal
ThreadLocal	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  ThreadLocal()$/;"	f	class:testing::internal::ThreadLocal
ThreadLocal	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  explicit ThreadLocal(const T& value) : value_(value) {}$/;"	f	class:testing::internal::ThreadLocal
ThreadLocal	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  explicit ThreadLocal(const T& value)$/;"	f	class:testing::internal::ThreadLocal
ThreadLocal	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^class ThreadLocal : public ThreadLocalBase {$/;"	c	namespace:testing::internal
ThreadLocal	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^class ThreadLocal {$/;"	c	namespace:testing::internal
ThreadLocalBase	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  ThreadLocalBase() {}$/;"	f	class:testing::internal::ThreadLocalBase
ThreadLocalBase	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^class ThreadLocalBase {$/;"	c	namespace:testing::internal
ThreadLocalRegistry	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^class GTEST_API_ ThreadLocalRegistry {$/;"	c	namespace:testing::internal
ThreadLocalRegistryImpl	src/tests/googletest/googletest/src/gtest-port.cc	/^class ThreadLocalRegistryImpl {$/;"	c	namespace:testing::internal	file:
ThreadLocalSingleton	src/muduo/muduo/base/ThreadLocalSingleton.h	/^class ThreadLocalSingleton : noncopyable$/;"	c	namespace:muduo
ThreadLocalValueHolderBase	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^class ThreadLocalValueHolderBase {$/;"	c	namespace:testing::internal
ThreadLocalValues	src/tests/googletest/googletest/src/gtest-port.cc	/^                   linked_ptr<ThreadLocalValueHolderBase> > ThreadLocalValues;$/;"	t	class:testing::internal::ThreadLocalRegistryImpl	typeref:typename:std::map<const ThreadLocalBase *,linked_ptr<ThreadLocalValueHolderBase>>	file:
ThreadMain	src/tests/googletest/googletest/src/gtest-port.cc	/^  static DWORD WINAPI ThreadMain(void* ptr) {$/;"	f	class:testing::internal::__anon142d171a0211::ThreadWithParamSupport	typeref:typename:DWORD WINAPI	file:
ThreadMainParam	src/tests/googletest/googletest/src/gtest-port.cc	/^    ThreadMainParam(Runnable* runnable, Notification* thread_can_start)$/;"	f	struct:testing::internal::__anon142d171a0211::ThreadWithParamSupport::ThreadMainParam	file:
ThreadMainParam	src/tests/googletest/googletest/src/gtest-port.cc	/^  struct ThreadMainParam {$/;"	s	class:testing::internal::__anon142d171a0211::ThreadWithParamSupport	file:
ThreadNameInitializer	src/muduo/muduo/base/Thread.cc	/^  ThreadNameInitializer()$/;"	f	class:muduo::detail::ThreadNameInitializer	file:
ThreadNameInitializer	src/muduo/muduo/base/Thread.cc	/^class ThreadNameInitializer$/;"	c	namespace:muduo::detail	file:
ThreadParam	src/tests/googletest/googletest/test/gtest-port_test.cc	/^typedef ThreadLocal<DestructorTracker>* ThreadParam;$/;"	t	namespace:testing::internal	typeref:typename:ThreadLocal<DestructorTracker> *	file:
ThreadPool	src/muduo/muduo/base/ThreadPool.cc	/^ThreadPool::ThreadPool(const string& nameArg)$/;"	f	class:ThreadPool
ThreadPool	src/muduo/muduo/base/ThreadPool.h	/^class ThreadPool : noncopyable$/;"	c	namespace:muduo
ThreadRoutine	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^static void ThreadRoutine(SpawnThreadNotifications* notifications) {$/;"	f	typeref:typename:void	file:
ThreadSafeLazyInit	src/tests/googletest/googletest/src/gtest-port.cc	/^void Mutex::ThreadSafeLazyInit() {$/;"	f	class:testing::internal::Mutex	typeref:typename:void
ThreadType	src/tests/googletest/googletest/test/gtest-port_test.cc	/^  typedef ThreadWithParam<pair<AtomicCounterWithMutex*, int> > ThreadType;$/;"	t	function:testing::internal::TEST	typeref:typename:ThreadWithParam<pair<AtomicCounterWithMutex *,int>>	file:
ThreadWithParam	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  ThreadWithParam(UserThreadFunc* func, T param, Notification* thread_can_start)$/;"	f	class:testing::internal::ThreadWithParam
ThreadWithParam	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^class ThreadWithParam : public ThreadWithParamBase {$/;"	c	namespace:testing::internal
ThreadWithParamBase	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^class GTEST_API_ ThreadWithParamBase {$/;"	c	namespace:testing::internal
ThreadWithParamBase	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^class ThreadWithParamBase {$/;"	c	namespace:testing::internal
ThreadWithParamBase	src/tests/googletest/googletest/src/gtest-port.cc	/^ThreadWithParamBase::ThreadWithParamBase(Runnable *runnable,$/;"	f	class:testing::internal::ThreadWithParamBase
ThreadWithParamSupport	src/tests/googletest/googletest/src/gtest-port.cc	/^class ThreadWithParamSupport : public ThreadWithParamBase {$/;"	c	namespace:testing::internal::__anon142d171a0211	file:
ThreadWithScopedTrace	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^static void ThreadWithScopedTrace(CheckPoints* check_points) {$/;"	f	typeref:typename:void	file:
ThriftConnection	src/muduo/contrib/thrift/ThriftConnection.cc	/^ThriftConnection::ThriftConnection(ThriftServer* server,$/;"	f	class:ThriftConnection
ThriftConnection	src/muduo/contrib/thrift/ThriftConnection.h	/^class ThriftConnection : boost::noncopyable,$/;"	c
ThriftConnectionPtr	src/muduo/contrib/thrift/ThriftConnection.h	/^typedef boost::shared_ptr<ThriftConnection> ThriftConnectionPtr;$/;"	t	typeref:typename:boost::shared_ptr<ThriftConnection>
ThriftServer	src/muduo/contrib/thrift/ThriftServer.h	/^  ThriftServer(const boost::shared_ptr<TProcessor>& processor,$/;"	f	class:ThriftServer
ThriftServer	src/muduo/contrib/thrift/ThriftServer.h	/^  ThriftServer(const boost::shared_ptr<TProcessorFactory>& processorFactory,$/;"	f	class:ThriftServer
ThriftServer	src/muduo/contrib/thrift/ThriftServer.h	/^class ThriftServer : boost::noncopyable,$/;"	c
ThrowAString	src/tests/googletest/googletest/test/gtest_unittest.cc	/^void ThrowAString() {$/;"	f	namespace:__anonf780395f0111	typeref:typename:void
ThrowAnInteger	src/tests/googletest/googletest/test/gtest_unittest.cc	/^void ThrowAnInteger() {$/;"	f	namespace:__anonf780395f0111	typeref:typename:void
ThrowNothing	src/tests/googletest/googletest/test/gtest_unittest.cc	/^void ThrowNothing() {}$/;"	f	namespace:__anonf780395f0111	typeref:typename:void
ThrowOnFailure	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static Flags ThrowOnFailure(bool throw_on_failure) {$/;"	f	struct:testing::Flags	typeref:typename:Flags	file:
ThrowOnFailureTest	src/tests/googletest/googletest/test/gtest_throw_on_failure_test.py	/^class ThrowOnFailureTest(gtest_test_utils.TestCase):$/;"	c
TimeClient	src/muduo/examples/simple/timeclient/timeclient.cc	/^  TimeClient(EventLoop* loop, const InetAddress& serverAddr)$/;"	f	class:TimeClient	file:
TimeClient	src/muduo/examples/simple/timeclient/timeclient.cc	/^class TimeClient : noncopyable$/;"	c	file:
TimeInMillis	src/tests/googletest/googletest/include/gtest/gtest.h	/^typedef internal::TimeInMillis TimeInMillis;$/;"	t	namespace:testing	typeref:typename:internal::TimeInMillis
TimeInMillis	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^typedef TypeWithSize<8>::Int TimeInMillis;  \/\/ Represents time in milliseconds.$/;"	t	namespace:testing::internal	typeref:typename:TypeWithSize<8>::Int
TimeServer	src/muduo/examples/simple/time/time.cc	/^TimeServer::TimeServer(muduo::net::EventLoop* loop,$/;"	f	class:TimeServer
TimeServer	src/muduo/examples/simple/time/time.h	/^class TimeServer$/;"	c
TimeZone	src/muduo/muduo/base/TimeZone.cc	/^TimeZone::TimeZone(int eastOfUtc, const char* name)$/;"	f	class:TimeZone
TimeZone	src/muduo/muduo/base/TimeZone.cc	/^TimeZone::TimeZone(std::unique_ptr<Data> data)$/;"	f	class:TimeZone
TimeZone	src/muduo/muduo/base/TimeZone.h	/^class TimeZone : public muduo::copyable$/;"	c	namespace:muduo
Timer	src/muduo/muduo/net/Timer.h	/^  Timer(TimerCallback cb, Timestamp when, double interval)$/;"	f	class:muduo::net::Timer
Timer	src/muduo/muduo/net/Timer.h	/^class Timer : noncopyable$/;"	c	namespace:muduo::net
TimerCallback	src/muduo/muduo/net/Callbacks.h	/^typedef std::function<void()> TimerCallback;$/;"	t	namespace:muduo::net
TimerId	src/muduo/muduo/net/TimerId.h	/^  TimerId()$/;"	f	class:muduo::net::TimerId
TimerId	src/muduo/muduo/net/TimerId.h	/^  TimerId(Timer* timer, int64_t seq)$/;"	f	class:muduo::net::TimerId
TimerId	src/muduo/muduo/net/TimerId.h	/^class TimerId : public muduo::copyable$/;"	c	namespace:muduo::net
TimerList	src/muduo/muduo/net/TimerQueue.h	/^  typedef std::set<Entry> TimerList;$/;"	t	class:muduo::net::TimerQueue	typeref:typename:std::set<Entry>
TimerQueue	src/muduo/muduo/net/TimerQueue.cc	/^TimerQueue::TimerQueue(EventLoop* loop)$/;"	f	class:TimerQueue
TimerQueue	src/muduo/muduo/net/TimerQueue.h	/^class TimerQueue : noncopyable$/;"	c	namespace:muduo::net
Times	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  TypedExpectation& Times(const Cardinality& a_cardinality) {$/;"	f	class:testing::internal::TypedExpectation	typeref:typename:TypedExpectation &
Times	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  TypedExpectation& Times(int n) {$/;"	f	class:testing::internal::TypedExpectation	typeref:typename:TypedExpectation &
Timestamp	src/muduo/muduo/base/Timestamp.h	/^  Timestamp()$/;"	f	class:muduo::Timestamp
Timestamp	src/muduo/muduo/base/Timestamp.h	/^  explicit Timestamp(int64_t microSecondsSinceEpochArg)$/;"	f	class:muduo::Timestamp
Timestamp	src/muduo/muduo/base/Timestamp.h	/^class Timestamp : public muduo::copyable,$/;"	c	namespace:muduo
TimestampQueue	src/muduo/muduo/base/tests/BlockingQueue_bench2.cc	/^  using TimestampQueue = muduo::BlockingQueue<std::pair<int, muduo::Timestamp>>;$/;"	t	class:Bench	typeref:typename:muduo::BlockingQueue<std::pair<int,muduo::Timestamp>>	file:
TimestampQueue	src/muduo/muduo/base/tests/Thread_bench.cc	/^  using TimestampQueue = muduo::BlockingQueue<std::pair<int, muduo::Timestamp>>;$/;"	t	class:Bench	typeref:typename:muduo::BlockingQueue<std::pair<int,muduo::Timestamp>>	file:
Tips	src/tests/googletest/googletest/docs/PumpManual.md	/^## Tips ##$/;"	s	chapter:Our Solution
Tips	src/tests/googletest/googletest/docs/V1_5_PumpManual.md	/^## Tips ##$/;"	s	chapter:Our Solution
Tips	src/tests/googletest/googletest/docs/V1_6_PumpManual.md	/^## Tips ##$/;"	s	chapter:Our Solution
Tips	src/tests/googletest/googletest/docs/V1_7_PumpManual.md	/^## Tips ##$/;"	s	chapter:Our Solution
Title	src/tests/googletest/googletest/scripts/gen_gtest_pred_impl.py	/^def Title(word):$/;"	f
To	src/tests/googletest/googletest/test/gtest-port_test.cc	/^  To(bool* converted) { *converted = true; }  \/\/ NOLINT$/;"	f	class:testing::internal::To	file:
To	src/tests/googletest/googletest/test/gtest-port_test.cc	/^class To {$/;"	c	namespace:testing::internal	file:
ToLower	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^inline char ToLower(char ch) {$/;"	f	namespace:testing::internal	typeref:typename:char
ToParameters	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def ToParameters(self, tokens):$/;"	m	class:TypeConverter
ToString	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def ToString(self):$/;"	m	class:VariableDeclaration
ToType	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def ToType(self, tokens):$/;"	m	class:TypeConverter
ToType	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^  ToType(const FromType& x) { *x.converted() = true; }  \/\/ NOLINT$/;"	f	class:__anon550198f10111::ToType	file:
ToType	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^class ToType {$/;"	c	namespace:__anon550198f10111	file:
ToUnixLineEnding	src/tests/googletest/googlemock/test/gmock_output_test.py	/^def ToUnixLineEnding(s):$/;"	f
ToUnixLineEnding	src/tests/googletest/googletest/test/gtest_output_test.py	/^def ToUnixLineEnding(s):$/;"	f
ToUpper	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^inline char ToUpper(char ch) {$/;"	f	namespace:testing::internal	typeref:typename:char
Token	src/tests/googletest/googlemock/scripts/generator/cpp/tokenize.py	/^class Token(object):$/;"	c
Token	src/tests/googletest/googletest/scripts/pump.py	/^class Token:$/;"	c
Tokenize	src/tests/googletest/googletest/scripts/pump.py	/^def Tokenize(s):$/;"	f
TokenizeLines	src/tests/googletest/googletest/scripts/pump.py	/^def TokenizeLines(lines, pos):$/;"	f
Tokenizer	src/muduo/examples/memcached/server/Session.h	/^      muduo::StringPiece> Tokenizer;$/;"	t	class:Session	typeref:typename:boost::tokenizer<SpaceSeparator,const char *,muduo::StringPiece>
Topic	src/muduo/examples/hub/hub.cc	/^  Topic(const string& topic)$/;"	f	class:pubsub::Topic	file:
Topic	src/muduo/examples/hub/hub.cc	/^class Topic : public muduo::copyable$/;"	c	namespace:pubsub	file:
Torus32	src/libtfhe-superaic-core/include/tfhe_superaic_torus.h	/^typedef int32_t Torus32; \/\/avant uint32_t$/;"	t	typeref:typename:int32_t
Torus32PolynomialDecompH_old	src/libtfhe-superaic-core/tgsw-functions.cpp	/^Torus32PolynomialDecompH_old(IntPolynomial *result, const TorusPolynomial *sample, const TGswPar/;"	f	typeref:typename:EXPORT void
TorusPolynomial	src/libtfhe-superaic-core/include/polynomials.h	/^struct TorusPolynomial {$/;"	s
TorusPolynomial	src/libtfhe-superaic-core/include/tfhe_superaic_torus.h	/^typedef struct TorusPolynomial	   TorusPolynomial;$/;"	t	typeref:struct:TorusPolynomial
TorusPolynomial	src/libtfhe-superaic-core/multiplication.cpp	/^TorusPolynomial::TorusPolynomial(const int32_t N): N(N)$/;"	f	class:TorusPolynomial
TorusPolynomial_fft	src/libtfhe-superaic-core/fft_processors/nayuki/fft_processor_nayuki.cpp	/^EXPORT void TorusPolynomial_fft(TorusPolynomial* result, const LagrangeHalfCPolynomial* p) {$/;"	f	typeref:typename:EXPORT void
TorusPolynomial_ifft	src/libtfhe-superaic-core/fft_processors/nayuki/fft_processor_nayuki.cpp	/^EXPORT void TorusPolynomial_ifft(LagrangeHalfCPolynomial* result, const TorusPolynomial* p) {$/;"	f	typeref:typename:EXPORT void
TraceInfo	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^struct TraceInfo {$/;"	s	namespace:testing::internal
TransformTupleValues	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^OutIter TransformTupleValues(Func f, const Tuple& t, OutIter out) {$/;"	f	namespace:testing::internal	typeref:typename:OutIter
TransformTupleValuesHelper	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class TransformTupleValuesHelper {$/;"	c	namespace:testing::internal
Transition	src/muduo/muduo/base/TimeZone.cc	/^    Transition(int64_t t, int64_t l, int localIdx)$/;"	f	struct:TimeZone::Data::Transition	file:
Transition	src/muduo/muduo/base/TimeZone.cc	/^  struct Transition$/;"	s	struct:TimeZone::Data	file:
TrimTypes	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^typedef Types<int, double, MyPair<int, int> > TrimTypes;$/;"	t	namespace:library2	typeref:typename:Types<int,double,MyPair<int,int>>	file:
TrimmedTest	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^template <typename T> class TrimmedTest : public Test { };$/;"	c	namespace:library2	file:
Truly	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^Truly(Predicate pred) {$/;"	f	namespace:testing	typeref:typename:PolymorphicMatcher<internal::TrulyMatcher<Predicate>>
TrulyMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit TrulyMatcher(Predicate pred) : predicate_(pred) {}$/;"	f	class:testing::internal::TrulyMatcher
TrulyMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class TrulyMatcher {$/;"	c	namespace:testing::internal
TryAugment	src/tests/googletest/googlemock/src/gmock-matchers.cc	/^  bool TryAugment(size_t ilhs, ::std::vector<char>* seen) {$/;"	f	class:testing::internal::MaxBipartiteMatchState	typeref:typename:bool	file:
TryTestSubroutine	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^void TryTestSubroutine() {$/;"	f	typeref:typename:void
TtcpServerConnection	src/muduo/examples/ace/ttcp/ttcp_asio_async.cc	/^  TtcpServerConnection(boost::asio::io_service& io_service)$/;"	f	class:TtcpServerConnection	file:
TtcpServerConnection	src/muduo/examples/ace/ttcp/ttcp_asio_async.cc	/^class TtcpServerConnection : public std::enable_shared_from_this<TtcpServerConnection>,$/;"	c	file:
TtcpServerConnectionPtr	src/muduo/examples/ace/ttcp/ttcp_asio_async.cc	/^typedef std::shared_ptr<TtcpServerConnection> TtcpServerConnectionPtr;$/;"	t	typeref:typename:std::shared_ptr<TtcpServerConnection>	file:
Tunnel	src/muduo/examples/socks4a/tunnel.h	/^  Tunnel(muduo::net::EventLoop* loop,$/;"	f	class:Tunnel
Tunnel	src/muduo/examples/socks4a/tunnel.h	/^class Tunnel : public std::enable_shared_from_this<Tunnel>,$/;"	c
TunnelPtr	src/muduo/examples/socks4a/tunnel.h	/^typedef std::shared_ptr<Tunnel> TunnelPtr;$/;"	t	typeref:typename:std::shared_ptr<Tunnel>
Tuple	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^  typedef ::std::tuple<Types...> Tuple;$/;"	t	struct:testing::internal::TuplePolicy	typeref:typename:::std::tuple<Types...>
Tuple	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^  typedef TupleT Tuple;$/;"	t	struct:testing::internal::TuplePolicy	typeref:typename:TupleT
Tuple2	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^typedef ::testing::tuple<long, int> Tuple2;  \/\/ NOLINT$/;"	t	namespace:testing::gmock_matchers_test	typeref:typename:::testing::tuple<long,int>	file:
Tuple3	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^  typedef tuple<char, char, int> Tuple3;$/;"	t	function:__anoncaf4ae130111::TEST	typeref:typename:tuple<char,char,int>	file:
Tuple3	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^  typedef tuple<char, int, int> Tuple3;$/;"	t	function:__anoncaf4ae130111::TEST	typeref:typename:tuple<char,int,int>	file:
TupleElement	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^struct TupleElement<true, 0, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^struct TupleElement<true, 1, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^struct TupleElement<true, 2, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^struct TupleElement<true, 3, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^struct TupleElement<true, 4, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^struct TupleElement<true, 5, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^struct TupleElement<true, 6, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^struct TupleElement<true, 7, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^struct TupleElement<true, 8, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^struct TupleElement<true, 9, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleFields	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^class TupleFields {$/;"	c	namespace:testing::internal
TupleFields	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^class TupleFields<Tuple, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1> {$/;"	c	namespace:testing::internal
TupleFields	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^class TupleFields<Tuple, k0, -1, -1, -1, -1, -1, -1, -1, -1, -1> {$/;"	c	namespace:testing::internal
TupleFields	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^class TupleFields<Tuple, k0, k1, -1, -1, -1, -1, -1, -1, -1, -1> {$/;"	c	namespace:testing::internal
TupleFields	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^class TupleFields<Tuple, k0, k1, k2, -1, -1, -1, -1, -1, -1, -1> {$/;"	c	namespace:testing::internal
TupleFields	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^class TupleFields<Tuple, k0, k1, k2, k3, -1, -1, -1, -1, -1, -1> {$/;"	c	namespace:testing::internal
TupleFields	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^class TupleFields<Tuple, k0, k1, k2, k3, k4, -1, -1, -1, -1, -1> {$/;"	c	namespace:testing::internal
TupleFields	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^class TupleFields<Tuple, k0, k1, k2, k3, k4, k5, -1, -1, -1, -1> {$/;"	c	namespace:testing::internal
TupleFields	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^class TupleFields<Tuple, k0, k1, k2, k3, k4, k5, k6, -1, -1, -1> {$/;"	c	namespace:testing::internal
TupleFields	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^class TupleFields<Tuple, k0, k1, k2, k3, k4, k5, k6, k7, -1, -1> {$/;"	c	namespace:testing::internal
TupleFields	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^class TupleFields<Tuple, k0, k1, k2, k3, k4, k5, k6, k7, k8, -1> {$/;"	c	namespace:testing::internal
TupleMatches	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^bool TupleMatches(const MatcherTuple& matcher_tuple,$/;"	f	namespace:testing::internal	typeref:typename:bool
TuplePolicy	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^struct TuplePolicy {$/;"	s	namespace:testing::internal
TuplePolicy	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^struct TuplePolicy< ::std::tuple<Types...> > {$/;"	s	namespace:testing::internal
TuplePrefix	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class TuplePrefix {$/;"	c	namespace:testing::internal
TuplePrefix	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class TuplePrefix<0> {$/;"	c	namespace:testing::internal
TuplePrefixPrinter	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^struct TuplePrefixPrinter {$/;"	s	namespace:testing::internal
TuplePrefixPrinter	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^struct TuplePrefixPrinter<0> {$/;"	s	namespace:testing::internal
TupleSize	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef ::testing::tuple_size<Tuple> TupleSize;$/;"	t	class:testing::internal::TransformTupleValuesHelper	typeref:typename:::testing::tuple_size<Tuple>
Turning Assertion Failures into Break-Points	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^### Turning Assertion Failures into Break-Points ###$/;"	S	section:Running Test Programs: Advanced Options""Controlling How Failures Are Reported
Turning Assertion Failures into Break-Points	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^### Turning Assertion Failures into Break-Points ###$/;"	S	section:Running Test Programs: Advanced Options""Controlling How Failures Are Reported
Turning Assertion Failures into Break-Points	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^### Turning Assertion Failures into Break-Points ###$/;"	S	section:Running Test Programs: Advanced Options""Controlling How Failures Are Reported
Turning Assertion Failures into Break-Points	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^### Turning Assertion Failures into Break-Points ###$/;"	S	section:Running Test Programs: Advanced Options""Controlling How Failures Are Reported
Tweaking Google Mock	src/tests/googletest/googlemock/README.md	/^### Tweaking Google Mock ###$/;"	S	section:Getting Started
Tweaking Google Test	src/tests/googletest/googletest/README.md	/^### Tweaking Google Test ###$/;"	S
TwoTypes	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^typedef Types<char, int> TwoTypes;$/;"	t	typeref:typename:Types<char,int>	file:
Type	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^class Type(_GenericDeclaration):$/;"	c
Type	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^struct Type {$/;"	s	namespace:testing::gmock_matchers_test	file:
Type	src/tests/googletest/googletest/include/gtest/gtest-test-part.h	/^  enum Type {$/;"	g	class:testing::TestPartResult
Type	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^    typedef typename Types::Head Type;$/;"	t	function:testing::internal::TypeParameterizedTest::Register	typeref:typename:Types::Head
Type	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  typedef std::string Type(const TestParamInfo<ParamType>&);$/;"	t	struct:testing::internal::ParamNameGenFunc	typeref:typename:std::string ()(const TestParamInfo<ParamType> &)
Type Assertions	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^## Type Assertions ##$/;"	s	chapter:More Assertions
Type Assertions	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^## Type Assertions ##$/;"	s	chapter:More Assertions
Type Assertions	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^## Type Assertions ##$/;"	s	chapter:More Assertions
Type Assertions	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^## Type Assertions ##$/;"	s	chapter:More Assertions
Type-Parameterized Tests	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^# Type-Parameterized Tests #$/;"	c
Type-Parameterized Tests	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^# Type-Parameterized Tests #$/;"	c
Type-Parameterized Tests	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^# Type-Parameterized Tests #$/;"	c
Type-Parameterized Tests	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^# Type-Parameterized Tests #$/;"	c
TypeConverter	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^class TypeConverter(object):$/;"	c
TypeId	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^typedef const void* TypeId;$/;"	t	namespace:testing::internal	typeref:typename:const void *
TypeIdHelper	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^class TypeIdHelper {$/;"	c	namespace:testing::internal
TypeKind	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^enum TypeKind {$/;"	g	namespace:testing::internal
TypeKind	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^enum TypeKind {$/;"	g	namespace:testing::internal2
TypeList	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct TypeList {$/;"	s	namespace:testing::internal
TypeList	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct TypeList<Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,$/;"	s	namespace:testing::internal
TypeParamTest	src/tests/googletest/googletest/test/gtest_list_tests_unittest_.cc	/^class TypeParamTest : public testing::Test {$/;"	c	file:
TypeParameterizedTest	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^class TypeParameterizedTest {$/;"	c	namespace:testing::internal
TypeParameterizedTest	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^class TypeParameterizedTest<Fixture, TestSel, Types0> {$/;"	c	namespace:testing::internal
TypeParameterizedTestCase	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^class TypeParameterizedTestCase {$/;"	c	namespace:testing::internal
TypeParameterizedTestCase	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^class TypeParameterizedTestCase<Fixture, Templates0, Types> {$/;"	c	namespace:testing::internal
TypeParameterizedTestCase	src/tests/googletest/googletest/test/gtest_xml_output_unittest_.cc	/^template <typename T> class TypeParameterizedTestCase : public Test {};$/;"	c	file:
TypeParameterizedTestCaseTypes	src/tests/googletest/googletest/test/gtest_xml_output_unittest_.cc	/^typedef testing::Types<int, long> TypeParameterizedTestCaseTypes;$/;"	t	typeref:typename:testing::Types<int,long>	file:
TypeWithSize	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^class TypeWithSize {$/;"	c	namespace:testing::internal
TypeWithSize	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^class TypeWithSize<4> {$/;"	c	namespace:testing::internal
TypeWithSize	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^class TypeWithSize<8> {$/;"	c	namespace:testing::internal
TypeWithoutFormatter	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^class TypeWithoutFormatter {$/;"	c	namespace:testing::internal2
TypeWithoutFormatter	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^class TypeWithoutFormatter<T, kConvertibleToInteger> {$/;"	c	namespace:testing::internal2
TypeWithoutFormatter	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^class TypeWithoutFormatter<T, kProtobuf> {$/;"	c	namespace:testing::internal2
Typed Tests	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^# Typed Tests #$/;"	c
Typed Tests	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^# Typed Tests #$/;"	c
Typed Tests	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^# Typed Tests #$/;"	c
Typed Tests	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^# Typed Tests #$/;"	c
TypedEq	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline Matcher<Lhs> TypedEq(const Rhs& rhs) { return Eq(rhs); }$/;"	f	namespace:testing	typeref:typename:Matcher<Lhs>
TypedExpectation	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  TypedExpectation(FunctionMockerBase<F>* owner, const char* a_file, int a_line,$/;"	f	class:testing::internal::TypedExpectation
TypedExpectation	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^class TypedExpectation : public ExpectationBase {$/;"	c	namespace:testing::internal
TypedTest	src/tests/googletest/googletest/test/gtest_list_tests_unittest_.cc	/^class TypedTest : public testing::Test {$/;"	c	file:
TypedTest	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^class TypedTest : public testing::Test {$/;"	c	file:
TypedTest	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class TypedTest : public Test {$/;"	c	namespace:__anonf780395f0111	file:
TypedTest	src/tests/googletest/googletest/test/gtest_xml_output_unittest_.cc	/^template <typename T> class TypedTest : public Test {};$/;"	c	file:
TypedTest1	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^class TypedTest1 : public Test {$/;"	c	file:
TypedTest2	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^class TypedTest2 : public Test {$/;"	c	file:
TypedTestCasePState	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  TypedTestCasePState() : registered_(false) {}$/;"	f	class:testing::internal::TypedTestCasePState
TypedTestCasePState	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^class GTEST_API_ TypedTestCasePState {$/;"	c	namespace:testing::internal
TypedTestCasePStateDeathTest	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^typedef TypedTestCasePStateTest TypedTestCasePStateDeathTest;$/;"	t	typeref:typename:TypedTestCasePStateTest	file:
TypedTestCasePStateTest	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^class TypedTestCasePStateTest : public Test {$/;"	c	file:
TypedTestP	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^class TypedTestP : public testing::Test {$/;"	c	file:
TypedTestP	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class TypedTestP : public Test {$/;"	c	namespace:__anonf780395f0111	file:
TypedTestP1	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^class TypedTestP1 : public Test {$/;"	c	file:
TypedTestP2	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^class TypedTestP2 : public Test {$/;"	c	file:
TypedTestTypes	src/tests/googletest/googletest/test/gtest_xml_output_unittest_.cc	/^typedef testing::Types<int, long> TypedTestTypes;$/;"	t	typeref:typename:testing::Types<int,long>	file:
Typedef	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^class Typedef(_GenericDeclaration):$/;"	c
Types	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types {$/;"	s	namespace:testing
Types	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,$/;"	s	namespace:testing
Types	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,$/;"	s	namespace:testing
Types	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,$/;"	s	namespace:testing
Types	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, internal::None,$/;"	s	namespace:testing
Types	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, internal::None,$/;"	s	namespace:testing
Types	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, internal::None,$/;"	s	namespace:testing
Types	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, internal::None,$/;"	s	namespace:testing
Types	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, T8, internal::None, internal::None,$/;"	s	namespace:testing
Types	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, internal::None, internal::None,$/;"	s	namespace:testing
Types	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types<T1, T2, T3, T4, T5, T6, internal::None, internal::None,$/;"	s	namespace:testing
Types	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types<T1, T2, T3, T4, T5, internal::None, internal::None,$/;"	s	namespace:testing
Types	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types<T1, T2, T3, T4, internal::None, internal::None, internal::None,$/;"	s	namespace:testing
Types	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types<T1, T2, T3, internal::None, internal::None, internal::None,$/;"	s	namespace:testing
Types	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types<T1, T2, internal::None, internal::None, internal::None,$/;"	s	namespace:testing
Types	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types<T1, internal::None, internal::None, internal::None,$/;"	s	namespace:testing
Types	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types<internal::None, internal::None, internal::None, internal::None,$/;"	s	namespace:testing
Types0	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types0 {};$/;"	s	namespace:testing::internal
Types1	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types1 {$/;"	s	namespace:testing::internal
Types10	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types10 {$/;"	s	namespace:testing::internal
Types11	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types11 {$/;"	s	namespace:testing::internal
Types12	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types12 {$/;"	s	namespace:testing::internal
Types13	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types13 {$/;"	s	namespace:testing::internal
Types14	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types14 {$/;"	s	namespace:testing::internal
Types15	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types15 {$/;"	s	namespace:testing::internal
Types16	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types16 {$/;"	s	namespace:testing::internal
Types17	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types17 {$/;"	s	namespace:testing::internal
Types18	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types18 {$/;"	s	namespace:testing::internal
Types19	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types19 {$/;"	s	namespace:testing::internal
Types2	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types2 {$/;"	s	namespace:testing::internal
Types20	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types20 {$/;"	s	namespace:testing::internal
Types21	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types21 {$/;"	s	namespace:testing::internal
Types22	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types22 {$/;"	s	namespace:testing::internal
Types23	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types23 {$/;"	s	namespace:testing::internal
Types24	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types24 {$/;"	s	namespace:testing::internal
Types25	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types25 {$/;"	s	namespace:testing::internal
Types26	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types26 {$/;"	s	namespace:testing::internal
Types27	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types27 {$/;"	s	namespace:testing::internal
Types28	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types28 {$/;"	s	namespace:testing::internal
Types29	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types29 {$/;"	s	namespace:testing::internal
Types3	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types3 {$/;"	s	namespace:testing::internal
Types30	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types30 {$/;"	s	namespace:testing::internal
Types31	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types31 {$/;"	s	namespace:testing::internal
Types32	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types32 {$/;"	s	namespace:testing::internal
Types33	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types33 {$/;"	s	namespace:testing::internal
Types34	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types34 {$/;"	s	namespace:testing::internal
Types35	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types35 {$/;"	s	namespace:testing::internal
Types36	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types36 {$/;"	s	namespace:testing::internal
Types37	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types37 {$/;"	s	namespace:testing::internal
Types38	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types38 {$/;"	s	namespace:testing::internal
Types39	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types39 {$/;"	s	namespace:testing::internal
Types4	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types4 {$/;"	s	namespace:testing::internal
Types40	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types40 {$/;"	s	namespace:testing::internal
Types41	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types41 {$/;"	s	namespace:testing::internal
Types42	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types42 {$/;"	s	namespace:testing::internal
Types43	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types43 {$/;"	s	namespace:testing::internal
Types44	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types44 {$/;"	s	namespace:testing::internal
Types45	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types45 {$/;"	s	namespace:testing::internal
Types46	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types46 {$/;"	s	namespace:testing::internal
Types47	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types47 {$/;"	s	namespace:testing::internal
Types48	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types48 {$/;"	s	namespace:testing::internal
Types49	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types49 {$/;"	s	namespace:testing::internal
Types5	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types5 {$/;"	s	namespace:testing::internal
Types50	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types50 {$/;"	s	namespace:testing::internal
Types6	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types6 {$/;"	s	namespace:testing::internal
Types7	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types7 {$/;"	s	namespace:testing::internal
Types8	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types8 {$/;"	s	namespace:testing::internal
Types9	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^struct Types9 {$/;"	s	namespace:testing::internal
UInt	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  typedef unsigned __int64 UInt;$/;"	t	class:testing::internal::TypeWithSize	typeref:typename:unsigned __int64
UInt	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  typedef unsigned int UInt;$/;"	t	class:testing::internal::TypeWithSize	typeref:typename:unsigned int
UInt	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  typedef void UInt;$/;"	t	class:testing::internal::TypeWithSize	typeref:typename:void
UInt32	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^typedef TypeWithSize<4>::UInt UInt32;$/;"	t	namespace:testing::internal	typeref:typename:TypeWithSize<4>::UInt
UInt64	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^typedef TypeWithSize<8>::UInt UInt64;$/;"	t	namespace:testing::internal	typeref:typename:TypeWithSize<8>::UInt
UNIT_TEST	src/tests/googletest/googletest/scripts/gen_gtest_pred_impl.py	/^UNIT_TEST = os.path.join(SCRIPT_DIR, '..\/test\/gtest_pred_impl_unittest.cc')$/;"	v
UNIX	buildotests/CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^  set(UNIX 1)$/;"	v
UNIX	buildotests/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^  set(UNIX 1)$/;"	v
UNKNOWN	src/tests/googletest/googlemock/scripts/generator/cpp/tokenize.py	/^UNKNOWN = 'UNKNOWN'$/;"	v
UNKNOWN_FLAG	src/tests/googletest/googletest/test/gtest_help_test.py	/^UNKNOWN_FLAG = FLAG_PREFIX + 'unknown_flag_for_testing'$/;"	v
USER_DIR	src/tests/googletest/googlemock/make/Makefile	/^USER_DIR = ..\/test$/;"	m
USER_DIR	src/tests/googletest/googletest/make/Makefile	/^USER_DIR = ..\/samples$/;"	m
USE_DEFAULT_CONSTRUCTOR_DESTRUCTOR_IMPLEMENTATIONS1	src/libtfhe-superaic-core/include/tfhe_generic_templates.h	/^#define USE_DEFAULT_CONSTRUCTOR_DESTRUCTOR_IMPLEMENTATIONS1(/;"	d
USE_FAKE_IntPolynomial_ifft	src/tests/fakes/lagrangehalfc.h	/^#define USE_FAKE_IntPolynomial_ifft /;"	d
USE_FAKE_LagrangeHalfCPolynomialAddMul	src/tests/fakes/lagrangehalfc.h	/^#define USE_FAKE_LagrangeHalfCPolynomialAddMul /;"	d
USE_FAKE_LagrangeHalfCPolynomialClear	src/tests/fakes/lagrangehalfc.h	/^#define USE_FAKE_LagrangeHalfCPolynomialClear /;"	d
USE_FAKE_TorusPolynomial_fft	src/tests/fakes/lagrangehalfc.h	/^#define USE_FAKE_TorusPolynomial_fft /;"	d
USE_FAKE_TorusPolynomial_ifft	src/tests/fakes/lagrangehalfc.h	/^#define USE_FAKE_TorusPolynomial_ifft /;"	d
USE_FAKE_delete_LagrangeHalfCPolynomial	src/tests/fakes/lagrangehalfc.h	/^#define USE_FAKE_delete_LagrangeHalfCPolynomial /;"	d
USE_FAKE_delete_LagrangeHalfCPolynomial_array	src/tests/fakes/lagrangehalfc.h	/^#define USE_FAKE_delete_LagrangeHalfCPolynomial_array /;"	d
USE_FAKE_delete_LweKeySwitchKey	src/tests/fakes/lwe-keyswitch.h	/^#define USE_FAKE_delete_LweKeySwitchKey /;"	d
USE_FAKE_delete_LweSample	src/tests/fakes/lwe.h	/^#define USE_FAKE_delete_LweSample /;"	d
USE_FAKE_delete_LweSample_array	src/tests/fakes/lwe.h	/^#define USE_FAKE_delete_LweSample_array /;"	d
USE_FAKE_delete_TGswSample	src/tests/fakes/tgsw.h	/^#define USE_FAKE_delete_TGswSample /;"	d
USE_FAKE_delete_TGswSampleFFT	src/tests/fakes/tgsw-fft.h	/^#define USE_FAKE_delete_TGswSampleFFT /;"	d
USE_FAKE_delete_TGswSampleFFT_array	src/tests/fakes/tgsw-fft.h	/^#define USE_FAKE_delete_TGswSampleFFT_array /;"	d
USE_FAKE_delete_TGswSample_array	src/tests/fakes/tgsw.h	/^#define USE_FAKE_delete_TGswSample_array /;"	d
USE_FAKE_delete_TLweSample	src/tests/fakes/tlwe.h	/^#define USE_FAKE_delete_TLweSample /;"	d
USE_FAKE_delete_TLweSampleFFT	src/tests/fakes/tlwe-fft.h	/^#define USE_FAKE_delete_TLweSampleFFT /;"	d
USE_FAKE_delete_TLweSampleFFT_array	src/tests/fakes/tlwe-fft.h	/^#define USE_FAKE_delete_TLweSampleFFT_array /;"	d
USE_FAKE_delete_TLweSample_array	src/tests/fakes/tlwe.h	/^#define USE_FAKE_delete_TLweSample_array /;"	d
USE_FAKE_destroy_TGswSample	src/tests/fakes/tgsw.h	/^#define USE_FAKE_destroy_TGswSample /;"	d
USE_FAKE_init_TGswSample	src/tests/fakes/tgsw.h	/^#define USE_FAKE_init_TGswSample /;"	d
USE_FAKE_lweAddMulTo	src/tests/fakes/lwe.h	/^#define USE_FAKE_lweAddMulTo /;"	d
USE_FAKE_lweAddTo	src/tests/fakes/lwe.h	/^#define USE_FAKE_lweAddTo /;"	d
USE_FAKE_lweCopy	src/tests/fakes/lwe.h	/^#define USE_FAKE_lweCopy /;"	d
USE_FAKE_lweCreateKeySwitchKey	src/tests/fakes/lwe-keyswitch.h	/^#define USE_FAKE_lweCreateKeySwitchKey /;"	d
USE_FAKE_lweCreateKeySwitchKey_fromArray	src/tests/fakes/lwe-keyswitch.h	/^#define USE_FAKE_lweCreateKeySwitchKey_fromArray /;"	d
USE_FAKE_lweKeySwitch	src/tests/fakes/lwe-keyswitch.h	/^#define USE_FAKE_lweKeySwitch /;"	d
USE_FAKE_lweKeySwitchTranslate_fromArray	src/tests/fakes/lwe-keyswitch.h	/^#define USE_FAKE_lweKeySwitchTranslate_fromArray /;"	d
USE_FAKE_lweNegate	src/tests/fakes/lwe.h	/^#define USE_FAKE_lweNegate /;"	d
USE_FAKE_lweNoiselessTrivial	src/tests/fakes/lwe.h	/^#define USE_FAKE_lweNoiselessTrivial /;"	d
USE_FAKE_lwePhase	src/tests/fakes/lwe.h	/^#define USE_FAKE_lwePhase /;"	d
USE_FAKE_lweSubMulTo	src/tests/fakes/lwe.h	/^#define USE_FAKE_lweSubMulTo /;"	d
USE_FAKE_lweSubTo	src/tests/fakes/lwe.h	/^#define USE_FAKE_lweSubTo /;"	d
USE_FAKE_lweSymEncrypt	src/tests/fakes/lwe.h	/^#define USE_FAKE_lweSymEncrypt /;"	d
USE_FAKE_lweSymEncryptWithExternalNoise	src/tests/fakes/lwe.h	/^#define USE_FAKE_lweSymEncryptWithExternalNoise /;"	d
USE_FAKE_new_LagrangeHalfCPolynomial	src/tests/fakes/lagrangehalfc.h	/^#define USE_FAKE_new_LagrangeHalfCPolynomial /;"	d
USE_FAKE_new_LagrangeHalfCPolynomial_array	src/tests/fakes/lagrangehalfc.h	/^#define USE_FAKE_new_LagrangeHalfCPolynomial_array /;"	d
USE_FAKE_new_LweKeySwitchKey	src/tests/fakes/lwe-keyswitch.h	/^#define USE_FAKE_new_LweKeySwitchKey /;"	d
USE_FAKE_new_LweSample	src/tests/fakes/lwe.h	/^#define USE_FAKE_new_LweSample /;"	d
USE_FAKE_new_LweSample_array	src/tests/fakes/lwe.h	/^#define USE_FAKE_new_LweSample_array /;"	d
USE_FAKE_new_TGswSample	src/tests/fakes/tgsw.h	/^#define USE_FAKE_new_TGswSample /;"	d
USE_FAKE_new_TGswSampleFFT	src/tests/fakes/tgsw-fft.h	/^#define USE_FAKE_new_TGswSampleFFT /;"	d
USE_FAKE_new_TGswSampleFFT_array	src/tests/fakes/tgsw-fft.h	/^#define USE_FAKE_new_TGswSampleFFT_array /;"	d
USE_FAKE_new_TGswSample_array	src/tests/fakes/tgsw.h	/^#define USE_FAKE_new_TGswSample_array /;"	d
USE_FAKE_new_TLweSample	src/tests/fakes/tlwe.h	/^#define USE_FAKE_new_TLweSample /;"	d
USE_FAKE_new_TLweSampleFFT	src/tests/fakes/tlwe-fft.h	/^#define USE_FAKE_new_TLweSampleFFT /;"	d
USE_FAKE_new_TLweSampleFFT_array	src/tests/fakes/tlwe-fft.h	/^#define USE_FAKE_new_TLweSampleFFT_array /;"	d
USE_FAKE_new_TLweSample_array	src/tests/fakes/tlwe.h	/^#define USE_FAKE_new_TLweSample_array /;"	d
USE_FAKE_tGswAddH	src/tests/fakes/tgsw.h	/^#define USE_FAKE_tGswAddH /;"	d
USE_FAKE_tGswAddMuH	src/tests/fakes/tgsw.h	/^#define USE_FAKE_tGswAddMuH /;"	d
USE_FAKE_tGswAddMuIntH	src/tests/fakes/tgsw.h	/^#define USE_FAKE_tGswAddMuIntH /;"	d
USE_FAKE_tGswClear	src/tests/fakes/tgsw.h	/^#define USE_FAKE_tGswClear /;"	d
USE_FAKE_tGswEncryptZero	src/tests/fakes/tgsw.h	/^#define USE_FAKE_tGswEncryptZero /;"	d
USE_FAKE_tGswExternMulToTLwe	src/tests/fakes/tgsw.h	/^#define USE_FAKE_tGswExternMulToTLwe /;"	d
USE_FAKE_tGswFFTAddH	src/tests/fakes/tgsw-fft.h	/^#define USE_FAKE_tGswFFTAddH /;"	d
USE_FAKE_tGswFFTClear	src/tests/fakes/tgsw-fft.h	/^#define USE_FAKE_tGswFFTClear /;"	d
USE_FAKE_tGswFFTExternMulToTLwe	src/tests/fakes/tgsw-fft.h	/^#define USE_FAKE_tGswFFTExternMulToTLwe /;"	d
USE_FAKE_tGswFFTMulByXaiMinusOne	src/tests/fakes/tgsw-fft.h	/^#define USE_FAKE_tGswFFTMulByXaiMinusOne /;"	d
USE_FAKE_tGswMulByXaiMinusOne	src/tests/fakes/tgsw.h	/^#define USE_FAKE_tGswMulByXaiMinusOne /;"	d
USE_FAKE_tGswSymDecrypt	src/tests/fakes/tgsw.h	/^#define USE_FAKE_tGswSymDecrypt /;"	d
USE_FAKE_tGswSymEncrypt	src/tests/fakes/tgsw.h	/^#define USE_FAKE_tGswSymEncrypt /;"	d
USE_FAKE_tGswSymEncryptInt	src/tests/fakes/tgsw.h	/^#define USE_FAKE_tGswSymEncryptInt /;"	d
USE_FAKE_tGswToFFTConvert	src/tests/fakes/tgsw-fft.h	/^#define USE_FAKE_tGswToFFTConvert /;"	d
USE_FAKE_tLweAddMulRTo	src/tests/fakes/tlwe.h	/^#define USE_FAKE_tLweAddMulRTo /;"	d
USE_FAKE_tLweAddMulTo	src/tests/fakes/tlwe.h	/^#define USE_FAKE_tLweAddMulTo /;"	d
USE_FAKE_tLweAddTo	src/tests/fakes/tlwe.h	/^#define USE_FAKE_tLweAddTo /;"	d
USE_FAKE_tLweApproxPhase	src/tests/fakes/tlwe.h	/^#define USE_FAKE_tLweApproxPhase /;"	d
USE_FAKE_tLweClear	src/tests/fakes/tlwe.h	/^#define USE_FAKE_tLweClear /;"	d
USE_FAKE_tLweCopy	src/tests/fakes/tlwe.h	/^#define USE_FAKE_tLweCopy /;"	d
USE_FAKE_tLweExtractLweSample	src/tests/fakes/tlwe.h	/^#define USE_FAKE_tLweExtractLweSample /;"	d
USE_FAKE_tLweFFTAddMulRTo	src/tests/fakes/tlwe-fft.h	/^#define USE_FAKE_tLweFFTAddMulRTo /;"	d
USE_FAKE_tLweFFTClear	src/tests/fakes/tlwe-fft.h	/^#define USE_FAKE_tLweFFTClear /;"	d
USE_FAKE_tLweFromFFTConvert	src/tests/fakes/tlwe-fft.h	/^#define  USE_FAKE_tLweFromFFTConvert /;"	d
USE_FAKE_tLweMulByXaiMinusOne	src/tests/fakes/tlwe.h	/^#define USE_FAKE_tLweMulByXaiMinusOne /;"	d
USE_FAKE_tLweNoiselessTrivial	src/tests/fakes/tlwe.h	/^#define USE_FAKE_tLweNoiselessTrivial /;"	d
USE_FAKE_tLwePhase	src/tests/fakes/tlwe.h	/^#define USE_FAKE_tLwePhase /;"	d
USE_FAKE_tLweSubMulTo	src/tests/fakes/tlwe.h	/^#define USE_FAKE_tLweSubMulTo /;"	d
USE_FAKE_tLweSubTo	src/tests/fakes/tlwe.h	/^#define USE_FAKE_tLweSubTo /;"	d
USE_FAKE_tLweSymDecrypt	src/tests/fakes/tlwe.h	/^#define USE_FAKE_tLweSymDecrypt /;"	d
USE_FAKE_tLweSymDecryptT	src/tests/fakes/tlwe.h	/^#define USE_FAKE_tLweSymDecryptT /;"	d
USE_FAKE_tLweSymEncrypt	src/tests/fakes/tlwe.h	/^#define USE_FAKE_tLweSymEncrypt /;"	d
USE_FAKE_tLweSymEncryptT	src/tests/fakes/tlwe.h	/^#define USE_FAKE_tLweSymEncryptT /;"	d
USE_FAKE_tLweSymEncryptZero	src/tests/fakes/tlwe.h	/^#define USE_FAKE_tLweSymEncryptZero /;"	d
USE_FAKE_tLweToFFTConvert	src/tests/fakes/tlwe-fft.h	/^#define USE_FAKE_tLweToFFTConvert /;"	d
USE_FAKE_tfhe_blindRotate	src/tests/fakes/lwe-bootstrapping.h	/^#define USE_FAKE_tfhe_blindRotate /;"	d
USE_FAKE_tfhe_blindRotateAndExtract	src/tests/fakes/lwe-bootstrapping.h	/^#define USE_FAKE_tfhe_blindRotateAndExtract /;"	d
USE_FAKE_tfhe_blindRotateAndExtract_FFT	src/tests/fakes/lwe-bootstrapping-fft.h	/^#define USE_FAKE_tfhe_blindRotateAndExtract_FFT /;"	d
USE_FAKE_tfhe_blindRotate_FFT	src/tests/fakes/lwe-bootstrapping-fft.h	/^#define USE_FAKE_tfhe_blindRotate_FFT /;"	d
USE_FAKE_tfhe_bootstrap	src/tests/fakes/lwe-bootstrapping.h	/^#define USE_FAKE_tfhe_bootstrap /;"	d
USE_FAKE_tfhe_bootstrap_FFT	src/tests/fakes/lwe-bootstrapping-fft.h	/^#define USE_FAKE_tfhe_bootstrap_FFT /;"	d
USE_FAKE_tfhe_bootstrap_woKS	src/tests/fakes/lwe-bootstrapping.h	/^#define USE_FAKE_tfhe_bootstrap_woKS /;"	d
USE_FAKE_tfhe_bootstrap_woKS_FFT	src/tests/fakes/lwe-bootstrapping-fft.h	/^#define USE_FAKE_tfhe_bootstrap_woKS_FFT /;"	d
USE_FAKE_tfhe_createLweBootstrappingKey	src/tests/fakes/lwe-bootstrapping.h	/^#define USE_FAKE_tfhe_createLweBootstrappingKey /;"	d
USE_OLD_FAKE_tfhe_bootstrap	src/tests/fakes/lwe-bootstrapping.h	/^#define USE_OLD_FAKE_tfhe_bootstrap /;"	d
USE_OLD_FAKE_tfhe_bootstrap_FFT	src/tests/fakes/lwe-bootstrapping-fft.h	/^#define USE_OLD_FAKE_tfhe_bootstrap_FFT /;"	d
UTC	src/muduo/muduo/base/TimeZone.cc	/^TimeZone TimeZone::UTC()$/;"	f	class:TimeZone	typeref:typename:TimeZone
Unary	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^bool Unary(int x) { return x < 0; }$/;"	f	namespace:testing::gmock_generated_actions_test	typeref:typename:bool
Unary	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^  short Unary(long x) { return static_cast<short>(value_ + x); }  \/\/ NOLINT$/;"	f	class:testing::gmock_more_actions_test::Foo	typeref:typename:short	file:
Unary	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^bool Unary(int x) { return x < 0; }$/;"	f	namespace:testing::gmock_more_actions_test	typeref:typename:bool
UnaryConstructorClass	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^  explicit UnaryConstructorClass(int value) : value_(value) {}$/;"	f	class:testing::gmock_generated_actions_test::UnaryConstructorClass	file:
UnaryConstructorClass	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^class UnaryConstructorClass {$/;"	c	namespace:testing::gmock_generated_actions_test	file:
UnaryFunctor	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^struct UnaryFunctor {$/;"	s	namespace:testing::gmock_generated_actions_test	file:
UnaryFunctor	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^struct UnaryFunctor {$/;"	s	namespace:testing::gmock_more_actions_test	file:
UnassignGuard	src/muduo/muduo/base/Mutex.h	/^    explicit UnassignGuard(MutexLock& owner)$/;"	f	class:muduo::MutexLock::UnassignGuard
UnassignGuard	src/muduo/muduo/base/Mutex.h	/^  class UnassignGuard : noncopyable$/;"	c	class:muduo::MutexLock
Uncopyable	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  Uncopyable() : value_(-1) {}$/;"	f	class:testing::gmock_matchers_test::Uncopyable	file:
Uncopyable	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  explicit Uncopyable(int a_value) : value_(a_value) {}$/;"	f	class:testing::gmock_matchers_test::Uncopyable	file:
Uncopyable	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^class Uncopyable {$/;"	c	namespace:testing::gmock_matchers_test	file:
Uncopyable	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  explicit Uncopyable(int a_value) : value_(a_value) {}$/;"	f	class:__anonf780395f0111::Uncopyable	file:
Uncopyable	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class Uncopyable {$/;"	c	namespace:__anonf780395f0111	file:
UncopyableFoo	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^  explicit UncopyableFoo(char value) : value_(value) {}$/;"	f	class:__anoncaf4ae130111::UncopyableFoo	file:
UncopyableFoo	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^class UncopyableFoo {$/;"	c	namespace:__anoncaf4ae130111	file:
Understanding Uninteresting vs Unexpected Calls	src/tests/googletest/googlemock/docs/CookBook.md	/^## Understanding Uninteresting vs Unexpected Calls ##$/;"	s	chapter:Setting Expectations
UnexpectedHRESULTFailure	src/tests/googletest/googletest/test/gtest_unittest.cc	/^static HRESULT UnexpectedHRESULTFailure() {$/;"	f	namespace:__anonf780395f0111	typeref:typename:HRESULT	file:
Uninteresting Calls	src/tests/googletest/googlemock/docs/ForDummies.md	/^## Uninteresting Calls ##$/;"	s	chapter:Setting Expectations
Uninteresting Calls	src/tests/googletest/googlemock/docs/v1_5/ForDummies.md	/^## Uninteresting Calls ##$/;"	s	chapter:Setting Expectations
Uninteresting Calls	src/tests/googletest/googlemock/docs/v1_6/ForDummies.md	/^## Uninteresting Calls ##$/;"	s	chapter:Setting Expectations
Uninteresting Calls	src/tests/googletest/googlemock/docs/v1_7/ForDummies.md	/^## Uninteresting Calls ##$/;"	s	chapter:Setting Expectations
Union	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^class Union(_NestedType):$/;"	c
UniquePtrSource	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^std::unique_ptr<int> UniquePtrSource() {$/;"	f	namespace:__anon550198f10111	typeref:typename:std::unique_ptr<int>
UnitTest	src/tests/googletest/googletest/include/gtest/gtest.h	/^class GTEST_API_ UnitTest {$/;"	c	namespace:testing
UnitTest	src/tests/googletest/googletest/src/gtest.cc	/^UnitTest::UnitTest() {$/;"	f	class:testing::UnitTest
UnitTestHelper	src/tests/googletest/googletest/test/gtest-unittest-api_test.cc	/^class UnitTestHelper {$/;"	c	namespace:testing::internal	file:
UnitTestImpl	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^class GTEST_API_ UnitTestImpl {$/;"	c	namespace:testing::internal
UnitTestImpl	src/tests/googletest/googletest/src/gtest.cc	/^UnitTestImpl::UnitTestImpl(UnitTest* parent)$/;"	f	class:testing::internal::UnitTestImpl
UnitTestOptions	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^class GTEST_API_ UnitTestOptions {$/;"	c	namespace:testing::internal
UnitTestPostamble	src/tests/googletest/googletest/scripts/gen_gtest_pred_impl.py	/^def UnitTestPostamble():$/;"	f
UnitTestPreamble	src/tests/googletest/googletest/scripts/gen_gtest_pred_impl.py	/^def UnitTestPreamble():$/;"	f
UnitTestRecordProperty	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  void UnitTestRecordProperty(const char* key, const std::string& value) {$/;"	f	class:testing::internal::UnitTestRecordPropertyTestHelper	typeref:typename:void	file:
UnitTestRecordPropertyTest	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class UnitTestRecordPropertyTest :$/;"	c	namespace:__anonf780395f0111	file:
UnitTestRecordPropertyTestEnvironment	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class UnitTestRecordPropertyTestEnvironment : public Environment {$/;"	c	namespace:__anonf780395f0111	file:
UnitTestRecordPropertyTestHelper	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  UnitTestRecordPropertyTestHelper() {}$/;"	f	class:testing::internal::UnitTestRecordPropertyTestHelper	file:
UnitTestRecordPropertyTestHelper	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class UnitTestRecordPropertyTestHelper : public Test {$/;"	c	namespace:testing::internal	file:
UniversalPrint	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^void UniversalPrint(const T& value, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
UniversalPrintArray	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^void UniversalPrintArray(const T* begin, size_t len, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
UniversalPrintArray	src/tests/googletest/googletest/src/gtest-printers.cc	/^void UniversalPrintArray(const char* begin, size_t len, ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
UniversalPrintArray	src/tests/googletest/googletest/src/gtest-printers.cc	/^void UniversalPrintArray(const wchar_t* begin, size_t len, ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
UniversalPrintCharArray	src/tests/googletest/googletest/src/gtest-printers.cc	/^static void UniversalPrintCharArray($/;"	f	namespace:testing::internal	typeref:typename:GTEST_ATTRIBUTE_NO_SANITIZE_MEMORY_ GTEST_ATTRIBUTE_NO_SANITIZE_ADDRESS_ GTEST_ATTRIBUTE_NO_SANITIZE_THREAD_ void	file:
UniversalPrinter	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^class UniversalPrinter {$/;"	c	namespace:testing::internal
UniversalPrinter	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^class UniversalPrinter<T&> {$/;"	c	namespace:testing::internal
UniversalPrinter	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^class UniversalPrinter<T[N]> {$/;"	c	namespace:testing::internal
UniversalTersePrint	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^void UniversalTersePrint(const T& value, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
UniversalTersePrintTupleFieldsToStrings	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^Strings UniversalTersePrintTupleFieldsToStrings(const Tuple& value) {$/;"	f	namespace:testing::internal	typeref:typename:Strings
UniversalTersePrinter	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^class UniversalTersePrinter {$/;"	c	namespace:testing::internal
UniversalTersePrinter	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^class UniversalTersePrinter<T&> {$/;"	c	namespace:testing::internal
UniversalTersePrinter	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^class UniversalTersePrinter<T[N]> {$/;"	c	namespace:testing::internal
UniversalTersePrinter	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^class UniversalTersePrinter<char*> {$/;"	c	namespace:testing::internal
UniversalTersePrinter	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^class UniversalTersePrinter<const char*> {$/;"	c	namespace:testing::internal
UniversalTersePrinter	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^class UniversalTersePrinter<const wchar_t*> {$/;"	c	namespace:testing::internal
UniversalTersePrinter	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^class UniversalTersePrinter<wchar_t*> {$/;"	c	namespace:testing::internal
Unlock	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  void Unlock() {$/;"	f	class:testing::internal::MutexBase	typeref:typename:void
Unlock	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  void Unlock() {}$/;"	f	class:testing::internal::Mutex	typeref:typename:void
Unlock	src/tests/googletest/googletest/src/gtest-port.cc	/^void Mutex::Unlock() {$/;"	f	class:testing::internal::Mutex	typeref:typename:void
UnorderedElementsAre	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^UnorderedElementsAre() {$/;"	f	namespace:testing	typeref:typename:internal::UnorderedElementsAreMatcher<::testing::tuple<>>
UnorderedElementsAre	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^UnorderedElementsAre(const T1& e1) {$/;"	f	namespace:testing	typeref:typename:internal::UnorderedElementsAreMatcher<::testing::tuple<typename internal::DecayArray<T1>::type>>
UnorderedElementsAre	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^UnorderedElementsAre(const T1& e1, const T2& e2) {$/;"	f	namespace:testing	typeref:typename:internal::UnorderedElementsAreMatcher<::testing::tuple<typename internal::DecayArray<T1>::type,typename internal::DecayArray<T2>::type>>
UnorderedElementsAre	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^UnorderedElementsAre(const T1& e1, const T2& e2, const T3& e3) {$/;"	f	namespace:testing
UnorderedElementsAre	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^UnorderedElementsAre(const T1& e1, const T2& e2, const T3& e3, const T4& e4) {$/;"	f	namespace:testing
UnorderedElementsAre	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^UnorderedElementsAre(const T1& e1, const T2& e2, const T3& e3, const T4& e4,$/;"	f	namespace:testing
UnorderedElementsAreArray	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^UnorderedElementsAreArray(::std::initializer_list<T> xs) {$/;"	f	namespace:testing	typeref:typename:internal::UnorderedElementsAreArrayMatcher<T>
UnorderedElementsAreArray	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^UnorderedElementsAreArray(Iter first, Iter last) {$/;"	f	namespace:testing	typeref:typename:internal::UnorderedElementsAreArrayMatcher<typename::std::iterator_traits<Iter>::value_type>
UnorderedElementsAreArray	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^UnorderedElementsAreArray(const Container& container) {$/;"	f	namespace:testing	typeref:typename:internal::UnorderedElementsAreArrayMatcher<typename Container::value_type>
UnorderedElementsAreArray	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^UnorderedElementsAreArray(const T (&array)[N]) {$/;"	f	namespace:testing	typeref:typename:internal::UnorderedElementsAreArrayMatcher<T>
UnorderedElementsAreArray	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^UnorderedElementsAreArray(const T* pointer, size_t count) {$/;"	f	namespace:testing	typeref:typename:internal::UnorderedElementsAreArrayMatcher<T>
UnorderedElementsAreArrayMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  UnorderedElementsAreArrayMatcher() {}$/;"	f	class:testing::internal::UnorderedElementsAreArrayMatcher
UnorderedElementsAreArrayMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  UnorderedElementsAreArrayMatcher(Iter first, Iter last)$/;"	f	class:testing::internal::UnorderedElementsAreArrayMatcher
UnorderedElementsAreArrayMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class UnorderedElementsAreArrayMatcher {$/;"	c	namespace:testing::internal
UnorderedElementsAreMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit UnorderedElementsAreMatcher(const MatcherTuple& args)$/;"	f	class:testing::internal::UnorderedElementsAreMatcher
UnorderedElementsAreMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class UnorderedElementsAreMatcher {$/;"	c	namespace:testing::internal
UnorderedElementsAreMatcherImpl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  UnorderedElementsAreMatcherImpl(InputIter first, InputIter last) {$/;"	f	class:testing::internal::UnorderedElementsAreMatcherImpl
UnorderedElementsAreMatcherImpl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class UnorderedElementsAreMatcherImpl$/;"	c	namespace:testing::internal
UnorderedElementsAreMatcherImplBase	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class GTEST_API_ UnorderedElementsAreMatcherImplBase {$/;"	c	namespace:testing::internal
UnorderedElementsAreTest	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^class UnorderedElementsAreTest : public testing::Test {$/;"	c	namespace:testing::gmock_matchers_test	file:
UnorderedPointwise	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^UnorderedPointwise(const Tuple2Matcher& tuple2_matcher,$/;"	f	namespace:testing	typeref:typename:internal::UnorderedElementsAreArrayMatcher<typename internal::BoundSecondMatcher<Tuple2Matcher,T>>
UnorderedPointwise	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^UnorderedPointwise(const Tuple2Matcher& tuple2_matcher,$/;"	f	namespace:testing	typeref:typename:internal::UnorderedElementsAreArrayMatcher<typename internal::BoundSecondMatcher<Tuple2Matcher,typename internal::StlContainerView<GTEST_REMOVE_CONST_ (RhsContainer)>::type::value_type>>
Unprintable	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  Unprintable() : c_('a') {}$/;"	f	class:testing::gmock_matchers_test::Unprintable	file:
Unprintable	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^class Unprintable {$/;"	c	namespace:testing::gmock_matchers_test	file:
Unprintable	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^  Unprintable() : value(0) {}$/;"	f	struct:__anon6b6cf3b20111::Unprintable	file:
Unprintable	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^struct Unprintable {$/;"	s	namespace:__anon6b6cf3b20111	file:
UnprintableChar	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  explicit UnprintableChar(char ch) : char_(ch) {}$/;"	f	class:__anonf780395f0311::UnprintableChar	file:
UnprintableChar	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class UnprintableChar {$/;"	c	namespace:__anonf780395f0311	file:
UnprintableInFoo	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^  UnprintableInFoo() : z_(0) { memcpy(xy_, "\\xEF\\x12\\x0\\x0\\x34\\xAB\\x0\\x0", 8); }$/;"	f	class:foo::UnprintableInFoo	file:
UnprintableInFoo	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^class UnprintableInFoo {$/;"	c	namespace:foo	file:
UnprintableTemplateInGlobal	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^  UnprintableTemplateInGlobal() : value_() {}$/;"	f	class:UnprintableTemplateInGlobal	file:
UnprintableTemplateInGlobal	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^class UnprintableTemplateInGlobal {$/;"	c	file:
UnregisterCallReaction	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^void Mock::UnregisterCallReaction(const void* mock_obj)$/;"	f	class:testing::Mock	typeref:typename:void
UnregisterLocked	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^void Mock::UnregisterLocked(internal::UntypedFunctionMockerBase* mocker)$/;"	f	class:testing::Mock	typeref:typename:void
UnshuffleTests	src/tests/googletest/googletest/src/gtest.cc	/^void TestCase::UnshuffleTests() {$/;"	f	class:testing::TestCase	typeref:typename:void
UnshuffleTests	src/tests/googletest/googletest/src/gtest.cc	/^void UnitTestImpl::UnshuffleTests() {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:void
UnsignedTypes	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^typedef testing::Types<unsigned char, unsigned int> UnsignedTypes;$/;"	t	typeref:typename:testing::Types<unsigned char,unsigned int>	file:
Unstreamable	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  explicit Unstreamable(int value) : value_(value) {}$/;"	f	class:Unstreamable	file:
Unstreamable	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^class Unstreamable {$/;"	c	file:
UntypedActionResultHolderBase	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^class UntypedActionResultHolderBase {$/;"	c	namespace:testing::internal
UntypedActions	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  typedef std::vector<const void*> UntypedActions;$/;"	t	class:testing::internal::ExpectationBase	typeref:typename:std::vector<const void * >
UntypedDescribeUninterestingCall	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  virtual void UntypedDescribeUninterestingCall($/;"	f	class:testing::internal::FunctionMockerBase	typeref:typename:void
UntypedExpectations	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  UntypedExpectations;$/;"	t	class:testing::internal::UntypedFunctionMockerBase	typeref:typename:std::vector<internal::linked_ptr<ExpectationBase>>
UntypedFindMatchingExpectation	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  virtual const ExpectationBase* UntypedFindMatchingExpectation($/;"	f	class:testing::internal::FunctionMockerBase	typeref:typename:const ExpectationBase *
UntypedFunctionMockerBase	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^class GTEST_API_ UntypedFunctionMockerBase {$/;"	c	namespace:testing::internal
UntypedFunctionMockerBase	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^UntypedFunctionMockerBase::UntypedFunctionMockerBase()$/;"	f	class:testing::internal::UntypedFunctionMockerBase
UntypedInvokeWith	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^UntypedFunctionMockerBase::UntypedInvokeWith(const void* const untyped_args)$/;"	f	class:testing::internal::UntypedFunctionMockerBase	typeref:typename:UntypedActionResultHolderBase *
UntypedOnCallSpecBase	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  UntypedOnCallSpecBase(const char* a_file, int a_line)$/;"	f	class:testing::internal::UntypedOnCallSpecBase
UntypedOnCallSpecBase	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^class UntypedOnCallSpecBase {$/;"	c	namespace:testing::internal
UntypedOnCallSpecs	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  typedef std::vector<const void*> UntypedOnCallSpecs;$/;"	t	class:testing::internal::UntypedFunctionMockerBase	typeref:typename:std::vector<const void * >
UntypedPerformAction	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  virtual UntypedActionResultHolderBase* UntypedPerformAction($/;"	f	class:testing::internal::FunctionMockerBase	typeref:typename:UntypedActionResultHolderBase *
UntypedPerformDefaultAction	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  virtual UntypedActionResultHolderBase* UntypedPerformDefaultAction($/;"	f	class:testing::internal::FunctionMockerBase	typeref:typename:UntypedActionResultHolderBase *
UntypedPrintArgs	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  virtual void UntypedPrintArgs(const void* untyped_args,$/;"	f	class:testing::internal::FunctionMockerBase	typeref:typename:void
UntypedTimes	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^void ExpectationBase::UntypedTimes(const Cardinality& a_cardinality) {$/;"	f	class:testing::internal::ExpectationBase	typeref:typename:void
Unused	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^typedef internal::IgnoredValue Unused;$/;"	t	namespace:testing	typeref:typename:internal::IgnoredValue
Unwrap	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  T Unwrap() { return ::testing::internal::move(value_); }$/;"	f	class:testing::internal::ReferenceOrValueWrapper	typeref:typename:T
Unwrap	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  T Unwrap() {$/;"	f	class:testing::internal::ActionResultHolder	typeref:typename:T
Unwrap	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  T& Unwrap() { return *value_ptr_; }$/;"	f	class:testing::internal::ReferenceOrValueWrapper	typeref:typename:T &
Unwrap	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  void Unwrap() { }$/;"	f	class:testing::internal::ActionResultHolder	typeref:typename:void
UpdateLinksInBranchedFiles	src/tests/googletest/googletest/scripts/release_docs.py	/^  def UpdateLinksInBranchedFiles(self):$/;"	m	class:WikiBrancher
UpdatePolicy	src/muduo/examples/memcached/server/Item.h	/^  enum UpdatePolicy$/;"	g	class:Item
Updating Generated Code	src/tests/googletest/googletest/docs/DevGuide.md	/^## Updating Generated Code ##$/;"	s	chapter:Contributing Code
Upgrading from 1.1.0 or Earlier	src/tests/googletest/googlemock/README.md	/^#### Upgrading from 1.1.0 or Earlier ####$/;"	t	subsection:Getting Started""Upgrading from an Earlier Version
Upgrading from 1.4.0 or Earlier	src/tests/googletest/googlemock/README.md	/^#### Upgrading from 1.4.0 or Earlier ####$/;"	t	subsection:Getting Started""Upgrading from an Earlier Version
Upgrading from an Earlier Version	src/tests/googletest/googlemock/README.md	/^### Upgrading from an Earlier Version ###$/;"	S	section:Getting Started
UploadBaseFiles	src/tests/googletest/googlemock/scripts/upload.py	/^  def UploadBaseFiles(self, issue, rpc_server, patch_list, patchset, options,$/;"	m	class:VersionControlSystem
UploadBaseFiles	src/tests/googletest/googletest/scripts/upload.py	/^  def UploadBaseFiles(self, issue, rpc_server, patch_list, patchset, options,$/;"	m	class:VersionControlSystem
UploadFile	src/tests/googletest/googlemock/scripts/upload.py	/^    def UploadFile(filename, file_id, content, is_binary, status, is_base):$/;"	f	member:VersionControlSystem.UploadBaseFiles	file:
UploadFile	src/tests/googletest/googletest/scripts/upload.py	/^    def UploadFile(filename, file_id, content, is_binary, status, is_base):$/;"	f	member:VersionControlSystem.UploadBaseFiles	file:
UploadSeparatePatches	src/tests/googletest/googlemock/scripts/upload.py	/^def UploadSeparatePatches(issue, rpc_server, patchset, data, options):$/;"	f
UploadSeparatePatches	src/tests/googletest/googletest/scripts/upload.py	/^def UploadSeparatePatches(issue, rpc_server, patchset, data, options):$/;"	f
UponLeavingGTest	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^  virtual void UponLeavingGTest() {}$/;"	f	struct:testing::internal::__anonf4b2defb0111::MockStackTraceGetter	typeref:typename:void	file:
UponLeavingGTest	src/tests/googletest/googletest/src/gtest.cc	/^void OsStackTraceGetter::UponLeavingGTest() {}$/;"	f	class:testing::internal::OsStackTraceGetter	typeref:typename:void
UptimeClient	src/muduo/examples/netty/uptime/uptime.cc	/^  UptimeClient(EventLoop* loop, const InetAddress& listenAddr)$/;"	f	class:UptimeClient	file:
UptimeClient	src/muduo/examples/netty/uptime/uptime.cc	/^class UptimeClient : noncopyable$/;"	c	file:
UrlEncode	src/tests/googletest/googletest/src/gtest.cc	/^std::string StreamingListener::UrlEncode(const char* str) {$/;"	f	class:testing::internal::StreamingListener	typeref:typename:std::string
Use	src/tests/googletest/googletest/test/gtest-linked_ptr_test.cc	/^  virtual void Use() { *history << "A" << mynum << " use\\n"; }$/;"	f	class:__anonf616d1f80111::A	typeref:typename:void	file:
Use	src/tests/googletest/googletest/test/gtest-linked_ptr_test.cc	/^  virtual void Use() { *history << "B" << mynum << " use\\n"; }$/;"	f	class:__anonf616d1f80111::B	typeref:typename:void	file:
UserMap	src/muduo/examples/twisted/finger/finger06.cc	/^typedef std::map<string, string> UserMap;$/;"	t	typeref:typename:std::map<string,string>	file:
UserMap	src/muduo/examples/twisted/finger/finger07.cc	/^typedef std::map<string, string> UserMap;$/;"	t	typeref:typename:std::map<string,string>	file:
UserThreadFunc	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  typedef void UserThreadFunc(T);$/;"	t	class:testing::internal::ThreadWithParam	typeref:typename:void ()(T)
UsesColor	src/tests/googletest/googletest/test/gtest_color_test.py	/^def UsesColor(term, color_env_var, color_flag):$/;"	f
Using	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^class Using(Node):$/;"	c
Using Actions	src/tests/googletest/googlemock/docs/CookBook.md	/^# Using Actions #$/;"	c
Using Actions	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^# Using Actions #$/;"	c
Using Actions	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^# Using Actions #$/;"	c
Using Actions	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^# Using Actions #$/;"	c
Using Assertions in Sub-routines	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^# Using Assertions in Sub-routines #$/;"	c
Using Assertions in Sub-routines	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^# Using Assertions in Sub-routines #$/;"	c
Using Assertions in Sub-routines	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^# Using Assertions in Sub-routines #$/;"	c
Using Assertions in Sub-routines	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^# Using Assertions in Sub-routines #$/;"	c
Using CMake	src/tests/googletest/googletest/README.md	/^### Using CMake ###$/;"	S
Using Check Points	src/tests/googletest/googlemock/docs/CookBook.md	/^## Using Check Points ##$/;"	s	chapter:Misc Recipes on Using Google Mock
Using Check Points	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Using Check Points ##$/;"	s	chapter:Misc Recipes on Using Google Mock
Using Check Points	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Using Check Points ##$/;"	s	chapter:Misc Recipes on Using Google Mock
Using Check Points	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Using Check Points ##$/;"	s	chapter:Misc Recipes on Using Google Mock
Using Event Listeners	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^## Using Event Listeners ##$/;"	s	chapter:Extending Google Test by Handling Test Events
Using Event Listeners	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^## Using Event Listeners ##$/;"	s	chapter:Extending Google Test by Handling Test Events
Using Event Listeners	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^## Using Event Listeners ##$/;"	s	chapter:Extending Google Test by Handling Test Events
Using Event Listeners	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^## Using Event Listeners ##$/;"	s	chapter:Extending Google Test by Handling Test Events
Using Functions/Methods/Functors as Actions	src/tests/googletest/googlemock/docs/CookBook.md	/^## Using Functions\/Methods\/Functors as Actions ##$/;"	s	chapter:Using Actions
Using Functions/Methods/Functors as Actions	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Using Functions\/Methods\/Functors as Actions ##$/;"	s	chapter:Using Actions
Using Functions/Methods/Functors as Actions	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Using Functions\/Methods\/Functors as Actions ##$/;"	s	chapter:Using Actions
Using Functions/Methods/Functors as Actions	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Using Functions\/Methods\/Functors as Actions ##$/;"	s	chapter:Using Actions
Using Google Mock Without Google Test	src/tests/googletest/googlemock/README.md	/^### Using Google Mock Without Google Test ###$/;"	S	section:Getting Started
Using Google Mock and Threads	src/tests/googletest/googlemock/docs/CookBook.md	/^## Using Google Mock and Threads ##$/;"	s	chapter:Misc Recipes on Using Google Mock
Using Google Mock and Threads	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Using Google Mock and Threads ##$/;"	s	chapter:Misc Recipes on Using Google Mock
Using Google Mock and Threads	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Using Google Mock and Threads ##$/;"	s	chapter:Misc Recipes on Using Google Mock
Using Google Mock and Threads	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Using Google Mock and Threads ##$/;"	s	chapter:Misc Recipes on Using Google Mock
Using Google Mock with Any Testing Framework	src/tests/googletest/googlemock/docs/ForDummies.md	/^## Using Google Mock with Any Testing Framework ##$/;"	s	chapter:Using Mocks in Tests
Using Google Mock with Any Testing Framework	src/tests/googletest/googlemock/docs/v1_5/ForDummies.md	/^## Using Google Mock with Any Testing Framework ##$/;"	s	chapter:Using Mocks in Tests
Using Google Mock with Any Testing Framework	src/tests/googletest/googlemock/docs/v1_6/ForDummies.md	/^## Using Google Mock with Any Testing Framework ##$/;"	s	chapter:Using Mocks in Tests
Using Google Mock with Any Testing Framework	src/tests/googletest/googlemock/docs/v1_7/ForDummies.md	/^## Using Google Mock with Any Testing Framework ##$/;"	s	chapter:Using Mocks in Tests
Using Matchers	src/tests/googletest/googlemock/docs/CookBook.md	/^# Using Matchers #$/;"	c
Using Matchers	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^# Using Matchers #$/;"	c
Using Matchers	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^# Using Matchers #$/;"	c
Using Matchers	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^# Using Matchers #$/;"	c
Using Matchers as Predicates	src/tests/googletest/googlemock/docs/CookBook.md	/^## Using Matchers as Predicates ##$/;"	s	chapter:Using Matchers
Using Matchers as Predicates	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Using Matchers as Predicates ##$/;"	s	chapter:Using Matchers
Using Matchers as Predicates	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Using Matchers as Predicates ##$/;"	s	chapter:Using Matchers
Using Matchers as Predicates	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Using Matchers as Predicates ##$/;"	s	chapter:Using Matchers
Using Matchers in Google Test Assertions	src/tests/googletest/googlemock/docs/CookBook.md	/^## Using Matchers in Google Test Assertions ##$/;"	s	chapter:Using Matchers
Using Matchers in Google Test Assertions	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Using Matchers in Google Test Assertions ##$/;"	s	chapter:Using Matchers
Using Matchers in Google Test Assertions	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Using Matchers in Google Test Assertions ##$/;"	s	chapter:Using Matchers
Using Matchers in Google Test Assertions	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Using Matchers in Google Test Assertions ##$/;"	s	chapter:Using Matchers
Using Mocks in Tests	src/tests/googletest/googlemock/docs/CheatSheet.md	/^# Using Mocks in Tests #$/;"	c
Using Mocks in Tests	src/tests/googletest/googlemock/docs/ForDummies.md	/^# Using Mocks in Tests #$/;"	c
Using Mocks in Tests	src/tests/googletest/googlemock/docs/v1_5/CheatSheet.md	/^# Using Mocks in Tests #$/;"	c
Using Mocks in Tests	src/tests/googletest/googlemock/docs/v1_5/ForDummies.md	/^# Using Mocks in Tests #$/;"	c
Using Mocks in Tests	src/tests/googletest/googlemock/docs/v1_6/CheatSheet.md	/^# Using Mocks in Tests #$/;"	c
Using Mocks in Tests	src/tests/googletest/googlemock/docs/v1_6/ForDummies.md	/^# Using Mocks in Tests #$/;"	c
Using Mocks in Tests	src/tests/googletest/googlemock/docs/v1_7/CheatSheet.md	/^# Using Mocks in Tests #$/;"	c
Using Mocks in Tests	src/tests/googletest/googlemock/docs/v1_7/ForDummies.md	/^# Using Mocks in Tests #$/;"	c
Using Multiple Expectations	src/tests/googletest/googlemock/docs/ForDummies.md	/^## Using Multiple Expectations ##$/;"	s	chapter:Setting Expectations
Using Multiple Expectations	src/tests/googletest/googlemock/docs/v1_5/ForDummies.md	/^## Using Multiple Expectations ##$/;"	s	chapter:Setting Expectations
Using Multiple Expectations	src/tests/googletest/googlemock/docs/v1_6/ForDummies.md	/^## Using Multiple Expectations ##$/;"	s	chapter:Setting Expectations
Using Multiple Expectations	src/tests/googletest/googlemock/docs/v1_7/ForDummies.md	/^## Using Multiple Expectations ##$/;"	s	chapter:Setting Expectations
Using Predicates as Matchers	src/tests/googletest/googlemock/docs/CookBook.md	/^## Using Predicates as Matchers ##$/;"	s	chapter:Using Matchers
Using Predicates as Matchers	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Using Predicates as Matchers ##$/;"	s	chapter:Using Matchers
Using Predicates as Matchers	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Using Predicates as Matchers ##$/;"	s	chapter:Using Matchers
Using Predicates as Matchers	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Using Predicates as Matchers ##$/;"	s	chapter:Using Matchers
Using Simple Matchers	src/tests/googletest/googlemock/docs/CookBook.md	/^## Using Simple Matchers ##$/;"	s	chapter:Using Matchers
Using Simple Matchers	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Using Simple Matchers ##$/;"	s	chapter:Using Matchers
Using Simple Matchers	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Using Simple Matchers ##$/;"	s	chapter:Using Matchers
Using Simple Matchers	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Using Simple Matchers ##$/;"	s	chapter:Using Matchers
Using a Function That Returns an AssertionResult	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^### Using a Function That Returns an AssertionResult ###$/;"	S	section:More Assertions""Predicate Assertions for Better Error Messages
Using a Function That Returns an AssertionResult	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^### Using a Function That Returns an AssertionResult ###$/;"	S	section:More Assertions""Predicate Assertions for Better Error Messages
Using a Function That Returns an AssertionResult	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^### Using a Function That Returns an AssertionResult ###$/;"	S	section:More Assertions""Predicate Assertions for Better Error Messages
Using a Function That Returns an AssertionResult	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^### Using a Function That Returns an AssertionResult ###$/;"	S	section:More Assertions""Predicate Assertions for Better Error Messages
Using a Function or a Functor as an Action	src/tests/googletest/googlemock/docs/CheatSheet.md	/^## Using a Function or a Functor as an Action ##$/;"	s	chapter:Actions
Using a Function or a Functor as an Action	src/tests/googletest/googlemock/docs/v1_5/CheatSheet.md	/^## Using a Function or a Functor as an Action ##$/;"	s	chapter:Actions
Using a Function or a Functor as an Action	src/tests/googletest/googlemock/docs/v1_6/CheatSheet.md	/^## Using a Function or a Functor as an Action ##$/;"	s	chapter:Actions
Using a Function or a Functor as an Action	src/tests/googletest/googlemock/docs/v1_7/CheatSheet.md	/^## Using a Function or a Functor as an Action ##$/;"	s	chapter:Actions
Using a Predicate-Formatter	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^### Using a Predicate-Formatter ###$/;"	S	section:More Assertions""Predicate Assertions for Better Error Messages
Using a Predicate-Formatter	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^### Using a Predicate-Formatter ###$/;"	S	section:More Assertions""Predicate Assertions for Better Error Messages
Using a Predicate-Formatter	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^### Using a Predicate-Formatter ###$/;"	S	section:More Assertions""Predicate Assertions for Better Error Messages
Using a Predicate-Formatter	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^### Using a Predicate-Formatter ###$/;"	S	section:More Assertions""Predicate Assertions for Better Error Messages
Using an Existing Boolean Function	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^### Using an Existing Boolean Function ###$/;"	S	section:More Assertions""Predicate Assertions for Better Error Messages
Using an Existing Boolean Function	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^### Using an Existing Boolean Function ###$/;"	S	section:More Assertions""Predicate Assertions for Better Error Messages
Using an Existing Boolean Function	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^### Using an Existing Boolean Function ###$/;"	S	section:More Assertions""Predicate Assertions for Better Error Messages
Using an Existing Boolean Function	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^### Using an Existing Boolean Function ###$/;"	S	section:More Assertions""Predicate Assertions for Better Error Messages
Using the ACTION Object's Type	src/tests/googletest/googlemock/docs/CookBook.md	/^## Using the ACTION Object's Type ##$/;"	s	chapter:Extending Google Mock
Using the ACTION Object's Type	src/tests/googletest/googlemock/docs/DesignDoc.md	/^### Using the ACTION Object's Type ###$/;"	S	section:Macros for Defining Actions""Advanced Usages
Using the ACTION Object's Type	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Using the ACTION Object's Type ##$/;"	s	chapter:Extending Google Mock
Using the ACTION Object's Type	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Using the ACTION Object's Type ##$/;"	s	chapter:Extending Google Mock
Using the ACTION Object's Type	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Using the ACTION Object's Type ##$/;"	s	chapter:Extending Google Mock
Utf16ToAnsi	src/tests/googletest/googletest/src/gtest.cc	/^const char* String::Utf16ToAnsi(LPCWSTR utf16_str)  {$/;"	f	class:testing::internal::String	typeref:typename:const char *
VALID_IDENTIFIER_CHARS	src/tests/googletest/googlemock/scripts/generator/cpp/tokenize.py	/^VALID_IDENTIFIER_CHARS = set(_letters + _letters.upper() + '_0123456789$')$/;"	v
VERIFY_CODE_LOCATION	src/tests/googletest/googletest/test/gtest_unittest.cc	/^#define VERIFY_CODE_LOCATION /;"	d	file:
VISIBILITY_PRIVATE	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^VISIBILITY_PUBLIC, VISIBILITY_PROTECTED, VISIBILITY_PRIVATE = range(3)$/;"	v
VISIBILITY_PROTECTED	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^VISIBILITY_PUBLIC, VISIBILITY_PROTECTED, VISIBILITY_PRIVATE = range(3)$/;"	v
VISIBILITY_PUBLIC	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^VISIBILITY_PUBLIC, VISIBILITY_PROTECTED, VISIBILITY_PRIVATE = range(3)$/;"	v
ValidateGMockRootDir	src/tests/googletest/googlemock/scripts/fuse_gmock_files.py	/^def ValidateGMockRootDir(gmock_root):$/;"	f
ValidateGTestRootDir	src/tests/googletest/googletest/scripts/fuse_gtest_files.py	/^def ValidateGTestRootDir(gtest_root):$/;"	f
ValidateOutputDir	src/tests/googletest/googlemock/scripts/fuse_gmock_files.py	/^def ValidateOutputDir(output_dir):$/;"	f
ValidateOutputDir	src/tests/googletest/googletest/scripts/fuse_gtest_files.py	/^def ValidateOutputDir(output_dir):$/;"	f
ValidateRegex	src/tests/googletest/googletest/src/gtest-port.cc	/^bool ValidateRegex(const char* regex) {$/;"	f	namespace:testing::internal	typeref:typename:bool
ValidateTestProperty	src/tests/googletest/googletest/src/gtest.cc	/^bool TestResult::ValidateTestProperty(const std::string& xml_element,$/;"	f	class:testing::TestResult	typeref:typename:bool
ValidateTestPropertyName	src/tests/googletest/googletest/src/gtest.cc	/^bool ValidateTestPropertyName(const std::string& property_name,$/;"	f	namespace:testing	typeref:typename:bool
Validating a Member of an Object	src/tests/googletest/googlemock/docs/CookBook.md	/^## Validating a Member of an Object ##$/;"	s	chapter:Using Matchers
Validating a Member of an Object	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Validating a Member of an Object ##$/;"	s	chapter:Using Matchers
Validating a Member of an Object	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Validating a Member of an Object ##$/;"	s	chapter:Using Matchers
Validating a Member of an Object	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Validating a Member of an Object ##$/;"	s	chapter:Using Matchers
Validating the Value Pointed to by a Pointer Argument	src/tests/googletest/googlemock/docs/CookBook.md	/^## Validating the Value Pointed to by a Pointer Argument ##$/;"	s	chapter:Using Matchers
Validating the Value Pointed to by a Pointer Argument	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Validating the Value Pointed to by a Pointer Argument ##$/;"	s	chapter:Using Matchers
Validating the Value Pointed to by a Pointer Argument	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Validating the Value Pointed to by a Pointer Argument ##$/;"	s	chapter:Using Matchers
Validating the Value Pointed to by a Pointer Argument	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Validating the Value Pointed to by a Pointer Argument ##$/;"	s	chapter:Using Matchers
Value	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    typedef typename tuple_element<N - 1, ValueTuple>::type Value;$/;"	t	function:testing::internal::TuplePrefix::ExplainMatchFailuresTo	typeref:typename:tuple_element<N-1,ValueTuple>::type
Value	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline bool Value(const T& value, M matcher) {$/;"	f	namespace:testing	typeref:typename:bool
Value Parameterized Tests	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^# Value Parameterized Tests #$/;"	c
Value Parameterized Tests	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^# Value Parameterized Tests #$/;"	c
Value Parameterized Tests	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^# Value Parameterized Tests #$/;"	c
Value Parameterized Tests	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^# Value Parameterized Tests #$/;"	c
ValueArray1	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  explicit ValueArray1(T1 v1) : v1_(v1) {}$/;"	f	class:testing::internal::ValueArray1
ValueArray1	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray1 {$/;"	c	namespace:testing::internal
ValueArray10	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray10(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray10
ValueArray10	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray10 {$/;"	c	namespace:testing::internal
ValueArray11	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray11(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray11
ValueArray11	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray11 {$/;"	c	namespace:testing::internal
ValueArray12	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray12(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray12
ValueArray12	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray12 {$/;"	c	namespace:testing::internal
ValueArray13	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray13(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray13
ValueArray13	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray13 {$/;"	c	namespace:testing::internal
ValueArray14	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray14(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray14
ValueArray14	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray14 {$/;"	c	namespace:testing::internal
ValueArray15	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray15(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray15
ValueArray15	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray15 {$/;"	c	namespace:testing::internal
ValueArray16	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray16(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray16
ValueArray16	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray16 {$/;"	c	namespace:testing::internal
ValueArray17	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray17(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray17
ValueArray17	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray17 {$/;"	c	namespace:testing::internal
ValueArray18	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray18(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray18
ValueArray18	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray18 {$/;"	c	namespace:testing::internal
ValueArray19	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray19(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray19
ValueArray19	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray19 {$/;"	c	namespace:testing::internal
ValueArray2	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray2(T1 v1, T2 v2) : v1_(v1), v2_(v2) {}$/;"	f	class:testing::internal::ValueArray2
ValueArray2	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray2 {$/;"	c	namespace:testing::internal
ValueArray20	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray20(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray20
ValueArray20	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray20 {$/;"	c	namespace:testing::internal
ValueArray21	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray21(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray21
ValueArray21	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray21 {$/;"	c	namespace:testing::internal
ValueArray22	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray22(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray22
ValueArray22	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray22 {$/;"	c	namespace:testing::internal
ValueArray23	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray23(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray23
ValueArray23	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray23 {$/;"	c	namespace:testing::internal
ValueArray24	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray24(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray24
ValueArray24	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray24 {$/;"	c	namespace:testing::internal
ValueArray25	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray25(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray25
ValueArray25	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray25 {$/;"	c	namespace:testing::internal
ValueArray26	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray26(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray26
ValueArray26	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray26 {$/;"	c	namespace:testing::internal
ValueArray27	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray27(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray27
ValueArray27	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray27 {$/;"	c	namespace:testing::internal
ValueArray28	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray28(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray28
ValueArray28	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray28 {$/;"	c	namespace:testing::internal
ValueArray29	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray29(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray29
ValueArray29	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray29 {$/;"	c	namespace:testing::internal
ValueArray3	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray3(T1 v1, T2 v2, T3 v3) : v1_(v1), v2_(v2), v3_(v3) {}$/;"	f	class:testing::internal::ValueArray3
ValueArray3	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray3 {$/;"	c	namespace:testing::internal
ValueArray30	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray30(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray30
ValueArray30	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray30 {$/;"	c	namespace:testing::internal
ValueArray31	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray31(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray31
ValueArray31	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray31 {$/;"	c	namespace:testing::internal
ValueArray32	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray32(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray32
ValueArray32	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray32 {$/;"	c	namespace:testing::internal
ValueArray33	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray33(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray33
ValueArray33	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray33 {$/;"	c	namespace:testing::internal
ValueArray34	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray34(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray34
ValueArray34	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray34 {$/;"	c	namespace:testing::internal
ValueArray35	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray35(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray35
ValueArray35	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray35 {$/;"	c	namespace:testing::internal
ValueArray36	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray36(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray36
ValueArray36	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray36 {$/;"	c	namespace:testing::internal
ValueArray37	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray37(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray37
ValueArray37	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray37 {$/;"	c	namespace:testing::internal
ValueArray38	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray38(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray38
ValueArray38	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray38 {$/;"	c	namespace:testing::internal
ValueArray39	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray39(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray39
ValueArray39	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray39 {$/;"	c	namespace:testing::internal
ValueArray4	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray4(T1 v1, T2 v2, T3 v3, T4 v4) : v1_(v1), v2_(v2), v3_(v3),$/;"	f	class:testing::internal::ValueArray4
ValueArray4	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray4 {$/;"	c	namespace:testing::internal
ValueArray40	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray40(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray40
ValueArray40	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray40 {$/;"	c	namespace:testing::internal
ValueArray41	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray41(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray41
ValueArray41	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray41 {$/;"	c	namespace:testing::internal
ValueArray42	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray42(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray42
ValueArray42	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray42 {$/;"	c	namespace:testing::internal
ValueArray43	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray43(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray43
ValueArray43	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray43 {$/;"	c	namespace:testing::internal
ValueArray44	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray44(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray44
ValueArray44	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray44 {$/;"	c	namespace:testing::internal
ValueArray45	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray45(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray45
ValueArray45	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray45 {$/;"	c	namespace:testing::internal
ValueArray46	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray46(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray46
ValueArray46	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray46 {$/;"	c	namespace:testing::internal
ValueArray47	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray47(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray47
ValueArray47	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray47 {$/;"	c	namespace:testing::internal
ValueArray48	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray48(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray48
ValueArray48	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray48 {$/;"	c	namespace:testing::internal
ValueArray49	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray49(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray49
ValueArray49	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray49 {$/;"	c	namespace:testing::internal
ValueArray5	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray5(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5) : v1_(v1), v2_(v2), v3_(v3),$/;"	f	class:testing::internal::ValueArray5
ValueArray5	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray5 {$/;"	c	namespace:testing::internal
ValueArray50	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray50(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray50
ValueArray50	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray50 {$/;"	c	namespace:testing::internal
ValueArray6	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray6(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6) : v1_(v1), v2_(v2),$/;"	f	class:testing::internal::ValueArray6
ValueArray6	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray6 {$/;"	c	namespace:testing::internal
ValueArray7	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray7(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7) : v1_(v1),$/;"	f	class:testing::internal::ValueArray7
ValueArray7	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray7 {$/;"	c	namespace:testing::internal
ValueArray8	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray8(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,$/;"	f	class:testing::internal::ValueArray8
ValueArray8	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray8 {$/;"	c	namespace:testing::internal
ValueArray9	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray9(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8,$/;"	f	class:testing::internal::ValueArray9
ValueArray9	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray9 {$/;"	c	namespace:testing::internal
ValueHolder	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^    ValueHolder() : value_() {}$/;"	f	class:testing::internal::ThreadLocal::ValueHolder
ValueHolder	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^    explicit ValueHolder(const T& value) : value_(value) {}$/;"	f	class:testing::internal::ThreadLocal::ValueHolder
ValueHolder	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  class ValueHolder : public ThreadLocalValueHolderBase {$/;"	c	class:testing::internal::ThreadLocal
ValueHolderFactory	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^    ValueHolderFactory() {}$/;"	f	class:testing::internal::ThreadLocal::ValueHolderFactory
ValueHolderFactory	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  class ValueHolderFactory {$/;"	c	class:testing::internal::ThreadLocal
ValueIsPositive	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^bool ValueIsPositive(const Uncopyable& x) { return x.value() > 0; }$/;"	f	namespace:testing::gmock_matchers_test	typeref:typename:bool
ValueParamTest	src/tests/googletest/googletest/test/gtest_list_tests_unittest_.cc	/^class ValueParamTest : public testing::TestWithParam<MyType> {$/;"	c	file:
ValueParamTest	src/tests/googletest/googletest/test/gtest_xml_output_unittest_.cc	/^class ValueParamTest : public TestWithParam<int> {};$/;"	c	file:
ValueProducer	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  class ValueProducer {$/;"	c	class:testing::DefaultValue
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    T11> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing	typeref:typename:internal::ValueArray11<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11>
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    T12> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing	typeref:typename:internal::ValueArray12<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12>
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    T13> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing	typeref:typename:internal::ValueArray13<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13>
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> Values(T1 v1,$/;"	f	namespace:testing
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> Values(T1 v1, T2 v2,$/;"	f	namespace:testing
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> Values(T1 v1, T2 v2,$/;"	f	namespace:testing
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    T14, T15, T16, T17, T18, T19, T20, T21, T22> Values(T1 v1, T2 v2, T3 v3,$/;"	f	namespace:testing
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    T14, T15, T16, T17, T18, T19, T20, T21> Values(T1 v1, T2 v2, T3 v3, T4 v4,$/;"	f	namespace:testing
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    T14, T15, T16, T17, T18, T19, T20> Values(T1 v1, T2 v2, T3 v3, T4 v4,$/;"	f	namespace:testing
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    T14, T15, T16, T17, T18, T19> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5,$/;"	f	namespace:testing
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    T14, T15, T16, T17, T18> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6,$/;"	f	namespace:testing
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    T14, T15, T16, T17> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,$/;"	f	namespace:testing
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    T14, T15, T16> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,$/;"	f	namespace:testing
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    T14, T15> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8,$/;"	f	namespace:testing
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    T14> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    T26> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    T27> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    T28> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40> Values(T1 v1,$/;"	f	namespace:testing
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39> Values(T1 v1, T2 v2,$/;"	f	namespace:testing
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    T29, T30, T31, T32, T33, T34, T35, T36, T37, T38> Values(T1 v1, T2 v2,$/;"	f	namespace:testing
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    T29, T30, T31, T32, T33, T34, T35, T36, T37> Values(T1 v1, T2 v2, T3 v3,$/;"	f	namespace:testing
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    T29, T30, T31, T32, T33, T34, T35, T36> Values(T1 v1, T2 v2, T3 v3, T4 v4,$/;"	f	namespace:testing
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    T29, T30, T31, T32, T33, T34, T35> Values(T1 v1, T2 v2, T3 v3, T4 v4,$/;"	f	namespace:testing
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    T29, T30, T31, T32, T33, T34> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5,$/;"	f	namespace:testing
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    T29, T30, T31, T32, T33> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6,$/;"	f	namespace:testing
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    T29, T30, T31, T32> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,$/;"	f	namespace:testing
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    T29, T30, T31> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,$/;"	f	namespace:testing
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    T29, T30> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8,$/;"	f	namespace:testing
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    T29> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    T41> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    T42> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    T43> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    T44, T45, T46, T47, T48, T49, T50> Values(T1 v1, T2 v2, T3 v3, T4 v4,$/;"	f	namespace:testing
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    T44, T45, T46, T47, T48, T49> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5,$/;"	f	namespace:testing
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    T44, T45, T46, T47, T48> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6,$/;"	f	namespace:testing
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    T44, T45, T46, T47> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,$/;"	f	namespace:testing
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    T44, T45, T46> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,$/;"	f	namespace:testing
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    T44, T45> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8,$/;"	f	namespace:testing
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^    T44> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^internal::ValueArray10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Values(T1 v1,$/;"	f	namespace:testing	typeref:typename:internal::ValueArray10<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10>
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^internal::ValueArray1<T1> Values(T1 v1) {$/;"	f	namespace:testing	typeref:typename:internal::ValueArray1<T1>
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^internal::ValueArray2<T1, T2> Values(T1 v1, T2 v2) {$/;"	f	namespace:testing	typeref:typename:internal::ValueArray2<T1,T2>
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^internal::ValueArray3<T1, T2, T3> Values(T1 v1, T2 v2, T3 v3) {$/;"	f	namespace:testing	typeref:typename:internal::ValueArray3<T1,T2,T3>
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^internal::ValueArray4<T1, T2, T3, T4> Values(T1 v1, T2 v2, T3 v3, T4 v4) {$/;"	f	namespace:testing	typeref:typename:internal::ValueArray4<T1,T2,T3,T4>
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^internal::ValueArray5<T1, T2, T3, T4, T5> Values(T1 v1, T2 v2, T3 v3, T4 v4,$/;"	f	namespace:testing	typeref:typename:internal::ValueArray5<T1,T2,T3,T4,T5>
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^internal::ValueArray6<T1, T2, T3, T4, T5, T6> Values(T1 v1, T2 v2, T3 v3,$/;"	f	namespace:testing	typeref:typename:internal::ValueArray6<T1,T2,T3,T4,T5,T6>
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^internal::ValueArray7<T1, T2, T3, T4, T5, T6, T7> Values(T1 v1, T2 v2, T3 v3,$/;"	f	namespace:testing	typeref:typename:internal::ValueArray7<T1,T2,T3,T4,T5,T6,T7>
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^internal::ValueArray8<T1, T2, T3, T4, T5, T6, T7, T8> Values(T1 v1, T2 v2,$/;"	f	namespace:testing	typeref:typename:internal::ValueArray8<T1,T2,T3,T4,T5,T6,T7,T8>
Values	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^internal::ValueArray9<T1, T2, T3, T4, T5, T6, T7, T8, T9> Values(T1 v1, T2 v2,$/;"	f	namespace:testing	typeref:typename:internal::ValueArray9<T1,T2,T3,T4,T5,T6,T7,T8,T9>
ValuesIn	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^ValuesIn(ForwardIterator begin, ForwardIterator end) {$/;"	f	namespace:testing	typeref:typename:internal::ParamGenerator<typename::testing::internal::IteratorTraits<ForwardIterator>::value_type>
ValuesIn	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^internal::ParamGenerator<T> ValuesIn(const T (&array)[N]) {$/;"	f	namespace:testing	typeref:typename:internal::ParamGenerator<T>
ValuesIn	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^internal::ParamGenerator<typename Container::value_type> ValuesIn($/;"	f	namespace:testing	typeref:typename:internal::ParamGenerator<typename Container::value_type>
ValuesInIteratorRangeGenerator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  ValuesInIteratorRangeGenerator(ForwardIterator begin, ForwardIterator end)$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator
ValuesInIteratorRangeGenerator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^class ValuesInIteratorRangeGenerator : public ParamGeneratorInterface<T> {$/;"	c	namespace:testing::internal
VarNode	src/tests/googletest/googletest/scripts/pump.py	/^class VarNode:$/;"	c
VariableDeclaration	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^class VariableDeclaration(_GenericDeclaration):$/;"	c
VariadicMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  VariadicMatcher(const Args&... matchers)  \/\/ NOLINT$/;"	f	class:testing::internal::VariadicMatcher
VariadicMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class VariadicMatcher {$/;"	c	namespace:testing::internal
Vector	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^  typedef std::vector<T> Vector;$/;"	t	class:CommonTest	typeref:typename:std::vector<T>	file:
VectorIsCorrupt	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static bool VectorIsCorrupt(const TestingVector& vector) {$/;"	f	class:__anonf780395f0111::VectorShuffleTest	typeref:typename:bool	file:
VectorIsNotCorrupt	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static bool VectorIsNotCorrupt(const TestingVector& vector) {$/;"	f	class:__anonf780395f0111::VectorShuffleTest	typeref:typename:bool	file:
VectorIsShuffled	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static bool VectorIsShuffled(const TestingVector& vector) {$/;"	f	class:__anonf780395f0111::VectorShuffleTest	typeref:typename:bool	file:
VectorIsUnshuffled	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static bool VectorIsUnshuffled(const TestingVector& vector) {$/;"	f	class:__anonf780395f0111::VectorShuffleTest	typeref:typename:bool	file:
VectorShuffleTest	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  VectorShuffleTest() : random_(1) {$/;"	f	class:__anonf780395f0111::VectorShuffleTest	file:
VectorShuffleTest	src/tests/googletest/googletest/test/gtest_unittest.cc	/^class VectorShuffleTest : public Test {$/;"	c	namespace:__anonf780395f0111	file:
VectorUniquePtrSource	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^std::vector<std::unique_ptr<int>> VectorUniquePtrSource() {$/;"	f	namespace:__anon550198f10111	typeref:typename:std::vector<std::unique_ptr<int>>
VerboseFlagPreservingFixture	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^  VerboseFlagPreservingFixture()$/;"	f	class:__anon6b6cf3b20111::VerboseFlagPreservingFixture	file:
VerboseFlagPreservingFixture	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^class VerboseFlagPreservingFixture : public testing::Test {$/;"	c	namespace:__anon6b6cf3b20111	file:
VerifyAllElementsAndMatchersAreMatched	src/tests/googletest/googlemock/src/gmock-matchers.cc	/^    VerifyAllElementsAndMatchersAreMatched($/;"	f	class:testing::internal::UnorderedElementsAreMatcherImplBase	typeref:typename:bool
VerifyAndClear	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^bool Mock::VerifyAndClear(void* mock_obj)$/;"	f	class:testing::Mock	typeref:typename:bool
VerifyAndClearExpectations	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^bool Mock::VerifyAndClearExpectations(void* mock_obj)$/;"	f	class:testing::Mock	typeref:typename:bool
VerifyAndClearExpectationsLocked	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^bool Mock::VerifyAndClearExpectationsLocked(void* mock_obj)$/;"	f	class:testing::Mock	typeref:typename:bool
VerifyAndClearExpectationsLocked	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^bool UntypedFunctionMockerBase::VerifyAndClearExpectationsLocked()$/;"	f	class:testing::internal::UntypedFunctionMockerBase	typeref:typename:bool
VerifyAndModifyFlags	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  void VerifyAndModifyFlags() {$/;"	f	class:__anonf780395f0111::GTestFlagSaverTest	typeref:typename:void	file:
VerifyFileExists	src/tests/googletest/googletest/scripts/fuse_gtest_files.py	/^def VerifyFileExists(directory, relative_path):$/;"	f
VerifyGenerator	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^void VerifyGenerator(const ParamGenerator<T>& generator,$/;"	f	typeref:typename:void
VerifyGeneratorIsEmpty	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^void VerifyGeneratorIsEmpty(const ParamGenerator<T>& generator) {$/;"	f	typeref:typename:void
VerifyOutput	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^  void VerifyOutput(const std::string& output, bool should_print,$/;"	f	class:__anon6b6cf3b20111::GMockVerboseFlagTest	typeref:typename:void	file:
VerifyOutputFile	src/tests/googletest/googletest/scripts/fuse_gtest_files.py	/^def VerifyOutputFile(output_dir, relative_path):$/;"	f
VerifyRegisteredTestNames	src/tests/googletest/googletest/src/gtest-typed-test.cc	/^const char* TypedTestCasePState::VerifyRegisteredTestNames($/;"	f	class:testing::internal::TypedTestCasePState	typeref:typename:const char *
VerifyResults	src/tests/googletest/googletest/test/gtest-listener_test.cc	/^void VerifyResults(const std::vector<std::string>& data,$/;"	f	typeref:typename:void
Verifying and Resetting a Mock	src/tests/googletest/googlemock/docs/CheatSheet.md	/^# Verifying and Resetting a Mock #$/;"	c
Verifying and Resetting a Mock	src/tests/googletest/googlemock/docs/v1_5/CheatSheet.md	/^# Verifying and Resetting a Mock #$/;"	c
Verifying and Resetting a Mock	src/tests/googletest/googlemock/docs/v1_6/CheatSheet.md	/^# Verifying and Resetting a Mock #$/;"	c
Verifying and Resetting a Mock	src/tests/googletest/googlemock/docs/v1_7/CheatSheet.md	/^# Verifying and Resetting a Mock #$/;"	c
Version	src/muduo/muduo/net/http/HttpRequest.h	/^  enum Version$/;"	g	class:muduo::net::HttpRequest
Version of cmake, gcc and boost? (If not from distro.)	src/muduo/.github/issue_template.md	/^## Version of cmake, gcc and boost? (If not from distro.)$/;"	s
VersionControlSystem	src/tests/googletest/googlemock/scripts/upload.py	/^class VersionControlSystem(object):$/;"	c
VersionControlSystem	src/tests/googletest/googletest/scripts/upload.py	/^class VersionControlSystem(object):$/;"	c
VeryLoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooogName	src/tests/googletest/googletest/test/gtest_list_tests_unittest_.cc	/^class VeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo/;"	c	file:
View	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    typedef typename internal::StlContainerView<RawContainer>::type View;$/;"	t	function:testing::internal::ElementsAreMatcher::operator Matcher<Container>	typeref:typename:internal::StlContainerView<RawContainer>::type
View	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    typedef typename internal::StlContainerView<RawContainer>::type View;$/;"	t	function:testing::internal::UnorderedElementsAreMatcher::operator Matcher<Container>	typeref:typename:internal::StlContainerView<RawContainer>::type
View	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef StlContainerView<RawContainer> View;$/;"	t	class:testing::internal::QuantifierMatcherImpl	typeref:typename:StlContainerView<RawContainer>
View	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef internal::StlContainerView<Container> View;$/;"	t	class:testing::internal::ContainerEqMatcher	typeref:typename:internal::StlContainerView<Container>
View	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef internal::StlContainerView<RawContainer> View;$/;"	t	class:testing::internal::ElementsAreMatcherImpl	typeref:typename:internal::StlContainerView<RawContainer>
View	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  typedef internal::StlContainerView<RawContainer> View;$/;"	t	class:testing::internal::UnorderedElementsAreMatcherImpl	typeref:typename:internal::StlContainerView<RawContainer>
VirtualDerived	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  class VirtualDerived : public virtual Base {};$/;"	c	struct:testing::gmock_matchers_test::AmbiguousCastTypes	file:
VoidBinary	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^void VoidBinary(int, char) { g_done = true; }$/;"	f	namespace:testing::gmock_generated_actions_test	typeref:typename:void
VoidBinary	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^void VoidBinary(int, char) { g_done = true; }$/;"	f	namespace:testing::gmock_more_actions_test	typeref:typename:void
VoidFromString	src/tests/googletest/googlemock/test/gmock_link_test.h	/^  void VoidFromString(char* \/* str *\/) {}$/;"	f	class:InvokeHelper	typeref:typename:void
VoidFromVoid	src/tests/googletest/googlemock/test/gmock_link_test.h	/^  void VoidFromVoid() {}$/;"	f	class:InvokeHelper	typeref:typename:void
VoidFunc	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^void VoidFunc(bool \/* flag *\/) {}$/;"	f	namespace:__anon550198f10111	typeref:typename:void
VoidFunctionWithFourArguments	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^void VoidFunctionWithFourArguments(char, int, float, double) { g_done = true; }$/;"	f	namespace:testing::gmock_more_actions_test	typeref:typename:void
VoidNullary	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^void VoidNullary() { g_done = true; }$/;"	f	namespace:__anon550198f10111	typeref:typename:void
VoidNullary	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^void VoidNullary() { g_done = true; }$/;"	f	namespace:testing::gmock_more_actions_test	typeref:typename:void
VoidNullaryFunctor	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^class VoidNullaryFunctor {$/;"	c	namespace:__anon550198f10111	file:
VoidNullaryFunctor	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^class VoidNullaryFunctor {$/;"	c	namespace:testing::gmock_more_actions_test	file:
VoidResult	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    typedef typename Function<F>::MakeResultVoid VoidResult;$/;"	t	class:testing::internal::DoBothAction::Impl	typeref:typename:Function<F>::MakeResultVoid
VoidTernary	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^void VoidTernary(int, char, bool) { g_done = true; }$/;"	f	namespace:testing::gmock_generated_actions_test	typeref:typename:void
VoidTernary	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^void VoidTernary(int, char, bool) { g_done = true; }$/;"	f	namespace:testing::gmock_more_actions_test	typeref:typename:void
VoidUnary	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^void VoidUnary(int \/* n *\/) { g_done = true; }$/;"	f	namespace:testing::gmock_more_actions_test	typeref:typename:void
WARN	src/muduo/muduo/base/Logging.h	/^    WARN,$/;"	e	enum:muduo::Logger::LogLevel
WHENCE_QUEUE	src/tests/googletest/googlemock/scripts/generator/cpp/tokenize.py	/^WHENCE_STREAM, WHENCE_QUEUE = range(2)$/;"	v
WHENCE_STREAM	src/tests/googletest/googlemock/scripts/generator/cpp/tokenize.py	/^WHENCE_STREAM, WHENCE_QUEUE = range(2)$/;"	v
WHITE_SPACE_REGEX	src/tests/googletest/googletest/scripts/pump.py	/^WHITE_SPACE_REGEX = re.compile(r'\\s')$/;"	v
WRONG_PROTO	src/muduo/muduo/net/protorpc/rpc.proto	/^  WRONG_PROTO = 1;$/;"	e	enum:muduo.net.ErrorCode
Wait	src/tests/googletest/googletest/src/gtest-death-test.cc	/^int ForkingDeathTest::Wait() {$/;"	f	class:testing::internal::ForkingDeathTest	typeref:typename:int
Wait	src/tests/googletest/googletest/src/gtest-death-test.cc	/^int WindowsDeathTest::Wait() {$/;"	f	class:testing::internal::WindowsDeathTest	typeref:typename:int
Wait	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  virtual int Wait() {$/;"	f	class:MockDeathTest	typeref:typename:int	file:
WaitCalls	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  int WaitCalls() const { return wait_calls_; }$/;"	f	class:MockDeathTestFactory	typeref:typename:int	file:
WaitForNotification	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  void WaitForNotification() {$/;"	f	class:testing::internal::Notification	typeref:typename:void
WaitForNotification	src/tests/googletest/googletest/src/gtest-port.cc	/^void Notification::WaitForNotification() {$/;"	f	class:testing::internal::Notification	typeref:typename:void
WarnUninterestingCalls	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^void Mock::WarnUninterestingCalls(const void* mock_obj)$/;"	f	class:testing::Mock	typeref:typename:void
WatcherThreadFunc	src/tests/googletest/googletest/src/gtest-port.cc	/^  static DWORD WINAPI WatcherThreadFunc(LPVOID param) {$/;"	f	class:testing::internal::ThreadLocalRegistryImpl	typeref:typename:DWORD WINAPI	file:
Water	src/tests/googletest/googletest/samples/sample10_unittest.cc	/^class Water {$/;"	c	namespace:__anona6935d300111	file:
WeakCallback	src/muduo/muduo/base/WeakCallback.h	/^  WeakCallback(const std::weak_ptr<CLASS>& object,$/;"	f	class:muduo::WeakCallback
WeakCallback	src/muduo/muduo/base/WeakCallback.h	/^class WeakCallback$/;"	c	namespace:muduo
WeakConnectionList	src/muduo/examples/idleconnection/echo.h	/^  typedef boost::circular_buffer<Bucket> WeakConnectionList;$/;"	t	class:EchoServer	typeref:typename:boost::circular_buffer<Bucket>
WeakConnectionList	src/muduo/examples/idleconnection/sortedlist.cc	/^  typedef std::list<WeakTcpConnectionPtr> WeakConnectionList;$/;"	t	class:EchoServer	typeref:typename:std::list<WeakTcpConnectionPtr>	file:
WeakEntryPtr	src/muduo/examples/idleconnection/echo.h	/^  typedef std::weak_ptr<Entry> WeakEntryPtr;$/;"	t	class:EchoServer	typeref:typename:std::weak_ptr<Entry>
WeakTcpConnectionPtr	src/muduo/examples/idleconnection/echo.h	/^  typedef std::weak_ptr<muduo::net::TcpConnection> WeakTcpConnectionPtr;$/;"	t	class:EchoServer	typeref:typename:std::weak_ptr<muduo::net::TcpConnection>
WeakTcpConnectionPtr	src/muduo/examples/idleconnection/sortedlist.cc	/^  typedef std::weak_ptr<TcpConnection> WeakTcpConnectionPtr;$/;"	t	class:EchoServer	typeref:typename:std::weak_ptr<TcpConnection>	file:
What Is Google C++ Mocking Framework?	src/tests/googletest/googlemock/docs/ForDummies.md	/^# What Is Google C++ Mocking Framework? #$/;"	c
What Is Google C++ Mocking Framework?	src/tests/googletest/googlemock/docs/v1_5/ForDummies.md	/^# What Is Google C++ Mocking Framework? #$/;"	c
What Is Google C++ Mocking Framework?	src/tests/googletest/googlemock/docs/v1_6/ForDummies.md	/^# What Is Google C++ Mocking Framework? #$/;"	c
What Is Google C++ Mocking Framework?	src/tests/googletest/googlemock/docs/v1_7/ForDummies.md	/^# What Is Google C++ Mocking Framework? #$/;"	c
What Now?	src/tests/googletest/googlemock/docs/ForDummies.md	/^# What Now? #$/;"	c
What Now?	src/tests/googletest/googlemock/docs/v1_5/ForDummies.md	/^# What Now? #$/;"	c
What Now?	src/tests/googletest/googlemock/docs/v1_6/ForDummies.md	/^# What Now? #$/;"	c
What Now?	src/tests/googletest/googlemock/docs/v1_7/ForDummies.md	/^# What Now? #$/;"	c
What can the statement argument in ASSERT\\_DEATH() be?	src/tests/googletest/googletest/docs/FAQ.md	/^## What can the statement argument in ASSERT\\_DEATH() be? ##$/;"	s
What can the statement argument in ASSERT\\_DEATH() be?	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## What can the statement argument in ASSERT\\_DEATH() be? ##$/;"	s
What can the statement argument in ASSERT\\_DEATH() be?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## What can the statement argument in ASSERT\\_DEATH() be? ##$/;"	s
What can the statement argument in ASSERT\\_DEATH() be?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## What can the statement argument in ASSERT\\_DEATH() be? ##$/;"	s
What syntax does the regular expression in ASSERT\\_DEATH use?	src/tests/googletest/googletest/docs/FAQ.md	/^## What syntax does the regular expression in ASSERT\\_DEATH use? ##$/;"	s
What syntax does the regular expression in ASSERT\\_DEATH use?	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## What syntax does the regular expression in ASSERT\\_DEATH use? ##$/;"	s
What syntax does the regular expression in ASSERT\\_DEATH use?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## What syntax does the regular expression in ASSERT\\_DEATH use? ##$/;"	s
What syntax does the regular expression in ASSERT\\_DEATH use?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## What syntax does the regular expression in ASSERT\\_DEATH use? ##$/;"	s
When I call a method on my mock object, the method for the real object is invoked instead.  What's the problem?	src/tests/googletest/googlemock/docs/FrequentlyAskedQuestions.md	/^## When I call a method on my mock object, the method for the real object is invoked instead.  W/;"	s
When I call a method on my mock object, the method for the real object is invoked instead.  What's the problem?	src/tests/googletest/googlemock/docs/v1_6/FrequentlyAskedQuestions.md	/^## When I call a method on my mock object, the method for the real object is invoked instead.  W/;"	s
When I call a method on my mock object, the method for the real object is invoked instead.  What's the problem?	src/tests/googletest/googlemock/docs/v1_7/FrequentlyAskedQuestions.md	/^## When I call a method on my mock object, the method for the real object is invoked instead.  W/;"	s
When to Use	src/tests/googletest/googlemock/docs/DesignDoc.md	/^## When to Use ##$/;"	s	chapter:Macros for Defining Actions
When using Google Mock, do I have to use Google Test as the testing framework?  I have my favorite testing framework and don't want to switch.	src/tests/googletest/googlemock/docs/FrequentlyAskedQuestions.md	/^## When using Google Mock, do I have to use Google Test as the testing framework?  I have my fav/;"	s
When using Google Mock, do I have to use Google Test as the testing framework?  I have my favorite testing framework and don't want to switch.	src/tests/googletest/googlemock/docs/v1_5/FrequentlyAskedQuestions.md	/^## When using Google Mock, do I have to use Google Test as the testing framework?  I have my fav/;"	s
When using Google Mock, do I have to use Google Test as the testing framework?  I have my favorite testing framework and don't want to switch.	src/tests/googletest/googlemock/docs/v1_6/FrequentlyAskedQuestions.md	/^## When using Google Mock, do I have to use Google Test as the testing framework?  I have my fav/;"	s
When using Google Mock, do I have to use Google Test as the testing framework?  I have my favorite testing framework and don't want to switch.	src/tests/googletest/googlemock/docs/v1_7/FrequentlyAskedQuestions.md	/^## When using Google Mock, do I have to use Google Test as the testing framework?  I have my fav/;"	s
WhenDynamicCastTo	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^WhenDynamicCastTo(const Matcher<To>& inner_matcher) {$/;"	f	namespace:testing	typeref:typename:PolymorphicMatcher<internal::WhenDynamicCastToMatcher<To>>
WhenDynamicCastToMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit WhenDynamicCastToMatcher(const Matcher<To&>& matcher)$/;"	f	class:testing::internal::WhenDynamicCastToMatcher
WhenDynamicCastToMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit WhenDynamicCastToMatcher(const Matcher<To>& matcher)$/;"	f	class:testing::internal::WhenDynamicCastToMatcher
WhenDynamicCastToMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class WhenDynamicCastToMatcher : public WhenDynamicCastToMatcherBase<To> {$/;"	c	namespace:testing::internal
WhenDynamicCastToMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class WhenDynamicCastToMatcher<To&> : public WhenDynamicCastToMatcherBase<To&> {$/;"	c	namespace:testing::internal
WhenDynamicCastToMatcherBase	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  explicit WhenDynamicCastToMatcherBase(const Matcher<To>& matcher)$/;"	f	class:testing::internal::WhenDynamicCastToMatcherBase
WhenDynamicCastToMatcherBase	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class WhenDynamicCastToMatcherBase {$/;"	c	namespace:testing::internal
WhenSorted	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^WhenSorted(const ContainerMatcher& container_matcher) {$/;"	f	namespace:testing	typeref:typename:internal::WhenSortedByMatcher<internal::LessComparator,ContainerMatcher>
WhenSortedBy	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^WhenSortedBy(const Comparator& comparator,$/;"	f	namespace:testing	typeref:typename:internal::WhenSortedByMatcher<Comparator,ContainerMatcher>
WhenSortedByMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  WhenSortedByMatcher(const Comparator& comparator,$/;"	f	class:testing::internal::WhenSortedByMatcher
WhenSortedByMatcher	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^class WhenSortedByMatcher {$/;"	c	namespace:testing::internal
Where to Discuss Google Mock	src/tests/googletest/googlemock/docs/DevGuide.md	/^### Where to Discuss Google Mock ###$/;"	S	section:Introduction""The Google Mock Community
Where to Go from Here	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^# Where to Go from Here #$/;"	c
Where to Go from Here	src/tests/googletest/googletest/docs/Primer.md	/^# Where to Go from Here #$/;"	c
Where to Go from Here	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^# Where to Go from Here #$/;"	c
Where to Go from Here	src/tests/googletest/googletest/docs/V1_5_Primer.md	/^# Where to Go from Here #$/;"	c
Where to Go from Here	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^# Where to Go from Here #$/;"	c
Where to Go from Here	src/tests/googletest/googletest/docs/V1_6_Primer.md	/^# Where to Go from Here #$/;"	c
Where to Go from Here	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^# Where to Go from Here #$/;"	c
Where to Go from Here	src/tests/googletest/googletest/docs/V1_7_Primer.md	/^# Where to Go from Here #$/;"	c
Where to Put It	src/tests/googletest/googlemock/docs/ForDummies.md	/^## Where to Put It ##$/;"	s	chapter:Writing the Mock Class
Where to Put It	src/tests/googletest/googlemock/docs/v1_5/ForDummies.md	/^## Where to Put It ##$/;"	s	chapter:Writing the Mock Class
Where to Put It	src/tests/googletest/googlemock/docs/v1_6/ForDummies.md	/^## Where to Put It ##$/;"	s	chapter:Writing the Mock Class
Where to Put It	src/tests/googletest/googlemock/docs/v1_7/ForDummies.md	/^## Where to Put It ##$/;"	s	chapter:Writing the Mock Class
Who Is Using Google Test?	src/tests/googletest/README.md	/^## Who Is Using Google Test? ##$/;"	s	chapter:Google Test
Why Google Mock?	src/tests/googletest/googlemock/docs/ForDummies.md	/^# Why Google Mock? #$/;"	c
Why Google Mock?	src/tests/googletest/googlemock/docs/v1_5/ForDummies.md	/^# Why Google Mock? #$/;"	c
Why Google Mock?	src/tests/googletest/googlemock/docs/v1_6/ForDummies.md	/^# Why Google Mock? #$/;"	c
Why Google Mock?	src/tests/googletest/googlemock/docs/v1_7/ForDummies.md	/^# Why Google Mock? #$/;"	c
Why are death tests implemented as assertions instead of using a test runner?	src/tests/googletest/googletest/docs/FAQ.md	/^## Why are death tests implemented as assertions instead of using a test runner? ##$/;"	s
Why are death tests implemented as assertions instead of using a test runner?	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## Why are death tests implemented as assertions instead of using a test runner? ##$/;"	s
Why are death tests implemented as assertions instead of using a test runner?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## Why are death tests implemented as assertions instead of using a test runner? ##$/;"	s
Why are death tests implemented as assertions instead of using a test runner?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## Why are death tests implemented as assertions instead of using a test runner? ##$/;"	s
Why aren't Google Test assertions implemented using exceptions?	src/tests/googletest/googletest/docs/FAQ.md	/^## Why aren't Google Test assertions implemented using exceptions? ##$/;"	s
Why aren't Google Test assertions implemented using exceptions?	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## Why aren't Google Test assertions implemented using exceptions? ##$/;"	s
Why aren't Google Test assertions implemented using exceptions?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## Why aren't Google Test assertions implemented using exceptions? ##$/;"	s
Why aren't Google Test assertions implemented using exceptions?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## Why aren't Google Test assertions implemented using exceptions? ##$/;"	s
Why do we use two different macros for tests with and without fixtures?	src/tests/googletest/googletest/docs/FAQ.md	/^## Why do we use two different macros for tests with and without fixtures? ##$/;"	s
Why do we use two different macros for tests with and without fixtures?	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## Why do we use two different macros for tests with and without fixtures? ##$/;"	s
Why do we use two different macros for tests with and without fixtures?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## Why do we use two different macros for tests with and without fixtures? ##$/;"	s
Why do we use two different macros for tests with and without fixtures?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## Why do we use two different macros for tests with and without fixtures? ##$/;"	s
Why does ASSERT\\_DEATH complain about previous threads that were already joined?	src/tests/googletest/googletest/docs/FAQ.md	/^## Why does ASSERT\\_DEATH complain about previous threads that were already joined? ##$/;"	s
Why does ASSERT\\_DEATH complain about previous threads that were already joined?	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## Why does ASSERT\\_DEATH complain about previous threads that were already joined? ##$/;"	s
Why does ASSERT\\_DEATH complain about previous threads that were already joined?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## Why does ASSERT\\_DEATH complain about previous threads that were already joined? ##$/;"	s
Why does ASSERT\\_DEATH complain about previous threads that were already joined?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## Why does ASSERT\\_DEATH complain about previous threads that were already joined? ##$/;"	s
Why does Google Test require the entire test case, instead of individual tests, to be named FOODeathTest when it uses ASSERT\\_DEATH?	src/tests/googletest/googletest/docs/FAQ.md	/^## Why does Google Test require the entire test case, instead of individual tests, to be named F/;"	s
Why does Google Test require the entire test case, instead of individual tests, to be named FOODeathTest when it uses ASSERT\\_DEATH?	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## Why does Google Test require the entire test case, instead of individual tests, to be named F/;"	s
Why does Google Test require the entire test case, instead of individual tests, to be named FOODeathTest when it uses ASSERT\\_DEATH?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## Why does Google Test require the entire test case, instead of individual tests, to be named F/;"	s
Why does Google Test require the entire test case, instead of individual tests, to be named FOODeathTest when it uses ASSERT\\_DEATH?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## Why does Google Test require the entire test case, instead of individual tests, to be named F/;"	s
Why does Google Test support EXPECT\\_EQ(NULL, ptr) and ASSERT\\_EQ(NULL, ptr) but not EXPECT\\_NE(NULL, ptr) and ASSERT\\_NE(NULL, ptr)?	src/tests/googletest/googletest/docs/FAQ.md	/^## Why does Google Test support EXPECT\\_EQ(NULL, ptr) and ASSERT\\_EQ(NULL, ptr) but not EXPECT/;"	s
Why does Google Test support EXPECT\\_EQ(NULL, ptr) and ASSERT\\_EQ(NULL, ptr) but not EXPECT\\_NE(NULL, ptr) and ASSERT\\_NE(NULL, ptr)?	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## Why does Google Test support EXPECT\\_EQ(NULL, ptr) and ASSERT\\_EQ(NULL, ptr) but not EXPECT/;"	s
Why does Google Test support EXPECT\\_EQ(NULL, ptr) and ASSERT\\_EQ(NULL, ptr) but not EXPECT\\_NE(NULL, ptr) and ASSERT\\_NE(NULL, ptr)?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## Why does Google Test support EXPECT\\_EQ(NULL, ptr) and ASSERT\\_EQ(NULL, ptr) but not EXPECT/;"	s
Why does Google Test support EXPECT\\_EQ(NULL, ptr) and ASSERT\\_EQ(NULL, ptr) but not EXPECT\\_NE(NULL, ptr) and ASSERT\\_NE(NULL, ptr)?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## Why does Google Test support EXPECT\\_EQ(NULL, ptr) and ASSERT\\_EQ(NULL, ptr) but not EXPECT/;"	s
Why don't Google Test run the tests in different threads to speed things up?	src/tests/googletest/googletest/docs/FAQ.md	/^## Why don't Google Test run the tests in different threads to speed things up? ##$/;"	s
Why don't Google Test run the tests in different threads to speed things up?	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## Why don't Google Test run the tests in different threads to speed things up? ##$/;"	s
Why don't Google Test run the tests in different threads to speed things up?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## Why don't Google Test run the tests in different threads to speed things up? ##$/;"	s
Why don't Google Test run the tests in different threads to speed things up?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## Why don't Google Test run the tests in different threads to speed things up? ##$/;"	s
Why don't we use structs as test fixtures?	src/tests/googletest/googletest/docs/FAQ.md	/^## Why don't we use structs as test fixtures? ##$/;"	s
Why don't we use structs as test fixtures?	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## Why don't we use structs as test fixtures? ##$/;"	s
Why don't we use structs as test fixtures?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## Why don't we use structs as test fixtures? ##$/;"	s
Why don't we use structs as test fixtures?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## Why don't we use structs as test fixtures? ##$/;"	s
Why is it not recommended to install a pre-compiled copy of Google Test (for example, into /usr/local)?	src/tests/googletest/googletest/docs/FAQ.md	/^## Why is it not recommended to install a pre-compiled copy of Google Test (for example, into \//;"	s
Why is it not recommended to install a pre-compiled copy of Google Test (for example, into /usr/local)?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## Why is it not recommended to install a pre-compiled copy of Google Test (for example, into \//;"	s
Why is it not recommended to install a pre-compiled copy of Google Test (for example, into /usr/local)?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## Why is it not recommended to install a pre-compiled copy of Google Test (for example, into \//;"	s
Why should I prefer test fixtures over global variables?	src/tests/googletest/googletest/docs/FAQ.md	/^## Why should I prefer test fixtures over global variables? ##$/;"	s
Why should I prefer test fixtures over global variables?	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## Why should I prefer test fixtures over global variables? ##$/;"	s
Why should I prefer test fixtures over global variables?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## Why should I prefer test fixtures over global variables? ##$/;"	s
Why should I prefer test fixtures over global variables?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## Why should I prefer test fixtures over global variables? ##$/;"	s
Why should I use Google Test instead of my favorite C++ testing framework?	src/tests/googletest/googletest/docs/FAQ.md	/^## Why should I use Google Test instead of my favorite C++ testing framework? ##$/;"	s
Why should I use Google Test instead of my favorite C++ testing framework?	src/tests/googletest/googletest/docs/V1_5_FAQ.md	/^## Why should I use Google Test instead of my favorite C++ testing framework? ##$/;"	s
Why should I use Google Test instead of my favorite C++ testing framework?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## Why should I use Google Test instead of my favorite C++ testing framework? ##$/;"	s
Why should I use Google Test instead of my favorite C++ testing framework?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## Why should I use Google Test instead of my favorite C++ testing framework? ##$/;"	s
Why should not test case names and test names contain underscore?	src/tests/googletest/googletest/docs/FAQ.md	/^## Why should not test case names and test names contain underscore? ##$/;"	s
Why should not test case names and test names contain underscore?	src/tests/googletest/googletest/docs/V1_6_FAQ.md	/^## Why should not test case names and test names contain underscore? ##$/;"	s
Why should not test case names and test names contain underscore?	src/tests/googletest/googletest/docs/V1_7_FAQ.md	/^## Why should not test case names and test names contain underscore? ##$/;"	s
WideCStringEquals	src/tests/googletest/googletest/src/gtest.cc	/^bool String::WideCStringEquals(const wchar_t * lhs, const wchar_t * rhs) {$/;"	f	class:testing::internal::String	typeref:typename:bool
WideStringToUtf8	src/tests/googletest/googletest/src/gtest.cc	/^std::string WideStringToUtf8(const wchar_t* str, int num_chars) {$/;"	f	namespace:testing::internal	typeref:typename:std::string
Widget	src/tests/googletest/googletest/xcode/Samples/FrameworkSample/widget.cc	/^Widget::Widget(int number, const std::string& name)$/;"	f	class:Widget
WikiBrancher	src/tests/googletest/googletest/scripts/release_docs.py	/^class WikiBrancher(object):$/;"	c
Wildcard	src/tests/googletest/googlemock/docs/CheatSheet.md	/^## Wildcard ##$/;"	s	chapter:Matchers
Wildcard	src/tests/googletest/googlemock/docs/v1_5/CheatSheet.md	/^## Wildcard ##$/;"	s	chapter:Matchers
Wildcard	src/tests/googletest/googlemock/docs/v1_6/CheatSheet.md	/^## Wildcard ##$/;"	s	chapter:Matchers
Wildcard	src/tests/googletest/googlemock/docs/v1_7/CheatSheet.md	/^## Wildcard ##$/;"	s	chapter:Matchers
WillByDefault	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  OnCallSpec& WillByDefault(const Action<F>& action) {$/;"	f	class:testing::internal::OnCallSpec	typeref:typename:OnCallSpec &
WillOnce	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  TypedExpectation& WillOnce(const Action<F>& action) {$/;"	f	class:testing::internal::TypedExpectation	typeref:typename:TypedExpectation &
WillRepeatedly	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  TypedExpectation& WillRepeatedly(const Action<F>& action) {$/;"	f	class:testing::internal::TypedExpectation	typeref:typename:TypedExpectation &
Windows	src/tests/googletest/googlemock/README.md	/^### Windows ###$/;"	S	section:Getting Started
Windows HRESULT assertions	src/tests/googletest/googletest/docs/AdvancedGuide.md	/^## Windows HRESULT assertions ##$/;"	s	chapter:More Assertions
Windows HRESULT assertions	src/tests/googletest/googletest/docs/V1_5_AdvancedGuide.md	/^## Windows HRESULT assertions ##$/;"	s	chapter:More Assertions
Windows HRESULT assertions	src/tests/googletest/googletest/docs/V1_6_AdvancedGuide.md	/^## Windows HRESULT assertions ##$/;"	s	chapter:More Assertions
Windows HRESULT assertions	src/tests/googletest/googletest/docs/V1_7_AdvancedGuide.md	/^## Windows HRESULT assertions ##$/;"	s	chapter:More Assertions
Windows Requirements	src/tests/googletest/README.md	/^### Windows Requirements ###$/;"	S	section:Google Test""Requirements
Windows Requirements	src/tests/googletest/googlemock/README.md	/^#### Windows Requirements ####$/;"	t	subsection:Getting Started""Requirements for End Users
WindowsDeathTest	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  WindowsDeathTest(const char* a_statement,$/;"	f	class:testing::internal::WindowsDeathTest	file:
WindowsDeathTest	src/tests/googletest/googletest/src/gtest-death-test.cc	/^class WindowsDeathTest : public DeathTestImpl {$/;"	c	namespace:testing::internal	file:
With	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^  MockSpec<F>& With() {$/;"	f	class:testing::internal::FunctionMocker	typeref:typename:MockSpec<F> &
With	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^  MockSpec<F>& With(const Matcher<A1>& m1) {$/;"	f	class:testing::internal::FunctionMocker	typeref:typename:MockSpec<F> &
With	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^  MockSpec<F>& With(const Matcher<A1>& m1, const Matcher<A2>& m2) {$/;"	f	class:testing::internal::FunctionMocker	typeref:typename:MockSpec<F> &
With	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^  MockSpec<F>& With(const Matcher<A1>& m1, const Matcher<A2>& m2,$/;"	f	class:testing::internal::FunctionMocker	typeref:typename:MockSpec<F> &
With	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  OnCallSpec& With(const Matcher<const ArgumentTuple&>& m) {$/;"	f	class:testing::internal::OnCallSpec	typeref:typename:OnCallSpec &
With	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  TypedExpectation& With(const Matcher<const ArgumentTuple&>& m) {$/;"	f	class:testing::internal::TypedExpectation	typeref:typename:TypedExpectation &
WithArg	src/tests/googletest/googlemock/include/gmock/gmock-more-actions.h	/^WithArg(const InnerAction& action) {$/;"	f	namespace:testing	typeref:typename:internal::WithArgsAction<InnerAction,k>
WithArgs	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^WithArgs(const InnerAction& action) {$/;"	f	namespace:testing	typeref:typename:internal::WithArgsAction<InnerAction,k1,k2,k3,k4,k5,k6,k7,k8,k9,k10>
WithArgs	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^WithArgs(const InnerAction& action) {$/;"	f	namespace:testing	typeref:typename:internal::WithArgsAction<InnerAction,k1,k2,k3,k4,k5,k6,k7,k8,k9>
WithArgs	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^WithArgs(const InnerAction& action) {$/;"	f	namespace:testing	typeref:typename:internal::WithArgsAction<InnerAction,k1,k2,k3,k4,k5,k6,k7,k8>
WithArgs	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^WithArgs(const InnerAction& action) {$/;"	f	namespace:testing	typeref:typename:internal::WithArgsAction<InnerAction,k1,k2,k3,k4,k5,k6,k7>
WithArgs	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^WithArgs(const InnerAction& action) {$/;"	f	namespace:testing	typeref:typename:internal::WithArgsAction<InnerAction,k1,k2,k3,k4,k5,k6>
WithArgs	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^WithArgs(const InnerAction& action) {$/;"	f	namespace:testing	typeref:typename:internal::WithArgsAction<InnerAction,k1,k2,k3,k4,k5>
WithArgs	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^WithArgs(const InnerAction& action) {$/;"	f	namespace:testing	typeref:typename:internal::WithArgsAction<InnerAction,k1,k2,k3,k4>
WithArgs	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^WithArgs(const InnerAction& action) {$/;"	f	namespace:testing	typeref:typename:internal::WithArgsAction<InnerAction,k1,k2,k3>
WithArgs	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^WithArgs(const InnerAction& action) {$/;"	f	namespace:testing	typeref:typename:internal::WithArgsAction<InnerAction,k1,k2>
WithArgs	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^WithArgs(const InnerAction& action) {$/;"	f	namespace:testing	typeref:typename:internal::WithArgsAction<InnerAction,k1>
WithArgsAction	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^  explicit WithArgsAction(const InnerAction& action) : action_(action) {}$/;"	f	class:testing::internal::WithArgsAction
WithArgsAction	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^class WithArgsAction {$/;"	c	namespace:testing::internal
WithParamInterface	src/tests/googletest/googletest/include/gtest/gtest.h	/^class WithParamInterface {$/;"	c	namespace:testing
WithoutArgs	src/tests/googletest/googlemock/include/gmock/gmock-more-actions.h	/^WithoutArgs(const InnerAction& action) {$/;"	f	namespace:testing	typeref:typename:internal::WithArgsAction<InnerAction>
WordCountMap	src/muduo/examples/wordcount/hash.h	/^typedef std::unordered_map<muduo::string, int64_t> WordCountMap;$/;"	t	typeref:typename:std::unordered_map<muduo::string,int64_t>
WordCountReceiver	src/muduo/examples/wordcount/receiver.cc	/^  WordCountReceiver(EventLoop* loop, const InetAddress& listenAddr)$/;"	f	class:WordCountReceiver	file:
WordCountReceiver	src/muduo/examples/wordcount/receiver.cc	/^class WordCountReceiver : muduo::noncopyable$/;"	c	file:
WordCountSender	src/muduo/examples/wordcount/hasher.cc	/^WordCountSender::WordCountSender(const std::string& receivers)$/;"	f	class:WordCountSender
WordCountSender	src/muduo/examples/wordcount/hasher.cc	/^class WordCountSender : muduo::noncopyable$/;"	c	file:
Working with the Code	src/tests/googletest/googlemock/docs/DevGuide.md	/^# Working with the Code #$/;"	c
Working with the Code	src/tests/googletest/googletest/docs/DevGuide.md	/^# Working with the Code #$/;"	c
WrapCode	src/tests/googletest/googletest/scripts/pump.py	/^def WrapCode(line, line_concat, output):$/;"	f
WrapComment	src/tests/googletest/googletest/scripts/pump.py	/^def WrapComment(line, output):$/;"	f
WrapLongLine	src/tests/googletest/googletest/scripts/pump.py	/^def WrapLongLine(line, output):$/;"	f
WrapPlainCode	src/tests/googletest/googletest/scripts/pump.py	/^def WrapPlainCode(line, output):$/;"	f
WrapPreprocessorDirective	src/tests/googletest/googletest/scripts/pump.py	/^def WrapPreprocessorDirective(line, output):$/;"	f
WrapPrinterType	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^template <DefaultPrinterType type> struct WrapPrinterType {};$/;"	s	namespace:testing::internal
Wrapper	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  typedef ReferenceOrValueWrapper<T> Wrapper;$/;"	t	class:testing::internal::ActionResultHolder	typeref:typename:ReferenceOrValueWrapper<T>
Write	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^inline int Write(int fd, const void* buf, unsigned int count) {$/;"	f	namespace:testing::internal::posix	typeref:typename:int
WriteCompleteCallback	src/muduo/muduo/net/Callbacks.h	/^typedef std::function<void (const TcpConnectionPtr&)> WriteCompleteCallback;$/;"	t	namespace:muduo::net
WriteToShardStatusFileIfNeeded	src/tests/googletest/googletest/src/gtest.cc	/^void WriteToShardStatusFileIfNeeded() {$/;"	f	namespace:testing::internal	typeref:typename:void
Writing New Action Templates Quickly	src/tests/googletest/googlemock/docs/CookBook.md	/^## Writing New Action Templates Quickly ##$/;"	s	chapter:Extending Google Mock
Writing New Action Templates Quickly	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Writing New Action Templates Quickly ##$/;"	s	chapter:Extending Google Mock
Writing New Action Templates Quickly	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Writing New Action Templates Quickly ##$/;"	s	chapter:Extending Google Mock
Writing New Action Templates Quickly	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Writing New Action Templates Quickly ##$/;"	s	chapter:Extending Google Mock
Writing New Actions Quickly	src/tests/googletest/googlemock/docs/CookBook.md	/^## Writing New Actions Quickly ##$/;"	s	chapter:Extending Google Mock
Writing New Actions Quickly	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Writing New Actions Quickly ##$/;"	s	chapter:Extending Google Mock
Writing New Actions Quickly	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Writing New Actions Quickly ##$/;"	s	chapter:Extending Google Mock
Writing New Actions Quickly	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Writing New Actions Quickly ##$/;"	s	chapter:Extending Google Mock
Writing New Cardinalities	src/tests/googletest/googlemock/docs/CookBook.md	/^## Writing New Cardinalities ##$/;"	s	chapter:Extending Google Mock
Writing New Cardinalities	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Writing New Cardinalities ##$/;"	s	chapter:Extending Google Mock
Writing New Cardinalities	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Writing New Cardinalities ##$/;"	s	chapter:Extending Google Mock
Writing New Cardinalities	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Writing New Cardinalities ##$/;"	s	chapter:Extending Google Mock
Writing New Matchers Quickly	src/tests/googletest/googlemock/docs/CookBook.md	/^## Writing New Matchers Quickly ##$/;"	s	chapter:Extending Google Mock
Writing New Matchers Quickly	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Writing New Matchers Quickly ##$/;"	s	chapter:Extending Google Mock
Writing New Matchers Quickly	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Writing New Matchers Quickly ##$/;"	s	chapter:Extending Google Mock
Writing New Matchers Quickly	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Writing New Matchers Quickly ##$/;"	s	chapter:Extending Google Mock
Writing New Monomorphic Actions	src/tests/googletest/googlemock/docs/CookBook.md	/^## Writing New Monomorphic Actions ##$/;"	s	chapter:Extending Google Mock
Writing New Monomorphic Actions	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Writing New Monomorphic Actions ##$/;"	s	chapter:Extending Google Mock
Writing New Monomorphic Actions	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Writing New Monomorphic Actions ##$/;"	s	chapter:Extending Google Mock
Writing New Monomorphic Actions	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Writing New Monomorphic Actions ##$/;"	s	chapter:Extending Google Mock
Writing New Monomorphic Matchers	src/tests/googletest/googlemock/docs/CookBook.md	/^## Writing New Monomorphic Matchers ##$/;"	s	chapter:Extending Google Mock
Writing New Monomorphic Matchers	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Writing New Monomorphic Matchers ##$/;"	s	chapter:Extending Google Mock
Writing New Monomorphic Matchers	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Writing New Monomorphic Matchers ##$/;"	s	chapter:Extending Google Mock
Writing New Monomorphic Matchers	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Writing New Monomorphic Matchers ##$/;"	s	chapter:Extending Google Mock
Writing New Parameterized Actions Quickly	src/tests/googletest/googlemock/docs/CookBook.md	/^## Writing New Parameterized Actions Quickly ##$/;"	s	chapter:Extending Google Mock
Writing New Parameterized Actions Quickly	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Writing New Parameterized Actions Quickly ##$/;"	s	chapter:Extending Google Mock
Writing New Parameterized Actions Quickly	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Writing New Parameterized Actions Quickly ##$/;"	s	chapter:Extending Google Mock
Writing New Parameterized Actions Quickly	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Writing New Parameterized Actions Quickly ##$/;"	s	chapter:Extending Google Mock
Writing New Parameterized Matchers Quickly	src/tests/googletest/googlemock/docs/CookBook.md	/^## Writing New Parameterized Matchers Quickly ##$/;"	s	chapter:Extending Google Mock
Writing New Parameterized Matchers Quickly	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Writing New Parameterized Matchers Quickly ##$/;"	s	chapter:Extending Google Mock
Writing New Parameterized Matchers Quickly	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Writing New Parameterized Matchers Quickly ##$/;"	s	chapter:Extending Google Mock
Writing New Parameterized Matchers Quickly	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Writing New Parameterized Matchers Quickly ##$/;"	s	chapter:Extending Google Mock
Writing New Polymorphic Actions	src/tests/googletest/googlemock/docs/CookBook.md	/^## Writing New Polymorphic Actions ##$/;"	s	chapter:Extending Google Mock
Writing New Polymorphic Actions	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Writing New Polymorphic Actions ##$/;"	s	chapter:Extending Google Mock
Writing New Polymorphic Actions	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Writing New Polymorphic Actions ##$/;"	s	chapter:Extending Google Mock
Writing New Polymorphic Actions	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Writing New Polymorphic Actions ##$/;"	s	chapter:Extending Google Mock
Writing New Polymorphic Matchers	src/tests/googletest/googlemock/docs/CookBook.md	/^## Writing New Polymorphic Matchers ##$/;"	s	chapter:Extending Google Mock
Writing New Polymorphic Matchers	src/tests/googletest/googlemock/docs/v1_5/CookBook.md	/^## Writing New Polymorphic Matchers ##$/;"	s	chapter:Extending Google Mock
Writing New Polymorphic Matchers	src/tests/googletest/googlemock/docs/v1_6/CookBook.md	/^## Writing New Polymorphic Matchers ##$/;"	s	chapter:Extending Google Mock
Writing New Polymorphic Matchers	src/tests/googletest/googlemock/docs/v1_7/CookBook.md	/^## Writing New Polymorphic Matchers ##$/;"	s	chapter:Extending Google Mock
Writing the Mock Class	src/tests/googletest/googlemock/docs/ForDummies.md	/^# Writing the Mock Class #$/;"	c
Writing the Mock Class	src/tests/googletest/googlemock/docs/v1_5/ForDummies.md	/^# Writing the Mock Class #$/;"	c
Writing the Mock Class	src/tests/googletest/googlemock/docs/v1_6/ForDummies.md	/^# Writing the Mock Class #$/;"	c
Writing the Mock Class	src/tests/googletest/googlemock/docs/v1_7/ForDummies.md	/^# Writing the Mock Class #$/;"	c
Writing the main() Function	src/tests/googletest/googletest/docs/Primer.md	/^# Writing the main() Function #$/;"	c
Writing the main() Function	src/tests/googletest/googletest/docs/V1_5_Primer.md	/^# Writing the main() Function #$/;"	c
Writing the main() Function	src/tests/googletest/googletest/docs/V1_6_Primer.md	/^# Writing the main() Function #$/;"	c
Writing the main() Function	src/tests/googletest/googletest/docs/V1_7_Primer.md	/^# Writing the main() Function #$/;"	c
XDMA_C2H_DEV	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static constexpr const char * XDMA_C2H_DEV = "\/\/dev\/\/xdma0_c2h_0";$/;"	m	class:tfhe_superaic::TFHE_ACC	typeref:typename:const char *
XDMA_CONTROL_DEV	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static constexpr const char * XDMA_CONTROL_DEV = "\/\/dev\/\/xdma0_control";$/;"	m	class:tfhe_superaic::TFHE_ACC	typeref:typename:const char *
XDMA_H2C_DEV	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static constexpr const char * XDMA_H2C_DEV = "\/\/dev\/\/xdma0_h2c_0";$/;"	m	class:tfhe_superaic::TFHE_ACC	typeref:typename:const char *
XDMA_Interrupt_Clear_Offset_0	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint8_t    XDMA_Interrupt_Clear_Offset_0 = 8;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint8_t
XDMA_Interrupt_Clear_Offset_1	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint8_t    XDMA_Interrupt_Clear_Offset_1 = 9;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint8_t
XDMA_Interrupt_Clear_Offset_2	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint8_t    XDMA_Interrupt_Clear_Offset_2 = 10;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint8_t
XDMA_Interrupt_Clear_Offset_3	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint8_t    XDMA_Interrupt_Clear_Offset_3 = 11;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint8_t
XDMA_Interrupt_Clear_Offset_4	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint8_t    XDMA_Interrupt_Clear_Offset_4 = 12;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint8_t
XDMA_Interrupt_Clear_Offset_5	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint8_t    XDMA_Interrupt_Clear_Offset_5 = 13;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint8_t
XDMA_Interrupt_Clear_Offset_6	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint8_t    XDMA_Interrupt_Clear_Offset_6 = 14;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint8_t
XDMA_Interrupt_Clear_Offset_7	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint8_t    XDMA_Interrupt_Clear_Offset_7 = 15;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint8_t
XDMA_Interrupt_Clear_Offsets	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static constexpr const uint8_t XDMA_Interrupt_Clear_Offsets[] = {$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint8_t[]
XDMA_Interrupt_Enable_Offset	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static const uint8_t    XDMA_Interrupt_Enable_Offset = 16;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:const uint8_t
XDMA_USER_DEV	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    static constexpr const char * XDMA_USER_DEV = "\/\/dev\/\/xdma0_user";$/;"	m	class:tfhe_superaic::TFHE_ACC	typeref:typename:const char *
XXX__str__	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def XXX__str__(self):$/;"	m	class:Node
XmlOutputChangeDirTest	src/tests/googletest/googletest/test/gtest-options_test.cc	/^class XmlOutputChangeDirTest : public Test {$/;"	c	namespace:testing::internal::__anon8f60ad580111	file:
XmlUnitTestResultPrinter	src/tests/googletest/googletest/src/gtest.cc	/^XmlUnitTestResultPrinter::XmlUnitTestResultPrinter(const char* output_file)$/;"	f	class:testing::internal::XmlUnitTestResultPrinter
XmlUnitTestResultPrinter	src/tests/googletest/googletest/src/gtest.cc	/^class XmlUnitTestResultPrinter : public EmptyTestEventListener {$/;"	c	namespace:testing::internal	file:
YearMonthDay	src/muduo/muduo/base/Date.h	/^  struct YearMonthDay$/;"	s	class:muduo::Date
ZlibInputStream	src/muduo/muduo/net/ZlibStream.h	/^  explicit ZlibInputStream(Buffer* output)$/;"	f	class:muduo::net::ZlibInputStream
ZlibInputStream	src/muduo/muduo/net/ZlibStream.h	/^class ZlibInputStream : noncopyable$/;"	c	namespace:muduo::net
ZlibOutputStream	src/muduo/muduo/net/ZlibStream.h	/^  explicit ZlibOutputStream(Buffer* output)$/;"	f	class:muduo::net::ZlibOutputStream
ZlibOutputStream	src/muduo/muduo/net/ZlibStream.h	/^class ZlibOutputStream : noncopyable$/;"	c	namespace:muduo::net
_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^const internal::AnythingMatcher _ = {};$/;"	v	namespace:testing	typeref:typename:const internal::AnythingMatcher
_2N	src/libtfhe-superaic-core/fft_processors/nayuki/lagrangehalfc_impl.h	/^    const int32_t _2N;$/;"	m	class:FFT_Processor_nayuki	typeref:typename:const int32_t
_AddBackToken	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def _AddBackToken(self, token):$/;"	m	class:AstBuilder
_AddBackTokens	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def _AddBackTokens(self, tokens):$/;"	m	class:AstBuilder
_Authenticate	src/tests/googletest/googlemock/scripts/upload.py	/^  def _Authenticate(self):$/;"	m	class:AbstractRpcServer
_Authenticate	src/tests/googletest/googlemock/scripts/upload.py	/^  def _Authenticate(self):$/;"	m	class:HttpRpcServer
_Authenticate	src/tests/googletest/googletest/scripts/upload.py	/^  def _Authenticate(self):$/;"	m	class:AbstractRpcServer
_Authenticate	src/tests/googletest/googletest/scripts/upload.py	/^  def _Authenticate(self):$/;"	m	class:HttpRpcServer
_CLANG_FILE_LINE_RE	src/tests/googletest/googlemock/scripts/gmock_doctor.py	/^_CLANG_FILE_LINE_RE = r'(?P<file>.*):(?P<line>\\d+):(?P<column>\\d+):\\s+'$/;"	v
_CLANG_NON_GMOCK_FILE_LINE_RE	src/tests/googletest/googlemock/scripts/gmock_doctor.py	/^_CLANG_NON_GMOCK_FILE_LINE_RE = ($/;"	v
_COMMON_GMOCK_SYMBOLS	src/tests/googletest/googlemock/scripts/gmock_doctor.py	/^_COMMON_GMOCK_SYMBOLS = [$/;"	v
_CollapseKeywords	src/tests/googletest/googlemock/scripts/upload.py	/^  def _CollapseKeywords(self, content, keyword_str):$/;"	m	class:SubversionVCS
_CollapseKeywords	src/tests/googletest/googletest/scripts/upload.py	/^  def _CollapseKeywords(self, content, keyword_str):$/;"	m	class:SubversionVCS
_CreateRequest	src/tests/googletest/googlemock/scripts/upload.py	/^  def _CreateRequest(self, url, data=None):$/;"	m	class:AbstractRpcServer
_CreateRequest	src/tests/googletest/googletest/scripts/upload.py	/^  def _CreateRequest(self, url, data=None):$/;"	m	class:AbstractRpcServer
_CreateVariable	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def _CreateVariable(self, pos_token, name, type_name, type_modifiers,$/;"	m	class:AstBuilder
_DIAGNOSERS	src/tests/googletest/googlemock/scripts/gmock_doctor.py	/^_DIAGNOSERS = [$/;"	v
_EMAIL	src/tests/googletest/googlemock/scripts/gmock_doctor.py	/^_EMAIL = 'googlemock@googlegroups.com'$/;"	v
_FindAllMatches	src/tests/googletest/googlemock/scripts/gmock_doctor.py	/^def _FindAllMatches(regex, s):$/;"	f
_GCC_FILE_LINE_RE	src/tests/googletest/googlemock/scripts/gmock_doctor.py	/^_GCC_FILE_LINE_RE = r'(?P<file>.*):(?P<line>\\d+):(\\d+:)?\\s+'$/;"	v
_GenerateMethods	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class.py	/^def _GenerateMethods(output_lines, source, class_node):$/;"	f
_GenerateMocks	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class.py	/^def _GenerateMocks(filename, source, ast_list, desired_class_names):$/;"	f
_GenerateOne	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def _GenerateOne(self, token):$/;"	m	class:AstBuilder
_GenericDeclaration	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^class _GenericDeclaration(Node):$/;"	c
_GenericDiagnoser	src/tests/googletest/googlemock/scripts/gmock_doctor.py	/^def _GenericDiagnoser(short_name, long_name, diagnoses, msg):$/;"	f
_GetAuthCookie	src/tests/googletest/googlemock/scripts/upload.py	/^  def _GetAuthCookie(self, auth_token):$/;"	m	class:AbstractRpcServer
_GetAuthCookie	src/tests/googletest/googletest/scripts/upload.py	/^  def _GetAuthCookie(self, auth_token):$/;"	m	class:AbstractRpcServer
_GetAuthToken	src/tests/googletest/googlemock/scripts/upload.py	/^  def _GetAuthToken(self, email, password):$/;"	m	class:AbstractRpcServer
_GetAuthToken	src/tests/googletest/googletest/scripts/upload.py	/^  def _GetAuthToken(self, email, password):$/;"	m	class:AbstractRpcServer
_GetBases	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def _GetBases(self):$/;"	m	class:AstBuilder
_GetChar	src/tests/googletest/googlemock/scripts/generator/cpp/tokenize.py	/^def _GetChar(source, start, i):$/;"	f
_GetChildren	src/tests/googletest/googletest/test/gtest_xml_test_utils.py	/^  def _GetChildren(self, element):$/;"	m	class:GTestXMLTestCase
_GetClass	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def _GetClass(self, class_type, visibility, templated_types):$/;"	m	class:AstBuilder
_GetMatchingChar	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def _GetMatchingChar(self, open_paren, close_paren, GetNextToken=None):$/;"	m	class:AstBuilder
_GetMethod	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def _GetMethod(self, return_type_and_name, modifiers, templated_types,$/;"	m	class:AstBuilder
_GetNestedType	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def _GetNestedType(self, ctor):$/;"	m	class:AstBuilder
_GetNextToken	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def _GetNextToken(self):$/;"	m	class:AstBuilder
_GetOpener	src/tests/googletest/googlemock/scripts/upload.py	/^  def _GetOpener(self):$/;"	m	class:AbstractRpcServer
_GetOpener	src/tests/googletest/googlemock/scripts/upload.py	/^  def _GetOpener(self):$/;"	m	class:HttpRpcServer
_GetOpener	src/tests/googletest/googletest/scripts/upload.py	/^  def _GetOpener(self):$/;"	m	class:AbstractRpcServer
_GetOpener	src/tests/googletest/googletest/scripts/upload.py	/^  def _GetOpener(self):$/;"	m	class:HttpRpcServer
_GetParameters	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def _GetParameters(self):$/;"	m	class:AstBuilder
_GetRelPath	src/tests/googletest/googlemock/scripts/upload.py	/^  def _GetRelPath(self, filename):$/;"	m	class:MercurialVCS
_GetRelPath	src/tests/googletest/googletest/scripts/upload.py	/^  def _GetRelPath(self, filename):$/;"	m	class:MercurialVCS
_GetReturnTypeAndClassName	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def _GetReturnTypeAndClassName(self, token_seq):$/;"	m	class:AstBuilder
_GetString	src/tests/googletest/googlemock/scripts/generator/cpp/tokenize.py	/^def _GetString(source, start, i):$/;"	f
_GetTemplateEnd	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def _GetTemplateEnd(self, tokens, start):$/;"	m	class:TypeConverter
_GetTemplatedTypes	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def _GetTemplatedTypes(self):$/;"	m	class:AstBuilder
_GetTokensUpTo	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def _GetTokensUpTo(self, expected_token_type, expected_token):$/;"	m	class:AstBuilder
_GetVarTokensUpTo	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def _GetVarTokensUpTo(self, expected_token_type, *expected_tokens):$/;"	m	class:AstBuilder
_GetXmlOutput	src/tests/googletest/googletest/test/gtest_xml_output_unittest.py	/^  def _GetXmlOutput(self, gtest_prog_name, extra_args, expected_exit_code):$/;"	m	class:GTestXMLOutputUnitTest
_GuessBase	src/tests/googletest/googlemock/scripts/upload.py	/^  def _GuessBase(self, required):$/;"	m	class:SubversionVCS
_GuessBase	src/tests/googletest/googletest/scripts/upload.py	/^  def _GuessBase(self, required):$/;"	m	class:SubversionVCS
_HAS_EXCEPTIONS	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#   define _HAS_EXCEPTIONS /;"	d
_INDENT	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class.py	/^_INDENT = 2$/;"	v
_INTERNAL_TOKEN	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^_INTERNAL_TOKEN = 'internal'$/;"	v
_IgnoreUpTo	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def _IgnoreUpTo(self, token_type, token):$/;"	m	class:AstBuilder
_IncompleteByReferenceArgumentDiagnoser	src/tests/googletest/googlemock/scripts/gmock_doctor.py	/^def _IncompleteByReferenceArgumentDiagnoser(msg):$/;"	f
_LIBACC_H_	src/libtfhe-superaic-acc/accs/libacc.h	/^#define _LIBACC_H_$/;"	d
_Main	src/tests/googletest/googletest/scripts/gen_gtest_pred_impl.py	/^def _Main():$/;"	f
_MockObjectPointerDiagnoser	src/tests/googletest/googlemock/scripts/gmock_doctor.py	/^def _MockObjectPointerDiagnoser(msg):$/;"	f
_NAMESPACE_POP	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^_NAMESPACE_POP = 'ns-pop'$/;"	v
_NeedToReturnNothingDiagnoser	src/tests/googletest/googlemock/scripts/gmock_doctor.py	/^def _NeedToReturnNothingDiagnoser(msg):$/;"	f
_NeedToReturnReferenceDiagnoser	src/tests/googletest/googlemock/scripts/gmock_doctor.py	/^def _NeedToReturnReferenceDiagnoser(msg):$/;"	f
_NeedToReturnSomethingDiagnoser	src/tests/googletest/googlemock/scripts/gmock_doctor.py	/^def _NeedToReturnSomethingDiagnoser(msg):$/;"	f
_NeedToUseReturnNullDiagnoser	src/tests/googletest/googlemock/scripts/gmock_doctor.py	/^def _NeedToUseReturnNullDiagnoser(msg):$/;"	f
_NeedToUseSymbolDiagnoser	src/tests/googletest/googlemock/scripts/gmock_doctor.py	/^def _NeedToUseSymbolDiagnoser(msg):$/;"	f
_NestedType	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^class _NestedType(_GenericDeclaration):$/;"	c
_NullDict	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^class _NullDict(object):$/;"	c
_OverloadedFunctionActionDiagnoser	src/tests/googletest/googlemock/scripts/gmock_doctor.py	/^def _OverloadedFunctionActionDiagnoser(msg):$/;"	f
_OverloadedFunctionMatcherDiagnoser	src/tests/googletest/googlemock/scripts/gmock_doctor.py	/^def _OverloadedFunctionMatcherDiagnoser(msg):$/;"	f
_OverloadedMethodActionDiagnoser	src/tests/googletest/googlemock/scripts/gmock_doctor.py	/^def _OverloadedMethodActionDiagnoser(msg):$/;"	f
_ParseAndStripGTestFlags	src/tests/googletest/googletest/test/gtest_test_utils.py	/^def _ParseAndStripGTestFlags(argv):$/;"	f
_RemoveTempDir	src/tests/googletest/googletest/test/gtest_test_utils.py	/^def _RemoveTempDir():$/;"	f
_ReplaceEnvDict	src/tests/googletest/googletest/test/gtest_test_utils.py	/^      def _ReplaceEnvDict(dest, src):$/;"	f	member:Subprocess.__init__	file:
_STR_PREFIXES	src/tests/googletest/googlemock/scripts/generator/cpp/tokenize.py	/^_STR_PREFIXES = set(('R', 'u8', 'u8R', 'u', 'uR', 'U', 'UR', 'L', 'LR'))$/;"	v
_SUBPROCESS_MODULE_AVAILABLE	src/tests/googletest/googletest/test/gtest_test_utils.py	/^  _SUBPROCESS_MODULE_AVAILABLE = False$/;"	v
_SUBPROCESS_MODULE_AVAILABLE	src/tests/googletest/googletest/test/gtest_test_utils.py	/^  _SUBPROCESS_MODULE_AVAILABLE = True$/;"	v
_SVN_INFO_URL_RE	src/tests/googletest/googletest/scripts/common.py	/^_SVN_INFO_URL_RE = re.compile(r'^URL: https:\/\/(\\w+)\\.googlecode\\.com\/svn(.*)')$/;"	v
_SkipIf0Blocks	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def _SkipIf0Blocks(self):$/;"	m	class:AstBuilder
_StringHelper	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def _StringHelper(self, name, suffix):$/;"	m	class:Node
_TFHE_ACC_H_	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^#define _TFHE_ACC_H_$/;"	d
_TFHE_SUPERAIC_CLIENT_H_	src/libtfhe-superaic-client/include/tfhe_superaic_client.h	/^#define _TFHE_SUPERAIC_CLIENT_H_$/;"	d
_TFHE_SUPERAIC_SERVER_H_	src/libtfhe-superaic-server/include/tfhe_superaic_server.h	/^#define _TFHE_SUPERAIC_SERVER_H_$/;"	d
_TFHE_SUPER_DRIVER_H_	src/driver/tfhe_superaic_driver.h	/^#define _TFHE_SUPER_DRIVER_H_$/;"	d
_TORUS_H_	src/libtfhe-superaic-core/include/tfhe_superaic_torus.h	/^#define _TORUS_H_$/;"	d
_TR1_FUNCTIONAL	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^#   define _TR1_FUNCTIONAL /;"	d
_TestOutFile	src/tests/googletest/googletest/test/gtest_xml_outfiles_test.py	/^  def _TestOutFile(self, test_name, expected_xml):$/;"	m	class:GTestXMLOutFilesTest
_TestXmlOutput	src/tests/googletest/googletest/test/gtest_xml_output_unittest.py	/^  def _TestXmlOutput(self, gtest_prog_name, expected_xml,$/;"	m	class:GTestXMLOutputUnitTest
_TypeInTemplatedBaseDiagnoser	src/tests/googletest/googlemock/scripts/gmock_doctor.py	/^def _TypeInTemplatedBaseDiagnoser(msg):$/;"	f
_TypeStringHelper	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def _TypeStringHelper(self, suffix):$/;"	m	class:_GenericDeclaration
_VERSION	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class.py	/^_VERSION = (1, 0, 1)  # The version of this script.$/;"	v
_VERSION	src/tests/googletest/googlemock/scripts/gmock_doctor.py	/^_VERSION = '1.0.3'$/;"	v
_VerifyTestCasesDoNotInterleave	src/tests/googletest/googletest/test/gtest_shuffle_test.py	/^  def _VerifyTestCasesDoNotInterleave(self, tests):$/;"	m	class:GTestShuffleUnitTest
_WrongMockMethodMacroDiagnoser	src/tests/googletest/googlemock/scripts/gmock_doctor.py	/^def _WrongMockMethodMacroDiagnoser(msg):$/;"	f
_WrongParenPositionDiagnoser	src/tests/googletest/googlemock/scripts/gmock_doctor.py	/^def _WrongParenPositionDiagnoser(msg):$/;"	f
__/googletest/src/gtest-all.cc.i	buildotests/tests/googletest/googlemock/Makefile	/^__\/googletest\/src\/gtest-all.cc.i:$/;"	t
__/googletest/src/gtest-all.cc.o	buildotests/tests/googletest/googlemock/Makefile	/^__\/googletest\/src\/gtest-all.cc.o:$/;"	t
__/googletest/src/gtest-all.cc.s	buildotests/tests/googletest/googlemock/Makefile	/^__\/googletest\/src\/gtest-all.cc.s:$/;"	t
__/googletest/src/gtest-all.i	buildotests/tests/googletest/googlemock/Makefile	/^__\/googletest\/src\/gtest-all.i: __\/googletest\/src\/gtest-all.cc.i$/;"	t
__/googletest/src/gtest-all.o	buildotests/tests/googletest/googlemock/Makefile	/^__\/googletest\/src\/gtest-all.o: __\/googletest\/src\/gtest-all.cc.o$/;"	t
__/googletest/src/gtest-all.s	buildotests/tests/googletest/googlemock/Makefile	/^__\/googletest\/src\/gtest-all.s: __\/googletest\/src\/gtest-all.cc.s$/;"	t
__STDC_FORMAT_MACROS	src/muduo/examples/procmon/procmon.cc	/^#define __STDC_FORMAT_MACROS$/;"	d	file:
__STDC_FORMAT_MACROS	src/muduo/examples/wordcount/hasher.cc	/^#define __STDC_FORMAT_MACROS$/;"	d	file:
__STDC_FORMAT_MACROS	src/muduo/muduo/base/LogStream.cc	/^#define __STDC_FORMAT_MACROS$/;"	d	file:
__STDC_FORMAT_MACROS	src/muduo/muduo/base/Timestamp.cc	/^#define __STDC_FORMAT_MACROS$/;"	d	file:
__STDC_FORMAT_MACROS	src/muduo/muduo/base/tests/FileUtil_test.cc	/^#define __STDC_FORMAT_MACROS$/;"	d	file:
__STDC_FORMAT_MACROS	src/muduo/muduo/base/tests/LogStream_bench.cc	/^#define __STDC_FORMAT_MACROS$/;"	d	file:
__STDC_FORMAT_MACROS	src/muduo/muduo/base/tests/ProcessInfo_test.cc	/^#define __STDC_FORMAT_MACROS$/;"	d	file:
__STDC_FORMAT_MACROS	src/muduo/muduo/base/tests/TimeZone_util.cc	/^#define __STDC_FORMAT_MACROS$/;"	d	file:
__STDC_LIMIT_MACROS	src/muduo/muduo/net/TimerQueue.cc	/^#define __STDC_LIMIT_MACROS$/;"	d	file:
__add__	src/tests/googletest/googletest/scripts/pump.py	/^  def __add__(self, offset):$/;"	m	class:Cursor
__anon027fcd4e0111	src/tests/fakes/lwe-bootstrapping.h	/^namespace {$/;"	n
__anon077d0c590111	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^namespace {$/;"	n	namespace:testing::internal	file:
__anon0e34bff10111	src/tests/lwekeyswitch_test.cpp	/^namespace {$/;"	n	file:
__anon12ae55ff0102	src/muduo/muduo/base/tests/ThreadPool_test.cc	/^  {$/;"	f	function:test2	file:
__anon142d171a0111	src/tests/googletest/googletest/src/gtest-port.cc	/^namespace {$/;"	n	namespace:testing::internal	file:
__anon142d171a0211	src/tests/googletest/googletest/src/gtest-port.cc	/^namespace {$/;"	n	namespace:testing::internal	file:
__anon14d5248f0111	src/tests/googletest/googlemock/test/gmock_ex_test.cc	/^namespace {$/;"	n	file:
__anon15fadeff0111	src/muduo/muduo/net/poller/EPollPoller.cc	/^{$/;"	n	file:
__anon1f7e76720111	src/tests/moduo_test.cpp	/^namespace {$/;"	n	file:
__anon23f859320111	src/tests/session_test.cpp	/^namespace {$/;"	n	file:
__anon2749e6230102	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^  auto call = [](const std::function<int(int)> &f, int i) {$/;"	f	function:testing::gmock_generated_function_mockers_test::TEST	file:
__anon2b0cfa7f0111	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^namespace {$/;"	n	file:
__anon2d2168ad0111	src/tests/tgsw_direct_test.cpp	/^namespace {$/;"	n	file:
__anon2d72c1c60111	src/tests/io_test.cpp	/^namespace {$/;"	n	file:
__anon31245b4e0103	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^  enum { value = kOther };  \/\/ The default kind.$/;"	g	struct:testing::internal::KindOf
__anon357885ae0111	src/tests/googletest/googlemock/test/gmock_leak_test_.cc	/^namespace {$/;"	n	file:
__anon37ac2de30111	src/tests/googletest/googletest/test/gtest_filter_unittest_.cc	/^namespace {$/;"	n	file:
__anon3d3befdc0111	src/tests/googletest/googlemock/test/gmock-cardinalities_test.cc	/^namespace {$/;"	n	file:
__anon3f29b7680111	src/tests/googletest/googletest/src/gtest.cc	/^namespace {$/;"	n	namespace:testing::internal::edit_distance	file:
__anon3f29b7680211	src/tests/googletest/googletest/src/gtest.cc	/^namespace {$/;"	n	namespace:testing::internal::edit_distance	file:
__anon3f29b7680311	src/tests/googletest/googletest/src/gtest.cc	/^namespace {$/;"	n	namespace:testing::internal	file:
__anon3f29b7680411	src/tests/googletest/googletest/src/gtest.cc	/^namespace {$/;"	n	namespace:testing	file:
__anon3f29b7680511	src/tests/googletest/googletest/src/gtest.cc	/^namespace {$/;"	n	namespace:testing::internal	file:
__anon3f29b7680611	src/tests/googletest/googletest/src/gtest.cc	/^namespace {$/;"	n	namespace:testing	file:
__anon3f29b7680711	src/tests/googletest/googletest/src/gtest.cc	/^namespace {$/;"	n	namespace:testing::internal	file:
__anon451a24830111	src/muduo/muduo/net/protorpc/RpcCodec.cc	/^{$/;"	n	file:
__anon478224cd0111	src/tests/macros_decrypt_with_plaintext_modulus_macros.cpp	/^namespace {$/;"	n	file:
__anon4a4088460111	src/muduo/muduo/net/SocketsOps.cc	/^{$/;"	n	file:
__anon4cdaee640111	src/tests/macros_modSwitch_with_plaintext_modulus_macros.cpp	/^namespace {$/;"	n	file:
__anon4f389dc60111	src/tests/QEMU_test.cpp	/^namespace {$/;"	n	file:
__anon550198f10111	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^namespace {$/;"	n	file:
__anon550198f10202	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^  DefaultValue<std::unique_ptr<int>>::SetFactory([] {$/;"	f	function:__anon550198f10111::TEST	file:
__anon550198f10302	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^  DefaultValue<std::unique_ptr<int>>::SetFactory([] {$/;"	f	function:__anon550198f10111::TEST	file:
__anon560166140111	src/tests/bootstrapping_direct_test.cpp	/^namespace {$/;"	n	file:
__anon5da83fc50102	src/muduo/muduo/base/tests/Thread_bench.cc	/^            [this] { threadFunc(); },$/;"	f	function:Bench::Bench	file:
__anon5ee53c750111	src/muduo/muduo/net/protobuf/ProtobufCodecLite.cc	/^{$/;"	n	file:
__anon5ee53c750211	src/muduo/muduo/net/protobuf/ProtobufCodecLite.cc	/^{$/;"	n	file:
__anon600130340111	src/muduo/muduo/net/EventLoop.cc	/^{$/;"	n	file:
__anon65c1aa420111	src/muduo/examples/protobuf/codec/codec.cc	/^{$/;"	n	file:
__anon662e63c40111	src/tests/ops_add_with_carry.cpp	/^namespace {$/;"	n	file:
__anon662e63c40202	src/tests/ops_add_with_carry.cpp	/^                [](int32_t x){return x % message_modulus;});$/;"	f	function:__anon662e63c40111::TEST_F	file:
__anon662e63c40302	src/tests/ops_add_with_carry.cpp	/^                [](int32_t x){return x \/ message_modulus;});$/;"	f	function:__anon662e63c40111::TEST_F	file:
__anon6b6cf3b20111	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^namespace {$/;"	n	file:
__anon6c5f9b3a0111	src/tests/package_test.cpp	/^namespace {$/;"	n	file:
__anon745c08170102	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  EXPECT_FALSE(m.Matches([]{}));$/;"	f	function:testing::gmock_matchers_test::TEST	file:
__anon745c08170202	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  EXPECT_TRUE(m.Matches([]{}));$/;"	f	function:testing::gmock_matchers_test::TEST	file:
__anon745c08170311	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^namespace {$/;"	n	namespace:testing::gmock_matchers_test	file:
__anon75bdd3680111	src/tests/googletest/googletest/samples/sample9_unittest.cc	/^namespace {$/;"	n	file:
__anon7b11f63c0102	src/muduo/muduo/base/tests/Exception_test.cc	/^    [] {$/;"	f	function:Bar::test	file:
__anon7b11f63c0202	src/muduo/muduo/base/tests/Exception_test.cc	/^    std::function<void()> func([] {$/;"	f	function:Bar::test	file:
__anon7c76dd960111	src/tests/fakes/tlwe-fft.h	/^namespace {$/;"	n
__anon7fd7f0f30111	src/tests/googletest/googletest/test/gtest_environment_test.cc	/^namespace {$/;"	n	file:
__anon81520f2c0111	src/tests/googletest/googletest/src/gtest-printers.cc	/^namespace {$/;"	n	namespace:testing	file:
__anon8153b4f20111	src/tests/bootstrapping_classic_PBS_parameters_test.cpp	/^namespace {$/;"	n	file:
__anon83eb3b5f0111	src/tests/googletest/googletest/test/gtest_repeat_test.cc	/^namespace {$/;"	n	file:
__anon87ebe9520111	src/tests/polynomial_test.cpp	/^namespace {$/;"	n	file:
__anon88d438720111	src/tests/FPGA_ACC_test.cpp	/^namespace {$/;"	n	file:
__anon8c5f3b940111	src/muduo/muduo/net/inspect/Inspector.cc	/^{$/;"	n	file:
__anon8f60ad580111	src/tests/googletest/googletest/test/gtest-options_test.cc	/^namespace {$/;"	n	namespace:testing::internal	file:
__anon9107e4b10111	src/tests/googletest/googletest/test/gtest-message_test.cc	/^namespace {$/;"	n	file:
__anon91ff1dea0111	src/tests/googletest/googletest/test/gtest_shuffle_test_.cc	/^namespace {$/;"	n	file:
__anon97b0a8450111	src/tests/googletest/googlemock/src/gmock-cardinalities.cc	/^namespace {$/;"	n	namespace:testing	file:
__anon99f2cee50111	src/tests/googletest/googletest/test/gtest_break_on_failure_unittest_.cc	/^namespace {$/;"	n	file:
__anon9b77792a0102	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^    return [this]() -> R {$/;"	f	function:testing::MockFunction::AsStdFunction	typeref:typename:R	file:
__anon9b77792a0202	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^    return [this](A0 a0) -> R {$/;"	f	function:testing::MockFunction::AsStdFunction	typeref:typename:R	file:
__anon9b77792a0302	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^    return [this](A0 a0, A1 a1) -> R {$/;"	f	function:testing::MockFunction::AsStdFunction	typeref:typename:R	file:
__anon9b77792a0402	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^    return [this](A0 a0, A1 a1, A2 a2) -> R {$/;"	f	function:testing::MockFunction::AsStdFunction	typeref:typename:R	file:
__anon9b77792a0502	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^    return [this](A0 a0, A1 a1, A2 a2, A3 a3) -> R {$/;"	f	function:testing::MockFunction::AsStdFunction	typeref:typename:R	file:
__anon9b77792a0602	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^    return [this](A0 a0, A1 a1, A2 a2, A3 a3, A4 a4) -> R {$/;"	f	function:testing::MockFunction::AsStdFunction	typeref:typename:R	file:
__anon9b77792a0702	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^    return [this](A0 a0, A1 a1, A2 a2, A3 a3, A4 a4, A5 a5) -> R {$/;"	f	function:testing::MockFunction::AsStdFunction	typeref:typename:R	file:
__anon9b77792a0802	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^    return [this](A0 a0, A1 a1, A2 a2, A3 a3, A4 a4, A5 a5, A6 a6) -> R {$/;"	f	function:testing::MockFunction::AsStdFunction	typeref:typename:R	file:
__anon9b77792a0902	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^    return [this](A0 a0, A1 a1, A2 a2, A3 a3, A4 a4, A5 a5, A6 a6, A7 a7) -> R {$/;"	f	function:testing::MockFunction::AsStdFunction	typeref:typename:R	file:
__anon9b77792a0a02	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^        A8 a8) -> R {$/;"	f	function:testing::MockFunction::AsStdFunction	typeref:typename:R	file:
__anon9b77792a0b02	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^        A8 a8, A9 a9) -> R {$/;"	f	function:testing::MockFunction::AsStdFunction	typeref:typename:R	file:
__anon9baab4410111	src/tests/small_size_test.cpp	/^namespace { \/\/ namespace$/;"	n	file:
__anon9be581a20111	src/tests/googletest/googletest/test/gtest_stress_test.cc	/^namespace {$/;"	n	namespace:testing	file:
__anona47613760111	src/tests/googletest/googletest/test/gtest-tuple_test.cc	/^namespace {$/;"	n	file:
__anona6935d300111	src/tests/googletest/googletest/samples/sample10_unittest.cc	/^namespace {$/;"	n	file:
__anona7ba7e300111	src/tests/googletest/googletest/test/gtest-test-part_test.cc	/^namespace {$/;"	n	file:
__anonaae24d1b0111	src/tests/fakes/lwe-bootstrapping-fft.h	/^namespace {$/;"	n
__anonade498ed0102	src/muduo/muduo/base/tests/BlockingQueue_bench2.cc	/^            [this, i] { threadFunc(i); },$/;"	f	function:Bench::Bench	file:
__anonb1f413890111	src/tests/ops_add.cpp	/^namespace {$/;"	n	file:
__anonb1f413890202	src/tests/ops_add.cpp	/^                [](int32_t x){return x % message_modulus;});$/;"	f	function:__anonb1f413890111::TEST_F	file:
__anonb1f413890302	src/tests/ops_add.cpp	/^                [](int32_t x){return x \/ message_modulus;});$/;"	f	function:__anonb1f413890111::TEST_F	file:
__anonb49ff32c0111	src/tests/fakes/lagrangehalfc.h	/^namespace {$/;"	n
__anonb806fa6c0111	src/tests/googletest/googletest/test/gtest_premature_exit_test.cc	/^namespace {$/;"	n	file:
__anonbf4a421d0111	src/tests/fakes/lwe-keyswitch.h	/^namespace {$/;"	n
__anonc028f2ea0111	src/tests/tlwe_test.cpp	/^namespace {$/;"	n	file:
__anonc07144f40111	src/tests/zpf_for_bootstrap_detail.cpp	/^namespace {$/;"	n	file:
__anonc1446e5b0111	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^namespace {$/;"	n	namespace:testing	file:
__anonc7051ed90111	src/tests/googletest/googletest/test/gtest_sole_header_test.cc	/^namespace {$/;"	n	file:
__anonc83180760111	src/tests/googletest/googlemock/test/gmock_stress_test.cc	/^namespace {$/;"	n	namespace:testing	file:
__anonc84148b60111	src/tests/lwe_test.cpp	/^namespace {$/;"	n	file:
__anoncaf4ae130111	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^namespace {$/;"	n	file:
__anond0ecb2020111	src/tests/googletest/googlemock/test/gmock_link_test.h	/^namespace {$/;"	n
__anond0ecb2020211	src/tests/googletest/googlemock/test/gmock_link_test.h	/^namespace {$/;"	n
__anond0ecb2020311	src/tests/googletest/googlemock/test/gmock_link_test.h	/^namespace {$/;"	n
__anond73b42720103	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  enum {$/;"	g	class:testing::internal::NativeArray
__anond7472e30010a	src/muduo/muduo/net/InetAddress.h	/^  {$/;"	u	class:muduo::net::InetAddress
__anond844f8d20111	src/tests/fakes/tgsw.h	/^namespace {$/;"	n
__anond8a158490111	src/tests/fakes/tlwe.h	/^namespace {$/;"	n
__anondac0f39a0103	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  enum { value = true };$/;"	g	struct:testing::internal::StaticAssertTypeEqHelper
__anondb55d4a50111	src/tests/decrypt_with_plaintext_modulus.cpp	/^namespace {$/;"	n	file:
__anondb55d4a50202	src/tests/decrypt_with_plaintext_modulus.cpp	/^                    [](int32_t x){return x ;});$/;"	f	function:__anondb55d4a50111::TEST_F	file:
__anone22a8aca0103	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  enum {$/;"	g	class:TestGenerationTest	file:
__anone22a8aca0202	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^                        [](const ::testing::TestParamInfo<std::string>& info) {$/;"	f	file:
__anonecc711f70111	src/tests/googletest/googlemock/test/gmock-generated-internal-utils_test.cc	/^namespace {$/;"	n	file:
__anonee999a9f0111	src/tests/fakes/tgsw-fft.h	/^namespace {$/;"	n
__anonef2481d50111	src/tests/ACC_test.cpp	/^namespace {$/;"	n	file:
__anonf292eaa30111	src/tests/googletest/googletest/test/gtest_main_unittest.cc	/^namespace {$/;"	n	file:
__anonf36cd29a0111	src/tests/bootstrapping_test.cpp	/^namespace {$/;"	n	file:
__anonf4b2defb0111	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^namespace {$/;"	n	namespace:testing::internal	file:
__anonf616d1f80111	src/tests/googletest/googletest/test/gtest-linked_ptr_test.cc	/^namespace {$/;"	n	file:
__anonf6ee1fdc0102	src/muduo/examples/ace/ttcp/ttcp_asio_async.cc	/^        {$/;"	f	function:TtcpServerConnection::doReadSession	file:
__anonf6ee1fdc0202	src/muduo/examples/ace/ttcp/ttcp_asio_async.cc	/^        {$/;"	f	function:TtcpServerConnection::doReadLength	file:
__anonf6ee1fdc0302	src/muduo/examples/ace/ttcp/ttcp_asio_async.cc	/^        {$/;"	f	function:TtcpServerConnection::doReadPayload	file:
__anonf6ee1fdc0402	src/muduo/examples/ace/ttcp/ttcp_asio_async.cc	/^        {$/;"	f	function:TtcpServerConnection::doWriteAck	file:
__anonf6ee1fdc0502	src/muduo/examples/ace/ttcp/ttcp_asio_async.cc	/^      {$/;"	f	function:doAccept	file:
__anonf780395f0111	src/tests/googletest/googletest/test/gtest_unittest.cc	/^namespace {$/;"	n	file:
__anonf780395f0203	src/tests/googletest/googletest/test/gtest_unittest.cc	/^enum {$/;"	g	namespace:__anonf780395f0111	file:
__anonf780395f0311	src/tests/googletest/googletest/test/gtest_unittest.cc	/^namespace {$/;"	n	file:
__anonf780395f0411	src/tests/googletest/googletest/test/gtest_unittest.cc	/^namespace {$/;"	n	file:
__anonf7fdcc1f0111	src/muduo/muduo/base/tests/Fork_test.cc	/^{$/;"	n	file:
__anonfa97fe800111	src/muduo/examples/cdns/Resolver.cc	/^{$/;"	n	file:
__anonfeb37f530111	src/tests/tgsw_test.cpp	/^namespace {$/;"	n	file:
__author__	src/tests/googletest/googlemock/scripts/fuse_gmock_files.py	/^__author__ = 'wan@google.com (Zhanyong Wan)'$/;"	v
__author__	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^__author__ = 'nnorwitz@google.com (Neal Norwitz)'$/;"	v
__author__	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class.py	/^__author__ = 'nnorwitz@google.com (Neal Norwitz)'$/;"	v
__author__	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class_test.py	/^__author__ = 'nnorwitz@google.com (Neal Norwitz)'$/;"	v
__author__	src/tests/googletest/googlemock/scripts/generator/cpp/keywords.py	/^__author__ = 'nnorwitz@google.com (Neal Norwitz)'$/;"	v
__author__	src/tests/googletest/googlemock/scripts/generator/cpp/tokenize.py	/^__author__ = 'nnorwitz@google.com (Neal Norwitz)'$/;"	v
__author__	src/tests/googletest/googlemock/scripts/generator/cpp/utils.py	/^__author__ = 'nnorwitz@google.com (Neal Norwitz)'$/;"	v
__author__	src/tests/googletest/googlemock/scripts/generator/gmock_gen.py	/^__author__ = 'nnorwitz@google.com (Neal Norwitz)'$/;"	v
__author__	src/tests/googletest/googlemock/scripts/gmock_doctor.py	/^__author__ = 'wan@google.com (Zhanyong Wan)'$/;"	v
__author__	src/tests/googletest/googlemock/scripts/upload_gmock.py	/^__author__ = 'wan@google.com (Zhanyong Wan)'$/;"	v
__author__	src/tests/googletest/googlemock/test/gmock_leak_test.py	/^__author__ = 'wan@google.com (Zhanyong Wan)'$/;"	v
__author__	src/tests/googletest/googlemock/test/gmock_output_test.py	/^__author__ = 'wan@google.com (Zhanyong Wan)'$/;"	v
__author__	src/tests/googletest/googlemock/test/gmock_test_utils.py	/^__author__ = 'wan@google.com (Zhanyong Wan)'$/;"	v
__author__	src/tests/googletest/googletest/scripts/common.py	/^__author__ = 'wan@google.com (Zhanyong Wan)'$/;"	v
__author__	src/tests/googletest/googletest/scripts/fuse_gtest_files.py	/^__author__ = 'wan@google.com (Zhanyong Wan)'$/;"	v
__author__	src/tests/googletest/googletest/scripts/gen_gtest_pred_impl.py	/^__author__ = 'wan@google.com (Zhanyong Wan)'$/;"	v
__author__	src/tests/googletest/googletest/scripts/pump.py	/^__author__ = 'wan@google.com (Zhanyong Wan)'$/;"	v
__author__	src/tests/googletest/googletest/scripts/release_docs.py	/^__author__ = 'wan@google.com (Zhanyong Wan)'$/;"	v
__author__	src/tests/googletest/googletest/scripts/upload_gtest.py	/^__author__ = 'wan@google.com (Zhanyong Wan)'$/;"	v
__author__	src/tests/googletest/googletest/test/gtest_break_on_failure_unittest.py	/^__author__ = 'wan@google.com (Zhanyong Wan)'$/;"	v
__author__	src/tests/googletest/googletest/test/gtest_catch_exceptions_test.py	/^__author__ = 'vladl@google.com (Vlad Losev)'$/;"	v
__author__	src/tests/googletest/googletest/test/gtest_color_test.py	/^__author__ = 'wan@google.com (Zhanyong Wan)'$/;"	v
__author__	src/tests/googletest/googletest/test/gtest_env_var_test.py	/^__author__ = 'wan@google.com (Zhanyong Wan)'$/;"	v
__author__	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^__author__ = 'wan@google.com (Zhanyong Wan)'$/;"	v
__author__	src/tests/googletest/googletest/test/gtest_help_test.py	/^__author__ = 'wan@google.com (Zhanyong Wan)'$/;"	v
__author__	src/tests/googletest/googletest/test/gtest_list_tests_unittest.py	/^__author__ = 'phanna@google.com (Patrick Hanna)'$/;"	v
__author__	src/tests/googletest/googletest/test/gtest_output_test.py	/^__author__ = 'wan@google.com (Zhanyong Wan)'$/;"	v
__author__	src/tests/googletest/googletest/test/gtest_shuffle_test.py	/^__author__ = 'wan@google.com (Zhanyong Wan)'$/;"	v
__author__	src/tests/googletest/googletest/test/gtest_test_utils.py	/^__author__ = 'wan@google.com (Zhanyong Wan)'$/;"	v
__author__	src/tests/googletest/googletest/test/gtest_throw_on_failure_test.py	/^__author__ = 'wan@google.com (Zhanyong Wan)'$/;"	v
__author__	src/tests/googletest/googletest/test/gtest_uninitialized_test.py	/^__author__ = 'wan@google.com (Zhanyong Wan)'$/;"	v
__author__	src/tests/googletest/googletest/test/gtest_xml_outfiles_test.py	/^__author__ = "keith.ray@gmail.com (Keith Ray)"$/;"	v
__author__	src/tests/googletest/googletest/test/gtest_xml_output_unittest.py	/^__author__ = 'eefacm@gmail.com (Sean Mcafee)'$/;"	v
__author__	src/tests/googletest/googletest/test/gtest_xml_test_utils.py	/^__author__ = 'eefacm@gmail.com (Sean Mcafee)'$/;"	v
__contains__	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    __contains__ = lambda self: False$/;"	m	class:_NullDict
__eq__	src/tests/googletest/googletest/scripts/pump.py	/^  def __eq__(self, rhs):$/;"	m	class:Cursor
__ge__	src/tests/googletest/googletest/scripts/pump.py	/^  def __ge__(self, rhs):$/;"	m	class:Cursor
__gt__	src/tests/googletest/googletest/scripts/pump.py	/^  def __gt__(self, rhs):$/;"	m	class:Cursor
__init__	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def __init__(self, namespace_stack):$/;"	m	class:TypeConverter
__init__	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def __init__(self, start, end):$/;"	m	class:Node
__init__	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def __init__(self, start, end, expr):$/;"	m	class:Expr
__init__	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def __init__(self, start, end, expr, namespace):$/;"	m	class:Friend
__init__	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def __init__(self, start, end, filename, system):$/;"	m	class:Include
__init__	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def __init__(self, start, end, label):$/;"	m	class:Goto
__init__	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def __init__(self, start, end, name, alias, namespace):$/;"	m	class:Typedef
__init__	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def __init__(self, start, end, name, bases, templated_types, body, namespace):$/;"	m	class:Class
__init__	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def __init__(self, start, end, name, definition):$/;"	m	class:Define
__init__	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def __init__(self, start, end, name, fields, namespace):$/;"	m	class:_NestedType
__init__	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def __init__(self, start, end, name, in_class, return_type, parameters,$/;"	m	class:Method
__init__	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def __init__(self, start, end, name, namespace):$/;"	m	class:_GenericDeclaration
__init__	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def __init__(self, start, end, name, parameter_type, default):$/;"	m	class:Parameter
__init__	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def __init__(self, start, end, name, return_type, parameters,$/;"	m	class:Function
__init__	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def __init__(self, start, end, name, templated_types, modifiers,$/;"	m	class:Type
__init__	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def __init__(self, start, end, name, var_type, initial_value, namespace):$/;"	m	class:VariableDeclaration
__init__	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def __init__(self, start, end, names):$/;"	m	class:Using
__init__	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def __init__(self, token_stream, filename, in_class='', visibility=None,$/;"	m	class:AstBuilder
__init__	src/tests/googletest/googlemock/scripts/generator/cpp/tokenize.py	/^    def __init__(self, token_type, name, start, end):$/;"	m	class:Token
__init__	src/tests/googletest/googlemock/scripts/upload.py	/^  def __init__(self, host, auth_function, host_override=None, extra_headers={},$/;"	m	class:AbstractRpcServer
__init__	src/tests/googletest/googlemock/scripts/upload.py	/^  def __init__(self, options):$/;"	m	class:GitVCS
__init__	src/tests/googletest/googlemock/scripts/upload.py	/^  def __init__(self, options):$/;"	m	class:SubversionVCS
__init__	src/tests/googletest/googlemock/scripts/upload.py	/^  def __init__(self, options):$/;"	m	class:VersionControlSystem
__init__	src/tests/googletest/googlemock/scripts/upload.py	/^  def __init__(self, options, repo_dir):$/;"	m	class:MercurialVCS
__init__	src/tests/googletest/googlemock/scripts/upload.py	/^  def __init__(self, url, code, msg, headers, args):$/;"	m	class:ClientLoginError
__init__	src/tests/googletest/googletest/scripts/pump.py	/^  def __init__(self):$/;"	m	class:Env
__init__	src/tests/googletest/googletest/scripts/pump.py	/^  def __init__(self):$/;"	m	class:Output
__init__	src/tests/googletest/googletest/scripts/pump.py	/^  def __init__(self, atomic_code_list=None):$/;"	m	class:CodeNode
__init__	src/tests/googletest/googletest/scripts/pump.py	/^  def __init__(self, else_branch=None):$/;"	m	class:ElseNode
__init__	src/tests/googletest/googletest/scripts/pump.py	/^  def __init__(self, exp=None, then_branch=None, else_branch=None):$/;"	m	class:IfNode
__init__	src/tests/googletest/googletest/scripts/pump.py	/^  def __init__(self, identifier=None, atomic_code=None):$/;"	m	class:VarNode
__init__	src/tests/googletest/googletest/scripts/pump.py	/^  def __init__(self, identifier=None, exp1=None, exp2=None):$/;"	m	class:RangeNode
__init__	src/tests/googletest/googletest/scripts/pump.py	/^  def __init__(self, identifier=None, sep=None, code=None):$/;"	m	class:ForNode
__init__	src/tests/googletest/googletest/scripts/pump.py	/^  def __init__(self, line=-1, column=-1):$/;"	m	class:Cursor
__init__	src/tests/googletest/googletest/scripts/pump.py	/^  def __init__(self, start=None, end=None, value=None, token_type=None):$/;"	m	class:Token
__init__	src/tests/googletest/googletest/scripts/pump.py	/^  def __init__(self, token):$/;"	m	class:LiteralDollarNode
__init__	src/tests/googletest/googletest/scripts/pump.py	/^  def __init__(self, token, python_exp):$/;"	m	class:ExpNode
__init__	src/tests/googletest/googletest/scripts/pump.py	/^  def __init__(self, token=None):$/;"	m	class:RawCodeNode
__init__	src/tests/googletest/googletest/scripts/release_docs.py	/^  def __init__(self, dot_version):$/;"	m	class:WikiBrancher
__init__	src/tests/googletest/googletest/scripts/upload.py	/^  def __init__(self, host, auth_function, host_override=None, extra_headers={},$/;"	m	class:AbstractRpcServer
__init__	src/tests/googletest/googletest/scripts/upload.py	/^  def __init__(self, options):$/;"	m	class:GitVCS
__init__	src/tests/googletest/googletest/scripts/upload.py	/^  def __init__(self, options):$/;"	m	class:SubversionVCS
__init__	src/tests/googletest/googletest/scripts/upload.py	/^  def __init__(self, options):$/;"	m	class:VersionControlSystem
__init__	src/tests/googletest/googletest/scripts/upload.py	/^  def __init__(self, options, repo_dir):$/;"	m	class:MercurialVCS
__init__	src/tests/googletest/googletest/scripts/upload.py	/^  def __init__(self, url, code, msg, headers, args):$/;"	m	class:ClientLoginError
__init__	src/tests/googletest/googletest/test/gtest_test_utils.py	/^  def __init__(self, command, working_dir=None, capture_stderr=True, env=None):$/;"	m	class:Subprocess
__le__	src/tests/googletest/googletest/scripts/pump.py	/^  def __le__(self, rhs):$/;"	m	class:Cursor
__lt__	src/tests/googletest/googletest/scripts/pump.py	/^  def __lt__(self, rhs):$/;"	m	class:Cursor
__ne__	src/tests/googletest/googletest/scripts/pump.py	/^  def __ne__(self, rhs):$/;"	m	class:Cursor
__read_word_lite	src/libtfhe-superaic-acc/accs/FPGA-V0/acc_fpga_v0.cpp	/^void FPGA_ACC_V0::__read_word_lite(uint32_t address, uint32_t & value) {$/;"	f	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:void
__repr__	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def __repr__(self):$/;"	m	class:Node
__repr__	src/tests/googletest/googlemock/scripts/generator/cpp/tokenize.py	/^    __repr__ = __str__$/;"	v	class:Token	file:
__str__	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def __str__(self):$/;"	m	class:Class
__str__	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def __str__(self):$/;"	m	class:Define
__str__	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def __str__(self):$/;"	m	class:Expr
__str__	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def __str__(self):$/;"	m	class:Function
__str__	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def __str__(self):$/;"	m	class:Goto
__str__	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def __str__(self):$/;"	m	class:Include
__str__	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def __str__(self):$/;"	m	class:Parameter
__str__	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def __str__(self):$/;"	m	class:Type
__str__	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def __str__(self):$/;"	m	class:Typedef
__str__	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def __str__(self):$/;"	m	class:Using
__str__	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def __str__(self):$/;"	m	class:VariableDeclaration
__str__	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def __str__(self):$/;"	m	class:_NestedType
__str__	src/tests/googletest/googlemock/scripts/generator/cpp/tokenize.py	/^    def __str__(self):$/;"	m	class:Token
__str__	src/tests/googletest/googletest/scripts/pump.py	/^  def __str__(self):$/;"	m	class:Cursor
__str__	src/tests/googletest/googletest/scripts/pump.py	/^  def __str__(self):$/;"	m	class:Token
__sub__	src/tests/googletest/googletest/scripts/pump.py	/^  def __sub__(self, offset):$/;"	m	class:Cursor
__type_traits	src/muduo/muduo/base/StringPiece.h	/^template<> struct __type_traits<muduo::StringPiece> {$/;"	s
__write_word_lite	src/libtfhe-superaic-acc/accs/FPGA-V0/acc_fpga_v0.cpp	/^void FPGA_ACC_V0::__write_word_lite(uint32_t address, uint32_t value) {$/;"	f	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:void
__write_word_mask_lite	src/libtfhe-superaic-acc/accs/FPGA-V0/acc_fpga_v0.cpp	/^void FPGA_ACC_V0::__write_word_mask_lite(uint32_t address, uint32_t value, uint32_t mask) {$/;"	f	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:void
_add_session	src/libtfhe-superaic-acc/tfhe_acc.cpp	/^void TFHE_ACC::_add_session(shared_ptr<Session> session)$/;"	f	class:tfhe_superaic::TFHE_ACC	typeref:typename:void
_add_session	src/libtfhe-superaic-core/tfhe_session.cpp	/^static void _add_session(shared_ptr<Session> session){$/;"	f	namespace:tfhe_superaic	typeref:typename:void	file:
_dummy	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class.py	/^  _dummy = set$/;"	v
_executors_mtx	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    mutex _executors_mtx;$/;"	m	class:tfhe_superaic::Executor_List	typeref:typename:mutex
_fft_transform	src/libtfhe-superaic-core/fft_processors/nayuki/fft-x8664-avx.s	/^	.globl	_fft_transform$/;"	s
_fft_transform	src/libtfhe-superaic-core/fft_processors/nayuki/fft-x8664-avx.s	/^_fft_transform:$/;"	l
_fft_transform_reverse	src/libtfhe-superaic-core/fft_processors/nayuki/fft-x8664-avx-reverse.s	/^	.globl	_fft_transform_reverse$/;"	s
_fft_transform_reverse	src/libtfhe-superaic-core/fft_processors/nayuki/fft-x8664-avx-reverse.s	/^_fft_transform_reverse:$/;"	l
_flag_map	src/tests/googletest/googletest/test/gtest_test_utils.py	/^_flag_map = {'source_dir': os.path.dirname(sys.argv[0]),$/;"	v
_get_session	src/libtfhe-superaic-acc/tfhe_acc.cpp	/^shared_ptr<Session> TFHE_ACC::_get_session(Session_ID_t sessionID)$/;"	f	class:tfhe_superaic::TFHE_ACC	typeref:typename:shared_ptr<Session>
_get_session	src/libtfhe-superaic-core/tfhe_session.cpp	/^static shared_ptr<Session> _get_session(Session_ID_t sessionID){$/;"	f	namespace:tfhe_superaic	typeref:typename:shared_ptr<Session>	file:
_gtest_flags_are_parsed	src/tests/googletest/googletest/test/gtest_test_utils.py	/^_gtest_flags_are_parsed = False$/;"	v
_letters	src/tests/googletest/googlemock/scripts/generator/cpp/tokenize.py	/^_letters = 'abcdefghijklmnopqrstuvwxyz'$/;"	v
_notFree	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    condition_variable _notFree;$/;"	m	class:tfhe_superaic::Executor_List	typeref:typename:condition_variable
_receive_proxy_pack	src/libtfhe-superaic-core/tfhe_package.cpp	/^TFHE_Comm_Pack_t * _receive_proxy_pack(int fd){$/;"	f	typeref:typename:TFHE_Comm_Pack_t *
_remove_session	src/libtfhe-superaic-acc/tfhe_acc.cpp	/^void TFHE_ACC::_remove_session(Session_ID_t sessionID)$/;"	f	class:tfhe_superaic::TFHE_ACC	typeref:typename:void
_remove_session	src/libtfhe-superaic-core/tfhe_session.cpp	/^static void _remove_session(Session_ID_t sessionID){$/;"	f	namespace:tfhe_superaic	typeref:typename:void	file:
_rmdir	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^int _rmdir(const char* path) {$/;"	f	namespace:testing::internal::__anon077d0c590111	typeref:typename:int
_temp_dir	src/tests/googletest/googletest/test/gtest_test_utils.py	/^_temp_dir = None$/;"	v
_test_module	src/tests/googletest/googletest/test/gtest_test_utils.py	/^_test_module = unittest$/;"	v
_tmain	src/tests/googletest/googlemock/src/gmock_main.cc	/^GTEST_API_ int _tmain(int argc, TCHAR** argv) {$/;"	f	typeref:typename:GTEST_API_ int
_two31	src/libtfhe-superaic-core/include/tfhe_superaic_torus.h	/^static const int64_t _two31 = INT64_C(1) << 31; \/\/ 2^31$/;"	v	typeref:typename:const int64_t
_two31_double	src/libtfhe-superaic-core/include/tfhe_superaic_torus.h	/^static const double _two31_double = _two31;$/;"	v	typeref:typename:const double
_two32	src/libtfhe-superaic-core/include/tfhe_superaic_torus.h	/^static const int64_t _two32 = INT64_C(1) << 32; \/\/ 2^32$/;"	v	typeref:typename:const int64_t
_two32_double	src/libtfhe-superaic-core/include/tfhe_superaic_torus.h	/^static const double _two32_double = _two32;$/;"	v	typeref:typename:const double
_use_fix_random	src/libtfhe-superaic-core/numeric-functions.cpp	/^bool _use_fix_random = true;$/;"	v	typeref:typename:bool
`/// let (client_key, server_key) = generate_keys(ConfigBuilder::default());`	docs/rustops/generic_integer_impl_operation.md	/^## `\/\/\/ let (client_key, server_key) = generate_keys(ConfigBuilder::default());`$/;"	s	chapter:`generic_integer_impl_operation`
`ClientKey::generate(config);`	docs/rustops/generic_integer_impl_operation.md	/^#### `ClientKey::generate(config);`$/;"	t	subsection:`generic_integer_impl_operation`""`/// let (client_key, server_key) = generate_keys(ConfigBuilder::default());`""`let (client_key, server_key) = generate_keys(config);`
`ClientKey::generate(config);`	docs/rustops/key_and_config.md	/^### `ClientKey::generate(config);`$/;"	S	section:generate key with default key""`generate_keys`
`ConfigBuilder::default()`	docs/rustops/generic_integer_impl_operation.md	/^### `ConfigBuilder::default()`$/;"	S	section:`generic_integer_impl_operation`""`/// let (client_key, server_key) = generate_keys(ConfigBuilder::default());`
`FheInt16::encrypt(23i16, &client_key);`	docs/rustops/encrypt.md	/^## `FheInt16::encrypt(23i16, &client_key);`$/;"	s	chapter:`encrypt`
`FheInt16::encrypt(23i16, &client_key)`	docs/message_encode_encrypt.md	/^## `FheInt16::encrypt(23i16, &client_key)`$/;"	s	chapter:message encode
`FheInt16::encrypt(23i16, &client_key)`	docs/rustops/encrypt_with_23i16.md	/^# `FheInt16::encrypt(23i16, &client_key)`$/;"	c
`FheInt16`	docs/rustops/generic_integer_impl_operation.md	/^### `FheInt16`$/;"	S	section:`generic_integer_impl_operation`""`let a = FheInt16::encrypt(23i16, &client_key);`
`Id::num_blocks(key.message_modulus())`	docs/rustops/encrypt.md	/^#### `Id::num_blocks(key.message_modulus())`$/;"	t	subsection:`encrypt`""`FheInt16::encrypt(23i16, &client_key);`""`encrypt_signed_radix(value, Id::num_blocks(key.message_modulus()));`
`IntegerClientKey::from(config.inner),`	docs/rustops/generic_integer_impl_operation.md	/^##### `IntegerClientKey::from(config.inner),`$/;"	T	subsubsection:`generic_integer_impl_operation`""`/// let (client_key, server_key) = generate_keys(ConfigBuilder::default());`""`let (client_key, server_key) = generate_keys(config);`""`ClientKey::generate(config);`
`IntegerConfig::default_big()`	docs/rustops/generic_integer_impl_operation.md	/^#### `IntegerConfig::default_big()`$/;"	t	subsection:`generic_integer_impl_operation`""`/// let (client_key, server_key) = generate_keys(ConfigBuilder::default());`""`ConfigBuilder::default()`
`Self::new(ciphertext, key.tag.clone())`	docs/rustops/encrypt.md	/^#### `Self::new(ciphertext, key.tag.clone())`$/;"	t	subsection:`encrypt`""`FheInt16::encrypt(23i16, &client_key);`""`try_encrypt(value: T, key: &Key) -> Result<Self, Self::Error>;`
`carry_extract`	docs/rustops/lookup_table.md	/^## `carry_extract`$/;"	s	chapter:`lookup_table`
`client_kc.generate_server_key();`	docs/rustops/key_and_config.md	/^### `client_kc.generate_server_key();`$/;"	S	section:generate key with default key""`generate_keys`
`crate::integer::ClientKey::new(config.block_parameters);`	docs/rustops/generic_integer_impl_operation.md	/^###### `crate::integer::ClientKey::new(config.block_parameters);`$/;"	u	l4subsection:`generic_integer_impl_operation`""`/// let (client_key, server_key) = generate_keys(ConfigBuilder::default());`""`let (client_key, server_key) = generate_keys(config);`""`ClientKey::generate(config);`""`IntegerClientKey::from(config.inner),`
`crate::shortint::ClientKey::encrypt`	docs/rustops/encrypt.md	/^##### `crate::shortint::ClientKey::encrypt`$/;"	T	subsubsection:`encrypt`""`FheInt16::encrypt(23i16, &client_key);`""`encrypt_signed_radix(value, Id::num_blocks(key.message_modulus()));`""`encrypt_words_radix_impl`
`create_integer_wrapper_type!(name: FheUint2, clear_scalar_type: u8);`	docs/rustops/generic_integer_impl_operation.md	/^#### `create_integer_wrapper_type!(name: FheUint2, clear_scalar_type: u8);`$/;"	t	subsection:`generic_integer_impl_operation`""`let a = FheInt16::encrypt(23i16, &client_key);`""`FheInt16`
`degree < MessageModulus`	docs/cipher_Add.md	/^### `degree < MessageModulus`$/;"	S	section:`ops::Add`""`result = &a + &b`
`degree >= MessageModulus`	docs/cipher_Add.md	/^### `degree >= MessageModulus`$/;"	S	section:`ops::Add`""`result = &a + &b`
`encrypt()`	docs/rustops/generic_integer_impl_operation.md	/^### `encrypt()`$/;"	S	section:`generic_integer_impl_operation`""`let a = FheInt16::encrypt(23i16, &client_key);`
`encrypt_signed_radix(value, Id::num_blocks(key.message_modulus()));`	docs/rustops/encrypt.md	/^### `encrypt_signed_radix(value, Id::num_blocks(key.message_modulus()));`$/;"	S	section:`encrypt`""`FheInt16::encrypt(23i16, &client_key);`
`encrypt_signed_radix`	docs/rustops/encrypt.md	/^#### `encrypt_signed_radix`$/;"	t	subsection:`encrypt`""`FheInt16::encrypt(23i16, &client_key);`""`encrypt_signed_radix(value, Id::num_blocks(key.message_modulus()));`
`encrypt_words_radix_impl`	docs/rustops/encrypt.md	/^#### `encrypt_words_radix_impl`$/;"	t	subsection:`encrypt`""`FheInt16::encrypt(23i16, &client_key);`""`encrypt_signed_radix(value, Id::num_blocks(key.message_modulus()));`
`encrypt`	docs/rustops/encrypt.md	/^# `encrypt`$/;"	c
`generate_keys`	docs/rustops/key_and_config.md	/^## `generate_keys`$/;"	s	chapter:generate key with default key
`generate_lookup_table`	docs/rustops/ops_add.md	/^### `generate_lookup_table`$/;"	S	section:`ops::Add`""`let result = &a + &b;`
`generic_integer_impl_operation`	docs/rustops/generic_integer_impl_operation.md	/^# `generic_integer_impl_operation`$/;"	c
`generic_integer_impl_scalar_div_rem!`	docs/rustops/generic_integer_impl_operation.md	/^#### `generic_integer_impl_scalar_div_rem!`$/;"	t	subsection:`generic_integer_impl_operation`""`let a = FheInt16::encrypt(23i16, &client_key);`""`FheInt16`
`key.message_modulus()`	docs/rustops/encrypt.md	/^##### `key.message_modulus()`$/;"	T	subsubsection:`encrypt`""`FheInt16::encrypt(23i16, &client_key);`""`encrypt_signed_radix(value, Id::num_blocks(key.message_modulus()));`""`Id::num_blocks(key.message_modulus())`
`let (client_key, server_key) = generate_keys(config);`	docs/rustops/generic_integer_impl_operation.md	/^### `let (client_key, server_key) = generate_keys(config);`$/;"	S	section:`generic_integer_impl_operation`""`/// let (client_key, server_key) = generate_keys(ConfigBuilder::default());`
`let a = FheInt16::encrypt(23i16, &client_key);`	docs/rustops/generic_integer_impl_operation.md	/^## `let a = FheInt16::encrypt(23i16, &client_key);`$/;"	s	chapter:`generic_integer_impl_operation`
`let result = &a + &b;`	docs/rustops/ops_add.md	/^## `let result = &a + &b;`$/;"	s	chapter:`ops::Add`
`let result = &a + &b;`	docs/rustops/summary_of_ops_add.md	/^## `let result = &a + &b;`$/;"	s	chapter:add
`let result: i16 = result.decrypt(&client_key);`	docs/rustops/decrypt.md	/^## `let result: i16 = result.decrypt(&client_key);`$/;"	s	chapter:decrypt
`lookup_table`	docs/rustops/lookup_table.md	/^# `lookup_table`$/;"	c
`message_extract`	docs/rustops/lookup_table.md	/^## `message_extract`$/;"	s	chapter:`lookup_table`
`ops::Add`	docs/cipher_Add.md	/^# `ops::Add`$/;"	c
`ops::Add`	docs/rustops/ops_add.md	/^# `ops::Add`$/;"	c
`pub(in crate::high_level_api) ciphertext: RadixCiphertext,`	docs/rustops/encrypt.md	/^##### `pub(in crate::high_level_api) ciphertext: RadixCiphertext,`$/;"	T	subsubsection:`encrypt`""`FheInt16::encrypt(23i16, &client_key);`""`try_encrypt(value: T, key: &Key) -> Result<Self, Self::Error>;`""`Self::new(ciphertext, key.tag.clone())`
`result = &a + &b`	docs/cipher_Add.md	/^## `result = &a + &b`$/;"	s	chapter:`ops::Add`
`set_server_key(server_key);`	docs/rustops/generic_integer_impl_operation.md	/^## `set_server_key(server_key);`$/;"	s	chapter:`generic_integer_impl_operation`
`src/high_level_api/traits.rs`	docs/rustops/generic_integer_impl_operation.md	/^#### `src\/high_level_api\/traits.rs`$/;"	t	subsection:`generic_integer_impl_operation`""`let a = FheInt16::encrypt(23i16, &client_key);`""`encrypt()`
`try_encrypt(value: T, key: &Key) -> Result<Self, Self::Error>;`	docs/rustops/encrypt.md	/^### `try_encrypt(value: T, key: &Key) -> Result<Self, Self::Error>;`$/;"	S	section:`encrypt`""`FheInt16::encrypt(23i16, &client_key);`
a	src/libtfhe-superaic-core/include/lwesamples.h	/^	Torus32* a; \/\/-- the n coefs of the mask$/;"	m	struct:LweSample	typeref:typename:Torus32 *
a	src/libtfhe-superaic-core/include/tlwe.h	/^    LagrangeHalfCPolynomial *a; \/\/\/< array of length k+1: mask + right term$/;"	m	struct:TLweSampleFFT	typeref:typename:LagrangeHalfCPolynomial *
a	src/libtfhe-superaic-core/include/tlwe.h	/^    TorusPolynomial *a; \/\/\/< array of length k+1: mask + right term$/;"	m	struct:TLweSample	typeref:typename:TorusPolynomial *
a/CMakeLists.txt	src/muduo/patches/MacOSX.diff	/^--- a\/CMakeLists.txt$/;"	m
a/CMakeLists.txt	src/muduo/patches/armlinux.diff	/^--- a\/CMakeLists.txt$/;"	m
a/CMakeLists.txt	src/muduo/patches/backport.diff	/^--- a\/CMakeLists.txt$/;"	m
a/examples/idleconnection/CMakeLists.txt	src/muduo/patches/backport.diff	/^--- a\/examples\/idleconnection\/CMakeLists.txt$/;"	m
a/examples/protobuf/rpcbalancer/balancer_raw.cc	src/muduo/patches/MacOSX.diff	/^--- a\/examples\/protobuf\/rpcbalancer\/balancer_raw.cc$/;"	m
a/examples/roundtrip/roundtrip_udp.cc	src/muduo/patches/MacOSX.diff	/^--- a\/examples\/roundtrip\/roundtrip_udp.cc$/;"	m
a/examples/socks4a/tcprelay.cc	src/muduo/patches/MacOSX.diff	/^--- a\/examples\/socks4a\/tcprelay.cc$/;"	m
a/muduo/base/Atomic.h	src/muduo/patches/armlinux.diff	/^--- a\/muduo\/base\/Atomic.h$/;"	m
a/muduo/base/CMakeLists.txt	src/muduo/patches/MacOSX.diff	/^--- a\/muduo\/base\/CMakeLists.txt$/;"	m
a/muduo/base/Condition.cc	src/muduo/patches/MacOSX.diff	/^--- a\/muduo\/base\/Condition.cc$/;"	m
a/muduo/base/FileUtil.cc	src/muduo/patches/MacOSX.diff	/^--- a\/muduo\/base\/FileUtil.cc$/;"	m
a/muduo/base/Logging.cc	src/muduo/patches/MacOSX.diff	/^--- a\/muduo\/base\/Logging.cc$/;"	m
a/muduo/base/Thread.cc	src/muduo/patches/MacOSX.diff	/^--- a\/muduo\/base\/Thread.cc$/;"	m
a/muduo/base/TimeZone.cc	src/muduo/patches/MacOSX.diff	/^--- a\/muduo\/base\/TimeZone.cc$/;"	m
a/muduo/base/Timestamp.cc	src/muduo/patches/backport.diff	/^--- a\/muduo\/base\/Timestamp.cc$/;"	m
a/muduo/base/tests/AsyncLogging_test.cc	src/muduo/patches/MacOSX.diff	/^--- a\/muduo\/base\/tests\/AsyncLogging_test.cc$/;"	m
a/muduo/base/tests/BlockingQueue_test.cc	src/muduo/patches/MacOSX.diff	/^--- a\/muduo\/base\/tests\/BlockingQueue_test.cc$/;"	m
a/muduo/base/tests/CMakeLists.txt	src/muduo/patches/armlinux.diff	/^--- a\/muduo\/base\/tests\/CMakeLists.txt$/;"	m
a/muduo/base/tests/CMakeLists.txt	src/muduo/patches/backport.diff	/^--- a\/muduo\/base\/tests\/CMakeLists.txt$/;"	m
a/muduo/base/tests/GzipFile_test.cc	src/muduo/patches/MacOSX.diff	/^--- a\/muduo\/base\/tests\/GzipFile_test.cc$/;"	m
a/muduo/base/tests/LogFile_test.cc	src/muduo/patches/MacOSX.diff	/^--- a\/muduo\/base\/tests\/LogFile_test.cc$/;"	m
a/muduo/net/CMakeLists.txt	src/muduo/patches/MacOSX.diff	/^--- a\/muduo\/net\/CMakeLists.txt$/;"	m
a/muduo/net/Channel.cc	src/muduo/patches/MacOSX.diff	/^--- a\/muduo\/net\/Channel.cc$/;"	m
a/muduo/net/Channel.cc	src/muduo/patches/backport.diff	/^--- a\/muduo\/net\/Channel.cc$/;"	m
a/muduo/net/Endian.h	src/muduo/patches/MacOSX.diff	/^--- a\/muduo\/net\/Endian.h$/;"	m
a/muduo/net/Endian.h	src/muduo/patches/backport.diff	/^--- a\/muduo\/net\/Endian.h$/;"	m
a/muduo/net/EventLoop.cc	src/muduo/patches/MacOSX.diff	/^--- a\/muduo\/net\/EventLoop.cc$/;"	m
a/muduo/net/EventLoop.cc	src/muduo/patches/backport.diff	/^--- a\/muduo\/net\/EventLoop.cc$/;"	m
a/muduo/net/EventLoop.h	src/muduo/patches/MacOSX.diff	/^--- a\/muduo\/net\/EventLoop.h$/;"	m
a/muduo/net/EventLoop.h	src/muduo/patches/backport.diff	/^--- a\/muduo\/net\/EventLoop.h$/;"	m
a/muduo/net/InetAddress.cc	src/muduo/patches/MacOSX.diff	/^--- a\/muduo\/net\/InetAddress.cc$/;"	m
a/muduo/net/InetAddress.cc	src/muduo/patches/backport.diff	/^--- a\/muduo\/net\/InetAddress.cc$/;"	m
a/muduo/net/Socket.cc	src/muduo/patches/MacOSX.diff	/^--- a\/muduo\/net\/Socket.cc$/;"	m
a/muduo/net/SocketsOps.cc	src/muduo/patches/MacOSX.diff	/^--- a\/muduo\/net\/SocketsOps.cc$/;"	m
a/muduo/net/SocketsOps.cc	src/muduo/patches/backport.diff	/^--- a\/muduo\/net\/SocketsOps.cc$/;"	m
a/muduo/net/SocketsOps.h	src/muduo/patches/MacOSX.diff	/^--- a\/muduo\/net\/SocketsOps.h$/;"	m
a/muduo/net/SocketsOps.h	src/muduo/patches/backport.diff	/^--- a\/muduo\/net\/SocketsOps.h$/;"	m
a/muduo/net/TimerQueue.cc	src/muduo/patches/MacOSX.diff	/^--- a\/muduo\/net\/TimerQueue.cc$/;"	m
a/muduo/net/TimerQueue.cc	src/muduo/patches/backport.diff	/^--- a\/muduo\/net\/TimerQueue.cc$/;"	m
a/muduo/net/TimerQueue.h	src/muduo/patches/MacOSX.diff	/^--- a\/muduo\/net\/TimerQueue.h$/;"	m
a/muduo/net/TimerQueue.h	src/muduo/patches/backport.diff	/^--- a\/muduo\/net\/TimerQueue.h$/;"	m
a/muduo/net/poller/DefaultPoller.cc	src/muduo/patches/MacOSX.diff	/^--- a\/muduo\/net\/poller\/DefaultPoller.cc$/;"	m
a/muduo/net/poller/EPollPoller.cc	src/muduo/patches/backport.diff	/^--- a\/muduo\/net\/poller\/EPollPoller.cc$/;"	m
a_	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^  MockA a_;$/;"	m	class:__anon6b6cf3b20111::PartialOrderTest	typeref:typename:MockA	file:
a_	src/tests/googletest/googletest/test/gtest-tuple_test.cc	/^  BigTuple a_, b_;$/;"	m	class:__anona47613760111::BigTupleTest	typeref:typename:BigTuple	file:
a_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static int a_;$/;"	m	class:__anonf780395f0111::SingleEvaluationTest	typeref:typename:int	file:
a_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^int SingleEvaluationTest::a_;$/;"	m	class:__anonf780395f0111::SingleEvaluationTest	typeref:typename:int
abbreviation	src/muduo/muduo/base/TimeZone.cc	/^  string abbreviation;$/;"	m	struct:TimeZone::Data	typeref:typename:string	file:
abortNotInLoopThread	src/muduo/muduo/net/EventLoop.cc	/^void EventLoop::abortNotInLoopThread()$/;"	f	class:EventLoop	typeref:typename:void
abort_args_	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  std::vector<DeathTest::AbortReason> abort_args_;$/;"	m	class:MockDeathTestFactory	typeref:typename:std::vector<DeathTest::AbortReason>	file:
absfrac	src/tests/lwe_test.cpp	/^    double absfrac(double d) { return abs(d - rint(d)); }$/;"	f	namespace:__anonc84148b60111	typeref:typename:double
absfrac	src/tests/small_size_test.cpp	/^    double absfrac(double d) { return abs(d - rint(d)); }$/;"	f	namespace:__anon9baab4410111	typeref:typename:double
absfrac	src/tests/tlwe_test.cpp	/^    double absfrac(double d) { return abs(d - rint(d)); }$/;"	f	namespace:__anonc028f2ea0111	typeref:typename:double
accept	src/muduo/muduo/net/Socket.cc	/^int Socket::accept(InetAddress* peeraddr)$/;"	f	class:Socket	typeref:typename:int
accept	src/muduo/muduo/net/SocketsOps.cc	/^int sockets::accept(int sockfd, struct sockaddr_in6* addr)$/;"	f	class:sockets	typeref:typename:int
acceptChannel_	src/muduo/muduo/net/Acceptor.h	/^  Channel acceptChannel_;$/;"	m	class:muduo::net::Acceptor	typeref:typename:Channel
acceptOrDie	src/muduo/examples/ace/ttcp/ttcp_blocking.cc	/^static int acceptOrDie(uint16_t port)$/;"	f	typeref:typename:int	file:
acceptRanges_	src/muduo/examples/curl/download.cc	/^  bool acceptRanges_;$/;"	m	class:Downloader	typeref:typename:bool	file:
acceptSocket_	src/muduo/muduo/net/Acceptor.h	/^  Socket acceptSocket_;$/;"	m	class:muduo::net::Acceptor	typeref:typename:Socket
acceptor_	src/muduo/muduo/net/TcpServer.h	/^  std::unique_ptr<Acceptor> acceptor_; \/\/ avoid revealing Acceptor$/;"	m	class:muduo::net::TcpServer	typeref:typename:std::unique_ptr<Acceptor>
accs/CPU-ser/acc_cpu_ser.cpp.i	buildotests/libtfhe-superaic-acc/Makefile	/^accs\/CPU-ser\/acc_cpu_ser.cpp.i:$/;"	t
accs/CPU-ser/acc_cpu_ser.cpp.o	buildotests/libtfhe-superaic-acc/Makefile	/^accs\/CPU-ser\/acc_cpu_ser.cpp.o:$/;"	t
accs/CPU-ser/acc_cpu_ser.cpp.s	buildotests/libtfhe-superaic-acc/Makefile	/^accs\/CPU-ser\/acc_cpu_ser.cpp.s:$/;"	t
accs/CPU-ser/acc_cpu_ser.i	buildotests/libtfhe-superaic-acc/Makefile	/^accs\/CPU-ser\/acc_cpu_ser.i: accs\/CPU-ser\/acc_cpu_ser.cpp.i$/;"	t
accs/CPU-ser/acc_cpu_ser.o	buildotests/libtfhe-superaic-acc/Makefile	/^accs\/CPU-ser\/acc_cpu_ser.o: accs\/CPU-ser\/acc_cpu_ser.cpp.o$/;"	t
accs/CPU-ser/acc_cpu_ser.s	buildotests/libtfhe-superaic-acc/Makefile	/^accs\/CPU-ser\/acc_cpu_ser.s: accs\/CPU-ser\/acc_cpu_ser.cpp.s$/;"	t
accs/FPGA-V0/acc_fpga_v0.cpp.i	buildotests/libtfhe-superaic-acc/Makefile	/^accs\/FPGA-V0\/acc_fpga_v0.cpp.i:$/;"	t
accs/FPGA-V0/acc_fpga_v0.cpp.o	buildotests/libtfhe-superaic-acc/Makefile	/^accs\/FPGA-V0\/acc_fpga_v0.cpp.o:$/;"	t
accs/FPGA-V0/acc_fpga_v0.cpp.s	buildotests/libtfhe-superaic-acc/Makefile	/^accs\/FPGA-V0\/acc_fpga_v0.cpp.s:$/;"	t
accs/FPGA-V0/acc_fpga_v0.i	buildotests/libtfhe-superaic-acc/Makefile	/^accs\/FPGA-V0\/acc_fpga_v0.i: accs\/FPGA-V0\/acc_fpga_v0.cpp.i$/;"	t
accs/FPGA-V0/acc_fpga_v0.o	buildotests/libtfhe-superaic-acc/Makefile	/^accs\/FPGA-V0\/acc_fpga_v0.o: accs\/FPGA-V0\/acc_fpga_v0.cpp.o$/;"	t
accs/FPGA-V0/acc_fpga_v0.s	buildotests/libtfhe-superaic-acc/Makefile	/^accs\/FPGA-V0\/acc_fpga_v0.s: accs\/FPGA-V0\/acc_fpga_v0.cpp.s$/;"	t
accs/QEMU-V0/acc_qemu_v0.cpp.i	buildotests/libtfhe-superaic-acc/Makefile	/^accs\/QEMU-V0\/acc_qemu_v0.cpp.i:$/;"	t
accs/QEMU-V0/acc_qemu_v0.cpp.o	buildotests/libtfhe-superaic-acc/Makefile	/^accs\/QEMU-V0\/acc_qemu_v0.cpp.o:$/;"	t
accs/QEMU-V0/acc_qemu_v0.cpp.s	buildotests/libtfhe-superaic-acc/Makefile	/^accs\/QEMU-V0\/acc_qemu_v0.cpp.s:$/;"	t
accs/QEMU-V0/acc_qemu_v0.i	buildotests/libtfhe-superaic-acc/Makefile	/^accs\/QEMU-V0\/acc_qemu_v0.i: accs\/QEMU-V0\/acc_qemu_v0.cpp.i$/;"	t
accs/QEMU-V0/acc_qemu_v0.o	buildotests/libtfhe-superaic-acc/Makefile	/^accs\/QEMU-V0\/acc_qemu_v0.o: accs\/QEMU-V0\/acc_qemu_v0.cpp.o$/;"	t
accs/QEMU-V0/acc_qemu_v0.s	buildotests/libtfhe-superaic-acc/Makefile	/^accs\/QEMU-V0\/acc_qemu_v0.s: accs\/QEMU-V0\/acc_qemu_v0.cpp.s$/;"	t
accs/executor.cpp.i	buildotests/libtfhe-superaic-acc/Makefile	/^accs\/executor.cpp.i:$/;"	t
accs/executor.cpp.o	buildotests/libtfhe-superaic-acc/Makefile	/^accs\/executor.cpp.o:$/;"	t
accs/executor.cpp.s	buildotests/libtfhe-superaic-acc/Makefile	/^accs\/executor.cpp.s:$/;"	t
accs/executor.i	buildotests/libtfhe-superaic-acc/Makefile	/^accs\/executor.i: accs\/executor.cpp.i$/;"	t
accs/executor.o	buildotests/libtfhe-superaic-acc/Makefile	/^accs\/executor.o: accs\/executor.cpp.o$/;"	t
accs/executor.s	buildotests/libtfhe-superaic-acc/Makefile	/^accs\/executor.s: accs\/executor.cpp.s$/;"	t
accum_params	src/libtfhe-superaic-core/include/lwebootstrappingkey.h	/^    const TLweParams* accum_params; \/\/\/< params of the accum variable key: s"$/;"	m	struct:LweBootstrappingKey	typeref:typename:const TLweParams *
accum_params	src/libtfhe-superaic-core/include/lwebootstrappingkey.h	/^    const TLweParams* accum_params; \/\/\/< params of the accum variable key: s"$/;"	m	struct:LweBootstrappingKeyFFT	typeref:typename:const TLweParams *
accum_params	src/tests/bootstrapping_classic_PBS_parameters_test.cpp	/^    const TLweParams *accum_params = new_TLweParams(N, k, plaintext_modulus, alpha_bk, 1. \/ 16./;"	v	namespace:__anon8153b4f20111	typeref:typename:const TLweParams *
accum_params	src/tests/bootstrapping_direct_test.cpp	/^    const TLweParams *accum_params = new_TLweParams(N, k, plaintext_modulus, alpha_bk, 1. \/ 16./;"	v	namespace:__anon560166140111	typeref:typename:const TLweParams *
accum_params	src/tests/bootstrapping_test.cpp	/^    const TLweParams *accum_params = new_TLweParams(N, k, plaintext_modulus, alpha_bk, 1. \/ 16./;"	v	namespace:__anonf36cd29a0111	typeref:typename:const TLweParams *
accum_params	src/tests/decrypt_with_plaintext_modulus.cpp	/^    const TLweParams *accum_params = new_TLweParams(N, k, plaintext_modulus, alpha_bsk, 1. \/ MA/;"	v	namespace:__anondb55d4a50111	typeref:typename:const TLweParams *
accum_params	src/tests/fakes/lwe-bootstrapping-fft.h	/^        const TLweParams *accum_params; \/\/\/< params of the accum variable key: s"$/;"	m	struct:__anonaae24d1b0111::FakeLweBootstrappingKeyFFT	typeref:typename:const TLweParams *
accum_params	src/tests/fakes/lwe-bootstrapping.h	/^        const TLweParams *accum_params; \/\/\/< params of the accum variable key: s"$/;"	m	struct:__anon027fcd4e0111::FakeLweBootstrappingKey	typeref:typename:const TLweParams *
accum_params	src/tests/macros_decrypt_with_plaintext_modulus_macros.cpp	/^    const TLweParams *accum_params = new_TLweParams(N, k, plaintext_modulus, alpha_bk, 1. \/ MAX/;"	v	namespace:__anon478224cd0111	typeref:typename:const TLweParams *
accum_params	src/tests/macros_modSwitch_with_plaintext_modulus_macros.cpp	/^    const TLweParams *accum_params = new_TLweParams(N, k, plaintext_modulus, alpha_bk, 1. \/ MAX/;"	v	namespace:__anon4cdaee640111	typeref:typename:const TLweParams *
accum_params	src/tests/ops_add.cpp	/^    const TLweParams *accum_params = new_TLweParams(N, k, plaintext_modulus, alpha_bk, 1. \/ MAX/;"	v	namespace:__anonb1f413890111	typeref:typename:const TLweParams *
accum_params	src/tests/ops_add_with_carry.cpp	/^    const TLweParams *accum_params = new_TLweParams(N, k, plaintext_modulus, alpha_bk, 1. \/ MAX/;"	v	namespace:__anon662e63c40111	typeref:typename:const TLweParams *
accum_params	src/tests/zpf_for_bootstrap_detail.cpp	/^    const TLweParams *accum_params = new_TLweParams(N, k, plaintext_modulus, alpha_bk, 1. \/ MAX/;"	v	namespace:__anonc07144f40111	typeref:typename:const TLweParams *
accurate_sine	src/libtfhe-superaic-core/fft_processors/nayuki/fft-x8664-avx-aux.c	/^static double accurate_sine(uint64_t i, uint64_t n) {$/;"	f	typeref:typename:double	file:
ace_logging_client	src/muduo/examples/ace/logging/CMakeLists.txt	/^add_executable(ace_logging_client client.cc)$/;"	t
ace_logging_proto	src/muduo/examples/ace/logging/CMakeLists.txt	/^add_library(ace_logging_proto logrecord.pb.cc)$/;"	t
ace_logging_server	src/muduo/examples/ace/logging/CMakeLists.txt	/^add_executable(ace_logging_server server.cc)$/;"	t
ack_	src/muduo/examples/ace/ttcp/ttcp_asio_async.cc	/^  int32_t ack_;$/;"	m	class:TtcpServerConnection	typeref:typename:int32_t	file:
acked_	src/muduo/examples/memcached/client/bench.cc	/^  int acked_;$/;"	m	class:Client	typeref:typename:int	file:
action1_	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    const Action<VoidResult> action1_;$/;"	m	class:testing::internal::DoBothAction::Impl	typeref:typename:const Action<VoidResult>
action1_	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  Action1 action1_;$/;"	m	class:testing::internal::DoBothAction	typeref:typename:Action1
action2_	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    const Action<F> action2_;$/;"	m	class:testing::internal::DoBothAction::Impl	typeref:typename:const Action<F>
action2_	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  Action2 action2_;$/;"	m	class:testing::internal::DoBothAction	typeref:typename:Action2
action_	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    const Action<OriginalFunction> action_;$/;"	m	class:testing::internal::IgnoreResultAction::Impl	typeref:typename:const Action<OriginalFunction>
action_	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  const A action_;$/;"	m	class:testing::internal::IgnoreResultAction	typeref:typename:const A
action_	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^    Action<InnerFunctionType> action_;$/;"	m	class:testing::internal::WithArgsAction::Impl	typeref:typename:Action<InnerFunctionType>
action_	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^  const InnerAction action_;$/;"	m	class:testing::internal::WithArgsAction	typeref:typename:const InnerAction
action_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  Action<F> action_;$/;"	m	class:testing::internal::OnCallSpec	typeref:typename:Action<F>
action_count_checked_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  mutable bool action_count_checked_;  \/\/ Under mutex_.$/;"	m	class:testing::internal::ExpectationBase	typeref:typename:bool
action_test	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^namespace action_test {$/;"	n	namespace:testing::gmock_generated_actions_test	file:
activeChannels_	src/muduo/muduo/net/EventLoop.h	/^  ChannelList activeChannels_;$/;"	m	class:muduo::net::EventLoop	typeref:typename:ChannelList
activeTimers_	src/muduo/muduo/net/TimerQueue.h	/^  ActiveTimerSet activeTimers_;$/;"	m	class:muduo::net::TimerQueue	typeref:typename:ActiveTimerSet
ad_hoc_test_result	src/tests/googletest/googletest/include/gtest/gtest.h	/^  const TestResult& ad_hoc_test_result() const { return ad_hoc_test_result_; }$/;"	f	class:testing::TestCase	typeref:typename:const TestResult &
ad_hoc_test_result	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  const TestResult* ad_hoc_test_result() const { return &ad_hoc_test_result_; }$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:const TestResult *
ad_hoc_test_result	src/tests/googletest/googletest/src/gtest.cc	/^const TestResult& UnitTest::ad_hoc_test_result() const {$/;"	f	class:testing::UnitTest	typeref:typename:const TestResult &
ad_hoc_test_result_	src/tests/googletest/googletest/include/gtest/gtest.h	/^  TestResult ad_hoc_test_result_;$/;"	m	class:testing::TestCase	typeref:typename:TestResult
ad_hoc_test_result_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  TestResult ad_hoc_test_result_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:TestResult
add	docs/rustops/summary_of_ops_add.md	/^# add$/;"	c
add	src/muduo/examples/hub/hub.cc	/^  void add(const TcpConnectionPtr& conn)$/;"	f	class:pubsub::Topic	typeref:typename:void	file:
add	src/muduo/muduo/base/Atomic.h	/^  void add(T x)$/;"	f	class:muduo::detail::AtomicIntegerT	typeref:typename:void
add	src/muduo/muduo/base/LogStream.h	/^  void add(size_t len) { cur_ += len; }$/;"	f	class:muduo::detail::FixedBuffer	typeref:typename:void
add	src/muduo/muduo/net/inspect/Inspector.cc	/^void Inspector::add(const string& module,$/;"	f	class:Inspector	typeref:typename:void
addAndGet	src/muduo/muduo/base/Atomic.h	/^  T addAndGet(T x)$/;"	f	class:muduo::detail::AtomicIntegerT	typeref:typename:T
addHeader	src/muduo/muduo/net/http/HttpRequest.h	/^  void addHeader(const char* start, const char* colon, const char* end)$/;"	f	class:muduo::net::HttpRequest	typeref:typename:void
addHeader	src/muduo/muduo/net/http/HttpResponse.h	/^  void addHeader(const string& key, const string& value)$/;"	f	class:muduo::net::HttpResponse	typeref:typename:void
addLocalTime	src/muduo/muduo/base/TimeZone.cc	/^  void addLocalTime(int32_t utcOffset, bool isDst, int desigIdx)$/;"	f	struct:TimeZone::Data	typeref:typename:void	file:
addRead	src/muduo/contrib/hiredis/Hiredis.cc	/^void Hiredis::addRead(void* privdata)$/;"	f	class:Hiredis	typeref:typename:void
addTestCase	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MultiplexerTest.java	/^    private void addTestCase(TestCase testCase) {$/;"	m	class:MultiplexerTest	file:
addTime	src/muduo/muduo/base/Timestamp.h	/^inline Timestamp addTime(Timestamp timestamp, double seconds)$/;"	f	namespace:muduo	typeref:typename:Timestamp
addTimer	src/muduo/muduo/net/TimerQueue.cc	/^TimerId TimerQueue::addTimer(TimerCallback cb,$/;"	f	class:TimerQueue	typeref:typename:TimerId
addTimerInLoop	src/muduo/muduo/net/TimerQueue.cc	/^void TimerQueue::addTimerInLoop(Timer* timer)$/;"	f	class:TimerQueue	typeref:typename:void
addTransition	src/muduo/muduo/base/TimeZone.cc	/^  void addTransition(int64_t utcTime, int localtimeIdx)$/;"	f	struct:TimeZone::Data	typeref:typename:void	file:
addWrite	src/muduo/contrib/hiredis/Hiredis.cc	/^void Hiredis::addWrite(void* privdata)$/;"	f	class:Hiredis	typeref:typename:void
add_and_sleep	src/tests/FPGA_ACC_test.cpp	/^    int add_and_sleep(Executor_List &list,int a, int b, int * result) {$/;"	f	namespace:__anon88d438720111	typeref:typename:int
add_session	src/libtfhe-superaic-acc/tfhe_acc.cpp	/^void TFHE_ACC::add_session(shared_ptr<Session> session)$/;"	f	class:tfhe_superaic::TFHE_ACC	typeref:typename:void
add_session	src/libtfhe-superaic-core/tfhe_session.cpp	/^void add_session(shared_ptr<Session> session){$/;"	f	namespace:tfhe_superaic	typeref:typename:void
addedToLoop_	src/muduo/muduo/net/Channel.h	/^  bool addedToLoop_;$/;"	m	class:muduo::net::Channel	typeref:typename:bool
addr6_	src/muduo/muduo/net/InetAddress.h	/^    struct sockaddr_in6 addr6_;$/;"	m	union:muduo::net::InetAddress::__anond7472e30010a	typeref:struct:sockaddr_in6
addr_	src/muduo/muduo/net/InetAddress.h	/^    struct sockaddr_in addr_;$/;"	m	union:muduo::net::InetAddress::__anond7472e30010a	typeref:struct:sockaddr_in
address	src/muduo/examples/protobuf/resolver/resolver.proto	/^  required string address = 1;$/;"	f	message:resolver.ResolveRequest	typeref:typename:string
address_	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  static T* address_;$/;"	m	class:testing::DefaultValue	typeref:typename:T *
address_	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^T* DefaultValue<T&>::address_ = NULL;$/;"	m	class:testing::DefaultValue<T&>	typeref:typename:T *
adds_	src/tests/googletest/googletest/src/gtest.cc	/^  size_t adds_, removes_, common_;$/;"	m	class:testing::internal::edit_distance::__anon3f29b7680211::Hunk	typeref:typename:size_t	file:
adl_test	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^namespace adl_test {$/;"	n	namespace:__anoncaf4ae130111	file:
after	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^IntAfterTypedTestCaseP after = 0;$/;"	v	typeref:typename:IntAfterTypedTestCaseP
afterFork	src/muduo/muduo/base/Thread.cc	/^void afterFork()$/;"	f	namespace:muduo::detail	typeref:typename:void
all	Makefile	/^all: build$/;"	t
all	buildotests/Makefile	/^all: cmake_check_build_system$/;"	t
all	buildotests/driver/Makefile	/^all: cmake_check_build_system$/;"	t
all	buildotests/examples/Makefile	/^all: cmake_check_build_system$/;"	t
all	buildotests/libtfhe-superaic-acc/Makefile	/^all: cmake_check_build_system$/;"	t
all	buildotests/libtfhe-superaic-client/Makefile	/^all: cmake_check_build_system$/;"	t
all	buildotests/libtfhe-superaic-core/Makefile	/^all: cmake_check_build_system$/;"	t
all	buildotests/libtfhe-superaic-core/fft_processors/Makefile	/^all: cmake_check_build_system$/;"	t
all	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^all: cmake_check_build_system$/;"	t
all	buildotests/libtfhe-superaic-server/Makefile	/^all: cmake_check_build_system$/;"	t
all	buildotests/tests/Makefile	/^all: cmake_check_build_system$/;"	t
all	buildotests/tests/googletest/Makefile	/^all: cmake_check_build_system$/;"	t
all	buildotests/tests/googletest/googlemock/Makefile	/^all: cmake_check_build_system$/;"	t
all	buildotests/tests/googletest/googlemock/gtest/Makefile	/^all: cmake_check_build_system$/;"	t
all	src/tests/googletest/googlemock/make/Makefile	/^all : $(TESTS)$/;"	t
all	src/tests/googletest/googletest/make/Makefile	/^all : $(TESTS)$/;"	t
all	src/tests/googletest/googletest/scripts/test/Makefile	/^all : sample1_unittest$/;"	t
allConnected_	src/muduo/examples/protobuf/rpcbench/client.cc	/^  CountDownLatch* allConnected_;$/;"	m	class:RpcClient	typeref:typename:CountDownLatch *	file:
allFinished_	src/muduo/examples/protobuf/rpcbench/client.cc	/^  CountDownLatch* allFinished_;$/;"	m	class:RpcClient	typeref:typename:CountDownLatch *	file:
all_keys	src/tests/lwe_test.cpp	/^        static const vector<const LweKey *> all_keys;$/;"	m	class:__anonc84148b60111::LweTest	typeref:typename:const vector<const LweKey * >	file:
all_keys	src/tests/lwe_test.cpp	/^    const vector<const LweKey *> LweTest::all_keys = {key500, key750, key1024};$/;"	m	class:__anonc84148b60111::LweTest	typeref:typename:const vector<const LweKey * >
all_keys	src/tests/small_size_test.cpp	/^        static const vector<const LweKey *> all_keys;$/;"	m	class:__anon9baab4410111::LweTest	typeref:typename:const vector<const LweKey * >	file:
all_keys	src/tests/small_size_test.cpp	/^    const vector<const LweKey *> LweTest::all_keys = {key4};$/;"	m	class:__anon9baab4410111::LweTest	typeref:typename:const vector<const LweKey * >
all_keys	src/tests/tgsw_direct_test.cpp	/^    vector<const TGswKey *> all_keys = {key512_1, key512_2, key1024_1, key1024_2, key2048_1, key/;"	v	namespace:__anon2d2168ad0111	typeref:typename:vector<const TGswKey * >
all_keys	src/tests/tgsw_test.cpp	/^    vector<const TGswKey *> all_keys = {key512_1, key512_2, key1024_1, key1024_2, key2048_1, key/;"	v	namespace:__anonfeb37f530111	typeref:typename:vector<const TGswKey * >
all_keys	src/tests/tlwe_test.cpp	/^    vector<const TLweKey *> all_keys = {key512_1, key512_2, key1024_1, key1024_2, key2048_1, key/;"	v	namespace:__anonc028f2ea0111	typeref:typename:vector<const TLweKey * >
all_keys1024	src/tests/tgsw_direct_test.cpp	/^    vector<const TGswKey *> all_keys1024 = {key1024_1, key1024_2};$/;"	v	namespace:__anon2d2168ad0111	typeref:typename:vector<const TGswKey * >
all_keys1024	src/tests/tgsw_test.cpp	/^    vector<const TGswKey *> all_keys1024 = {key1024_1, key1024_2};$/;"	v	namespace:__anonfeb37f530111	typeref:typename:vector<const TGswKey * >
all_params	src/tests/lwe_test.cpp	/^        static const vector<const LweParams *> all_params;$/;"	m	class:__anonc84148b60111::LweTest	typeref:typename:const vector<const LweParams * >	file:
all_params	src/tests/lwe_test.cpp	/^    const vector<const LweParams *> LweTest::all_params = {params500, params750, params1024};$/;"	m	class:__anonc84148b60111::LweTest	typeref:typename:const vector<const LweParams * >
all_params	src/tests/small_size_test.cpp	/^        static const vector<const LweParams *> all_params;$/;"	m	class:__anon9baab4410111::LweTest	typeref:typename:const vector<const LweParams * >	file:
all_params	src/tests/small_size_test.cpp	/^    const vector<const LweParams *> LweTest::all_params = {params4};$/;"	m	class:__anon9baab4410111::LweTest	typeref:typename:const vector<const LweParams * >
all_params	src/tests/tgsw_direct_test.cpp	/^    vector<const TGswParams *> all_params = {params512_1, params512_2, params1024_1, params1024_/;"	v	namespace:__anon2d2168ad0111	typeref:typename:vector<const TGswParams * >
all_params	src/tests/tgsw_test.cpp	/^    vector<const TGswParams *> all_params = {params512_1, params512_2, params1024_1, params1024_/;"	v	namespace:__anonfeb37f530111	typeref:typename:vector<const TGswParams * >
all_params	src/tests/tlwe_test.cpp	/^    vector<const TLweParams *> all_params = {params512_1, params512_2, params1024_1, params1024_/;"	v	namespace:__anonc028f2ea0111	typeref:typename:vector<const TLweParams * >
all_params1024	src/tests/tgsw_direct_test.cpp	/^    vector<const TGswParams *> all_params1024 = {params1024_1, params1024_2};$/;"	v	namespace:__anon2d2168ad0111	typeref:typename:vector<const TGswParams * >
all_params1024	src/tests/tgsw_test.cpp	/^    vector<const TGswParams *> all_params1024 = {params1024_1, params1024_2};$/;"	v	namespace:__anonfeb37f530111	typeref:typename:vector<const TGswParams * >
all_sample	src/libtfhe-superaic-core/include/tgsw.h	/^    TLweSample *all_sample; \/\/\/< TLweSample* all_sample; (k+1)l TLwe Sample$/;"	m	struct:TGswSample	typeref:typename:TLweSample *
all_samples	src/libtfhe-superaic-core/include/tgsw.h	/^    TLweSampleFFT *all_samples; \/\/\/< TLweSample* all_sample; (k+1)l TLwe Sample$/;"	m	struct:TGswSampleFFT	typeref:typename:TLweSampleFFT *
allbk	src/tests/io_test.cpp	/^    const set<const LweBootstrappingKey*> allbk = { bk1 };$/;"	v	namespace:__anon2d72c1c60111	typeref:typename:const set<const LweBootstrappingKey * >
allgbck	src/tests/io_test.cpp	/^    const set<const TFheGateBootstrappingCloudKeySet*> allgbck = { &gbsk1->cloud };$/;"	v	namespace:__anon2d72c1c60111	typeref:typename:const set<const TFheGateBootstrappingCloudKeySet * >
allgbp	src/tests/ACC_test.cpp	/^    const set<const TFheGateBootstrappingParameterSet*> allgbp = { gbp1 };$/;"	v	namespace:__anonef2481d50111	typeref:typename:const set<const TFheGateBootstrappingParameterSet * >
allgbp	src/tests/FPGA_ACC_test.cpp	/^    const set<const TFheGateBootstrappingParameterSet*> allgbp = { gbp1 };$/;"	v	namespace:__anon88d438720111	typeref:typename:const set<const TFheGateBootstrappingParameterSet * >
allgbp	src/tests/QEMU_test.cpp	/^    const set<const TFheGateBootstrappingParameterSet*> allgbp = { gbp1 };$/;"	v	namespace:__anon4f389dc60111	typeref:typename:const set<const TFheGateBootstrappingParameterSet * >
allgbp	src/tests/io_test.cpp	/^    const set<const TFheGateBootstrappingParameterSet*> allgbp = { gbp1 };$/;"	v	namespace:__anon2d72c1c60111	typeref:typename:const set<const TFheGateBootstrappingParameterSet * >
allgbp	src/tests/session_test.cpp	/^    const set<const TFheGateBootstrappingParameterSet*> allgbp = { gbp1 };$/;"	v	namespace:__anon23f859320111	typeref:typename:const set<const TFheGateBootstrappingParameterSet * >
allgbsk	src/tests/io_test.cpp	/^    const set<const TFheGateBootstrappingSecretKeySet*> allgbsk = { gbsk1 };$/;"	v	namespace:__anon2d72c1c60111	typeref:typename:const set<const TFheGateBootstrappingSecretKeySet * >
allkey	src/tests/io_test.cpp	/^    const set<const LweKey*> allkey = { lwekey500, lwekey120 };$/;"	v	namespace:__anon2d72c1c60111	typeref:typename:const set<const LweKey * >
allkey_tgsw	src/tests/io_test.cpp	/^    const set<const TGswKey*> allkey_tgsw = { tgswkey1024_1, tgswkey128_2 };$/;"	v	namespace:__anon2d72c1c60111	typeref:typename:const set<const TGswKey * >
allkey_tlwe	src/tests/io_test.cpp	/^    const set<const TLweKey*> allkey_tlwe = { tlwekey1024_1 };$/;"	v	namespace:__anon2d72c1c60111	typeref:typename:const set<const TLweKey * >
allks	src/tests/io_test.cpp	/^    const set<const LweKeySwitchKey*> allks = { ks128 };$/;"	v	namespace:__anon2d72c1c60111	typeref:typename:const set<const LweKeySwitchKey * >
alloc_IntPolynomial	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT IntPolynomial* alloc_IntPolynomial() {$/;"	f	typeref:typename:EXPORT IntPolynomial *
alloc_IntPolynomial_array	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT IntPolynomial* alloc_IntPolynomial_array(int32_t nbelts) {$/;"	f	typeref:typename:EXPORT IntPolynomial *
alloc_LagrangeHalfCPolynomial	src/libtfhe-superaic-core/polynomials.cpp	/^EXPORT LagrangeHalfCPolynomial* alloc_LagrangeHalfCPolynomial() {$/;"	f	typeref:typename:EXPORT LagrangeHalfCPolynomial *
alloc_LagrangeHalfCPolynomial_array	src/libtfhe-superaic-core/polynomials.cpp	/^EXPORT LagrangeHalfCPolynomial* alloc_LagrangeHalfCPolynomial_array(int32_t nbelts) {$/;"	f	typeref:typename:EXPORT LagrangeHalfCPolynomial *
alloc_LweBootstrappingKey	src/libtfhe-superaic-core/lwe-bootstrapping-functions.cpp	/^EXPORT LweBootstrappingKey *alloc_LweBootstrappingKey() {$/;"	f	typeref:typename:EXPORT LweBootstrappingKey *
alloc_LweBootstrappingKeyFFT	src/libtfhe-superaic-core/lwe-bootstrapping-functions-fft.cpp	/^EXPORT LweBootstrappingKeyFFT *alloc_LweBootstrappingKeyFFT() {$/;"	f	typeref:typename:EXPORT LweBootstrappingKeyFFT *
alloc_LweBootstrappingKeyFFT_array	src/libtfhe-superaic-core/lwe-bootstrapping-functions-fft.cpp	/^EXPORT LweBootstrappingKeyFFT *alloc_LweBootstrappingKeyFFT_array(int32_t nbelts) {$/;"	f	typeref:typename:EXPORT LweBootstrappingKeyFFT *
alloc_LweBootstrappingKey_array	src/libtfhe-superaic-core/lwe-bootstrapping-functions.cpp	/^EXPORT LweBootstrappingKey *alloc_LweBootstrappingKey_array(int32_t nbelts) {$/;"	f	typeref:typename:EXPORT LweBootstrappingKey *
alloc_LweKeySwitchKey	src/libtfhe-superaic-core/lwe-keyswitch-functions.cpp	/^EXPORT LweKeySwitchKey* alloc_LweKeySwitchKey() {$/;"	f	typeref:typename:EXPORT LweKeySwitchKey *
alloc_LweKeySwitchKey_array	src/libtfhe-superaic-core/lwe-keyswitch-functions.cpp	/^EXPORT LweKeySwitchKey* alloc_LweKeySwitchKey_array(int32_t nbelts) {$/;"	f	typeref:typename:EXPORT LweKeySwitchKey *
alloc_LweParams	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT LweParams* alloc_LweParams() {$/;"	f	typeref:typename:EXPORT LweParams *
alloc_LweParams_array	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT LweParams* alloc_LweParams_array(int32_t nbelts) {$/;"	f	typeref:typename:EXPORT LweParams *
alloc_TGswKey	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT TGswKey* alloc_TGswKey() {$/;"	f	typeref:typename:EXPORT TGswKey *
alloc_TGswKey_array	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT TGswKey* alloc_TGswKey_array(int32_t nbelts) {$/;"	f	typeref:typename:EXPORT TGswKey *
alloc_TGswParams	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT TGswParams* alloc_TGswParams() {$/;"	f	typeref:typename:EXPORT TGswParams *
alloc_TGswParams_array	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT TGswParams* alloc_TGswParams_array(int32_t nbelts) {$/;"	f	typeref:typename:EXPORT TGswParams *
alloc_TLweParams	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT TLweParams* alloc_TLweParams() {$/;"	f	typeref:typename:EXPORT TLweParams *
alloc_TLweParams_array	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT TLweParams* alloc_TLweParams_array(int32_t nbelts) {$/;"	f	typeref:typename:EXPORT TLweParams *
alloc_TorusPolynomial	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT TorusPolynomial* alloc_TorusPolynomial() {$/;"	f	typeref:typename:EXPORT TorusPolynomial *
alloc_TorusPolynomial_array	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT TorusPolynomial* alloc_TorusPolynomial_array(int32_t nbelts) {$/;"	f	typeref:typename:EXPORT TorusPolynomial *
allocate_comm_pack	src/libtfhe-superaic-core/tfhe_package.cpp	/^TFHE_Comm_Pack_t * allocate_comm_pack(TFHE_PayloadType_e type,uint32_t payload_size){$/;"	f	typeref:typename:TFHE_Comm_Pack_t *
allocated	src/tests/googletest/googletest/samples/sample10_unittest.cc	/^  static int allocated() { return allocated_; }$/;"	f	class:__anona6935d300111::Water	typeref:typename:int	file:
allocated_	src/tests/googletest/googletest/samples/sample10_unittest.cc	/^  static int allocated_;$/;"	m	class:__anona6935d300111::Water	typeref:typename:int	file:
allocated_	src/tests/googletest/googletest/samples/sample10_unittest.cc	/^int Water::allocated_ = 0;$/;"	m	class:__anona6935d300111::Water	typeref:typename:int
allparams	src/tests/ACC_test.cpp	/^    const set<const LweParams*> allparams = { lweparams120, lweparams500 };$/;"	v	namespace:__anonef2481d50111	typeref:typename:const set<const LweParams * >
allparams	src/tests/FPGA_ACC_test.cpp	/^    const set<const LweParams*> allparams = { lweparams120, lweparams500 };$/;"	v	namespace:__anon88d438720111	typeref:typename:const set<const LweParams * >
allparams	src/tests/QEMU_test.cpp	/^    const set<const LweParams*> allparams = { lweparams120, lweparams500 };$/;"	v	namespace:__anon4f389dc60111	typeref:typename:const set<const LweParams * >
allparams	src/tests/io_test.cpp	/^    const set<const LweParams*> allparams = { lweparams120, lweparams500 };$/;"	v	namespace:__anon2d72c1c60111	typeref:typename:const set<const LweParams * >
allparams	src/tests/session_test.cpp	/^    const set<const LweParams*> allparams = { lweparams120, lweparams500 };$/;"	v	namespace:__anon23f859320111	typeref:typename:const set<const LweParams * >
allparams_tgsw	src/tests/ACC_test.cpp	/^    const set<const TGswParams*> allparams_tgsw = { tgswparams1024_1, tgswparams128_2};$/;"	v	namespace:__anonef2481d50111	typeref:typename:const set<const TGswParams * >
allparams_tgsw	src/tests/FPGA_ACC_test.cpp	/^    const set<const TGswParams*> allparams_tgsw = { tgswparams1024_1, tgswparams128_2};$/;"	v	namespace:__anon88d438720111	typeref:typename:const set<const TGswParams * >
allparams_tgsw	src/tests/QEMU_test.cpp	/^    const set<const TGswParams*> allparams_tgsw = { tgswparams1024_1, tgswparams128_2};$/;"	v	namespace:__anon4f389dc60111	typeref:typename:const set<const TGswParams * >
allparams_tgsw	src/tests/io_test.cpp	/^    const set<const TGswParams*> allparams_tgsw = { tgswparams1024_1, tgswparams128_2};$/;"	v	namespace:__anon2d72c1c60111	typeref:typename:const set<const TGswParams * >
allparams_tgsw	src/tests/session_test.cpp	/^    const set<const TGswParams*> allparams_tgsw = { tgswparams1024_1, tgswparams128_2};$/;"	v	namespace:__anon23f859320111	typeref:typename:const set<const TGswParams * >
allparams_tlwe	src/tests/ACC_test.cpp	/^    const set<const TLweParams*> allparams_tlwe = { tlweparams128_2, tlweparams1024_1 };$/;"	v	namespace:__anonef2481d50111	typeref:typename:const set<const TLweParams * >
allparams_tlwe	src/tests/FPGA_ACC_test.cpp	/^    const set<const TLweParams*> allparams_tlwe = { tlweparams128_2, tlweparams1024_1 };$/;"	v	namespace:__anon88d438720111	typeref:typename:const set<const TLweParams * >
allparams_tlwe	src/tests/QEMU_test.cpp	/^    const set<const TLweParams*> allparams_tlwe = { tlweparams128_2, tlweparams1024_1 };$/;"	v	namespace:__anon4f389dc60111	typeref:typename:const set<const TLweParams * >
allparams_tlwe	src/tests/io_test.cpp	/^    const set<const TLweParams*> allparams_tlwe = { tlweparams128_2, tlweparams1024_1 };$/;"	v	namespace:__anon2d72c1c60111	typeref:typename:const set<const TLweParams * >
allparams_tlwe	src/tests/session_test.cpp	/^    const set<const TLweParams*> allparams_tlwe = { tlweparams128_2, tlweparams1024_1 };$/;"	v	namespace:__anon23f859320111	typeref:typename:const set<const TLweParams * >
alltests	Makefile	/^alltests:$/;"	t
alpha	src/tests/bootstrapping_classic_PBS_parameters_test.cpp	/^    const double alpha = alpha_in;$/;"	v	namespace:__anon8153b4f20111	typeref:typename:const double
alpha	src/tests/bootstrapping_direct_test.cpp	/^    const double alpha = 1e-6;$/;"	v	namespace:__anon560166140111	typeref:typename:const double
alpha	src/tests/decrypt_with_plaintext_modulus.cpp	/^    const double alpha = alpha_in;$/;"	v	namespace:__anondb55d4a50111	typeref:typename:const double
alpha	src/tests/macros_decrypt_with_plaintext_modulus_macros.cpp	/^    const double alpha = alpha_in;$/;"	v	namespace:__anon478224cd0111	typeref:typename:const double
alpha	src/tests/macros_modSwitch_with_plaintext_modulus_macros.cpp	/^    const double alpha = 0.0;$/;"	v	namespace:__anon4cdaee640111	typeref:typename:const double
alpha	src/tests/ops_add.cpp	/^    const double alpha = alpha_in;$/;"	v	namespace:__anonb1f413890111	typeref:typename:const double
alpha	src/tests/ops_add_with_carry.cpp	/^    const double alpha = alpha_in;$/;"	v	namespace:__anon662e63c40111	typeref:typename:const double
alpha	src/tests/zpf_for_bootstrap_detail.cpp	/^    const double alpha = alpha_in;$/;"	v	namespace:__anonc07144f40111	typeref:typename:const double
alpha_bk	src/tests/bootstrapping_classic_PBS_parameters_test.cpp	/^    const double alpha_bk = M8_PARAM.tlwe_alpha_min;$/;"	v	namespace:__anon8153b4f20111	typeref:typename:const double
alpha_bk	src/tests/bootstrapping_direct_test.cpp	/^    const double alpha_bk = 9e-9;$/;"	v	namespace:__anon560166140111	typeref:typename:const double
alpha_bk	src/tests/bootstrapping_test.cpp	/^    const double alpha_bk = 9e-9;$/;"	v	namespace:__anonf36cd29a0111	typeref:typename:const double
alpha_bk	src/tests/macros_decrypt_with_plaintext_modulus_macros.cpp	/^    const double alpha_bk = M8_PARAM.tlwe_alpha_min;$/;"	v	namespace:__anon478224cd0111	typeref:typename:const double
alpha_bk	src/tests/macros_modSwitch_with_plaintext_modulus_macros.cpp	/^    const double alpha_bk = M8_PARAM.tlwe_alpha_min;$/;"	v	namespace:__anon4cdaee640111	typeref:typename:const double
alpha_bk	src/tests/ops_add.cpp	/^    const double alpha_bk = M8_PARAM.tlwe_alpha_min;$/;"	v	namespace:__anonb1f413890111	typeref:typename:const double
alpha_bk	src/tests/ops_add_with_carry.cpp	/^    const double alpha_bk = M8_PARAM.tlwe_alpha_min;$/;"	v	namespace:__anon662e63c40111	typeref:typename:const double
alpha_bk	src/tests/small_size_test.cpp	/^    const double alpha_bk = 9e-9;$/;"	v	namespace:__anon9baab4410111	typeref:typename:const double
alpha_bk	src/tests/zpf_for_bootstrap_detail.cpp	/^    const double alpha_bk = M8_PARAM.tlwe_alpha_min;$/;"	v	namespace:__anonc07144f40111	typeref:typename:const double
alpha_bsk	src/tests/decrypt_with_plaintext_modulus.cpp	/^    const double alpha_bsk = M8_PARAM.tlwe_alpha_min;$/;"	v	namespace:__anondb55d4a50111	typeref:typename:const double
alpha_in	src/tests/bootstrapping_classic_PBS_parameters_test.cpp	/^    const double alpha_in = M8_PARAM.lwe_alpha_min;$/;"	v	namespace:__anon8153b4f20111	typeref:typename:const double
alpha_in	src/tests/bootstrapping_direct_test.cpp	/^    const double alpha_in = 5e-4;$/;"	v	namespace:__anon560166140111	typeref:typename:const double
alpha_in	src/tests/bootstrapping_test.cpp	/^    const double alpha_in = 5e-4;$/;"	v	namespace:__anonf36cd29a0111	typeref:typename:const double
alpha_in	src/tests/decrypt_with_plaintext_modulus.cpp	/^    const double alpha_in = M8_PARAM.lwe_alpha_min;$/;"	v	namespace:__anondb55d4a50111	typeref:typename:const double
alpha_in	src/tests/macros_decrypt_with_plaintext_modulus_macros.cpp	/^    const double alpha_in = M8_PARAM.lwe_alpha_min;$/;"	v	namespace:__anon478224cd0111	typeref:typename:const double
alpha_in	src/tests/macros_modSwitch_with_plaintext_modulus_macros.cpp	/^    const double alpha_in = M8_PARAM.lwe_alpha_min;$/;"	v	namespace:__anon4cdaee640111	typeref:typename:const double
alpha_in	src/tests/ops_add.cpp	/^    const double alpha_in = M8_PARAM.lwe_alpha_min;$/;"	v	namespace:__anonb1f413890111	typeref:typename:const double
alpha_in	src/tests/ops_add_with_carry.cpp	/^    const double alpha_in = M8_PARAM.lwe_alpha_min;$/;"	v	namespace:__anon662e63c40111	typeref:typename:const double
alpha_in	src/tests/small_size_test.cpp	/^    const double alpha_in = 5e-4;$/;"	v	namespace:__anon9baab4410111	typeref:typename:const double
alpha_in	src/tests/zpf_for_bootstrap_detail.cpp	/^    const double alpha_in = M8_PARAM.lwe_alpha_min;$/;"	v	namespace:__anonc07144f40111	typeref:typename:const double
alpha_max	src/libtfhe-superaic-core/include/lweparams.h	/^	const double alpha_max;\/\/le plus gd bruit qui permet le déchiffrement$/;"	m	struct:LweParams	typeref:typename:const double
alpha_max	src/libtfhe-superaic-core/include/tlwe.h	/^    const double alpha_max; \/\/\/< maximal noise s.t. we can decrypt$/;"	m	struct:TLweParams	typeref:typename:const double
alpha_min	src/libtfhe-superaic-core/include/lweparams.h	/^	const double alpha_min;\/\/le plus petit bruit tq sur$/;"	m	struct:LweParams	typeref:typename:const double
alpha_min	src/libtfhe-superaic-core/include/tlwe.h	/^    const double alpha_min; \/\/\/< minimal noise s.t. the sample is secure$/;"	m	struct:TLweParams	typeref:typename:const double
alphabet	src/muduo/examples/wordcount/gen.py	/^alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_-'$/;"	v
also_run_disabled_tests	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  bool also_run_disabled_tests;$/;"	m	struct:testing::Flags	typeref:typename:bool	file:
also_run_disabled_tests_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  bool also_run_disabled_tests_;$/;"	m	class:testing::internal::GTestFlagSaver	typeref:typename:bool
answerer	src/muduo/examples/protobuf/codec/query.proto	/^  required string answerer = 3;$/;"	f	message:muduo.Answer	typeref:typename:string
anticyclic_get	src/tests/polynomial_test.cpp	/^    int32_t anticyclic_get(int32_t *tab, int32_t a, int32_t N) {$/;"	f	namespace:__anon87ebe9520111	typeref:typename:int32_t
append	src/muduo/examples/memcached/server/Item.cc	/^void Item::append(const char* data, size_t len)$/;"	f	class:Item	typeref:typename:void
append	src/muduo/muduo/base/AsyncLogging.cc	/^void AsyncLogging::append(const char* logline, int len)$/;"	f	class:AsyncLogging	typeref:typename:void
append	src/muduo/muduo/base/FileUtil.cc	/^void FileUtil::AppendFile::append(const char* logline, const size_t len)$/;"	f	class:FileUtil::AppendFile	typeref:typename:void
append	src/muduo/muduo/base/LogFile.cc	/^void LogFile::append(const char* logline, int len)$/;"	f	class:LogFile	typeref:typename:void
append	src/muduo/muduo/base/LogStream.h	/^  void append(const char* \/*restrict*\/ buf, size_t len)$/;"	f	class:muduo::detail::FixedBuffer	typeref:typename:void
append	src/muduo/muduo/base/LogStream.h	/^  void append(const char* data, int len) { buffer_.append(data, len); }$/;"	f	class:muduo::LogStream	typeref:typename:void
append	src/muduo/muduo/net/Buffer.h	/^  void append(const StringPiece& str)$/;"	f	class:muduo::net::Buffer	typeref:typename:void
append	src/muduo/muduo/net/Buffer.h	/^  void append(const char* \/*restrict*\/ data, size_t len)$/;"	f	class:muduo::net::Buffer	typeref:typename:void
append	src/muduo/muduo/net/Buffer.h	/^  void append(const void* \/*restrict*\/ data, size_t len)$/;"	f	class:muduo::net::Buffer	typeref:typename:void
appendInt16	src/muduo/muduo/net/Buffer.h	/^  void appendInt16(int16_t x)$/;"	f	class:muduo::net::Buffer	typeref:typename:void
appendInt32	src/muduo/muduo/net/Buffer.h	/^  void appendInt32(int32_t x)$/;"	f	class:muduo::net::Buffer	typeref:typename:void
appendInt64	src/muduo/muduo/net/Buffer.h	/^  void appendInt64(int64_t x)$/;"	f	class:muduo::net::Buffer	typeref:typename:void
appendInt8	src/muduo/muduo/net/Buffer.h	/^  void appendInt8(int8_t x)$/;"	f	class:muduo::net::Buffer	typeref:typename:void
appendResponse	src/muduo/examples/procmon/procmon.cc	/^int Procmon::appendResponse(const char* fmt, ...)$/;"	f	class:Procmon	typeref:typename:int
appendTableRow	src/muduo/examples/procmon/procmon.cc	/^  void appendTableRow(const char* name, StringArg value)$/;"	f	class:Procmon	typeref:typename:void	file:
appendTableRow	src/muduo/examples/procmon/procmon.cc	/^  void appendTableRow(const char* name, long value)$/;"	f	class:Procmon	typeref:typename:void	file:
appendTableRowFloat	src/muduo/examples/procmon/procmon.cc	/^  void appendTableRowFloat(const char* name, double value)$/;"	f	class:Procmon	typeref:typename:void	file:
appendToBuffer	src/muduo/muduo/net/http/HttpResponse.cc	/^void HttpResponse::appendToBuffer(Buffer* output) const$/;"	f	class:HttpResponse	typeref:typename:void
append_column	src/muduo/examples/sudoku/sudoku.cc	/^    void append_column(int n)$/;"	f	class:SudokuSolver	typeref:typename:void	file:
append_exector	src/libtfhe-superaic-acc/accs/executor.cpp	/^void Executor_List::append_exector (shared_ptr<Executor> executor) {$/;"	f	class:tfhe_superaic::Executor_List	typeref:typename:void
append_unlocked	src/muduo/muduo/base/LogFile.cc	/^void LogFile::append_unlocked(const char* logline, int len)$/;"	f	class:LogFile	typeref:typename:void
apply_lookup_table	src/libtfhe-superaic-core/message_functions.cpp	/^EXPORT void apply_lookup_table($/;"	f	typeref:typename:EXPORT void
approxEquals	src/tests/test-decomp-tgsw.cpp	/^double approxEquals(Torus32 a, Torus32 b) { return abs(a - b) < 10; }$/;"	f	typeref:typename:double
approxEquals	src/tests/test-lwe.cpp	/^double approxEquals(Torus32 a, Torus32 b) { return abs(a - b) < 10; }$/;"	f	typeref:typename:double
approxPhase	src/libtfhe-superaic-core/numeric-functions.cpp	/^EXPORT Torus32 approxPhase(Torus32 phase, int32_t plaintext_modulus){$/;"	f	typeref:typename:EXPORT Torus32
aquire_executor	src/libtfhe-superaic-acc/accs/executor.cpp	/^shared_ptr<Executor>  Executor_List::aquire_executor(void) {$/;"	f	class:tfhe_superaic::Executor_List	typeref:typename:shared_ptr<Executor>
ares_channel	src/muduo/examples/cdns/Resolver.h	/^  typedef struct ares_channeldata* ares_channel;$/;"	t	typeref:struct:ares_channeldata *
ares_host_callback	src/muduo/examples/cdns/Resolver.cc	/^void Resolver::ares_host_callback(void* data, int status, int timeouts, struct hostent* hostent)$/;"	f	class:Resolver	typeref:typename:void
ares_sock_create_callback	src/muduo/examples/cdns/Resolver.cc	/^int Resolver::ares_sock_create_callback(int sockfd, int type, void* data)$/;"	f	class:Resolver	typeref:typename:int
ares_sock_state_callback	src/muduo/examples/cdns/Resolver.cc	/^void Resolver::ares_sock_state_callback(void* data, int sockfd, int read, int write)$/;"	f	class:Resolver	typeref:typename:void
argk_type	src/tests/googletest/googlemock/include/gmock/gmock-more-actions.h	/^  typedef typename ::testing::tuple_element<k, args_type>::type argk_type;$/;"	t	function:testing::ACTION_TEMPLATE	typeref:typename:::testing::tuple_element<k,args_type>::type
args_	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  std::vector<char*> args_;$/;"	m	class:testing::internal::Arguments	typeref:typename:std::vector<char * >	file:
argv	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  char* const* argv;  \/\/ Command-line arguments for the child's call to exec$/;"	m	struct:testing::internal::ExecDeathTestArgs	typeref:typename:char * const *	file:
arr	src/muduo/examples/wordcount/gen.py	/^	arr = [random.choice(alphabet) for i in range(word_len)]$/;"	v
array	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^  char array[257];$/;"	m	struct:testing::gtest_printers_test::Big	typeref:typename:char[257]	file:
array_	src/tests/googletest/googletest/include/gtest/gtest-test-part.h	/^  std::vector<TestPartResult> array_;$/;"	m	class:testing::TestPartResultArray	typeref:typename:std::vector<TestPartResult>
array_	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  const Element* array_;$/;"	m	class:testing::internal::NativeArray	typeref:typename:const Element *
asInt32	src/muduo/examples/protobuf/codec/codec.cc	/^int32_t asInt32(const char* buf)$/;"	f	typeref:typename:int32_t
asInt32	src/muduo/muduo/net/protobuf/ProtobufCodecLite.cc	/^int32_t ProtobufCodecLite::asInt32(const char* buf)$/;"	f	class:ProtobufCodecLite	typeref:typename:int32_t
as_intPolynomial	src/tests/fakes/lagrangehalfc.h	/^            IntPolynomial *as_intPolynomial;$/;"	m	union:__anonb49ff32c0111::FakeLagrangeHalfCPolynomial::innerPolynomial	typeref:typename:IntPolynomial *
as_nothing	src/tests/fakes/lagrangehalfc.h	/^            void *as_nothing;$/;"	m	union:__anonb49ff32c0111::FakeLagrangeHalfCPolynomial::innerPolynomial	typeref:typename:void *
as_string	src/muduo/muduo/base/StringPiece.h	/^  string as_string() const {$/;"	f	class:muduo::StringPiece	typeref:typename:string
as_torusPolynomial	src/tests/fakes/lagrangehalfc.h	/^            TorusPolynomial *as_torusPolynomial;$/;"	m	union:__anonb49ff32c0111::FakeLagrangeHalfCPolynomial::innerPolynomial	typeref:typename:TorusPolynomial *
asio_chat_client	src/muduo/examples/asio/chat/CMakeLists.txt	/^add_executable(asio_chat_client client.cc)$/;"	t
asio_chat_loadtest	src/muduo/examples/asio/chat/CMakeLists.txt	/^add_executable(asio_chat_loadtest loadtest.cc)$/;"	t
asio_chat_server	src/muduo/examples/asio/chat/CMakeLists.txt	/^add_executable(asio_chat_server server.cc)$/;"	t
asio_chat_server_threaded	src/muduo/examples/asio/chat/CMakeLists.txt	/^add_executable(asio_chat_server_threaded server_threaded.cc)$/;"	t
asio_chat_server_threaded_efficient	src/muduo/examples/asio/chat/CMakeLists.txt	/^add_executable(asio_chat_server_threaded_efficient server_threaded_efficient.cc)$/;"	t
asio_chat_server_threaded_highperformance	src/muduo/examples/asio/chat/CMakeLists.txt	/^add_executable(asio_chat_server_threaded_highperformance server_threaded_highperformance.cc)$/;"	t
asio_tutorial_timer2	src/muduo/examples/asio/tutorial/CMakeLists.txt	/^add_executable(asio_tutorial_timer2 timer2\/timer.cc)$/;"	t
asio_tutorial_timer3	src/muduo/examples/asio/tutorial/CMakeLists.txt	/^add_executable(asio_tutorial_timer3 timer3\/timer.cc)$/;"	t
asio_tutorial_timer4	src/muduo/examples/asio/tutorial/CMakeLists.txt	/^add_executable(asio_tutorial_timer4 timer4\/timer.cc)$/;"	t
asio_tutorial_timer5	src/muduo/examples/asio/tutorial/CMakeLists.txt	/^add_executable(asio_tutorial_timer5 timer5\/timer.cc)$/;"	t
asio_tutorial_timer6	src/muduo/examples/asio/tutorial/CMakeLists.txt	/^add_executable(asio_tutorial_timer6 timer6\/timer.cc)$/;"	t
assertEqualIgnoreLeadingWhitespace	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class_test.py	/^  def assertEqualIgnoreLeadingWhitespace(self, expected_lines, lines):$/;"	m	class:TestCase
assertEquals	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/TestCase.java	/^    protected void assertEquals(Object expected, Object actual) {$/;"	m	class:TestCase
assertInLoopThread	src/muduo/muduo/net/EventLoop.h	/^  void assertInLoopThread()$/;"	f	class:muduo::net::EventLoop	typeref:typename:void
assertInLoopThread	src/muduo/muduo/net/Poller.h	/^  void assertInLoopThread() const$/;"	f	class:muduo::net::Poller	typeref:typename:void
assertLocked	src/muduo/muduo/base/Mutex.h	/^  void assertLocked() const ASSERT_CAPABILITY(this)$/;"	f	class:muduo::MutexLock	typeref:typename:void
assertTrue	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/TestCase.java	/^    protected void assertTrue(boolean yes) {$/;"	m	class:TestCase
assert_equals	src/tests/io_test.cpp	/^    void assert_equals(const LweBootstrappingKey* a, const LweBootstrappingKey* b) {$/;"	f	namespace:__anon2d72c1c60111	typeref:typename:void
assert_equals	src/tests/io_test.cpp	/^    void assert_equals(const LweKey* a, const LweKey* b) {$/;"	f	namespace:__anon2d72c1c60111	typeref:typename:void
assert_equals	src/tests/io_test.cpp	/^    void assert_equals(const LweKeySwitchKey* a, const LweKeySwitchKey* b) {$/;"	f	namespace:__anon2d72c1c60111	typeref:typename:void
assert_equals	src/tests/io_test.cpp	/^    void assert_equals(const LweParams* a, const LweParams* b) {$/;"	f	namespace:__anon2d72c1c60111	typeref:typename:void
assert_equals	src/tests/io_test.cpp	/^    void assert_equals(const LweSample* a, const LweSample* b, const LweParams* params) {$/;"	f	namespace:__anon2d72c1c60111	typeref:typename:void
assert_equals	src/tests/io_test.cpp	/^    void assert_equals(const TFheGateBootstrappingCloudKeySet* a, const TFheGateBootstrappingClo/;"	f	namespace:__anon2d72c1c60111	typeref:typename:void
assert_equals	src/tests/io_test.cpp	/^    void assert_equals(const TFheGateBootstrappingParameterSet* a, const TFheGateBootstrappingPa/;"	f	namespace:__anon2d72c1c60111	typeref:typename:void
assert_equals	src/tests/io_test.cpp	/^    void assert_equals(const TFheGateBootstrappingSecretKeySet* a, const TFheGateBootstrappingSe/;"	f	namespace:__anon2d72c1c60111	typeref:typename:void
assert_equals	src/tests/io_test.cpp	/^    void assert_equals(const TGswKey* a, const TGswKey* b) {$/;"	f	namespace:__anon2d72c1c60111	typeref:typename:void
assert_equals	src/tests/io_test.cpp	/^    void assert_equals(const TGswParams* a, const TGswParams* b) {$/;"	f	namespace:__anon2d72c1c60111	typeref:typename:void
assert_equals	src/tests/io_test.cpp	/^    void assert_equals(const TGswSample* a, const TGswSample* b, const TGswParams* params) {$/;"	f	namespace:__anon2d72c1c60111	typeref:typename:void
assert_equals	src/tests/io_test.cpp	/^    void assert_equals(const TLweKey* a, const TLweKey* b) {$/;"	f	namespace:__anon2d72c1c60111	typeref:typename:void
assert_equals	src/tests/io_test.cpp	/^    void assert_equals(const TLweParams* a, const TLweParams* b) {$/;"	f	namespace:__anon2d72c1c60111	typeref:typename:void
assert_equals	src/tests/io_test.cpp	/^    void assert_equals(const TLweSample* a, const TLweSample* b, const TLweParams* params) {$/;"	f	namespace:__anon2d72c1c60111	typeref:typename:void
assignHolder	src/muduo/muduo/base/Mutex.h	/^  void assignHolder()$/;"	f	class:muduo::MutexLock	typeref:typename:void
assume_role_calls_	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  int assume_role_calls_;$/;"	m	class:MockDeathTestFactory	typeref:typename:int	file:
asyncOutput	src/muduo/muduo/base/tests/AsyncLogging_test.cc	/^void asyncOutput(const char* msg, int len)$/;"	f	typeref:typename:void
asynclogging_test	src/muduo/muduo/base/tests/CMakeLists.txt	/^add_executable(asynclogging_test AsyncLogging_test.cc)$/;"	t
atomic_unittest	src/muduo/muduo/base/tests/CMakeLists.txt	/^add_executable(atomic_unittest Atomic_unittest.cc)$/;"	t
audiences_	src/muduo/examples/hub/hub.cc	/^  std::set<TcpConnectionPtr> audiences_;$/;"	m	class:pubsub::Topic	typeref:typename:std::set<TcpConnectionPtr>	file:
authCallback	src/muduo/contrib/hiredis/mrediscli.cc	/^void authCallback(hiredis::Hiredis* c, redisReply* reply, string* password)$/;"	f	typeref:typename:void
autogenerated.cpp.i	buildotests/libtfhe-superaic-core/Makefile	/^autogenerated.cpp.i:$/;"	t
autogenerated.cpp.o	buildotests/libtfhe-superaic-core/Makefile	/^autogenerated.cpp.o:$/;"	t
autogenerated.cpp.s	buildotests/libtfhe-superaic-core/Makefile	/^autogenerated.cpp.s:$/;"	t
autogenerated.i	buildotests/libtfhe-superaic-core/Makefile	/^autogenerated.i: autogenerated.cpp.i$/;"	t
autogenerated.o	buildotests/libtfhe-superaic-core/Makefile	/^autogenerated.o: autogenerated.cpp.o$/;"	t
autogenerated.s	buildotests/libtfhe-superaic-core/Makefile	/^autogenerated.s: autogenerated.cpp.s$/;"	t
avail	src/muduo/muduo/base/LogStream.h	/^  int avail() const { return static_cast<int>(end() - cur_); }$/;"	f	class:muduo::detail::FixedBuffer	typeref:typename:int
availIds_	src/muduo/examples/multiplexer/multiplexer_simple.cc	/^  std::queue<int> availIds_;$/;"	m	class:MultiplexServer	typeref:typename:std::queue<int>	file:
awaitUninterruptibly	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MyCountDownLatch.java	/^    public void awaitUninterruptibly() {$/;"	m	class:MyCountDownLatch
awaitUninterruptibly	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MyCountDownLatch.java	/^    public void awaitUninterruptibly(int millis) {$/;"	m	class:MyCountDownLatch
b	src/libtfhe-superaic-core/include/lwesamples.h	/^    Torus32 b;  \/\/$/;"	m	struct:LweSample	typeref:typename:Torus32
b	src/libtfhe-superaic-core/include/tlwe.h	/^    LagrangeHalfCPolynomial *b; \/\/\/< alias of a[k] to get the right term$/;"	m	struct:TLweSampleFFT	typeref:typename:LagrangeHalfCPolynomial *
b	src/libtfhe-superaic-core/include/tlwe.h	/^    TorusPolynomial *b; \/\/\/< alias of a[k] to get the right term$/;"	m	struct:TLweSample	typeref:typename:TorusPolynomial *
b_	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^  MockB b_;$/;"	m	class:__anon6b6cf3b20111::PartialOrderTest	typeref:typename:MockB	file:
b_	src/tests/googletest/googletest/test/gtest-tuple_test.cc	/^  BigTuple a_, b_;$/;"	m	class:__anona47613760111::BigTupleTest	typeref:typename:BigTuple	file:
b_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static int b_;$/;"	m	class:__anonf780395f0111::SingleEvaluationTest	typeref:typename:int	file:
b_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^int SingleEvaluationTest::b_;$/;"	m	class:__anonf780395f0111::SingleEvaluationTest	typeref:typename:int
backend	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MultiplexerTest.java	/^    private MockBackendServer backend;$/;"	f	class:MultiplexerTest	file:
backend	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/TestCase.java	/^    protected MockBackendServer backend;$/;"	f	class:TestCase
backendConn_	src/muduo/examples/multiplexer/multiplexer_simple.cc	/^  TcpConnectionPtr backendConn_;$/;"	m	class:MultiplexServer	typeref:typename:TcpConnectionPtr	file:
backendIp	src/muduo/examples/multiplexer/multiplexer.cc	/^const char* backendIp = "127.0.0.1";$/;"	v	typeref:typename:const char *
backendIp	src/muduo/examples/multiplexer/multiplexer_simple.cc	/^const char* backendIp = "127.0.0.1";$/;"	v	typeref:typename:const char *
backend_	src/muduo/examples/multiplexer/multiplexer.cc	/^  TcpClient backend_;$/;"	m	class:MultiplexServer	typeref:typename:TcpClient	file:
backend_	src/muduo/examples/multiplexer/multiplexer_simple.cc	/^  TcpClient backend_;$/;"	m	class:MultiplexServer	typeref:typename:TcpClient	file:
backends	src/muduo/examples/protobuf/rpcbalancer/balancer.cc	/^    std::vector<std::unique_ptr<BackendSession>> backends;$/;"	m	struct:Balancer::PerThread	typeref:typename:std::vector<std::unique_ptr<BackendSession>>	file:
backends	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^    std::vector<std::unique_ptr<BackendSession>> backends;$/;"	m	struct:Balancer::PerThread	typeref:typename:std::vector<std::unique_ptr<BackendSession>>	file:
backends_	src/muduo/examples/protobuf/rpcbalancer/balancer.cc	/^  std::vector<InetAddress> backends_;$/;"	m	class:Balancer	typeref:typename:std::vector<InetAddress>	file:
backends_	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^  std::vector<InetAddress> backends_;$/;"	m	class:Balancer	typeref:typename:std::vector<InetAddress>	file:
background_	src/muduo/examples/procmon/plot.h	/^  const int background_;$/;"	m	class:Plot	typeref:typename:const int
badLatency_	src/muduo/examples/sudoku/stat.h	/^  int64_t totalRequests_, totalResponses_, totalSolved_, badRequests_, droppedRequests_, totalLa/;"	m	class:SudokuStat	typeref:typename:int64_t
badRequests_	src/muduo/examples/sudoku/stat.h	/^  int64_t totalRequests_, totalResponses_, totalSolved_, badRequests_, droppedRequests_, totalLa/;"	m	class:SudokuStat	typeref:typename:int64_t
balancer	src/muduo/examples/socks4a/CMakeLists.txt	/^add_executable(balancer balancer.cc)$/;"	t
bar	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^namespace bar {$/;"	n	file:
base	src/libtfhe-superaic-core/include/lwekeyswitch.h	/^    int32_t base; \/\/\/< decomposition base: a power of 2 $/;"	m	struct:LweKeySwitchKey	typeref:typename:int32_t
base	src/tests/fakes/lwe-keyswitch.h	/^        const int32_t base;$/;"	m	struct:__anonbf4a421d0111::FakeLweKeySwitchKey	typeref:typename:const int32_t
baseLoop_	src/muduo/muduo/net/EventLoopThreadPool.h	/^  EventLoop* baseLoop_;$/;"	m	class:muduo::net::EventLoopThreadPool	typeref:typename:EventLoop *
base_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator	typeref:typename:const ParamGeneratorInterface<ParamType> * const
base_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator2::Iterator	typeref:typename:const ParamGeneratorInterface<ParamType> * const
base_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator	typeref:typename:const ParamGeneratorInterface<ParamType> * const
base_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator	typeref:typename:const ParamGeneratorInterface<ParamType> * const
base_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator	typeref:typename:const ParamGeneratorInterface<ParamType> * const
base_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator	typeref:typename:const ParamGeneratorInterface<ParamType> * const
base_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator	typeref:typename:const ParamGeneratorInterface<ParamType> * const
base_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator	typeref:typename:const ParamGeneratorInterface<ParamType> * const
base_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator	typeref:typename:const ParamGeneratorInterface<ParamType> * const
base_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^    const ParamGeneratorInterface<T>* const base_;$/;"	m	class:testing::internal::RangeGenerator::Iterator	typeref:typename:const ParamGeneratorInterface<T> * const
base_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^    const ParamGeneratorInterface<T>* const base_;$/;"	m	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator	typeref:typename:const ParamGeneratorInterface<T> * const
base_SRCS	src/muduo/muduo/base/CMakeLists.txt	/^set(base_SRCS$/;"	v
basebit	src/libtfhe-superaic-core/include/lwekeyswitch.h	/^    int32_t basebit; \/\/\/< log_2(base)$/;"	m	struct:LweKeySwitchKey	typeref:typename:int32_t
basebit	src/libtfhe-superaic-core/tfhe_io.cpp	/^    int32_t basebit;$/;"	m	struct:LweKeySwitchParameters	typeref:typename:int32_t	file:
basebit	src/tests/fakes/lwe-keyswitch.h	/^        const int32_t basebit;$/;"	m	struct:__anonbf4a421d0111::FakeLweKeySwitchKey	typeref:typename:const int32_t
basename_	src/muduo/muduo/base/AsyncLogging.h	/^  const string basename_;$/;"	m	class:muduo::AsyncLogging	typeref:typename:const string
basename_	src/muduo/muduo/base/LogFile.h	/^  const string basename_;$/;"	m	class:muduo::LogFile	typeref:typename:const string
basename_	src/muduo/muduo/base/Logging.h	/^  SourceFile basename_;$/;"	m	class:muduo::Logger::Impl	typeref:typename:SourceFile
before	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^IntBeforeRegisterTypedTestCaseP before = 0;$/;"	v	typeref:typename:IntBeforeRegisterTypedTestCaseP
begin	src/muduo/muduo/base/StringPiece.h	/^  const char* begin() const { return ptr_; }$/;"	f	class:muduo::StringPiece	typeref:typename:const char *
begin	src/muduo/muduo/net/Buffer.h	/^  char* begin()$/;"	f	class:muduo::net::Buffer	typeref:typename:char *
begin	src/muduo/muduo/net/Buffer.h	/^  const char* begin() const$/;"	f	class:muduo::net::Buffer	typeref:typename:const char *
begin	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  const_iterator begin() const { return expectations_.begin(); }$/;"	f	class:testing::ExpectationSet	typeref:typename:const_iterator
begin	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  const_iterator begin() const {$/;"	f	class:testing::gmock_matchers_test::Streamlike	typeref:typename:const_iterator	file:
begin	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  const_iterator begin() const { return array_; }$/;"	f	class:testing::internal::NativeArray	typeref:typename:const_iterator
begin	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  iterator begin() const { return iterator(impl_->Begin()); }$/;"	f	class:testing::internal::ParamGenerator	typeref:typename:iterator
begin10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T10>::iterator begin10_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator	typeref:typename:const typename ParamGenerator<T10>::iterator
begin1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator	typeref:typename:const typename ParamGenerator<T1>::iterator
begin1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator2::Iterator	typeref:typename:const typename ParamGenerator<T1>::iterator
begin1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator	typeref:typename:const typename ParamGenerator<T1>::iterator
begin1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator	typeref:typename:const typename ParamGenerator<T1>::iterator
begin1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator	typeref:typename:const typename ParamGenerator<T1>::iterator
begin1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator	typeref:typename:const typename ParamGenerator<T1>::iterator
begin1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator	typeref:typename:const typename ParamGenerator<T1>::iterator
begin1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator	typeref:typename:const typename ParamGenerator<T1>::iterator
begin1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator	typeref:typename:const typename ParamGenerator<T1>::iterator
begin2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator	typeref:typename:const typename ParamGenerator<T2>::iterator
begin2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator2::Iterator	typeref:typename:const typename ParamGenerator<T2>::iterator
begin2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator	typeref:typename:const typename ParamGenerator<T2>::iterator
begin2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator	typeref:typename:const typename ParamGenerator<T2>::iterator
begin2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator	typeref:typename:const typename ParamGenerator<T2>::iterator
begin2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator	typeref:typename:const typename ParamGenerator<T2>::iterator
begin2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator	typeref:typename:const typename ParamGenerator<T2>::iterator
begin2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator	typeref:typename:const typename ParamGenerator<T2>::iterator
begin2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator	typeref:typename:const typename ParamGenerator<T2>::iterator
begin3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T3>::iterator begin3_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator	typeref:typename:const typename ParamGenerator<T3>::iterator
begin3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T3>::iterator begin3_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator	typeref:typename:const typename ParamGenerator<T3>::iterator
begin3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T3>::iterator begin3_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator	typeref:typename:const typename ParamGenerator<T3>::iterator
begin3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T3>::iterator begin3_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator	typeref:typename:const typename ParamGenerator<T3>::iterator
begin3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T3>::iterator begin3_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator	typeref:typename:const typename ParamGenerator<T3>::iterator
begin3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T3>::iterator begin3_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator	typeref:typename:const typename ParamGenerator<T3>::iterator
begin3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T3>::iterator begin3_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator	typeref:typename:const typename ParamGenerator<T3>::iterator
begin3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T3>::iterator begin3_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator	typeref:typename:const typename ParamGenerator<T3>::iterator
begin4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T4>::iterator begin4_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator	typeref:typename:const typename ParamGenerator<T4>::iterator
begin4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T4>::iterator begin4_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator	typeref:typename:const typename ParamGenerator<T4>::iterator
begin4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T4>::iterator begin4_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator	typeref:typename:const typename ParamGenerator<T4>::iterator
begin4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T4>::iterator begin4_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator	typeref:typename:const typename ParamGenerator<T4>::iterator
begin4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T4>::iterator begin4_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator	typeref:typename:const typename ParamGenerator<T4>::iterator
begin4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T4>::iterator begin4_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator	typeref:typename:const typename ParamGenerator<T4>::iterator
begin4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T4>::iterator begin4_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator	typeref:typename:const typename ParamGenerator<T4>::iterator
begin5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T5>::iterator begin5_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator	typeref:typename:const typename ParamGenerator<T5>::iterator
begin5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T5>::iterator begin5_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator	typeref:typename:const typename ParamGenerator<T5>::iterator
begin5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T5>::iterator begin5_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator	typeref:typename:const typename ParamGenerator<T5>::iterator
begin5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T5>::iterator begin5_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator	typeref:typename:const typename ParamGenerator<T5>::iterator
begin5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T5>::iterator begin5_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator	typeref:typename:const typename ParamGenerator<T5>::iterator
begin5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T5>::iterator begin5_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator	typeref:typename:const typename ParamGenerator<T5>::iterator
begin6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T6>::iterator begin6_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator	typeref:typename:const typename ParamGenerator<T6>::iterator
begin6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T6>::iterator begin6_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator	typeref:typename:const typename ParamGenerator<T6>::iterator
begin6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T6>::iterator begin6_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator	typeref:typename:const typename ParamGenerator<T6>::iterator
begin6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T6>::iterator begin6_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator	typeref:typename:const typename ParamGenerator<T6>::iterator
begin6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T6>::iterator begin6_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator	typeref:typename:const typename ParamGenerator<T6>::iterator
begin7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T7>::iterator begin7_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator	typeref:typename:const typename ParamGenerator<T7>::iterator
begin7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T7>::iterator begin7_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator	typeref:typename:const typename ParamGenerator<T7>::iterator
begin7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T7>::iterator begin7_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator	typeref:typename:const typename ParamGenerator<T7>::iterator
begin7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T7>::iterator begin7_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator	typeref:typename:const typename ParamGenerator<T7>::iterator
begin8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T8>::iterator begin8_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator	typeref:typename:const typename ParamGenerator<T8>::iterator
begin8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T8>::iterator begin8_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator	typeref:typename:const typename ParamGenerator<T8>::iterator
begin8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T8>::iterator begin8_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator	typeref:typename:const typename ParamGenerator<T8>::iterator
begin9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T9>::iterator begin9_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator	typeref:typename:const typename ParamGenerator<T9>::iterator
begin9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T9>::iterator begin9_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator	typeref:typename:const typename ParamGenerator<T9>::iterator
beginWrite	src/muduo/muduo/net/Buffer.h	/^  char* beginWrite()$/;"	f	class:muduo::net::Buffer	typeref:typename:char *
beginWrite	src/muduo/muduo/net/Buffer.h	/^  const char* beginWrite() const$/;"	f	class:muduo::net::Buffer	typeref:typename:const char *
begin_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  const T begin_;$/;"	m	class:testing::internal::RangeGenerator	typeref:typename:const T
bench	src/muduo/muduo/base/tests/AsyncLogging_test.cc	/^void bench(bool longLog)$/;"	f	typeref:typename:void
bench	src/muduo/muduo/base/tests/Logging_test.cc	/^void bench(const char* type)$/;"	f	typeref:typename:void
benchLogStream	src/muduo/muduo/base/tests/LogStream_bench.cc	/^void benchLogStream()$/;"	f	typeref:typename:void
benchPrintf	src/muduo/muduo/base/tests/LogStream_bench.cc	/^void benchPrintf(const char* fmt)$/;"	f	typeref:typename:void
benchStringStream	src/muduo/muduo/base/tests/LogStream_bench.cc	/^void benchStringStream()$/;"	f	typeref:typename:void
benchmark	src/muduo/examples/shorturl/shorturl.cc	/^bool benchmark = false;$/;"	v	typeref:typename:bool
benchmark	src/muduo/muduo/base/tests/Timestamp_unittest.cc	/^void benchmark()$/;"	f	typeref:typename:void
benchmark	src/muduo/muduo/net/http/tests/HttpServer_test.cc	/^bool benchmark = false;$/;"	v	typeref:typename:bool
benchmark_time	src/libtfhe-superaic-core/fft_processors/nayuki/fft-test.c	/^static int64_t benchmark_time(const void *fftTables, double *real, double *imag, uint64_t iterat/;"	f	typeref:typename:int64_t	file:
best_so_far_	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  ElementMatcherPairs best_so_far_;$/;"	m	class:testing::gmock_matchers_test::__anon745c08170311::BacktrackingMaxBPMState	typeref:typename:ElementMatcherPairs	file:
bindAddress	src/muduo/muduo/net/Socket.cc	/^void Socket::bindAddress(const InetAddress& addr)$/;"	f	class:Socket	typeref:typename:void
bindOrDie	src/muduo/muduo/net/SocketsOps.cc	/^void sockets::bindOrDie(int sockfd, const struct sockaddr* addr)$/;"	f	class:sockets	typeref:typename:void
bit_reversed	src/libtfhe-superaic-core/fft_processors/nayuki/fft-model-of-x8664-avx.c	/^	uint64_t *bit_reversed;$/;"	m	struct:FftTables	typeref:typename:uint64_t *	file:
bit_reversed	src/libtfhe-superaic-core/fft_processors/nayuki/fft-portable.c	/^	size_t *bit_reversed;$/;"	m	struct:FftTables	typeref:typename:size_t *	file:
bit_reversed	src/libtfhe-superaic-core/fft_processors/nayuki/fft-x8664-avx-aux.c	/^	uint64_t *bit_reversed;$/;"	m	struct:FftTables	typeref:typename:uint64_t *	file:
bitrevloop	src/libtfhe-superaic-core/fft_processors/nayuki/fft-x8664-avx-reverse.s	/^bitrevloop:$/;"	l
bitrevloop	src/libtfhe-superaic-core/fft_processors/nayuki/fft-x8664-avx.s	/^bitrevloop:$/;"	l
bitrevskip	src/libtfhe-superaic-core/fft_processors/nayuki/fft-x8664-avx-reverse.s	/^bitrevskip:$/;"	l
bitrevskip	src/libtfhe-superaic-core/fft_processors/nayuki/fft-x8664-avx.s	/^bitrevskip:$/;"	l
bits	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  const Bits &bits() const { return u_.bits_; }$/;"	f	class:testing::internal::FloatingPoint	typeref:typename:const Bits &
bits_	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^    Bits bits_;      \/\/ The bits that represent the number.$/;"	m	union:testing::internal::FloatingPoint::FloatingPointUnion	typeref:typename:Bits
bk	src/libtfhe-superaic-core/include/lwebootstrappingkey.h	/^    TGswSample* bk; \/\/\/< the bootstrapping key (s->s")$/;"	m	struct:LweBootstrappingKey	typeref:typename:TGswSample *
bk	src/libtfhe-superaic-core/include/tfhe_gate_bootstrapping_structures.h	/^    const LweBootstrappingKey *const bk;$/;"	m	struct:TFheGateBootstrappingCloudKeySet	typeref:typename:const LweBootstrappingKey * const
bk	src/tests/fakes/lwe-bootstrapping.h	/^        TGswSample *bk; \/\/\/< the bootstrapping key (s->s")$/;"	m	struct:__anon027fcd4e0111::FakeLweBootstrappingKey	typeref:typename:TGswSample *
bk1	src/tests/io_test.cpp	/^    const LweBootstrappingKey* bk1 = new_random_bk_key(11,1,lweparams120, tgswparams128_2);$/;"	v	namespace:__anon2d72c1c60111	typeref:typename:const LweBootstrappingKey *
bkFFT	src/libtfhe-superaic-core/include/lwebootstrappingkey.h	/^    const TGswSampleFFT* bkFFT; \/\/\/< the bootstrapping key (s->s")$/;"	m	struct:LweBootstrappingKeyFFT	typeref:typename:const TGswSampleFFT *
bkFFT	src/libtfhe-superaic-core/include/tfhe_gate_bootstrapping_structures.h	/^    const LweBootstrappingKeyFFT *const bkFFT;$/;"	m	struct:TFheGateBootstrappingCloudKeySet	typeref:typename:const LweBootstrappingKeyFFT * const
bkFFT	src/tests/fakes/lwe-bootstrapping-fft.h	/^        TGswSampleFFT *bkFFT; \/\/\/< the bootstrapping key FFT (s->s")$/;"	m	struct:__anonaae24d1b0111::FakeLweBootstrappingKeyFFT	typeref:typename:TGswSampleFFT *
bk_params	src/libtfhe-superaic-core/include/lwebootstrappingkey.h	/^    const TGswParams* bk_params; \/\/\/< params of the Gsw elems in bk. key: s"$/;"	m	struct:LweBootstrappingKey	typeref:typename:const TGswParams *
bk_params	src/libtfhe-superaic-core/include/lwebootstrappingkey.h	/^    const TGswParams* bk_params; \/\/\/< params of the Gsw elems in bk. key: s"$/;"	m	struct:LweBootstrappingKeyFFT	typeref:typename:const TGswParams *
bk_params	src/tests/bootstrapping_classic_PBS_parameters_test.cpp	/^    const TGswParams *bk_params = new_TGswParams(l_bk, Bgbit_bk, accum_params);$/;"	v	namespace:__anon8153b4f20111	typeref:typename:const TGswParams *
bk_params	src/tests/bootstrapping_direct_test.cpp	/^    const TGswParams *bk_params = new_TGswParams(l_bk, Bgbit_bk, accum_params);$/;"	v	namespace:__anon560166140111	typeref:typename:const TGswParams *
bk_params	src/tests/bootstrapping_test.cpp	/^    const TGswParams *bk_params = new_TGswParams(l_bk, Bgbit_bk, accum_params);$/;"	v	namespace:__anonf36cd29a0111	typeref:typename:const TGswParams *
bk_params	src/tests/fakes/lwe-bootstrapping-fft.h	/^        const TGswParams *bk_params; \/\/\/< params of the Gsw elems in bk. key: s"$/;"	m	struct:__anonaae24d1b0111::FakeLweBootstrappingKeyFFT	typeref:typename:const TGswParams *
bk_params	src/tests/fakes/lwe-bootstrapping.h	/^        const TGswParams *bk_params; \/\/\/< params of the Gsw elems in bk. key: s"$/;"	m	struct:__anon027fcd4e0111::FakeLweBootstrappingKey	typeref:typename:const TGswParams *
bk_params	src/tests/macros_decrypt_with_plaintext_modulus_macros.cpp	/^    const TGswParams *bk_params = new_TGswParams(l_bk, Bgbit_bk, accum_params);$/;"	v	namespace:__anon478224cd0111	typeref:typename:const TGswParams *
bk_params	src/tests/macros_modSwitch_with_plaintext_modulus_macros.cpp	/^    const TGswParams *bk_params = new_TGswParams(l_bk, Bgbit_bk, accum_params);$/;"	v	namespace:__anon4cdaee640111	typeref:typename:const TGswParams *
bk_params	src/tests/ops_add.cpp	/^    const TGswParams *bk_params = new_TGswParams(l_bk, Bgbit_bk, accum_params);$/;"	v	namespace:__anonb1f413890111	typeref:typename:const TGswParams *
bk_params	src/tests/ops_add_with_carry.cpp	/^    const TGswParams *bk_params = new_TGswParams(l_bk, Bgbit_bk, accum_params);$/;"	v	namespace:__anon662e63c40111	typeref:typename:const TGswParams *
bk_params	src/tests/zpf_for_bootstrap_detail.cpp	/^    const TGswParams *bk_params = new_TGswParams(l_bk, Bgbit_bk, accum_params);$/;"	v	namespace:__anonc07144f40111	typeref:typename:const TGswParams *
black_	src/muduo/examples/procmon/plot.h	/^  const int black_;$/;"	m	class:Plot	typeref:typename:const int
bloc_sample	src/libtfhe-superaic-core/include/tgsw.h	/^    TLweSample **bloc_sample;\/\/\/< accès optionnel aux différents blocs de taille l.$/;"	m	struct:TGswSample	typeref:typename:TLweSample **
block_decomposer	src/libtfhe-superaic-core/message_functions.cpp	/^EXPORT void block_decomposer(int32_t *result, int32_t message, const int32_t message_modulu, con/;"	f	typeref:typename:EXPORT void
block_recomposer	src/libtfhe-superaic-core/message_functions.cpp	/^EXPORT int32_t block_recomposer(const int32_t *plaintext_block, const int32_t message_modulu, co/;"	f	typeref:typename:EXPORT int32_t
blockingqueue_bench	src/muduo/muduo/base/tests/CMakeLists.txt	/^add_executable(blockingqueue_bench BlockingQueue_bench.cc)$/;"	t
blockingqueue_bench2	src/muduo/muduo/base/tests/CMakeLists.txt	/^add_executable(blockingqueue_bench2 BlockingQueue_bench2.cc)$/;"	t
blockingqueue_test	src/muduo/muduo/base/tests/CMakeLists.txt	/^add_executable(blockingqueue_test BlockingQueue_test.cc)$/;"	t
blue_	src/muduo/examples/procmon/plot.h	/^  const int blue_;$/;"	m	class:Plot	typeref:typename:const int
body_	src/muduo/muduo/net/http/HttpResponse.h	/^  string body_;$/;"	m	class:muduo::net::HttpResponse	typeref:typename:string
bool_constant	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^struct bool_constant {$/;"	s	namespace:testing::internal
boot-gates.cpp.i	buildotests/libtfhe-superaic-core/Makefile	/^boot-gates.cpp.i:$/;"	t
boot-gates.cpp.o	buildotests/libtfhe-superaic-core/Makefile	/^boot-gates.cpp.o:$/;"	t
boot-gates.cpp.s	buildotests/libtfhe-superaic-core/Makefile	/^boot-gates.cpp.s:$/;"	t
boot-gates.i	buildotests/libtfhe-superaic-core/Makefile	/^boot-gates.i: boot-gates.cpp.i$/;"	t
boot-gates.o	buildotests/libtfhe-superaic-core/Makefile	/^boot-gates.o: boot-gates.cpp.o$/;"	t
boot-gates.s	buildotests/libtfhe-superaic-core/Makefile	/^boot-gates.s: boot-gates.cpp.s$/;"	t
bootsAND	src/libtfhe-superaic-core/boot-gates.cpp	/^bootsAND(LweSample *result, const LweSample *ca, const LweSample *cb, const TFheGateBootstrappin/;"	f	typeref:typename:EXPORT void
bootsANDNY	src/libtfhe-superaic-core/boot-gates.cpp	/^bootsANDNY(LweSample *result, const LweSample *ca, const LweSample *cb, const TFheGateBootstrapp/;"	f	typeref:typename:EXPORT void
bootsANDYN	src/libtfhe-superaic-core/boot-gates.cpp	/^bootsANDYN(LweSample *result, const LweSample *ca, const LweSample *cb, const TFheGateBootstrapp/;"	f	typeref:typename:EXPORT void
bootsCONSTANT	src/libtfhe-superaic-core/boot-gates.cpp	/^EXPORT void bootsCONSTANT(LweSample *result, int32_t value, const TFheGateBootstrappingCloudKeyS/;"	f	typeref:typename:EXPORT void
bootsCOPY	src/libtfhe-superaic-core/boot-gates.cpp	/^EXPORT void bootsCOPY(LweSample *result, const LweSample *ca, const TFheGateBootstrappingCloudKe/;"	f	typeref:typename:EXPORT void
bootsMUX	src/libtfhe-superaic-core/boot-gates.cpp	/^EXPORT void bootsMUX(LweSample *result, const LweSample *a, const LweSample *b, const LweSample /;"	f	typeref:typename:EXPORT void
bootsNAND	src/libtfhe-superaic-core/boot-gates.cpp	/^bootsNAND(LweSample *result, const LweSample *ca, const LweSample *cb, const TFheGateBootstrappi/;"	f	typeref:typename:EXPORT void
bootsNOR	src/libtfhe-superaic-core/boot-gates.cpp	/^bootsNOR(LweSample *result, const LweSample *ca, const LweSample *cb, const TFheGateBootstrappin/;"	f	typeref:typename:EXPORT void
bootsNOT	src/libtfhe-superaic-core/boot-gates.cpp	/^EXPORT void bootsNOT(LweSample *result, const LweSample *ca, const TFheGateBootstrappingCloudKey/;"	f	typeref:typename:EXPORT void
bootsOR	src/libtfhe-superaic-core/boot-gates.cpp	/^bootsOR(LweSample *result, const LweSample *ca, const LweSample *cb, const TFheGateBootstrapping/;"	f	typeref:typename:EXPORT void
bootsORNY	src/libtfhe-superaic-core/boot-gates.cpp	/^bootsORNY(LweSample *result, const LweSample *ca, const LweSample *cb, const TFheGateBootstrappi/;"	f	typeref:typename:EXPORT void
bootsORYN	src/libtfhe-superaic-core/boot-gates.cpp	/^bootsORYN(LweSample *result, const LweSample *ca, const LweSample *cb, const TFheGateBootstrappi/;"	f	typeref:typename:EXPORT void
bootsSymDecrypt	src/libtfhe-superaic-core/tfhe_gate_bootstrapping.cpp	/^EXPORT int32_t bootsSymDecrypt(const LweSample *sample, const TFheGateBootstrappingSecretKeySet /;"	f	typeref:typename:EXPORT int32_t
bootsSymEncrypt	src/libtfhe-superaic-core/tfhe_gate_bootstrapping.cpp	/^EXPORT void bootsSymEncrypt(LweSample *result, int32_t message, const TFheGateBootstrappingSecre/;"	f	typeref:typename:EXPORT void
bootsXNOR	src/libtfhe-superaic-core/boot-gates.cpp	/^bootsXNOR(LweSample *result, const LweSample *ca, const LweSample *cb, const TFheGateBootstrappi/;"	f	typeref:typename:EXPORT void
bootsXOR	src/libtfhe-superaic-core/boot-gates.cpp	/^bootsXOR(LweSample *result, const LweSample *ca, const LweSample *cb, const TFheGateBootstrappin/;"	f	typeref:typename:EXPORT void
bootstrap	docs/code_note.md	/^## bootstrap$/;"	s	chapter:Fake
bootstrap	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockClient.java	/^    private ClientBootstrap bootstrap;$/;"	f	class:MockClient	file:
bootstrap_key_wrap	src/libtfhe-superaic-core/include/tfhe_session.h	/^    shared_ptr<LweBootstrappingKey_Wrap> bootstrap_key_wrap;$/;"	m	class:tfhe_superaic::Session	typeref:typename:shared_ptr<LweBootstrappingKey_Wrap>
boss	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockBackendServer.java	/^    private final Executor boss;$/;"	f	class:MockBackendServer	file:
boss	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockClient.java	/^    private final Executor boss;$/;"	f	class:MockClient	file:
boss	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MultiplexerTest.java	/^    private final ExecutorService boss;$/;"	f	class:MultiplexerTest	file:
boundedblockingqueue_test	src/muduo/muduo/base/tests/CMakeLists.txt	/^add_executable(boundedblockingqueue_test BoundedBlockingQueue_test.cc)$/;"	t
bps	src/muduo/examples/wordcount/slowsink.py	/^bps = mps * 1000000$/;"	v
break_on_failure	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  bool break_on_failure;$/;"	m	struct:testing::Flags	typeref:typename:bool	file:
break_on_failure_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  bool break_on_failure_;$/;"	m	class:testing::internal::GTestFlagSaver	typeref:typename:bool
bsk_params	src/tests/decrypt_with_plaintext_modulus.cpp	/^    const TGswParams *bsk_params = new_TGswParams(l_bsk, Bgbit_bsk, accum_params);$/;"	v	namespace:__anondb55d4a50111	typeref:typename:const TGswParams *
buckets_	src/muduo/examples/wordcount/hasher.cc	/^  std::vector<std::unique_ptr<SendThrottler>> buckets_;$/;"	m	class:WordCountSender	typeref:typename:std::vector<std::unique_ptr<SendThrottler>>	file:
buf_	src/muduo/muduo/base/FileUtil.h	/^  char buf_[kBufferSize];$/;"	m	class:muduo::FileUtil::ReadSmallFile	typeref:typename:char[]
buf_	src/muduo/muduo/base/LogStream.h	/^  char buf_[32];$/;"	m	class:muduo::Fmt	typeref:typename:char[32]
buffer	src/muduo/muduo/base/FileUtil.h	/^  const char* buffer() const { return buf_; }$/;"	f	class:muduo::FileUtil::ReadSmallFile	typeref:typename:const char *
buffer	src/muduo/muduo/base/LogStream.h	/^  const Buffer& buffer() const { return buffer_; }$/;"	f	class:muduo::LogStream	typeref:typename:const Buffer &
bufferFactory	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MultiplexerTest.java	/^    public static final ChannelBufferFactory bufferFactory =$/;"	f	class:MultiplexerTest
bufferFactory	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/TestCase.java	/^    protected static final ChannelBufferFactory bufferFactory = MultiplexerTest.bufferFactory;$/;"	f	class:TestCase
bufferSize_	src/muduo/muduo/net/ZlibStream.h	/^  int bufferSize_;$/;"	m	class:muduo::net::ZlibOutputStream	typeref:typename:int
buffer_	src/muduo/examples/wordcount/hasher.cc	/^  Buffer buffer_;$/;"	m	class:SendThrottler	typeref:typename:Buffer	file:
buffer_	src/muduo/muduo/base/FileUtil.h	/^  char buffer_[64*1024];$/;"	m	class:muduo::FileUtil::AppendFile	typeref:typename:char[]
buffer_	src/muduo/muduo/base/LogStream.h	/^  Buffer buffer_;$/;"	m	class:muduo::LogStream	typeref:typename:Buffer
buffer_	src/muduo/muduo/net/Buffer.h	/^  std::vector<char> buffer_;$/;"	m	class:muduo::net::Buffer	typeref:typename:std::vector<char>
buffer_	src/muduo/muduo/net/protobuf/BufferStream.h	/^  Buffer* buffer_;$/;"	m	class:muduo::net::BufferOutputStream	typeref:typename:Buffer *
buffer_size	src/tests/googletest/googletest/xcode/Scripts/versiongenerate.py	/^buffer_size = 1024$/;"	v
buffer_unittest	src/muduo/muduo/net/tests/CMakeLists.txt	/^add_executable(buffer_unittest Buffer_unittest.cc)$/;"	t
build	Makefile	/^build: $/;"	t
builddtests	Makefile	/^builddtests:$/;"	t
buildftests	Makefile	/^buildftests:$/;"	t
buildmtests	Makefile	/^buildmtests:$/;"	t
buildotests	Makefile	/^buildotests:$/;"	t
buildqtests	Makefile	/^buildqtests:$/;"	t
builtins	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    import __builtin__ as builtins$/;"	I	nameref:module:__builtin__
builtins	src/tests/googletest/googlemock/scripts/generator/cpp/keywords.py	/^    import __builtin__ as builtins$/;"	I	nameref:module:__builtin__
builtins	src/tests/googletest/googlemock/scripts/generator/cpp/tokenize.py	/^    import __builtin__ as builtins$/;"	I	nameref:module:__builtin__
busy	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    bool busy = false;$/;"	m	class:tfhe_superaic::Executor	typeref:typename:bool
busy	src/muduo/examples/procmon/dummyload.cc	/^double busy(int cycles)$/;"	f	typeref:typename:double
bytes	src/muduo/examples/ace/ttcp/ttcp.cc	/^  int64_t bytes;$/;"	m	struct:Context	typeref:typename:int64_t	file:
bytesRead	src/muduo/examples/pingpong/client.cc	/^  int64_t bytesRead() const$/;"	f	class:Session	typeref:typename:int64_t	file:
bytesRead_	src/muduo/examples/memcached/server/Session.h	/^  size_t bytesRead_;$/;"	m	class:Session	typeref:typename:size_t
bytesRead_	src/muduo/examples/pingpong/client.cc	/^  int64_t bytesRead_;$/;"	m	class:Session	typeref:typename:int64_t	file:
bytesToDiscard_	src/muduo/examples/memcached/server/Session.h	/^  size_t bytesToDiscard_;$/;"	m	class:Session	typeref:typename:size_t
bytesWritten_	src/muduo/examples/pingpong/client.cc	/^  int64_t bytesWritten_;$/;"	m	class:Session	typeref:typename:int64_t	file:
bzero	src/muduo/muduo/base/LogStream.h	/^  void bzero() { memZero(data_, sizeof data_); }$/;"	f	class:muduo::detail::FixedBuffer	typeref:typename:void
c2h_fp	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    int c2h_fp = 0;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:int
c_	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  char c_;$/;"	m	class:testing::gmock_matchers_test::Unprintable	typeref:typename:char	file:
c_str	src/muduo/muduo/base/StringPiece.h	/^  const char* c_str() const { return str_; }$/;"	f	class:muduo::StringArg	typeref:typename:const char *
c_str	src/tests/googletest/googletest/include/gtest/internal/gtest-filepath.h	/^  const char* c_str() const { return pathname_.c_str(); }$/;"	f	class:testing::internal::FilePath	typeref:typename:const char *
c_string	src/tests/googletest/googletest/samples/sample2.h	/^  const char* c_string() const { return c_string_; }$/;"	f	class:MyString	typeref:typename:const char *
c_string_	src/tests/googletest/googletest/samples/sample2.h	/^  const char* c_string_;$/;"	m	class:MyString	typeref:typename:const char *
cacheTid	src/muduo/muduo/base/Thread.cc	/^void CurrentThread::cacheTid()$/;"	f	class:muduo::CurrentThread	typeref:typename:void
cal_pack_size	src/libtfhe-superaic-core/include/tfhe_package.h	/^inline size_t cal_pack_size(size_t payload_size){return payload_size + get_pack_head_size();};$/;"	f	typeref:typename:size_t
cal_session_ID	src/libtfhe-superaic-core/tfhe_session.cpp	/^Session_ID_t Session::cal_session_ID(const LweKey *lwe_key)$/;"	f	class:tfhe_superaic::Session	typeref:typename:Session_ID_t
cal_string_payload_size	src/libtfhe-superaic-core/tfhe_package.cpp	/^size_t cal_string_payload_size(string &msg){$/;"	f	typeref:typename:size_t
call_count	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  int call_count() const$/;"	f	class:testing::internal::ExpectationBase	typeref:typename:int
call_count_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  int call_count_;  \/\/ How many times this expectation has been invoked.$/;"	m	class:testing::internal::ExpectationBase	typeref:typename:int
callable_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    mutable CallableStorageType callable_;$/;"	m	class:testing::internal::ResultOfMatcher::Impl	typeref:typename:CallableStorageType
callable_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const CallableStorageType callable_;$/;"	m	class:testing::internal::ResultOfMatcher	typeref:typename:const CallableStorageType
callback	src/muduo/examples/cdns/Resolver.h	/^    Callback callback;$/;"	m	struct:cdns::Resolver::QueryData	typeref:typename:Callback
callback	src/muduo/muduo/base/tests/Exception_test.cc	/^   void callback()$/;"	f	class:Bar	typeref:typename:void	file:
callback	src/muduo/muduo/net/tests/EventLoop_unittest.cc	/^void callback()$/;"	f	typeref:typename:void
callback_	src/muduo/examples/protobuf/codec/dispatcher.h	/^  ProtobufMessageTCallback callback_;$/;"	m	class:CallbackT	typeref:typename:ProtobufMessageTCallback
callback_	src/muduo/muduo/net/EventLoopThread.h	/^  ThreadInitCallback callback_;$/;"	m	class:muduo::net::EventLoopThread	typeref:typename:ThreadInitCallback
callback_	src/muduo/muduo/net/Timer.h	/^  const TimerCallback callback_;$/;"	m	class:muduo::net::Timer	typeref:typename:const TimerCallback
callbacks_	src/muduo/examples/protobuf/codec/dispatcher.h	/^  CallbackMap callbacks_;$/;"	m	class:ProtobufDispatcher	typeref:typename:CallbackMap
callbacks_	src/muduo/examples/protobuf/codec/dispatcher_lite.h	/^  CallbackMap callbacks_;$/;"	m	class:ProtobufDispatcherLite	typeref:typename:CallbackMap
callingExpiredTimers_	src/muduo/muduo/net/TimerQueue.h	/^  bool callingExpiredTimers_; \/* atomic *\/$/;"	m	class:muduo::net::TimerQueue	typeref:typename:bool
callingPendingFunctors_	src/muduo/muduo/net/EventLoop.h	/^  bool callingPendingFunctors_; \/* atomic *\/$/;"	m	class:muduo::net::EventLoop	typeref:typename:bool
cancel	src/muduo/muduo/net/EventLoop.cc	/^void EventLoop::cancel(TimerId timerId)$/;"	f	class:EventLoop	typeref:typename:void
cancel	src/muduo/muduo/net/TimerQueue.cc	/^void TimerQueue::cancel(TimerId timerId)$/;"	f	class:TimerQueue	typeref:typename:void
cancel	src/muduo/muduo/net/tests/TimerQueue_unittest.cc	/^void cancel(TimerId timer)$/;"	f	typeref:typename:void
cancelInLoop	src/muduo/muduo/net/TimerQueue.cc	/^void TimerQueue::cancelInLoop(TimerId timerId)$/;"	f	class:TimerQueue	typeref:typename:void
cancelingTimers_	src/muduo/muduo/net/TimerQueue.h	/^  ActiveTimerSet cancelingTimers_;$/;"	m	class:muduo::net::TimerQueue	typeref:typename:ActiveTimerSet
capability	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    CAPABILITY capability = CAPABILITY_NONE;$/;"	m	class:tfhe_superaic::TFHE_ACC	typeref:typename:CAPABILITY
capacity	src/muduo/muduo/base/BoundedBlockingQueue.h	/^  size_t capacity() const$/;"	f	class:muduo::BoundedBlockingQueue	typeref:typename:size_t
capture	src/tests/googletest/googletest/include/gtest/internal/gtest-linked_ptr.h	/^  void capture(T* ptr) {$/;"	f	class:testing::internal::linked_ptr	typeref:typename:void
captured_in_key_copy	src/tests/bootstrapping_classic_PBS_parameters_test.cpp	/^        vector<int32_t> captured_in_key_copy;$/;"	m	class:__anon8153b4f20111::TfheCreateBootstrapKeyTest	typeref:typename:vector<int32_t>	file:
captured_in_key_copy	src/tests/bootstrapping_direct_test.cpp	/^        vector<int32_t> captured_in_key_copy;$/;"	m	class:__anon560166140111::TfheCreateBootstrapKeyTest	typeref:typename:vector<int32_t>	file:
captured_in_key_copy	src/tests/bootstrapping_test.cpp	/^        vector<int32_t> captured_in_key_copy;$/;"	m	class:__anonf36cd29a0111::TfheCreateBootstrapKeyTest	typeref:typename:vector<int32_t>	file:
captured_in_key_copy	src/tests/decrypt_with_plaintext_modulus.cpp	/^        vector<int32_t> captured_in_key_copy;$/;"	m	class:__anondb55d4a50111::TfheCreateBootstrapKeyTest	typeref:typename:vector<int32_t>	file:
captured_in_key_copy	src/tests/macros_decrypt_with_plaintext_modulus_macros.cpp	/^        vector<int32_t> captured_in_key_copy;$/;"	m	class:__anon478224cd0111::TfheCreateBootstrapKeyTest	typeref:typename:vector<int32_t>	file:
captured_in_key_copy	src/tests/macros_modSwitch_with_plaintext_modulus_macros.cpp	/^        vector<int32_t> captured_in_key_copy;$/;"	m	class:__anon4cdaee640111::TfheCreateBootstrapKeyTest	typeref:typename:vector<int32_t>	file:
captured_in_key_copy	src/tests/ops_add.cpp	/^        vector<int32_t> captured_in_key_copy;$/;"	m	class:__anonb1f413890111::TfheCreateBootstrapKeyTest	typeref:typename:vector<int32_t>	file:
captured_in_key_copy	src/tests/ops_add_with_carry.cpp	/^        vector<int32_t> captured_in_key_copy;$/;"	m	class:__anon662e63c40111::TfheCreateBootstrapKeyTest	typeref:typename:vector<int32_t>	file:
captured_in_key_copy	src/tests/zpf_for_bootstrap_detail.cpp	/^        vector<int32_t> captured_in_key_copy;$/;"	m	class:__anonc07144f40111::TfheCreateBootstrapKeyTest	typeref:typename:vector<int32_t>	file:
captured_out_key	src/tests/bootstrapping_classic_PBS_parameters_test.cpp	/^        const LweKey *captured_out_key;$/;"	m	class:__anon8153b4f20111::TfheCreateBootstrapKeyTest	typeref:typename:const LweKey *	file:
captured_out_key	src/tests/bootstrapping_direct_test.cpp	/^        const LweKey *captured_out_key;$/;"	m	class:__anon560166140111::TfheCreateBootstrapKeyTest	typeref:typename:const LweKey *	file:
captured_out_key	src/tests/bootstrapping_test.cpp	/^        const LweKey *captured_out_key;$/;"	m	class:__anonf36cd29a0111::TfheCreateBootstrapKeyTest	typeref:typename:const LweKey *	file:
captured_out_key	src/tests/decrypt_with_plaintext_modulus.cpp	/^        const LweKey *captured_out_key;$/;"	m	class:__anondb55d4a50111::TfheCreateBootstrapKeyTest	typeref:typename:const LweKey *	file:
captured_out_key	src/tests/macros_decrypt_with_plaintext_modulus_macros.cpp	/^        const LweKey *captured_out_key;$/;"	m	class:__anon478224cd0111::TfheCreateBootstrapKeyTest	typeref:typename:const LweKey *	file:
captured_out_key	src/tests/macros_modSwitch_with_plaintext_modulus_macros.cpp	/^        const LweKey *captured_out_key;$/;"	m	class:__anon4cdaee640111::TfheCreateBootstrapKeyTest	typeref:typename:const LweKey *	file:
captured_out_key	src/tests/ops_add.cpp	/^        const LweKey *captured_out_key;$/;"	m	class:__anonb1f413890111::TfheCreateBootstrapKeyTest	typeref:typename:const LweKey *	file:
captured_out_key	src/tests/ops_add_with_carry.cpp	/^        const LweKey *captured_out_key;$/;"	m	class:__anon662e63c40111::TfheCreateBootstrapKeyTest	typeref:typename:const LweKey *	file:
captured_out_key	src/tests/zpf_for_bootstrap_detail.cpp	/^        const LweKey *captured_out_key;$/;"	m	class:__anonc07144f40111::TfheCreateBootstrapKeyTest	typeref:typename:const LweKey *	file:
captured_result	src/tests/bootstrapping_classic_PBS_parameters_test.cpp	/^        LweKeySwitchKey *captured_result;$/;"	m	class:__anon8153b4f20111::TfheCreateBootstrapKeyTest	typeref:typename:LweKeySwitchKey *	file:
captured_result	src/tests/bootstrapping_direct_test.cpp	/^        LweKeySwitchKey *captured_result;$/;"	m	class:__anon560166140111::TfheCreateBootstrapKeyTest	typeref:typename:LweKeySwitchKey *	file:
captured_result	src/tests/bootstrapping_test.cpp	/^        LweKeySwitchKey *captured_result;$/;"	m	class:__anonf36cd29a0111::TfheCreateBootstrapKeyTest	typeref:typename:LweKeySwitchKey *	file:
captured_result	src/tests/decrypt_with_plaintext_modulus.cpp	/^        LweKeySwitchKey *captured_result;$/;"	m	class:__anondb55d4a50111::TfheCreateBootstrapKeyTest	typeref:typename:LweKeySwitchKey *	file:
captured_result	src/tests/macros_decrypt_with_plaintext_modulus_macros.cpp	/^        LweKeySwitchKey *captured_result;$/;"	m	class:__anon478224cd0111::TfheCreateBootstrapKeyTest	typeref:typename:LweKeySwitchKey *	file:
captured_result	src/tests/macros_modSwitch_with_plaintext_modulus_macros.cpp	/^        LweKeySwitchKey *captured_result;$/;"	m	class:__anon4cdaee640111::TfheCreateBootstrapKeyTest	typeref:typename:LweKeySwitchKey *	file:
captured_result	src/tests/ops_add.cpp	/^        LweKeySwitchKey *captured_result;$/;"	m	class:__anonb1f413890111::TfheCreateBootstrapKeyTest	typeref:typename:LweKeySwitchKey *	file:
captured_result	src/tests/ops_add_with_carry.cpp	/^        LweKeySwitchKey *captured_result;$/;"	m	class:__anon662e63c40111::TfheCreateBootstrapKeyTest	typeref:typename:LweKeySwitchKey *	file:
captured_result	src/tests/zpf_for_bootstrap_detail.cpp	/^        LweKeySwitchKey *captured_result;$/;"	m	class:__anonc07144f40111::TfheCreateBootstrapKeyTest	typeref:typename:LweKeySwitchKey *	file:
cardinality	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  const Cardinality& cardinality() const { return cardinality_; }$/;"	f	class:testing::internal::ExpectationBase	typeref:typename:const Cardinality &
cardinality_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  Cardinality cardinality_;            \/\/ The cardinality of the expectation.$/;"	m	class:testing::internal::ExpectationBase	typeref:typename:Cardinality
cardinality_specified	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  bool cardinality_specified() const { return cardinality_specified_; }$/;"	f	class:testing::internal::ExpectationBase	typeref:typename:bool
cardinality_specified_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  bool cardinality_specified_;$/;"	m	class:testing::internal::ExpectationBase	typeref:typename:bool
cas	src/muduo/examples/memcached/server/Item.h	/^  uint64_t cas() const$/;"	f	class:Item	typeref:typename:uint64_t
cas_	src/muduo/examples/memcached/server/Item.h	/^  uint64_t       cas_;$/;"	m	class:Item	typeref:typename:uint64_t
case_sensitive_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const bool case_sensitive_;$/;"	m	class:testing::internal::StrEqualityMatcher	typeref:typename:const bool
catch_exceptions	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  bool catch_exceptions() const { return catch_exceptions_; }$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:bool
catch_exceptions	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  bool catch_exceptions;$/;"	m	struct:testing::Flags	typeref:typename:bool	file:
catch_exceptions_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  bool catch_exceptions_;$/;"	m	class:testing::internal::GTestFlagSaver	typeref:typename:bool
catch_exceptions_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  bool catch_exceptions_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:bool
cb_	src/muduo/examples/fastcgi/fastcgi.h	/^  Callback cb_;$/;"	m	class:FastCgiCodec	typeref:typename:Callback
cb_	src/muduo/examples/sudoku/batch.cc	/^  DoneCallback cb_;$/;"	m	class:SudokuClient	typeref:typename:DoneCallback	file:
cb_	src/muduo/muduo/net/tests/Channel_test.cc	/^  TimerCallback cb_;$/;"	m	class:PeriodicTimer	typeref:typename:TimerCallback	file:
cdns	src/muduo/examples/cdns/CMakeLists.txt	/^add_executable(cdns dns.cc)$/;"	t
cdns	src/muduo/examples/cdns/Resolver.h	/^namespace cdns$/;"	n
ch	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  char ch;$/;"	m	struct:testing::gmock_matchers_test::DerivedStruct	typeref:typename:char	file:
channelConnected	src/muduo/examples/filetransfer/loadtest/Handler.java	/^    public void channelConnected(ChannelHandlerContext ctx, ChannelStateEvent e)$/;"	m	class:Handler
channelConnected	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockBackendServer.java	/^        public void channelConnected(ChannelHandlerContext ctx, ChannelStateEvent e)$/;"	m	class:MockBackendServer.Handler
channelConnected	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockClient.java	/^        public void channelConnected(ChannelHandlerContext ctx, ChannelStateEvent e)$/;"	m	class:MockClient.Handler
channelDisconnected	src/muduo/examples/filetransfer/loadtest/Handler.java	/^    public void channelDisconnected(ChannelHandlerContext ctx, ChannelStateEvent e)$/;"	m	class:Handler
channelDisconnected	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockBackendServer.java	/^        public void channelDisconnected(ChannelHandlerContext ctx, ChannelStateEvent e)$/;"	m	class:MockBackendServer.Handler
channelDisconnected	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockClient.java	/^        public void channelDisconnected(ChannelHandlerContext ctx, ChannelStateEvent e)$/;"	m	class:MockClient.Handler
channel_	src/muduo/contrib/hiredis/Hiredis.h	/^  std::shared_ptr<muduo::net::Channel> channel_;$/;"	m	class:hiredis::Hiredis	typeref:typename:std::shared_ptr<muduo::net::Channel>
channel_	src/muduo/examples/curl/Curl.h	/^  std::shared_ptr<muduo::net::Channel> channel_;$/;"	m	class:curl::Request	typeref:typename:std::shared_ptr<muduo::net::Channel>
channel_	src/muduo/examples/protobuf/resolver/client.cc	/^  RpcChannelPtr channel_;$/;"	m	class:RpcClient	typeref:typename:RpcChannelPtr	file:
channel_	src/muduo/examples/protobuf/rpc/client.cc	/^  RpcChannelPtr channel_;$/;"	m	class:RpcClient	typeref:typename:RpcChannelPtr	file:
channel_	src/muduo/examples/protobuf/rpcbench/client.cc	/^  RpcChannelPtr channel_;$/;"	m	class:RpcClient	typeref:typename:RpcChannelPtr	file:
channel_	src/muduo/muduo/net/Connector.h	/^  std::unique_ptr<Channel> channel_;$/;"	m	class:muduo::net::Connector	typeref:typename:std::unique_ptr<Channel>
channel_	src/muduo/muduo/net/TcpConnection.h	/^  std::unique_ptr<Channel> channel_;$/;"	m	class:muduo::net::TcpConnection	typeref:typename:std::unique_ptr<Channel>
channel_test	src/muduo/muduo/net/tests/CMakeLists.txt	/^add_executable(channel_test Channel_test.cc)$/;"	t
channels_	src/muduo/examples/cdns/Resolver.h	/^  ChannelList channels_;$/;"	m	class:cdns::Resolver	typeref:typename:ChannelList
channels_	src/muduo/muduo/net/Poller.h	/^  ChannelMap channels_;$/;"	m	class:muduo::net::Poller	typeref:typename:ChannelMap
char_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  char char_;$/;"	m	class:__anonf780395f0311::UnprintableChar	typeref:typename:char	file:
check	src/tests/googletest/googletest/scripts/test/Makefile	/^check : all$/;"	t
checkEveryN_	src/muduo/muduo/base/LogFile.h	/^  const int checkEveryN_;$/;"	m	class:muduo::LogFile	typeref:typename:const int
checkFinish	src/muduo/examples/curl/Curl.cc	/^void Curl::checkFinish()$/;"	f	class:Curl	typeref:typename:void
check_PROGRAMS	src/tests/googletest/googlemock/Makefile.am	/^check_PROGRAMS=$/;"	m
check_PROGRAMS	src/tests/googletest/googletest/Makefile.am	/^check_PROGRAMS=$/;"	m
check_alternate_real	src/libtfhe-superaic-core/fft_processors/nayuki/fft_processor_nayuki.cpp	/^void FFT_Processor_nayuki::check_alternate_real() {$/;"	f	class:FFT_Processor_nayuki	typeref:typename:void
check_conjugate_cplx	src/libtfhe-superaic-core/fft_processors/nayuki/fft_processor_nayuki.cpp	/^void FFT_Processor_nayuki::check_conjugate_cplx() {$/;"	f	class:FFT_Processor_nayuki	typeref:typename:void
checkerboard	src/muduo/examples/protobuf/rpc/sudoku.proto	/^  optional string checkerboard = 2;$/;"	f	message:sudoku.SudokuResponse	typeref:typename:string
checkerboard	src/muduo/examples/protobuf/rpc/sudoku.proto	/^  required string checkerboard = 1;$/;"	f	message:sudoku.SudokuRequest	typeref:typename:string
checksum	src/muduo/muduo/net/protobuf/ProtobufCodecLite.cc	/^int32_t ProtobufCodecLite::checksum(const void* buf, int len)$/;"	f	class:ProtobufCodecLite	typeref:typename:int32_t
child	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^child = gtest_test_utils.Subprocess($/;"	v
child_handle_	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  AutoHandle child_handle_;$/;"	m	class:testing::internal::WindowsDeathTest	typeref:typename:AutoHandle	file:
child_pid_	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  pid_t child_pid_;$/;"	m	class:testing::internal::ForkingDeathTest	typeref:typename:pid_t	file:
cipher_word	src/libtfhe-superaic-core/include/tfhe_superaic_torus.h	/^typedef Torus32 cipher_word;$/;"	t	typeref:typename:Torus32
classic_PBS_parameters_H	src/libtfhe-superaic-core/include/classic_PBS_parameters.h	/^#define classic_PBS_parameters_H$/;"	d
clean	Makefile	/^clean: build$/;"	t
clean	buildotests/Makefile	/^clean:$/;"	t
clean	buildotests/driver/Makefile	/^clean:$/;"	t
clean	buildotests/examples/Makefile	/^clean:$/;"	t
clean	buildotests/libtfhe-superaic-acc/Makefile	/^clean:$/;"	t
clean	buildotests/libtfhe-superaic-client/Makefile	/^clean:$/;"	t
clean	buildotests/libtfhe-superaic-core/Makefile	/^clean:$/;"	t
clean	buildotests/libtfhe-superaic-core/fft_processors/Makefile	/^clean:$/;"	t
clean	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^clean:$/;"	t
clean	buildotests/libtfhe-superaic-server/Makefile	/^clean:$/;"	t
clean	buildotests/tests/Makefile	/^clean:$/;"	t
clean	buildotests/tests/googletest/Makefile	/^clean:$/;"	t
clean	buildotests/tests/googletest/googlemock/Makefile	/^clean:$/;"	t
clean	buildotests/tests/googletest/googlemock/gtest/Makefile	/^clean:$/;"	t
clean	src/tests/googletest/googlemock/make/Makefile	/^clean :$/;"	t
clean	src/tests/googletest/googletest/make/Makefile	/^clean :$/;"	t
clean	src/tests/googletest/googletest/scripts/test/Makefile	/^clean :$/;"	t
clean/fast	buildotests/Makefile	/^clean\/fast: clean$/;"	t
clean/fast	buildotests/driver/Makefile	/^clean\/fast: clean$/;"	t
clean/fast	buildotests/examples/Makefile	/^clean\/fast: clean$/;"	t
clean/fast	buildotests/libtfhe-superaic-acc/Makefile	/^clean\/fast: clean$/;"	t
clean/fast	buildotests/libtfhe-superaic-client/Makefile	/^clean\/fast: clean$/;"	t
clean/fast	buildotests/libtfhe-superaic-core/Makefile	/^clean\/fast: clean$/;"	t
clean/fast	buildotests/libtfhe-superaic-core/fft_processors/Makefile	/^clean\/fast: clean$/;"	t
clean/fast	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^clean\/fast: clean$/;"	t
clean/fast	buildotests/libtfhe-superaic-server/Makefile	/^clean\/fast: clean$/;"	t
clean/fast	buildotests/tests/Makefile	/^clean\/fast: clean$/;"	t
clean/fast	buildotests/tests/googletest/Makefile	/^clean\/fast: clean$/;"	t
clean/fast	buildotests/tests/googletest/googlemock/Makefile	/^clean\/fast: clean$/;"	t
clean/fast	buildotests/tests/googletest/googlemock/gtest/Makefile	/^clean\/fast: clean$/;"	t
cleanup	src/muduo/contrib/hiredis/Hiredis.cc	/^void Hiredis::cleanup(void* privdata)$/;"	f	class:Hiredis	typeref:typename:void
cleanup_LweSample_blocks	src/libtfhe-superaic-core/message_functions.cpp	/^void cleanup_LweSample_blocks(LweSample** blocks, int32_t num_block){$/;"	f	typeref:typename:void
clear	src/muduo/muduo/base/StringPiece.h	/^  void clear() { ptr_ = NULL; length_ = 0; }$/;"	f	class:muduo::StringPiece	typeref:typename:void
clearInterrupt	src/libtfhe-superaic-acc/accs/FPGA-V0/acc_fpga_v0.cpp	/^ACC_RESULT FPGA_ACC_V0::clearInterrupt(uint8_t executor) {$/;"	f	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:ACC_RESULT
clear_start	src/libtfhe-superaic-acc/accs/FPGA-V0/acc_fpga_v0.cpp	/^ACC_RESULT FPGA_ACC_V0::clear_start(uint8_t executor) {$/;"	f	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:ACC_RESULT
client	src/muduo/examples/multiplexer/demux.cc	/^  TcpClientPtr client;$/;"	m	struct:Entry	typeref:typename:TcpClientPtr	file:
clientConn	src/muduo/examples/protobuf/rpcbalancer/balancer.cc	/^    std::weak_ptr<TcpConnection> clientConn;$/;"	m	struct:BackendSession::Request	typeref:typename:std::weak_ptr<TcpConnection>	file:
clientConn	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^    std::weak_ptr<TcpConnection> clientConn;$/;"	m	struct:BackendSession::Request	typeref:typename:std::weak_ptr<TcpConnection>	file:
clientConn_	src/muduo/examples/socks4a/tunnel.h	/^  muduo::net::TcpConnectionPtr clientConn_;$/;"	m	class:Tunnel	typeref:typename:muduo::net::TcpConnectionPtr
clientConnection	src/muduo/examples/roundtrip/roundtrip.cc	/^TcpConnectionPtr clientConnection;$/;"	v	typeref:typename:TcpConnectionPtr
clientConnectionCallback	src/muduo/examples/roundtrip/roundtrip.cc	/^void clientConnectionCallback(const TcpConnectionPtr& conn)$/;"	f	typeref:typename:void
clientConns_	src/muduo/examples/multiplexer/multiplexer_simple.cc	/^  std::map<int, TcpConnectionPtr> clientConns_;$/;"	m	class:MultiplexServer	typeref:typename:std::map<int,TcpConnectionPtr>	file:
clientMessageCallback	src/muduo/examples/roundtrip/roundtrip.cc	/^void clientMessageCallback(const TcpConnectionPtr&,$/;"	f	typeref:typename:void
clientReadCallback	src/muduo/examples/roundtrip/roundtrip_udp.cc	/^void clientReadCallback(int sockfd, muduo::Timestamp receiveTime)$/;"	f	typeref:typename:void
client_	src/muduo/examples/ace/logging/client.cc	/^  TcpClient client_;$/;"	m	class:logging::LogClient	typeref:typename:TcpClient	file:
client_	src/muduo/examples/asio/chat/client.cc	/^  TcpClient client_;$/;"	m	class:ChatClient	typeref:typename:TcpClient	file:
client_	src/muduo/examples/asio/chat/loadtest.cc	/^  TcpClient client_;$/;"	m	class:ChatClient	typeref:typename:TcpClient	file:
client_	src/muduo/examples/hub/pubsub.h	/^  muduo::net::TcpClient client_;$/;"	m	class:pubsub::PubSubClient	typeref:typename:muduo::net::TcpClient
client_	src/muduo/examples/memcached/client/bench.cc	/^  TcpClient client_;$/;"	m	class:Client	typeref:typename:TcpClient	file:
client_	src/muduo/examples/netty/discard/client.cc	/^  TcpClient client_;$/;"	m	class:DiscardClient	typeref:typename:TcpClient	file:
client_	src/muduo/examples/netty/echo/client.cc	/^  TcpClient client_;$/;"	m	class:EchoClient	typeref:typename:TcpClient	file:
client_	src/muduo/examples/netty/uptime/uptime.cc	/^  TcpClient client_;$/;"	m	class:UptimeClient	typeref:typename:TcpClient	file:
client_	src/muduo/examples/pingpong/client.cc	/^  TcpClient client_;$/;"	m	class:Session	typeref:typename:TcpClient	file:
client_	src/muduo/examples/protobuf/codec/client.cc	/^  TcpClient client_;$/;"	m	class:QueryClient	typeref:typename:TcpClient	file:
client_	src/muduo/examples/protobuf/resolver/client.cc	/^  TcpClient client_;$/;"	m	class:RpcClient	typeref:typename:TcpClient	file:
client_	src/muduo/examples/protobuf/rpc/client.cc	/^  TcpClient client_;$/;"	m	class:RpcClient	typeref:typename:TcpClient	file:
client_	src/muduo/examples/protobuf/rpcbalancer/balancer.cc	/^  TcpClient client_;$/;"	m	class:BackendSession	typeref:typename:TcpClient	file:
client_	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^  TcpClient client_;$/;"	m	class:BackendSession	typeref:typename:TcpClient	file:
client_	src/muduo/examples/protobuf/rpcbench/client.cc	/^  TcpClient client_;$/;"	m	class:RpcClient	typeref:typename:TcpClient	file:
client_	src/muduo/examples/simple/chargenclient/chargenclient.cc	/^  TcpClient client_;$/;"	m	class:ChargenClient	typeref:typename:TcpClient	file:
client_	src/muduo/examples/simple/timeclient/timeclient.cc	/^  TcpClient client_;$/;"	m	class:TimeClient	typeref:typename:TcpClient	file:
client_	src/muduo/examples/socks4a/tunnel.h	/^  muduo::net::TcpClient client_;$/;"	m	class:Tunnel	typeref:typename:muduo::net::TcpClient
client_	src/muduo/examples/sudoku/batch.cc	/^  TcpClient client_;$/;"	m	class:SudokuClient	typeref:typename:TcpClient	file:
client_	src/muduo/examples/sudoku/loadtest.cc	/^  TcpClient client_;$/;"	m	class:SudokuClient	typeref:typename:TcpClient	file:
client_	src/muduo/examples/sudoku/pipeline.cc	/^  TcpClient client_;$/;"	m	class:SudokuClient	typeref:typename:TcpClient	file:
client_	src/muduo/examples/wordcount/hasher.cc	/^  TcpClient client_;$/;"	m	class:SendThrottler	typeref:typename:TcpClient	file:
client_	src/muduo/muduo/net/tests/EchoClient_unittest.cc	/^  TcpClient client_;$/;"	m	class:EchoClient	typeref:typename:TcpClient	file:
client_only	buildotests/Makefile	/^client_only: cmake_check_build_system$/;"	t
client_only	buildotests/examples/Makefile	/^client_only: examples\/CMakeFiles\/client_only.dir\/rule$/;"	t
client_only	src/examples/CMakeLists.txt	/^add_executable(client_only client_only.cpp)$/;"	t
client_only.cpp.i	buildotests/examples/Makefile	/^client_only.cpp.i:$/;"	t
client_only.cpp.o	buildotests/examples/Makefile	/^client_only.cpp.o:$/;"	t
client_only.cpp.s	buildotests/examples/Makefile	/^client_only.cpp.s:$/;"	t
client_only.i	buildotests/examples/Makefile	/^client_only.i: client_only.cpp.i$/;"	t
client_only.o	buildotests/examples/Makefile	/^client_only.o: client_only.cpp.o$/;"	t
client_only.s	buildotests/examples/Makefile	/^client_only.s: client_only.cpp.s$/;"	t
client_only/fast	buildotests/Makefile	/^client_only\/fast:$/;"	t
client_only/fast	buildotests/examples/Makefile	/^client_only\/fast:$/;"	t
client_socket	src/muduo/examples/wordcount/slowsink.py	/^	client_socket = socket.create_connection((host, port))$/;"	v
clients	src/muduo/muduo/net/tests/EchoClient_unittest.cc	/^std::vector<std::unique_ptr<EchoClient>> clients;$/;"	v	typeref:typename:std::vector<std::unique_ptr<EchoClient>>
clients_	src/muduo/examples/sudoku/loadtest.cc	/^  std::vector<std::unique_ptr<SudokuClient>> clients_;$/;"	m	class:SudokuLoadtest	typeref:typename:std::vector<std::unique_ptr<SudokuClient>>	file:
clock	src/tests/small_size_test.cpp	/^                using clock = std::chrono::high_resolution_clock;$/;"	t	function:__anon9baab4410111::TEST_F	typeref:typename:std::chrono::high_resolution_clock	file:
clockTicksPerSecond	src/muduo/muduo/base/ProcessInfo.cc	/^int ProcessInfo::clockTicksPerSecond()$/;"	f	class:ProcessInfo	typeref:typename:int
clone_	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  void (NativeArray::*clone_)(const Element*, size_t);$/;"	m	class:testing::internal::NativeArray	typeref:typename:void (NativeArray::*)(const Element *,size_t)
close	src/muduo/contrib/thrift/ThriftConnection.cc	/^void ThriftConnection::close()$/;"	f	class:ThriftConnection	typeref:typename:void
close	src/muduo/muduo/net/SocketsOps.cc	/^void sockets::close(int sockfd)$/;"	f	class:sockets	typeref:typename:void
closeCallback_	src/muduo/muduo/net/Channel.h	/^  EventCallback closeCallback_;$/;"	m	class:muduo::net::Channel	typeref:typename:EventCallback
closeCallback_	src/muduo/muduo/net/TcpConnection.h	/^  CloseCallback closeCallback_;$/;"	m	class:muduo::net::TcpConnection	typeref:typename:CloseCallback
closeConnection	src/muduo/muduo/net/http/HttpResponse.h	/^  bool closeConnection() const$/;"	f	class:muduo::net::HttpResponse	typeref:typename:bool
closeConnection_	src/muduo/muduo/net/http/HttpResponse.h	/^  bool closeConnection_;$/;"	m	class:muduo::net::HttpResponse	typeref:typename:bool
close_fd	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  int close_fd;       \/\/ File descriptor to close; the read end of a pipe$/;"	m	struct:testing::internal::ExecDeathTestArgs	typeref:typename:int	file:
close_to_infinity	src/tests/googletest/googletest/test/gtest_unittest.cc	/^    RawType close_to_infinity;$/;"	m	struct:__anonf780395f0111::FloatingPointTest::TestValues	typeref:typename:RawType	file:
close_to_infinity_	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  const RawType close_to_infinity_;$/;"	m	class:testing::gmock_matchers_test::FloatingPointTest	typeref:typename:const RawType	file:
close_to_negative_zero	src/tests/googletest/googletest/test/gtest_unittest.cc	/^    RawType close_to_negative_zero;$/;"	m	struct:__anonf780395f0111::FloatingPointTest::TestValues	typeref:typename:RawType	file:
close_to_negative_zero_	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  const RawType close_to_negative_zero_;$/;"	m	class:testing::gmock_matchers_test::FloatingPointTest	typeref:typename:const RawType	file:
close_to_one	src/tests/googletest/googletest/test/gtest_unittest.cc	/^    RawType close_to_one;$/;"	m	struct:__anonf780395f0111::FloatingPointTest::TestValues	typeref:typename:RawType	file:
close_to_one_	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  const RawType close_to_one_;$/;"	m	class:testing::gmock_matchers_test::FloatingPointTest	typeref:typename:const RawType	file:
close_to_positive_zero	src/tests/googletest/googletest/test/gtest_unittest.cc	/^    RawType close_to_positive_zero;$/;"	m	struct:__anonf780395f0111::FloatingPointTest::TestValues	typeref:typename:RawType	file:
close_to_positive_zero_	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  const RawType close_to_positive_zero_;$/;"	m	class:testing::gmock_matchers_test::FloatingPointTest	typeref:typename:const RawType	file:
cloud	src/libtfhe-superaic-core/include/tfhe_gate_bootstrapping_structures.h	/^    const TFheGateBootstrappingCloudKeySet cloud;$/;"	m	struct:TFheGateBootstrappingSecretKeySet	typeref:typename:const TFheGateBootstrappingCloudKeySet
cmajflt	src/muduo/examples/procmon/procmon.cc	/^  long cmajflt;$/;"	m	struct:StatData	typeref:typename:long	file:
cmake_check_build_system	buildotests/Makefile	/^cmake_check_build_system:$/;"	t
cmake_check_build_system	buildotests/driver/Makefile	/^cmake_check_build_system:$/;"	t
cmake_check_build_system	buildotests/examples/Makefile	/^cmake_check_build_system:$/;"	t
cmake_check_build_system	buildotests/libtfhe-superaic-acc/Makefile	/^cmake_check_build_system:$/;"	t
cmake_check_build_system	buildotests/libtfhe-superaic-client/Makefile	/^cmake_check_build_system:$/;"	t
cmake_check_build_system	buildotests/libtfhe-superaic-core/Makefile	/^cmake_check_build_system:$/;"	t
cmake_check_build_system	buildotests/libtfhe-superaic-core/fft_processors/Makefile	/^cmake_check_build_system:$/;"	t
cmake_check_build_system	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^cmake_check_build_system:$/;"	t
cmake_check_build_system	buildotests/libtfhe-superaic-server/Makefile	/^cmake_check_build_system:$/;"	t
cmake_check_build_system	buildotests/tests/Makefile	/^cmake_check_build_system:$/;"	t
cmake_check_build_system	buildotests/tests/googletest/Makefile	/^cmake_check_build_system:$/;"	t
cmake_check_build_system	buildotests/tests/googletest/googlemock/Makefile	/^cmake_check_build_system:$/;"	t
cmake_check_build_system	buildotests/tests/googletest/googlemock/gtest/Makefile	/^cmake_check_build_system:$/;"	t
cmake_force	buildotests/Makefile	/^cmake_force:$/;"	t
cmake_force	buildotests/driver/Makefile	/^cmake_force:$/;"	t
cmake_force	buildotests/examples/Makefile	/^cmake_force:$/;"	t
cmake_force	buildotests/libtfhe-superaic-acc/Makefile	/^cmake_force:$/;"	t
cmake_force	buildotests/libtfhe-superaic-client/Makefile	/^cmake_force:$/;"	t
cmake_force	buildotests/libtfhe-superaic-core/Makefile	/^cmake_force:$/;"	t
cmake_force	buildotests/libtfhe-superaic-core/fft_processors/Makefile	/^cmake_force:$/;"	t
cmake_force	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^cmake_force:$/;"	t
cmake_force	buildotests/libtfhe-superaic-server/Makefile	/^cmake_force:$/;"	t
cmake_force	buildotests/tests/Makefile	/^cmake_force:$/;"	t
cmake_force	buildotests/tests/googletest/Makefile	/^cmake_force:$/;"	t
cmake_force	buildotests/tests/googletest/googlemock/Makefile	/^cmake_force:$/;"	t
cmake_force	buildotests/tests/googletest/googlemock/gtest/Makefile	/^cmake_force:$/;"	t
cmdline	src/muduo/muduo/net/inspect/PerformanceInspector.cc	/^string PerformanceInspector::cmdline(HttpRequest::Method, const Inspector::ArgList&)$/;"	f	class:PerformanceInspector	typeref:typename:string
cmdline_	src/muduo/examples/procmon/procmon.cc	/^  const string cmdline_;$/;"	m	class:Procmon	typeref:typename:const string	file:
cminflt	src/muduo/examples/procmon/procmon.cc	/^  long cminflt;$/;"	m	struct:StatData	typeref:typename:long	file:
cnt	src/muduo/muduo/net/tests/TimerQueue_unittest.cc	/^int cnt = 0;$/;"	v	typeref:typename:int
code_location_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  CodeLocation code_location_;$/;"	m	class:testing::internal::ParameterizedTestCaseInfo	typeref:typename:CodeLocation
codec_	src/muduo/examples/ace/logging/client.cc	/^  Codec codec_;$/;"	m	class:logging::LogClient	typeref:typename:Codec	file:
codec_	src/muduo/examples/ace/logging/server.cc	/^  Codec codec_;$/;"	m	class:logging::Session	typeref:typename:Codec	file:
codec_	src/muduo/examples/asio/chat/client.cc	/^  LengthHeaderCodec codec_;$/;"	m	class:ChatClient	typeref:typename:LengthHeaderCodec	file:
codec_	src/muduo/examples/asio/chat/loadtest.cc	/^  LengthHeaderCodec codec_;$/;"	m	class:ChatClient	typeref:typename:LengthHeaderCodec	file:
codec_	src/muduo/examples/asio/chat/server.cc	/^  LengthHeaderCodec codec_;$/;"	m	class:ChatServer	typeref:typename:LengthHeaderCodec	file:
codec_	src/muduo/examples/asio/chat/server_threaded.cc	/^  LengthHeaderCodec codec_;$/;"	m	class:ChatServer	typeref:typename:LengthHeaderCodec	file:
codec_	src/muduo/examples/asio/chat/server_threaded_efficient.cc	/^  LengthHeaderCodec codec_;$/;"	m	class:ChatServer	typeref:typename:LengthHeaderCodec	file:
codec_	src/muduo/examples/asio/chat/server_threaded_highperformance.cc	/^  LengthHeaderCodec codec_;$/;"	m	class:ChatServer	typeref:typename:LengthHeaderCodec	file:
codec_	src/muduo/examples/protobuf/codec/client.cc	/^  ProtobufCodec codec_;$/;"	m	class:QueryClient	typeref:typename:ProtobufCodec	file:
codec_	src/muduo/examples/protobuf/codec/server.cc	/^  ProtobufCodec codec_;$/;"	m	class:QueryServer	typeref:typename:ProtobufCodec	file:
codec_	src/muduo/examples/protobuf/rpcbalancer/balancer.cc	/^  RpcCodec codec_;$/;"	m	class:BackendSession	typeref:typename:RpcCodec	file:
codec_	src/muduo/examples/protobuf/rpcbalancer/balancer.cc	/^  RpcCodec codec_;$/;"	m	class:Balancer	typeref:typename:RpcCodec	file:
codec_	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^  RpcCodec codec_;$/;"	m	class:BackendSession	typeref:typename:RpcCodec	file:
codec_	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^  RpcCodec codec_;$/;"	m	class:Balancer	typeref:typename:RpcCodec	file:
codec_	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^  CODEC codec_;$/;"	m	class:muduo::net::ProtobufCodecLiteT	typeref:typename:CODEC
codec_	src/muduo/muduo/net/protorpc/RpcChannel.h	/^  RpcCodec codec_;$/;"	m	class:muduo::net::RpcChannel	typeref:typename:RpcCodec
coefs	src/libtfhe-superaic-core/include/polynomials.h	/^   int32_t* coefs = nullptr;$/;"	m	struct:IntPolynomial	typeref:typename:int32_t *
coefsC	src/libtfhe-superaic-core/fft_processors/nayuki/lagrangehalfc_impl.h	/^   cplx* coefsC;$/;"	m	struct:LagrangeHalfCPolynomial_IMPL	typeref:typename:cplx *
coefsT	src/libtfhe-superaic-core/include/polynomials.h	/^   Torus32* coefsT = nullptr;$/;"	m	struct:TorusPolynomial	typeref:typename:Torus32 *
col	src/muduo/examples/sudoku/sudoku.cc	/^    Column* col;$/;"	m	struct:Node	typeref:typename:Column *	file:
collected_parameters_	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  static vector<int> collected_parameters_;$/;"	m	class:TestGenerationTest	typeref:typename:vector<int>	file:
collected_parameters_	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^vector<int> TestGenerationTest::collected_parameters_;$/;"	m	class:TestGenerationTest	typeref:typename:vector<int>
color_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  std::string color_;$/;"	m	class:testing::internal::GTestFlagSaver	typeref:typename:std::string
columns_	src/muduo/examples/sudoku/sudoku.cc	/^    Column* columns_[400];$/;"	m	class:SudokuSolver	typeref:typename:Column * [400]	file:
com.chenshuo.muduo.example.multiplexer	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/DataEvent.java	/^package com.chenshuo.muduo.example.multiplexer;$/;"	p
com.chenshuo.muduo.example.multiplexer	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/Event.java	/^package com.chenshuo.muduo.example.multiplexer;$/;"	p
com.chenshuo.muduo.example.multiplexer	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/EventQueue.java	/^package com.chenshuo.muduo.example.multiplexer;$/;"	p
com.chenshuo.muduo.example.multiplexer	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/EventSource.java	/^package com.chenshuo.muduo.example.multiplexer;$/;"	p
com.chenshuo.muduo.example.multiplexer	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockBackendServer.java	/^package com.chenshuo.muduo.example.multiplexer;$/;"	p
com.chenshuo.muduo.example.multiplexer	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockClient.java	/^package com.chenshuo.muduo.example.multiplexer;$/;"	p
com.chenshuo.muduo.example.multiplexer	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MultiplexerTest.java	/^package com.chenshuo.muduo.example.multiplexer;$/;"	p
com.chenshuo.muduo.example.multiplexer	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MyCountDownLatch.java	/^package com.chenshuo.muduo.example.multiplexer;$/;"	p
com.chenshuo.muduo.example.multiplexer	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/TestCase.java	/^package com.chenshuo.muduo.example.multiplexer;$/;"	p
com.chenshuo.muduo.example.multiplexer	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/TestFailedException.java	/^package com.chenshuo.muduo.example.multiplexer;$/;"	p
com.chenshuo.muduo.example.multiplexer.testcase	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/testcase/TestOneClientBackendSend.java	/^package com.chenshuo.muduo.example.multiplexer.testcase;$/;"	p
com.chenshuo.muduo.example.multiplexer.testcase	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/testcase/TestOneClientBothSend.java	/^package com.chenshuo.muduo.example.multiplexer.testcase;$/;"	p
com.chenshuo.muduo.example.multiplexer.testcase	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/testcase/TestOneClientNoData.java	/^package com.chenshuo.muduo.example.multiplexer.testcase;$/;"	p
com.chenshuo.muduo.example.multiplexer.testcase	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/testcase/TestOneClientSend.java	/^package com.chenshuo.muduo.example.multiplexer.testcase;$/;"	p
com.chenshuo.muduo.example.multiplexer.testcase	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/testcase/TestTwoClients.java	/^package com.chenshuo.muduo.example.multiplexer.testcase;$/;"	p
command	src/muduo/contrib/hiredis/Hiredis.cc	/^int Hiredis::command(const CommandCallback& cb, muduo::StringArg cmd, ...)$/;"	f	class:Hiredis	typeref:typename:int
commandCallback	src/muduo/contrib/hiredis/Hiredis.cc	/^\/* static *\/ void Hiredis::commandCallback(redisAsyncContext* ac, void* r, void* privdata)$/;"	f	class:Hiredis	typeref:typename:void
commandCallback	src/muduo/contrib/hiredis/Hiredis.cc	/^void Hiredis::commandCallback(redisReply* reply, CommandCallback* cb)$/;"	f	class:Hiredis	typeref:typename:void
commandChannel	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MultiplexerTest.java	/^    public final Pattern commandChannel = Pattern.compile("CONN (\\\\d+) FROM [0-9.:]+ IS ([A-Z]/;"	f	class:MultiplexerTest
command_	src/muduo/examples/memcached/server/Session.h	/^  string command_;$/;"	m	class:Session	typeref:typename:string
common_	src/tests/googletest/googletest/src/gtest.cc	/^  size_t adds_, removes_, common_;$/;"	m	class:testing::internal::edit_distance::__anon3f29b7680211::Hunk	typeref:typename:size_t	file:
comparator_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    const Comparator comparator_;$/;"	m	class:testing::internal::WhenSortedByMatcher::Impl	typeref:typename:const Comparator
comparator_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const Comparator comparator_;$/;"	m	class:testing::internal::WhenSortedByMatcher	typeref:typename:const Comparator
compare	src/muduo/muduo/base/StringPiece.h	/^  int compare(const StringPiece& x) const {$/;"	f	class:muduo::StringPiece	typeref:typename:int
compare_bits	src/examples/comparebits.cpp	/^void compare_bits(LweSample *result, const LweSample *a, const LweSample *b, const LweSample *ls/;"	f	typeref:typename:void
comparebits	buildotests/Makefile	/^comparebits: cmake_check_build_system$/;"	t
comparebits	buildotests/examples/Makefile	/^comparebits: examples\/CMakeFiles\/comparebits.dir\/rule$/;"	t
comparebits	src/examples/CMakeLists.txt	/^add_executable(comparebits comparebits.cpp)$/;"	t
comparebits.cpp.i	buildotests/examples/Makefile	/^comparebits.cpp.i:$/;"	t
comparebits.cpp.o	buildotests/examples/Makefile	/^comparebits.cpp.o:$/;"	t
comparebits.cpp.s	buildotests/examples/Makefile	/^comparebits.cpp.s:$/;"	t
comparebits.i	buildotests/examples/Makefile	/^comparebits.i: comparebits.cpp.i$/;"	t
comparebits.o	buildotests/examples/Makefile	/^comparebits.o: comparebits.cpp.o$/;"	t
comparebits.s	buildotests/examples/Makefile	/^comparebits.s: comparebits.cpp.s$/;"	t
comparebits/fast	buildotests/Makefile	/^comparebits\/fast:$/;"	t
comparebits/fast	buildotests/examples/Makefile	/^comparebits\/fast:$/;"	t
compress	src/muduo/muduo/net/ZlibStream.h	/^  int compress(int flush)$/;"	f	class:muduo::net::ZlibOutputStream	typeref:typename:int
concurrentDownload	src/muduo/examples/curl/download.cc	/^  void concurrentDownload()$/;"	f	class:Downloader	typeref:typename:void	file:
concurrent_	src/muduo/examples/curl/download.cc	/^  int concurrent_;$/;"	m	class:Downloader	typeref:typename:int	file:
cond_	src/muduo/examples/wordcount/hasher.cc	/^  Condition cond_;$/;"	m	class:SendThrottler	typeref:typename:Condition	file:
config_compiler_and_linker	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^macro(config_compiler_and_linker)$/;"	m
config_file	src/tests/googletest/googletest/xcode/Scripts/versiongenerate.py	/^config_file = open("%s\/configure.ac" % input_dir, 'r')$/;"	v
congestion_	src/muduo/examples/wordcount/hasher.cc	/^  bool congestion_;$/;"	m	class:SendThrottler	typeref:typename:bool	file:
connId	src/muduo/examples/multiplexer/demux.cc	/^  int connId;$/;"	m	struct:Entry	typeref:typename:int	file:
connId	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockClient.java	/^    private int connId;$/;"	f	class:MockClient	file:
conn_	src/muduo/contrib/thrift/ThriftConnection.h	/^  muduo::net::TcpConnectionPtr conn_;$/;"	m	class:ThriftConnection	typeref:typename:muduo::net::TcpConnectionPtr
conn_	src/muduo/examples/hub/pubsub.h	/^  muduo::net::TcpConnectionPtr conn_;$/;"	m	class:pubsub::PubSubClient	typeref:typename:muduo::net::TcpConnectionPtr
conn_	src/muduo/examples/memcached/client/bench.cc	/^  TcpConnectionPtr conn_;$/;"	m	class:Client	typeref:typename:TcpConnectionPtr	file:
conn_	src/muduo/examples/memcached/server/Session.h	/^  muduo::net::TcpConnectionPtr conn_;$/;"	m	class:Session	typeref:typename:muduo::net::TcpConnectionPtr
conn_	src/muduo/examples/protobuf/rpcbalancer/balancer.cc	/^  TcpConnectionPtr conn_;$/;"	m	class:BackendSession	typeref:typename:TcpConnectionPtr	file:
conn_	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^  TcpConnectionPtr conn_;$/;"	m	class:BackendSession	typeref:typename:TcpConnectionPtr	file:
conn_	src/muduo/examples/sudoku/loadtest.cc	/^  TcpConnectionPtr conn_;$/;"	m	class:SudokuClient	typeref:typename:TcpConnectionPtr	file:
conn_	src/muduo/examples/sudoku/pipeline.cc	/^  TcpConnectionPtr conn_;$/;"	m	class:SudokuClient	typeref:typename:TcpConnectionPtr	file:
conn_	src/muduo/examples/wordcount/hasher.cc	/^  TcpConnectionPtr conn_;$/;"	m	class:SendThrottler	typeref:typename:TcpConnectionPtr	file:
conn_	src/muduo/muduo/net/protorpc/RpcChannel.h	/^  TcpConnectionPtr conn_;$/;"	m	class:muduo::net::RpcChannel	typeref:typename:TcpConnectionPtr
connect	src/muduo/contrib/hiredis/Hiredis.cc	/^void Hiredis::connect()$/;"	f	class:Hiredis	typeref:typename:void
connect	src/muduo/examples/ace/logging/client.cc	/^  void connect()$/;"	f	class:logging::LogClient	typeref:typename:void	file:
connect	src/muduo/examples/asio/chat/client.cc	/^  void connect()$/;"	f	class:ChatClient	typeref:typename:void	file:
connect	src/muduo/examples/asio/chat/loadtest.cc	/^  void connect()$/;"	f	class:ChatClient	typeref:typename:void	file:
connect	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockClient.java	/^    public ChannelFuture connect() {$/;"	m	class:MockClient
connect	src/muduo/examples/netty/discard/client.cc	/^  void connect()$/;"	f	class:DiscardClient	typeref:typename:void	file:
connect	src/muduo/examples/netty/echo/client.cc	/^  void connect()$/;"	f	class:EchoClient	typeref:typename:void	file:
connect	src/muduo/examples/netty/uptime/uptime.cc	/^  void connect()$/;"	f	class:UptimeClient	typeref:typename:void	file:
connect	src/muduo/examples/protobuf/codec/client.cc	/^  void connect()$/;"	f	class:QueryClient	typeref:typename:void	file:
connect	src/muduo/examples/protobuf/resolver/client.cc	/^  void connect()$/;"	f	class:RpcClient	typeref:typename:void	file:
connect	src/muduo/examples/protobuf/rpc/client.cc	/^  void connect()$/;"	f	class:RpcClient	typeref:typename:void	file:
connect	src/muduo/examples/protobuf/rpcbalancer/balancer.cc	/^  void connect()$/;"	f	class:BackendSession	typeref:typename:void	file:
connect	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^  void connect()$/;"	f	class:BackendSession	typeref:typename:void	file:
connect	src/muduo/examples/protobuf/rpcbench/client.cc	/^  void connect()$/;"	f	class:RpcClient	typeref:typename:void	file:
connect	src/muduo/examples/simple/chargenclient/chargenclient.cc	/^  void connect()$/;"	f	class:ChargenClient	typeref:typename:void	file:
connect	src/muduo/examples/simple/timeclient/timeclient.cc	/^  void connect()$/;"	f	class:TimeClient	typeref:typename:void	file:
connect	src/muduo/examples/socks4a/tunnel.h	/^  void connect()$/;"	f	class:Tunnel	typeref:typename:void
connect	src/muduo/examples/sudoku/batch.cc	/^  void connect()$/;"	f	class:SudokuClient	typeref:typename:void	file:
connect	src/muduo/examples/sudoku/loadtest.cc	/^  void connect()$/;"	f	class:SudokuClient	typeref:typename:void	file:
connect	src/muduo/examples/sudoku/pipeline.cc	/^  void connect()$/;"	f	class:SudokuClient	typeref:typename:void	file:
connect	src/muduo/examples/wordcount/hasher.cc	/^  void connect()$/;"	f	class:SendThrottler	typeref:typename:void	file:
connect	src/muduo/muduo/net/Connector.cc	/^void Connector::connect()$/;"	f	class:Connector	typeref:typename:void
connect	src/muduo/muduo/net/SocketsOps.cc	/^int sockets::connect(int sockfd, const struct sockaddr* addr)$/;"	f	class:sockets	typeref:typename:int
connect	src/muduo/muduo/net/TcpClient.cc	/^void TcpClient::connect()$/;"	f	class:TcpClient	typeref:typename:void
connect	src/muduo/muduo/net/tests/EchoClient_unittest.cc	/^  void connect()$/;"	f	class:EchoClient	typeref:typename:void	file:
connectAll	src/muduo/examples/wordcount/hasher.cc	/^  void connectAll()$/;"	f	class:WordCountSender	typeref:typename:void	file:
connectAndWait	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockClient.java	/^    public void connectAndWait() {$/;"	m	class:MockClient
connectCallback	src/muduo/contrib/hiredis/Hiredis.cc	/^\/* static *\/ void Hiredis::connectCallback(const redisAsyncContext* ac, int status)$/;"	f	class:Hiredis	typeref:typename:void
connectCallback	src/muduo/contrib/hiredis/Hiredis.cc	/^void Hiredis::connectCallback(int status)$/;"	f	class:Hiredis	typeref:typename:void
connectCallback	src/muduo/contrib/hiredis/mrediscli.cc	/^void connectCallback(hiredis::Hiredis* c, int status)$/;"	f	typeref:typename:void
connectCb_	src/muduo/contrib/hiredis/Hiredis.h	/^  ConnectCallback connectCb_;$/;"	m	class:hiredis::Hiredis	typeref:typename:ConnectCallback
connectDestroyed	src/muduo/muduo/net/TcpConnection.cc	/^void TcpConnection::connectDestroyed()$/;"	f	class:TcpConnection	typeref:typename:void
connectEstablished	src/muduo/muduo/net/TcpConnection.cc	/^void TcpConnection::connectEstablished()$/;"	f	class:TcpConnection	typeref:typename:void
connectLatch_	src/muduo/examples/wordcount/hasher.cc	/^  CountDownLatch connectLatch_;$/;"	m	class:SendThrottler	typeref:typename:CountDownLatch	file:
connect_	src/muduo/muduo/net/Connector.h	/^  bool connect_; \/\/ atomic$/;"	m	class:muduo::net::Connector	typeref:typename:bool
connect_	src/muduo/muduo/net/TcpClient.h	/^  bool connect_; \/\/ atomic$/;"	m	class:muduo::net::TcpClient	typeref:typename:bool
connected	src/muduo/contrib/hiredis/Hiredis.cc	/^bool Hiredis::connected() const$/;"	f	class:Hiredis	typeref:typename:bool
connected	src/muduo/examples/hub/pubsub.cc	/^bool PubSubClient::connected() const$/;"	f	class:PubSubClient	typeref:typename:bool
connected	src/muduo/muduo/net/TcpConnection.h	/^  bool connected() const { return state_ == kConnected; }$/;"	f	class:muduo::net::TcpConnection	typeref:typename:bool
connected_	src/muduo/examples/memcached/client/bench.cc	/^  CountDownLatch* const connected_;$/;"	m	class:Client	typeref:typename:CountDownLatch * const	file:
connecting	src/muduo/muduo/net/Connector.cc	/^void Connector::connecting(int sockfd)$/;"	f	class:Connector	typeref:typename:void
connection	src/muduo/examples/hub/pub.cc	/^void connection(PubSubClient* client)$/;"	f	typeref:typename:void
connection	src/muduo/examples/hub/sub.cc	/^void connection(PubSubClient* client)$/;"	f	typeref:typename:void
connection	src/muduo/examples/multiplexer/demux.cc	/^  TcpConnectionPtr connection;$/;"	m	struct:Entry	typeref:typename:TcpConnectionPtr	file:
connection	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockBackendServer.java	/^    private volatile Channel connection;$/;"	f	class:MockBackendServer	file:
connection	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockClient.java	/^    private volatile Channel connection;$/;"	f	class:MockClient	file:
connection	src/muduo/muduo/net/TcpClient.h	/^  TcpConnectionPtr connection() const$/;"	f	class:muduo::net::TcpClient	typeref:typename:TcpConnectionPtr
connectionBuckets_	src/muduo/examples/idleconnection/echo.h	/^  WeakConnectionList connectionBuckets_;$/;"	m	class:EchoServer	typeref:typename:WeakConnectionList
connectionCallback_	src/muduo/examples/hub/pubsub.h	/^  ConnectionCallback connectionCallback_;$/;"	m	class:pubsub::PubSubClient	typeref:typename:ConnectionCallback
connectionCallback_	src/muduo/muduo/net/TcpClient.h	/^  ConnectionCallback connectionCallback_;$/;"	m	class:muduo::net::TcpClient	typeref:typename:ConnectionCallback
connectionCallback_	src/muduo/muduo/net/TcpConnection.h	/^  ConnectionCallback connectionCallback_;$/;"	m	class:muduo::net::TcpConnection	typeref:typename:ConnectionCallback
connectionCallback_	src/muduo/muduo/net/TcpServer.h	/^  ConnectionCallback connectionCallback_;$/;"	m	class:muduo::net::TcpServer	typeref:typename:ConnectionCallback
connectionList_	src/muduo/examples/idleconnection/sortedlist.cc	/^  WeakConnectionList connectionList_;$/;"	m	class:EchoServer	typeref:typename:WeakConnectionList	file:
connection_	src/muduo/examples/asio/chat/loadtest.cc	/^  TcpConnectionPtr connection_;$/;"	m	class:ChatClient	typeref:typename:TcpConnectionPtr	file:
connections_	src/muduo/examples/asio/chat/server.cc	/^  ConnectionList connections_;$/;"	m	class:ChatServer	typeref:typename:ConnectionList	file:
connections_	src/muduo/examples/netty/echo/server2.cc	/^  AtomicInt32 connections_;$/;"	m	class:EchoServer	typeref:typename:AtomicInt32	file:
connections_	src/muduo/muduo/net/TcpServer.h	/^  ConnectionMap connections_;$/;"	m	class:muduo::net::TcpServer	typeref:typename:ConnectionMap
connector_	src/muduo/muduo/net/TcpClient.h	/^  ConnectorPtr connector_; \/\/ avoid revealing Connector$/;"	m	class:muduo::net::TcpClient	typeref:typename:ConnectorPtr
conns_	src/muduo/contrib/thrift/ThriftServer.h	/^  std::map<muduo::string, ThriftConnectionPtr> conns_;$/;"	m	class:ThriftServer	typeref:typename:std::map<muduo::string,ThriftConnectionPtr>
const	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^# define const$/;"	d	file:
const_converted_	src/tests/googletest/googletest/test/gtest-port_test.cc	/^  bool* const_converted_;$/;"	m	class:testing::internal::ConstAndNonConstCastable	typeref:typename:bool *	file:
const_iterator	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  typedef Expectation::Set::const_iterator const_iterator;$/;"	t	class:testing::ExpectationSet	typeref:typename:Expectation::Set::const_iterator
const_iterator	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  typedef ConstIter const_iterator;$/;"	t	class:testing::gmock_matchers_test::Streamlike	typeref:typename:ConstIter	file:
const_iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  typedef const Element* const_iterator;$/;"	t	class:testing::internal::NativeArray	typeref:typename:const Element *
const_iterator	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^struct const_iterator {$/;"	s	namespace:testing::gtest_printers_test	file:
const_reference	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^  typedef const type const_reference;$/;"	t	class:testing::internal::StlContainerView	typeref:typename:const type
const_reference	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^  typedef const type& const_reference;$/;"	t	class:testing::internal::StlContainerView	typeref:typename:const type &
container_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  const ContainerType container_;$/;"	m	class:testing::internal::ValuesInIteratorRangeGenerator	typeref:typename:const ContainerType
content_	src/muduo/examples/hub/hub.cc	/^  string content_;$/;"	m	class:pubsub::Topic	typeref:typename:string	file:
context_	src/muduo/contrib/hiredis/Hiredis.h	/^  redisAsyncContext* context_;$/;"	m	class:hiredis::Hiredis	typeref:typename:redisAsyncContext *
context_	src/muduo/muduo/net/EventLoop.h	/^  boost::any context_;$/;"	m	class:muduo::net::EventLoop	typeref:typename:boost::any
context_	src/muduo/muduo/net/TcpConnection.h	/^  boost::any context_;$/;"	m	class:muduo::net::TcpConnection	typeref:typename:boost::any
control_fp	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    int control_fp = 0;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:int
control_map_base	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    void * control_map_base = nullptr;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:void *
convert	src/muduo/muduo/base/LogStream.cc	/^size_t convert(char buf[], T value)$/;"	f	namespace:muduo::detail	typeref:typename:size_t
convertHex	src/muduo/muduo/base/LogStream.cc	/^size_t convertHex(char buf[], uintptr_t value)$/;"	f	namespace:muduo::detail	typeref:typename:size_t
converted	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^  bool* converted() const { return converted_; }$/;"	f	class:__anon550198f10111::FromType	typeref:typename:bool *	file:
converted_	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^  bool* const converted_;$/;"	m	class:__anon550198f10111::FromType	typeref:typename:bool * const	file:
converted_	src/tests/googletest/googletest/test/gtest-port_test.cc	/^  bool* converted_;$/;"	m	class:testing::internal::Castable	typeref:typename:bool *	file:
converted_	src/tests/googletest/googletest/test/gtest-port_test.cc	/^  bool* converted_;$/;"	m	class:testing::internal::ConstAndNonConstCastable	typeref:typename:bool *	file:
converted_	src/tests/googletest/googletest/test/gtest-port_test.cc	/^  bool* converted_;$/;"	m	class:testing::internal::ConstCastable	typeref:typename:bool *	file:
cookieEnd	src/muduo/muduo/base/LogStream.cc	/^void FixedBuffer<SIZE>::cookieEnd()$/;"	f	class:FixedBuffer	typeref:typename:void
cookieStart	src/muduo/muduo/base/LogStream.cc	/^void FixedBuffer<SIZE>::cookieStart()$/;"	f	class:FixedBuffer	typeref:typename:void
cookie_	src/muduo/muduo/base/LogStream.h	/^  void (*cookie_)();$/;"	m	class:muduo::detail::FixedBuffer	typeref:typename:void (*)()
copy	src/tests/googletest/googletest/include/gtest/internal/gtest-linked_ptr.h	/^  template <typename U> void copy(linked_ptr<U> const* ptr) {$/;"	f	class:testing::internal::linked_ptr	typeref:typename:void
copySample	src/tests/lwe_test.cpp	/^    void copySample(LweSample *result, const LweSample *sample, const LweParams *params) {$/;"	f	namespace:__anonc84148b60111	typeref:typename:void
copySample	src/tests/small_size_test.cpp	/^    void copySample(LweSample *result, const LweSample *sample, const LweParams *params) {$/;"	f	namespace:__anon9baab4410111	typeref:typename:void
copySample	src/tests/tlwe_test.cpp	/^    void copySample(TLweSample *result, const TLweSample *sample, const TLweParams *params) {$/;"	f	namespace:__anonc028f2ea0111	typeref:typename:void
copyable	src/muduo/muduo/base/copyable.h	/^class copyable$/;"	c	namespace:muduo
cos_table	src/libtfhe-superaic-core/fft_processors/nayuki/fft-portable.c	/^	double *cos_table;$/;"	m	struct:FftTables	typeref:typename:double *	file:
cosine	src/muduo/examples/procmon/dummyload.cc	/^void cosine()$/;"	f	typeref:typename:void
count	src/muduo/examples/ace/ttcp/ttcp.cc	/^  int count;$/;"	m	struct:Context	typeref:typename:int	file:
count	src/muduo/examples/cdns/dns.cc	/^int count = 0;$/;"	v	typeref:typename:int
count	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  size_t count() const { return matchers_.size(); }$/;"	f	class:testing::internal::ElementsAreMatcherImpl	typeref:typename:size_t
count	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^  const int count = static_cast<int>(Value(arg, m1))$/;"	v	namespace:__anoncaf4ae130111	typeref:typename:const int
count	src/tests/googletest/googlemock/test/gmock_stress_test.cc	/^  int* count;$/;"	m	struct:testing::__anonc83180760111::Helper1Param	typeref:typename:int *	file:
count	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  int count() const { return count_; }$/;"	f	class:__anonf780395f0311::TestLifeCycleTest	typeref:typename:int	file:
countDown	src/muduo/muduo/base/CountDownLatch.cc	/^void CountDownLatch::countDown()$/;"	f	class:CountDownLatch	typeref:typename:void
count_	src/muduo/examples/ace/ttcp/ttcp_asio_async.cc	/^  int count_;$/;"	m	class:TtcpServerConnection	typeref:typename:int	file:
count_	src/muduo/examples/asio/tutorial/timer4/timer.cc	/^  int count_;$/;"	m	class:Printer	typeref:typename:int	file:
count_	src/muduo/examples/protobuf/rpcbench/client.cc	/^  int count_;$/;"	m	class:RpcClient	typeref:typename:int	file:
count_	src/muduo/examples/sudoku/batch.cc	/^  int count_;$/;"	m	class:SudokuClient	typeref:typename:int	file:
count_	src/muduo/examples/sudoku/loadtest.cc	/^  int count_;$/;"	m	class:SudokuClient	typeref:typename:int	file:
count_	src/muduo/examples/sudoku/loadtest.cc	/^  int count_;$/;"	m	class:SudokuLoadtest	typeref:typename:int	file:
count_	src/muduo/examples/sudoku/pipeline.cc	/^  int count_;$/;"	m	class:SudokuClient	typeref:typename:int	file:
count_	src/muduo/muduo/base/LogFile.h	/^  int count_;$/;"	m	class:muduo::LogFile	typeref:typename:int
count_	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  int count_;$/;"	m	class:ParameterizedDerivedTest	typeref:typename:int	file:
count_	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  int count_;$/;"	m	class:SeparateInstanceTest	typeref:typename:int	file:
count_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static int count_;$/;"	m	class:__anonf780395f0311::TestLifeCycleTest	typeref:typename:int	file:
count_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^int TestLifeCycleTest::count_ = 0;$/;"	m	class:__anonf780395f0311::TestLifeCycleTest	typeref:typename:int
counter_	src/tests/googletest/googletest/samples/sample4.h	/^  int counter_;$/;"	m	class:Counter	typeref:typename:int
counter_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static int counter_;$/;"	m	class:testing::SetUpTestCaseTest	typeref:typename:int	file:
counter_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^int SetUpTestCaseTest::counter_ = 0;$/;"	m	class:testing::SetUpTestCaseTest	typeref:typename:int
cover	src/muduo/examples/sudoku/sudoku.cc	/^    void cover(Column* c)$/;"	f	class:SudokuSolver	typeref:typename:void	file:
cplx	src/libtfhe-superaic-core/fft_processors/nayuki/lagrangehalfc_impl.h	/^typedef std::complex< double > cplx; \/\/ https:\/\/stackoverflow.com\/a\/31800404$/;"	t	typeref:typename:std::complex<double>
cpuTime	src/muduo/muduo/base/ProcessInfo.cc	/^ProcessInfo::CpuTime ProcessInfo::cpuTime()$/;"	f	class:ProcessInfo	typeref:typename:ProcessInfo::CpuTime
cpuUsage	src/muduo/examples/procmon/procmon.cc	/^    double cpuUsage(double kPeriod, double kClockTicksPerSecond) const$/;"	f	struct:Procmon::CpuTime	typeref:typename:double	file:
cpu_chart_	src/muduo/examples/procmon/procmon.cc	/^  Plot cpu_chart_;$/;"	m	class:Procmon	typeref:typename:Plot	file:
cpu_usage_	src/muduo/examples/procmon/procmon.cc	/^  boost::circular_buffer<CpuTime> cpu_usage_;$/;"	m	class:Procmon	typeref:typename:boost::circular_buffer<CpuTime>	file:
cpuinfo	src/muduo/muduo/net/inspect/SystemInspector.cc	/^string SystemInspector::cpuinfo(HttpRequest::Method, const Inspector::ArgList&)$/;"	f	class:SystemInspector	typeref:typename:string
createEventfd	src/muduo/muduo/net/EventLoop.cc	/^int createEventfd()$/;"	f	namespace:__anon600130340111	typeref:typename:int
createMessage	src/muduo/examples/protobuf/codec/codec.cc	/^google::protobuf::Message* ProtobufCodec::createMessage(const std::string& typeName)$/;"	f	class:ProtobufCodec	typeref:typename:google::protobuf::Message *
createNonblockingOrDie	src/muduo/muduo/net/SocketsOps.cc	/^int sockets::createNonblockingOrDie(sa_family_t family)$/;"	f	class:sockets	typeref:typename:int
createNonblockingUDP	src/muduo/examples/roundtrip/roundtrip_udp.cc	/^int createNonblockingUDP()$/;"	f	typeref:typename:int
createTimerfd	src/muduo/muduo/net/TimerQueue.cc	/^int createTimerfd()$/;"	f	namespace:muduo::net::detail	typeref:typename:int
create_	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  bool create_;$/;"	m	class:MockDeathTestFactory	typeref:typename:bool	file:
created	src/muduo/examples/filetransfer/loadtest/Handler.java	/^    private static int created = 0;$/;"	f	class:Handler	file:
critical_section_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  GTEST_CRITICAL_SECTION* critical_section_;$/;"	m	class:testing::internal::Mutex	typeref:typename:GTEST_CRITICAL_SECTION *
critical_section_init_phase_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  long critical_section_init_phase_;  \/\/ NOLINT$/;"	m	class:testing::internal::Mutex	typeref:typename:long
cstime	src/muduo/examples/procmon/procmon.cc	/^  long cstime;$/;"	m	struct:StatData	typeref:typename:long	file:
ctx_	src/muduo/examples/cdns/Resolver.h	/^  ares_channel ctx_;$/;"	m	class:cdns::Resolver	typeref:typename:ares_channel
cur_	src/muduo/muduo/base/LogStream.h	/^  char* cur_;$/;"	m	class:muduo::detail::FixedBuffer	typeref:typename:char *
cur_node_	src/muduo/examples/sudoku/sudoku.cc	/^    int     cur_node_;$/;"	m	class:SudokuSolver	typeref:typename:int	file:
curl	src/muduo/examples/curl/Curl.h	/^namespace curl$/;"	n
curl_	src/muduo/examples/curl/Curl.h	/^  CURL* curl_;$/;"	m	class:curl::Request	typeref:typename:CURL *
curl_	src/muduo/examples/curl/download.cc	/^  curl::Curl curl_;$/;"	m	class:Downloader	typeref:typename:curl::Curl	file:
curl_download	src/muduo/examples/curl/CMakeLists.txt	/^add_executable(curl_download download.cc)$/;"	t
curlm_	src/muduo/examples/curl/Curl.h	/^  CURLM* curlm_;$/;"	m	class:curl::Curl	typeref:typename:CURLM *
currItem_	src/muduo/examples/memcached/server/Session.h	/^  ItemPtr currItem_;$/;"	m	class:Session	typeref:typename:ItemPtr
current	src/muduo/examples/protobuf/rpcbalancer/balancer.cc	/^    size_t current;$/;"	m	struct:Balancer::PerThread	typeref:typename:size_t	file:
current	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^    size_t current;$/;"	m	struct:Balancer::PerThread	typeref:typename:size_t	file:
current	src/muduo/muduo/base/LogStream.h	/^  char* current() { return cur_; }$/;"	f	class:muduo::detail::FixedBuffer	typeref:typename:char *
current	src/muduo/muduo/net/tests/EchoClient_unittest.cc	/^int current = 0;$/;"	v	typeref:typename:int
current10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T10>::iterator current10_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator	typeref:typename:ParamGenerator<T10>::iterator
current1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator	typeref:typename:ParamGenerator<T1>::iterator
current1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator2::Iterator	typeref:typename:ParamGenerator<T1>::iterator
current1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator	typeref:typename:ParamGenerator<T1>::iterator
current1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator	typeref:typename:ParamGenerator<T1>::iterator
current1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator	typeref:typename:ParamGenerator<T1>::iterator
current1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator	typeref:typename:ParamGenerator<T1>::iterator
current1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator	typeref:typename:ParamGenerator<T1>::iterator
current1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator	typeref:typename:ParamGenerator<T1>::iterator
current1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator	typeref:typename:ParamGenerator<T1>::iterator
current2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator	typeref:typename:ParamGenerator<T2>::iterator
current2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator2::Iterator	typeref:typename:ParamGenerator<T2>::iterator
current2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator	typeref:typename:ParamGenerator<T2>::iterator
current2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator	typeref:typename:ParamGenerator<T2>::iterator
current2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator	typeref:typename:ParamGenerator<T2>::iterator
current2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator	typeref:typename:ParamGenerator<T2>::iterator
current2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator	typeref:typename:ParamGenerator<T2>::iterator
current2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator	typeref:typename:ParamGenerator<T2>::iterator
current2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator	typeref:typename:ParamGenerator<T2>::iterator
current3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T3>::iterator current3_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator	typeref:typename:ParamGenerator<T3>::iterator
current3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T3>::iterator current3_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator	typeref:typename:ParamGenerator<T3>::iterator
current3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T3>::iterator current3_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator	typeref:typename:ParamGenerator<T3>::iterator
current3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T3>::iterator current3_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator	typeref:typename:ParamGenerator<T3>::iterator
current3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T3>::iterator current3_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator	typeref:typename:ParamGenerator<T3>::iterator
current3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T3>::iterator current3_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator	typeref:typename:ParamGenerator<T3>::iterator
current3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T3>::iterator current3_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator	typeref:typename:ParamGenerator<T3>::iterator
current3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T3>::iterator current3_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator	typeref:typename:ParamGenerator<T3>::iterator
current4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T4>::iterator current4_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator	typeref:typename:ParamGenerator<T4>::iterator
current4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T4>::iterator current4_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator	typeref:typename:ParamGenerator<T4>::iterator
current4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T4>::iterator current4_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator	typeref:typename:ParamGenerator<T4>::iterator
current4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T4>::iterator current4_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator	typeref:typename:ParamGenerator<T4>::iterator
current4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T4>::iterator current4_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator	typeref:typename:ParamGenerator<T4>::iterator
current4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T4>::iterator current4_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator	typeref:typename:ParamGenerator<T4>::iterator
current4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T4>::iterator current4_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator	typeref:typename:ParamGenerator<T4>::iterator
current5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T5>::iterator current5_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator	typeref:typename:ParamGenerator<T5>::iterator
current5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T5>::iterator current5_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator	typeref:typename:ParamGenerator<T5>::iterator
current5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T5>::iterator current5_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator	typeref:typename:ParamGenerator<T5>::iterator
current5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T5>::iterator current5_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator	typeref:typename:ParamGenerator<T5>::iterator
current5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T5>::iterator current5_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator	typeref:typename:ParamGenerator<T5>::iterator
current5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T5>::iterator current5_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator	typeref:typename:ParamGenerator<T5>::iterator
current6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T6>::iterator current6_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator	typeref:typename:ParamGenerator<T6>::iterator
current6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T6>::iterator current6_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator	typeref:typename:ParamGenerator<T6>::iterator
current6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T6>::iterator current6_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator	typeref:typename:ParamGenerator<T6>::iterator
current6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T6>::iterator current6_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator	typeref:typename:ParamGenerator<T6>::iterator
current6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T6>::iterator current6_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator	typeref:typename:ParamGenerator<T6>::iterator
current7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T7>::iterator current7_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator	typeref:typename:ParamGenerator<T7>::iterator
current7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T7>::iterator current7_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator	typeref:typename:ParamGenerator<T7>::iterator
current7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T7>::iterator current7_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator	typeref:typename:ParamGenerator<T7>::iterator
current7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T7>::iterator current7_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator	typeref:typename:ParamGenerator<T7>::iterator
current8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T8>::iterator current8_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator	typeref:typename:ParamGenerator<T8>::iterator
current8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T8>::iterator current8_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator	typeref:typename:ParamGenerator<T8>::iterator
current8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T8>::iterator current8_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator	typeref:typename:ParamGenerator<T8>::iterator
current9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T9>::iterator current9_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator	typeref:typename:ParamGenerator<T9>::iterator
current9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T9>::iterator current9_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator	typeref:typename:ParamGenerator<T9>::iterator
currentActiveChannel_	src/muduo/muduo/net/EventLoop.h	/^  Channel* currentActiveChannel_;$/;"	m	class:muduo::net::EventLoop	typeref:typename:Channel *
current_parameter_	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  int current_parameter_;$/;"	m	class:TestGenerationTest	typeref:typename:int	file:
current_spec	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  MockSpec<F>& current_spec() { return current_spec_; }$/;"	f	class:testing::internal::FunctionMockerBase	typeref:typename:MockSpec<F> &
current_spec_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  MockSpec<F> current_spec_;$/;"	m	class:testing::internal::FunctionMockerBase	typeref:typename:MockSpec<F>
current_test_case	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  const TestCase* current_test_case() const { return current_test_case_; }$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:const TestCase *
current_test_case	src/tests/googletest/googletest/src/gtest.cc	/^const TestCase* UnitTest::current_test_case() const$/;"	f	class:testing::UnitTest	typeref:typename:const TestCase *
current_test_case_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  TestCase* current_test_case_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:TestCase *
current_test_info	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  TestInfo* current_test_info() { return current_test_info_; }$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:TestInfo *
current_test_info	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  const TestInfo* current_test_info() const { return current_test_info_; }$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:const TestInfo *
current_test_info	src/tests/googletest/googletest/src/gtest.cc	/^const TestInfo* UnitTest::current_test_info() const$/;"	f	class:testing::UnitTest	typeref:typename:const TestInfo *
current_test_info_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  TestInfo* current_test_info_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:TestInfo *
current_test_result	src/tests/googletest/googletest/src/gtest.cc	/^TestResult* UnitTestImpl::current_test_result() {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:TestResult *
current_value_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator	typeref:typename:ParamType
current_value_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator2::Iterator	typeref:typename:ParamType
current_value_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator	typeref:typename:ParamType
current_value_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator	typeref:typename:ParamType
current_value_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator	typeref:typename:ParamType
current_value_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator	typeref:typename:ParamType
current_value_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator	typeref:typename:ParamType
current_value_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator	typeref:typename:ParamType
current_value_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator	typeref:typename:ParamType
current_variance	src/libtfhe-superaic-core/include/lwesamples.h	/^   	double current_variance; \/\/-- average noise of the sample$/;"	m	struct:LweSample	typeref:typename:double
current_variance	src/libtfhe-superaic-core/include/tlwe.h	/^    double current_variance; \/\/\/< avg variance of the sample$/;"	m	struct:TLweSample	typeref:typename:double
current_variance	src/libtfhe-superaic-core/include/tlwe.h	/^    double current_variance; \/\/\/< avg variance of the sample$/;"	m	struct:TLweSampleFFT	typeref:typename:double
current_variance	src/tests/fakes/lwe.h	/^    double current_variance;$/;"	m	struct:FakeLwe	typeref:typename:double
current_variance	src/tests/fakes/tgsw-fft.h	/^        double current_variance;$/;"	m	struct:__anonee999a9f0111::FakeTGswFFT	typeref:typename:double
current_variance	src/tests/fakes/tgsw.h	/^        double current_variance;$/;"	m	struct:__anond844f8d20111::FakeTGsw	typeref:typename:double
current_variance	src/tests/fakes/tlwe-fft.h	/^        double current_variance;$/;"	m	struct:__anon7c76dd960111::FakeTLweFFT	typeref:typename:double
current_variance	src/tests/fakes/tlwe.h	/^        double current_variance;$/;"	m	struct:__anond8a158490111::FakeTLwe	typeref:typename:double
cutime	src/muduo/examples/procmon/procmon.cc	/^  long cutime;$/;"	m	struct:StatData	typeref:typename:long	file:
cxx_base_flags	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^      set(cxx_base_flags "${cxx_base_flags} -bigobj")$/;"	v
cxx_base_flags	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^      set(cxx_base_flags "${cxx_base_flags} -wd4127")$/;"	v
cxx_base_flags	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^      set(cxx_base_flags "${cxx_base_flags} -wd4511 -wd4512")$/;"	v
cxx_base_flags	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^      set(cxx_base_flags "${cxx_base_flags} -wd4675")$/;"	v
cxx_base_flags	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^      set(cxx_base_flags "${cxx_base_flags} -wd4702")$/;"	v
cxx_base_flags	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^      set(cxx_base_flags "${cxx_base_flags} -wd4800")$/;"	v
cxx_base_flags	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^    set(cxx_base_flags "${cxx_base_flags} -DGTEST_HAS_PTHREAD=0")$/;"	v
cxx_base_flags	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^    set(cxx_base_flags "${cxx_base_flags} -DGTEST_HAS_PTHREAD=1")$/;"	v
cxx_base_flags	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^    set(cxx_base_flags "${cxx_base_flags} -DSTRICT -DWIN32_LEAN_AND_MEAN")$/;"	v
cxx_base_flags	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^    set(cxx_base_flags "${cxx_base_flags} -D_UNICODE -DUNICODE -DWIN32 -D_WIN32")$/;"	v
cxx_base_flags	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^    set(cxx_base_flags "-AA -mt")$/;"	v
cxx_base_flags	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^    set(cxx_base_flags "-GS -W4 -WX -wd4251 -wd4275 -nologo -J -Zi")$/;"	v
cxx_base_flags	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^    set(cxx_base_flags "-Wall -Wshadow")$/;"	v
cxx_default	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^  set(cxx_default "${cxx_exception}")$/;"	v
cxx_exception	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^  set(cxx_exception "${CMAKE_CXX_FLAGS} ${cxx_base_flags} ${cxx_exception_flags}")$/;"	v
cxx_exception_flags	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^    set(cxx_exception_flags "-DGTEST_HAS_EXCEPTIONS=1")$/;"	v
cxx_exception_flags	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^    set(cxx_exception_flags "-EHsc -D_HAS_EXCEPTIONS=1")$/;"	v
cxx_exception_flags	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^    set(cxx_exception_flags "-features=except")$/;"	v
cxx_exception_flags	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^    set(cxx_exception_flags "-fexceptions")$/;"	v
cxx_exception_flags	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^    set(cxx_exception_flags "-qeh")$/;"	v
cxx_executable	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^function(cxx_executable name dir libs)$/;"	f
cxx_executable_with_flags	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^function(cxx_executable_with_flags name cxx_flags libs)$/;"	f
cxx_library	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^function(cxx_library name cxx_flags)$/;"	f
cxx_library_with_type	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^function(cxx_library_with_type name type cxx_flags)$/;"	f
cxx_no_exception	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^  set(cxx_no_exception$/;"	v
cxx_no_exception_flags	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^    set(cxx_no_exception_flags "+noeh -DGTEST_HAS_EXCEPTIONS=0")$/;"	v
cxx_no_exception_flags	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^    set(cxx_no_exception_flags "-D_HAS_EXCEPTIONS=0")$/;"	v
cxx_no_exception_flags	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^    set(cxx_no_exception_flags "-features=no%except -DGTEST_HAS_EXCEPTIONS=0")$/;"	v
cxx_no_exception_flags	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^    set(cxx_no_exception_flags "-fno-exceptions")$/;"	v
cxx_no_exception_flags	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^    set(cxx_no_exception_flags "-qnoeh")$/;"	v
cxx_no_rtti	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^  set(cxx_no_rtti "${cxx_default} ${cxx_no_rtti_flags}")$/;"	v
cxx_no_rtti_flags	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^    set(cxx_no_rtti_flags "")$/;"	v
cxx_no_rtti_flags	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^    set(cxx_no_rtti_flags "-GR-")$/;"	v
cxx_no_rtti_flags	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^    set(cxx_no_rtti_flags "-features=no%rtti -DGTEST_HAS_RTTI=0")$/;"	v
cxx_no_rtti_flags	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^    set(cxx_no_rtti_flags "-fno-rtti -DGTEST_HAS_RTTI=0")$/;"	v
cxx_no_rtti_flags	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^    set(cxx_no_rtti_flags "-qnortti -DGTEST_HAS_RTTI=0")$/;"	v
cxx_shared_library	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^function(cxx_shared_library name cxx_flags)$/;"	f
cxx_strict	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^  set(cxx_strict "${cxx_default} ${cxx_strict_flags}")$/;"	v
cxx_strict_flags	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^    set(cxx_strict_flags$/;"	v
cxx_test	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^function(cxx_test name libs)$/;"	f
cxx_test_with_flags	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^function(cxx_test_with_flags name cxx_flags libs)$/;"	f
cxx_use_own_tuple	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^  set(cxx_use_own_tuple "${cxx_default} -DGTEST_USE_OWN_TR1_TUPLE=1")$/;"	v
data	src/libtfhe-superaic-core/include/polynomials.h	/^   void* data;$/;"	m	struct:LagrangeHalfCPolynomial	typeref:typename:void *
data	src/libtfhe-superaic-core/tfhe_generic_streams.cpp	/^    map<string, string> data;$/;"	m	class:MapTextModeProperties	typeref:typename:map<string,string>	file:
data	src/muduo/examples/ace/ttcp/common.h	/^  char data[0];$/;"	m	struct:PayloadMessage	typeref:typename:char[0]
data	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/DataEvent.java	/^    public final ChannelBuffer data;$/;"	f	class:DataEvent
data	src/muduo/examples/wordcount/slowsink.py	/^	data = client_socket.recv(BUFSIZE)$/;"	v
data	src/muduo/muduo/base/LogStream.h	/^  const char* data() const { return buf_; }$/;"	f	class:muduo::Fmt	typeref:typename:const char *
data	src/muduo/muduo/base/LogStream.h	/^  const char* data() const { return data_; }$/;"	f	class:muduo::detail::FixedBuffer	typeref:typename:const char *
data	src/muduo/muduo/base/StringPiece.h	/^  const char* data() const { return ptr_; }$/;"	f	class:muduo::StringPiece	typeref:typename:const char *
dataCallback	src/muduo/examples/curl/Curl.cc	/^void Request::dataCallback(const char* buffer, int len)$/;"	f	class:Request	typeref:typename:void
dataCb_	src/muduo/examples/curl/Curl.h	/^  DataCallback dataCb_;$/;"	m	class:curl::Request	typeref:typename:DataCallback
data_	src/muduo/examples/memcached/server/Item.h	/^  char*          data_;$/;"	m	class:Item	typeref:typename:char *
data_	src/muduo/muduo/base/LogStream.h	/^  char data_[SIZE];$/;"	m	class:muduo::detail::FixedBuffer	typeref:typename:char[]
data_	src/muduo/muduo/base/Logging.h	/^    const char* data_;$/;"	m	class:muduo::Logger::SourceFile	typeref:typename:const char *
data_	src/muduo/muduo/base/TimeZone.h	/^  std::shared_ptr<Data> data_;$/;"	m	class:muduo::TimeZone	typeref:typename:std::shared_ptr<Data>
data_	src/tests/googletest/googletest/include/gtest/gtest.h	/^  AssertHelperData* const data_;$/;"	m	class:testing::internal::AssertHelper	typeref:typename:AssertHelperData * const
date_unittest	src/muduo/muduo/base/tests/CMakeLists.txt	/^add_executable(date_unittest Date_unittest.cc)$/;"	t
day	src/muduo/muduo/base/Date.h	/^    int day;  \/\/ [1..31]$/;"	m	struct:muduo::Date::YearMonthDay	typeref:typename:int
day	src/muduo/muduo/base/Date.h	/^  int day() const$/;"	f	class:muduo::Date	typeref:typename:int
day	src/muduo/muduo/base/TimeZone.h	/^  int day = 0;      \/\/ [1, 31]$/;"	m	struct:muduo::DateTime	typeref:typename:int
daysOfMonth	src/muduo/muduo/base/tests/Date_unittest.cc	/^int daysOfMonth(int year, int month)$/;"	f	typeref:typename:int
dbsizeCallback	src/muduo/contrib/hiredis/mrediscli.cc	/^void dbsizeCallback(hiredis::Hiredis* c, redisReply* reply)$/;"	f	typeref:typename:void
de_serialize_payload	src/libtfhe-superaic-core/tfhe_package.cpp	/^size_t ProxyPayload_ACK_OK::de_serialize_payload(unsigned char *buffer, size_t buffer_size)$/;"	f	class:ProxyPayload_ACK_OK	typeref:typename:size_t
de_serialize_payload	src/libtfhe-superaic-core/tfhe_package.cpp	/^size_t TFHE_Payload::de_serialize_payload(unsigned char *buffer, size_t buffer_size)$/;"	f	class:TFHE_Payload	typeref:typename:size_t
death_test_count	src/tests/googletest/googletest/include/gtest/gtest.h	/^  int death_test_count() const { return death_test_count_; }$/;"	f	class:testing::TestResult	typeref:typename:int
death_test_count_	src/tests/googletest/googletest/include/gtest/gtest.h	/^  int death_test_count_;$/;"	m	class:testing::TestResult	typeref:typename:int
death_test_factory	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  internal::DeathTestFactory* death_test_factory() {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:internal::DeathTestFactory *
death_test_factory_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  internal::scoped_ptr<internal::DeathTestFactory> death_test_factory_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:internal::scoped_ptr<internal::DeathTestFactory>
death_test_style_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  std::string death_test_style_;$/;"	m	class:testing::internal::GTestFlagSaver	typeref:typename:std::string
death_test_use_fork	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  bool death_test_use_fork;$/;"	m	struct:testing::Flags	typeref:typename:bool	file:
death_test_use_fork_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  bool death_test_use_fork_;$/;"	m	class:testing::internal::GTestFlagSaver	typeref:typename:bool
debugString	src/muduo/muduo/base/LogStream.cc	/^const char* FixedBuffer<SIZE>::debugString()$/;"	f	class:FixedBuffer	typeref:typename:const char *
debug_accum_key	src/libtfhe-superaic-core/lwe.cpp	/^const TLweKey* debug_accum_key;$/;"	v	typeref:typename:const TLweKey *
debug_extract_key	src/libtfhe-superaic-core/lwe.cpp	/^const LweKey* debug_extract_key;$/;"	v	typeref:typename:const LweKey *
debug_in_key	src/libtfhe-superaic-core/lwe.cpp	/^const LweKey* debug_in_key;$/;"	v	typeref:typename:const LweKey *
decrement	src/muduo/muduo/base/Atomic.h	/^  void decrement()$/;"	f	class:muduo::detail::AtomicIntegerT	typeref:typename:void
decrementAndGet	src/muduo/muduo/base/Atomic.h	/^  T decrementAndGet()$/;"	f	class:muduo::detail::AtomicIntegerT	typeref:typename:T
decrypt	docs/rustops/decrypt.md	/^# decrypt$/;"	c
decrypt_with_private_key	src/libtfhe-superaic-core/message_functions.cpp	/^int32_t decrypt_with_private_key($/;"	f	typeref:typename:int32_t
defaultCallback_	src/muduo/examples/protobuf/codec/dispatcher.h	/^  ProtobufMessageCallback defaultCallback_;$/;"	m	class:ProtobufDispatcher	typeref:typename:ProtobufMessageCallback
defaultCallback_	src/muduo/examples/protobuf/codec/dispatcher_lite.h	/^  ProtobufMessageCallback defaultCallback_;$/;"	m	class:ProtobufDispatcherLite	typeref:typename:ProtobufMessageCallback
defaultConnectionCallback	src/muduo/muduo/net/TcpConnection.cc	/^void muduo::net::defaultConnectionCallback(const TcpConnectionPtr& conn)$/;"	f	class:muduo::net	typeref:typename:void
defaultErrorCallback	src/muduo/examples/protobuf/codec/codec.cc	/^void ProtobufCodec::defaultErrorCallback(const muduo::net::TcpConnectionPtr& conn,$/;"	f	class:ProtobufCodec	typeref:typename:void
defaultErrorCallback	src/muduo/muduo/net/protobuf/ProtobufCodecLite.cc	/^void ProtobufCodecLite::defaultErrorCallback(const TcpConnectionPtr& conn,$/;"	f	class:ProtobufCodecLite	typeref:typename:void
defaultFlush	src/muduo/muduo/base/Logging.cc	/^void defaultFlush()$/;"	f	namespace:muduo	typeref:typename:void
defaultHttpCallback	src/muduo/muduo/net/http/HttpServer.cc	/^void defaultHttpCallback(const HttpRequest&, HttpResponse* resp)$/;"	f	namespace:muduo::net::detail	typeref:typename:void
defaultMessageCallback	src/muduo/muduo/net/TcpConnection.cc	/^void muduo::net::defaultMessageCallback(const TcpConnectionPtr&,$/;"	f	class:muduo::net	typeref:typename:void
defaultOutput	src/muduo/muduo/base/Logging.cc	/^void defaultOutput(const char* msg, int len)$/;"	f	namespace:muduo	typeref:typename:void
default_128bit_gate_bootstrapping_parameters	src/libtfhe-superaic-core/tfhe_gate_bootstrapping.cpp	/^static TFheGateBootstrappingParameterSet *default_128bit_gate_bootstrapping_parameters() {$/;"	f	typeref:typename:TFheGateBootstrappingParameterSet *	file:
default_80bit_gate_bootstrapping_parameters	src/libtfhe-superaic-core/tfhe_gate_bootstrapping.cpp	/^static TFheGateBootstrappingParameterSet *default_80bit_gate_bootstrapping_parameters() {$/;"	f	typeref:typename:TFheGateBootstrappingParameterSet *	file:
default_factory_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  scoped_ptr<ValueHolderFactory> default_factory_;$/;"	m	class:testing::internal::ThreadLocal	typeref:typename:scoped_ptr<ValueHolderFactory>
default_global_test_part_result_reporter_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  DefaultGlobalTestPartResultReporter default_global_test_part_result_reporter_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:DefaultGlobalTestPartResultReporter
default_per_thread_test_part_result_reporter_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^      default_per_thread_test_part_result_reporter_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:DefaultPerThreadTestPartResultReporter
default_result_printer	src/tests/googletest/googletest/include/gtest/gtest.h	/^  TestEventListener* default_result_printer() const {$/;"	f	class:testing::TestEventListeners	typeref:typename:TestEventListener *
default_result_printer_	src/tests/googletest/googletest/include/gtest/gtest.h	/^  TestEventListener* default_result_printer_;$/;"	m	class:testing::TestEventListeners	typeref:typename:TestEventListener *
default_target	buildotests/Makefile	/^default_target: all$/;"	t
default_target	buildotests/driver/Makefile	/^default_target: all$/;"	t
default_target	buildotests/examples/Makefile	/^default_target: all$/;"	t
default_target	buildotests/libtfhe-superaic-acc/Makefile	/^default_target: all$/;"	t
default_target	buildotests/libtfhe-superaic-client/Makefile	/^default_target: all$/;"	t
default_target	buildotests/libtfhe-superaic-core/Makefile	/^default_target: all$/;"	t
default_target	buildotests/libtfhe-superaic-core/fft_processors/Makefile	/^default_target: all$/;"	t
default_target	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^default_target: all$/;"	t
default_target	buildotests/libtfhe-superaic-server/Makefile	/^default_target: all$/;"	t
default_target	buildotests/tests/Makefile	/^default_target: all$/;"	t
default_target	buildotests/tests/googletest/Makefile	/^default_target: all$/;"	t
default_target	buildotests/tests/googletest/googlemock/Makefile	/^default_target: all$/;"	t
default_target	buildotests/tests/googletest/googlemock/gtest/Makefile	/^default_target: all$/;"	t
default_xml_generator	src/tests/googletest/googletest/include/gtest/gtest.h	/^  TestEventListener* default_xml_generator() const {$/;"	f	class:testing::TestEventListeners	typeref:typename:TestEventListener *
default_xml_generator_	src/tests/googletest/googletest/include/gtest/gtest.h	/^  TestEventListener* default_xml_generator_;$/;"	m	class:testing::TestEventListeners	typeref:typename:TestEventListener *
deinit	src/libtfhe-superaic-acc/accs/FPGA-V0/acc_fpga_v0.cpp	/^void FPGA_ACC_V0::deinit(void) {$/;"	f	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:void
delRead	src/muduo/contrib/hiredis/Hiredis.cc	/^void Hiredis::delRead(void* privdata)$/;"	f	class:Hiredis	typeref:typename:void
delWrite	src/muduo/contrib/hiredis/Hiredis.cc	/^void Hiredis::delWrite(void* privdata)$/;"	f	class:Hiredis	typeref:typename:void
del_session_on_device	src/libtfhe-superaic-acc/tfhe_acc.cpp	/^void TFHE_ACC::del_session_on_device(Session_ID_t sessionID)$/;"	f	class:tfhe_superaic::TFHE_ACC	typeref:typename:void
delay_queue_	src/muduo/muduo/base/tests/BlockingQueue_bench.cc	/^  muduo::BlockingQueue<int> delay_queue_;$/;"	m	class:Bench	typeref:typename:muduo::BlockingQueue<int>	file:
deleteItem	src/muduo/examples/memcached/server/MemcacheServer.cc	/^bool MemcacheServer::deleteItem(const ConstItemPtr& key)$/;"	f	class:MemcacheServer	typeref:typename:bool
delete_IntPolynomial	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void delete_IntPolynomial(IntPolynomial* obj) {$/;"	f	typeref:typename:EXPORT void
delete_IntPolynomial_array	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void delete_IntPolynomial_array(int32_t nbelts, IntPolynomial* obj) {$/;"	f	typeref:typename:EXPORT void
delete_LagrangeHalfCPolynomial	src/libtfhe-superaic-core/polynomials.cpp	/^EXPORT void delete_LagrangeHalfCPolynomial(LagrangeHalfCPolynomial* obj) {$/;"	f	typeref:typename:EXPORT void
delete_LagrangeHalfCPolynomial_array	src/libtfhe-superaic-core/polynomials.cpp	/^EXPORT void delete_LagrangeHalfCPolynomial_array(int32_t nbelts, LagrangeHalfCPolynomial* obj) {$/;"	f	typeref:typename:EXPORT void
delete_LweBootstrappingKey	src/libtfhe-superaic-core/lwe-bootstrapping-functions.cpp	/^EXPORT void delete_LweBootstrappingKey(LweBootstrappingKey *obj) {$/;"	f	typeref:typename:EXPORT void
delete_LweBootstrappingKeyFFT	src/libtfhe-superaic-core/lwe-bootstrapping-functions-fft.cpp	/^EXPORT void delete_LweBootstrappingKeyFFT(LweBootstrappingKeyFFT *obj) {$/;"	f	typeref:typename:EXPORT void
delete_LweBootstrappingKeyFFT	src/tests/io_test.cpp	/^           void delete_LweBootstrappingKeyFFT(LweBootstrappingKeyFFT*) {}$/;"	f	class:__anon2d72c1c60111::IOTest2	typeref:typename:void	file:
delete_LweBootstrappingKeyFFT_array	src/libtfhe-superaic-core/lwe-bootstrapping-functions-fft.cpp	/^EXPORT void delete_LweBootstrappingKeyFFT_array(int32_t nbelts, LweBootstrappingKeyFFT *obj) {$/;"	f	typeref:typename:EXPORT void
delete_LweBootstrappingKey_array	src/libtfhe-superaic-core/lwe-bootstrapping-functions.cpp	/^EXPORT void delete_LweBootstrappingKey_array(int32_t nbelts, LweBootstrappingKey *obj) {$/;"	f	typeref:typename:EXPORT void
delete_LweKeySwitchKey	src/libtfhe-superaic-core/lwe-keyswitch-functions.cpp	/^EXPORT void delete_LweKeySwitchKey(LweKeySwitchKey* obj) {$/;"	f	typeref:typename:EXPORT void
delete_LweKeySwitchKey_array	src/libtfhe-superaic-core/lwe-keyswitch-functions.cpp	/^EXPORT void delete_LweKeySwitchKey_array(int32_t nbelts, LweKeySwitchKey* obj) {$/;"	f	typeref:typename:EXPORT void
delete_LweParams	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void delete_LweParams(LweParams* obj) {$/;"	f	typeref:typename:EXPORT void
delete_LweParams_array	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void delete_LweParams_array(int32_t nbelts, LweParams* obj) {$/;"	f	typeref:typename:EXPORT void
delete_TGswKey	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void delete_TGswKey(TGswKey* obj) {$/;"	f	typeref:typename:EXPORT void
delete_TGswKey_array	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void delete_TGswKey_array(int32_t nbelts, TGswKey* obj) {$/;"	f	typeref:typename:EXPORT void
delete_TGswParams	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void delete_TGswParams(TGswParams* obj) {$/;"	f	typeref:typename:EXPORT void
delete_TGswParams_array	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void delete_TGswParams_array(int32_t nbelts, TGswParams* obj) {$/;"	f	typeref:typename:EXPORT void
delete_TLweParams	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void delete_TLweParams(TLweParams* obj) {$/;"	f	typeref:typename:EXPORT void
delete_TLweParams_array	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void delete_TLweParams_array(int32_t nbelts, TLweParams* obj) {$/;"	f	typeref:typename:EXPORT void
delete_TextModeProperties	src/libtfhe-superaic-core/tfhe_generic_streams.cpp	/^void delete_TextModeProperties(TextModeProperties *ptr) {$/;"	f	typeref:typename:void
delete_TorusPolynomial	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void delete_TorusPolynomial(TorusPolynomial* obj) {$/;"	f	typeref:typename:EXPORT void
delete_TorusPolynomial_array	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void delete_TorusPolynomial_array(int32_t nbelts, TorusPolynomial* obj) {$/;"	f	typeref:typename:EXPORT void
delete_gate_bootstrapping_ciphertext	src/libtfhe-superaic-core/tfhe_gate_bootstrapping.cpp	/^EXPORT void delete_gate_bootstrapping_ciphertext(LweSample *sample) {$/;"	f	typeref:typename:EXPORT void
delete_gate_bootstrapping_ciphertext_array	src/libtfhe-superaic-core/tfhe_gate_bootstrapping.cpp	/^EXPORT void delete_gate_bootstrapping_ciphertext_array(int32_t nbelems, LweSample *samples) {$/;"	f	typeref:typename:EXPORT void
delete_gate_bootstrapping_cloud_keyset	src/libtfhe-superaic-core/tfhe_gate_bootstrapping.cpp	/^EXPORT void delete_gate_bootstrapping_cloud_keyset(TFheGateBootstrappingCloudKeySet *keyset) {$/;"	f	typeref:typename:EXPORT void
delete_gate_bootstrapping_parameters	src/libtfhe-superaic-core/tfhe_gate_bootstrapping.cpp	/^EXPORT void delete_gate_bootstrapping_parameters(TFheGateBootstrappingParameterSet *params) {$/;"	f	typeref:typename:EXPORT void
delete_gate_bootstrapping_secret_keyset	src/libtfhe-superaic-core/tfhe_gate_bootstrapping.cpp	/^EXPORT void delete_gate_bootstrapping_secret_keyset(TFheGateBootstrappingSecretKeySet *keyset) {$/;"	f	typeref:typename:EXPORT void
deleter_	src/muduo/muduo/base/ThreadLocalSingleton.h	/^  static Deleter deleter_;$/;"	m	class:muduo::ThreadLocalSingleton	typeref:typename:Deleter
deleter_	src/muduo/muduo/base/ThreadLocalSingleton.h	/^typename ThreadLocalSingleton<T>::Deleter ThreadLocalSingleton<T>::deleter_;$/;"	m	class:muduo::ThreadLocalSingleton<T>	typeref:typename:ThreadLocalSingleton<T>::Deleter
depart	src/tests/googletest/googletest/include/gtest/internal/gtest-linked_ptr.h	/^  bool depart()$/;"	f	class:testing::internal::linked_ptr_internal	typeref:typename:bool
depart	src/tests/googletest/googletest/include/gtest/internal/gtest-linked_ptr.h	/^  void depart() {$/;"	f	class:testing::internal::linked_ptr	typeref:typename:void
depend	buildotests/Makefile	/^depend:$/;"	t
depend	buildotests/driver/Makefile	/^depend:$/;"	t
depend	buildotests/examples/Makefile	/^depend:$/;"	t
depend	buildotests/libtfhe-superaic-acc/Makefile	/^depend:$/;"	t
depend	buildotests/libtfhe-superaic-client/Makefile	/^depend:$/;"	t
depend	buildotests/libtfhe-superaic-core/Makefile	/^depend:$/;"	t
depend	buildotests/libtfhe-superaic-core/fft_processors/Makefile	/^depend:$/;"	t
depend	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^depend:$/;"	t
depend	buildotests/libtfhe-superaic-server/Makefile	/^depend:$/;"	t
depend	buildotests/tests/Makefile	/^depend:$/;"	t
depend	buildotests/tests/googletest/Makefile	/^depend:$/;"	t
depend	buildotests/tests/googletest/googlemock/Makefile	/^depend:$/;"	t
depend	buildotests/tests/googletest/googlemock/gtest/Makefile	/^depend:$/;"	t
desigIdx	src/muduo/muduo/base/TimeZone.cc	/^    int desigIdx;$/;"	m	struct:TimeZone::Data::LocalTime	typeref:typename:int	file:
destroy	src/muduo/muduo/base/Singleton.h	/^  static void destroy()$/;"	f	class:muduo::Singleton	typeref:typename:void
destroy_IntPolynomial	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void destroy_IntPolynomial(IntPolynomial* obj) {$/;"	f	typeref:typename:EXPORT void
destroy_IntPolynomial_array	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void destroy_IntPolynomial_array(int32_t nbelts, IntPolynomial* obj) {$/;"	f	typeref:typename:EXPORT void
destroy_LagrangeHalfCPolynomial	src/libtfhe-superaic-core/fft_processors/nayuki/lagrangehalfc_impl.cpp	/^EXPORT void destroy_LagrangeHalfCPolynomial(LagrangeHalfCPolynomial* obj) {$/;"	f	typeref:typename:EXPORT void
destroy_LagrangeHalfCPolynomial_array	src/libtfhe-superaic-core/fft_processors/nayuki/lagrangehalfc_impl.cpp	/^EXPORT void destroy_LagrangeHalfCPolynomial_array(int32_t nbelts, LagrangeHalfCPolynomial* obj) /;"	f	typeref:typename:EXPORT void
destroy_LweBootstrappingKey	src/libtfhe-superaic-core/lwe-bootstrapping-functions.cpp	/^EXPORT void destroy_LweBootstrappingKey(LweBootstrappingKey *obj) {$/;"	f	typeref:typename:EXPORT void
destroy_LweBootstrappingKeyFFT	src/libtfhe-superaic-core/lwe-bootstrapping-functions-fft.cpp	/^EXPORT void destroy_LweBootstrappingKeyFFT(LweBootstrappingKeyFFT *obj) {$/;"	f	typeref:typename:EXPORT void
destroy_LweBootstrappingKeyFFT_array	src/libtfhe-superaic-core/lwe-bootstrapping-functions-fft.cpp	/^EXPORT void destroy_LweBootstrappingKeyFFT_array(int32_t nbelts, LweBootstrappingKeyFFT *obj) {$/;"	f	typeref:typename:EXPORT void
destroy_LweBootstrappingKey_array	src/libtfhe-superaic-core/lwe-bootstrapping-functions.cpp	/^EXPORT void destroy_LweBootstrappingKey_array(int32_t nbelts, LweBootstrappingKey *obj) {$/;"	f	typeref:typename:EXPORT void
destroy_LweKey	src/libtfhe-superaic-core/lwe-functions.cpp	/^EXPORT void destroy_LweKey(LweKey* obj) {$/;"	f	typeref:typename:EXPORT void
destroy_LweKeySwitchKey	src/libtfhe-superaic-core/lwe-keyswitch-functions.cpp	/^EXPORT void destroy_LweKeySwitchKey(LweKeySwitchKey* obj) {$/;"	f	typeref:typename:EXPORT void
destroy_LweKeySwitchKey_array	src/libtfhe-superaic-core/lwe-keyswitch-functions.cpp	/^EXPORT void destroy_LweKeySwitchKey_array(int32_t nbelts, LweKeySwitchKey* obj) {$/;"	f	typeref:typename:EXPORT void
destroy_LweParams	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void destroy_LweParams(LweParams* obj) {$/;"	f	typeref:typename:EXPORT void
destroy_LweParams_array	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void destroy_LweParams_array(int32_t nbelts, LweParams* obj) {$/;"	f	typeref:typename:EXPORT void
destroy_LweSample	src/libtfhe-superaic-core/lwe-functions.cpp	/^EXPORT void destroy_LweSample(LweSample* obj) {$/;"	f	typeref:typename:EXPORT void
destroy_TGswKey	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void destroy_TGswKey(TGswKey* obj) {$/;"	f	typeref:typename:EXPORT void
destroy_TGswKey_array	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void destroy_TGswKey_array(int32_t nbelts, TGswKey* obj) {$/;"	f	typeref:typename:EXPORT void
destroy_TGswParams	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void destroy_TGswParams(TGswParams* obj) {$/;"	f	typeref:typename:EXPORT void
destroy_TGswParams_array	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void destroy_TGswParams_array(int32_t nbelts, TGswParams* obj) {$/;"	f	typeref:typename:EXPORT void
destroy_TGswSample	src/libtfhe-superaic-core/tgsw-functions.cpp	/^EXPORT void destroy_TGswSample(TGswSample *obj) {$/;"	f	typeref:typename:EXPORT void
destroy_TGswSampleFFT	src/libtfhe-superaic-core/tgsw-fft-operations.cpp	/^EXPORT void destroy_TGswSampleFFT(TGswSampleFFT *obj) {$/;"	f	typeref:typename:EXPORT void
destroy_TLweKey	src/libtfhe-superaic-core/tlwe-functions.cpp	/^EXPORT void destroy_TLweKey(TLweKey *obj) {$/;"	f	typeref:typename:EXPORT void
destroy_TLweParams	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void destroy_TLweParams(TLweParams* obj) {$/;"	f	typeref:typename:EXPORT void
destroy_TLweParams_array	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void destroy_TLweParams_array(int32_t nbelts, TLweParams* obj) {$/;"	f	typeref:typename:EXPORT void
destroy_TLweSample	src/libtfhe-superaic-core/tlwe-functions.cpp	/^EXPORT void destroy_TLweSample(TLweSample *obj) {$/;"	f	typeref:typename:EXPORT void
destroy_TLweSampleFFT	src/libtfhe-superaic-core/tlwe-fft-operations.cpp	/^EXPORT void destroy_TLweSampleFFT(TLweSampleFFT *obj) {$/;"	f	typeref:typename:EXPORT void
destroy_TorusPolynomial	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void destroy_TorusPolynomial(TorusPolynomial* obj) {$/;"	f	typeref:typename:EXPORT void
destroy_TorusPolynomial_array	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void destroy_TorusPolynomial_array(int32_t nbelts, TorusPolynomial* obj) {$/;"	f	typeref:typename:EXPORT void
destructor	src/muduo/muduo/base/ThreadLocal.h	/^  static void destructor(void *x)$/;"	f	class:muduo::ThreadLocal	typeref:typename:void
destructor	src/muduo/muduo/base/ThreadLocalSingleton.h	/^  static void destructor(void* obj)$/;"	f	class:muduo::ThreadLocalSingleton	typeref:typename:void
detail	src/muduo/muduo/base/Atomic.h	/^namespace detail$/;"	n	namespace:muduo
detail	src/muduo/muduo/base/Date.cc	/^namespace detail$/;"	n	namespace:muduo	file:
detail	src/muduo/muduo/base/LogStream.cc	/^namespace detail$/;"	n	namespace:muduo	file:
detail	src/muduo/muduo/base/LogStream.h	/^namespace detail$/;"	n	namespace:muduo
detail	src/muduo/muduo/base/ProcessInfo.cc	/^namespace detail$/;"	n	namespace:muduo	file:
detail	src/muduo/muduo/base/Singleton.h	/^namespace detail$/;"	n	namespace:muduo
detail	src/muduo/muduo/base/Thread.cc	/^namespace detail$/;"	n	namespace:muduo	file:
detail	src/muduo/muduo/base/TimeZone.cc	/^namespace detail$/;"	n	namespace:muduo	file:
detail	src/muduo/muduo/net/TcpClient.cc	/^namespace detail$/;"	n	namespace:muduo::net	file:
detail	src/muduo/muduo/net/TimerQueue.cc	/^namespace detail$/;"	n	namespace:muduo::net	file:
detail	src/muduo/muduo/net/http/HttpServer.cc	/^namespace detail$/;"	n	namespace:muduo::net	file:
detail	src/muduo/muduo/net/tests/Channel_test.cc	/^namespace detail$/;"	n	namespace:muduo::net	file:
die_dramatically	src/libtfhe-superaic-core/numeric-functions.cpp	/^EXPORT void die_dramatically(const char *message) {$/;"	f	typeref:typename:EXPORT void
difference_type	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  typedef ptrdiff_t difference_type;$/;"	t	class:testing::internal::ParamIterator	typeref:typename:ptrdiff_t
digest	src/muduo/examples/filetransfer/loadtest/Handler.java	/^    private MessageDigest digest;$/;"	f	class:Handler	file:
digits	src/muduo/muduo/base/LogStream.cc	/^const char digits[] = "9876543210123456789";$/;"	v	namespace:muduo::detail	typeref:typename:const char[]
digitsHex	src/muduo/muduo/base/LogStream.cc	/^const char digitsHex[] = "0123456789ABCDEF";$/;"	v	namespace:muduo::detail	typeref:typename:const char[]
dimensions	src/tests/polynomial_test.cpp	/^        const set<int32_t> dimensions = {500, 750, 1024, 2000};$/;"	m	class:__anon87ebe9520111::PolynomialTest	typeref:typename:const set<int32_t>	file:
dimensions	src/tests/small_size_test.cpp	/^        const set<int32_t> dimensions = {8};$/;"	m	class:__anon9baab4410111::PolynomialTest	typeref:typename:const set<int32_t>	file:
dirFilter	src/muduo/examples/procmon/procmon.cc	/^  static int dirFilter(const struct dirent* d)$/;"	f	class:Procmon	typeref:typename:int	file:
disableAll	src/muduo/muduo/net/Channel.h	/^  void disableAll() { events_ = kNoneEvent; update(); }$/;"	f	class:muduo::net::Channel	typeref:typename:void
disableReading	src/muduo/muduo/net/Channel.h	/^  void disableReading() { events_ &= ~kReadEvent; update(); }$/;"	f	class:muduo::net::Channel	typeref:typename:void
disableWriting	src/muduo/muduo/net/Channel.h	/^  void disableWriting() { events_ &= ~kWriteEvent; update(); }$/;"	f	class:muduo::net::Channel	typeref:typename:void
disabled_test_count	src/tests/googletest/googletest/src/gtest.cc	/^int TestCase::disabled_test_count() const {$/;"	f	class:testing::TestCase	typeref:typename:int
disabled_test_count	src/tests/googletest/googletest/src/gtest.cc	/^int UnitTest::disabled_test_count() const {$/;"	f	class:testing::UnitTest	typeref:typename:int
disabled_test_count	src/tests/googletest/googletest/src/gtest.cc	/^int UnitTestImpl::disabled_test_count() const {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:int
discardValue	src/muduo/examples/memcached/server/Session.cc	/^void Session::discardValue(muduo::net::Buffer* buf)$/;"	f	class:Session	typeref:typename:void
disconnect	src/muduo/contrib/hiredis/Hiredis.cc	/^void Hiredis::disconnect()$/;"	f	class:Hiredis	typeref:typename:void
disconnect	src/muduo/examples/ace/logging/client.cc	/^  void disconnect()$/;"	f	class:logging::LogClient	typeref:typename:void	file:
disconnect	src/muduo/examples/asio/chat/client.cc	/^  void disconnect()$/;"	f	class:ChatClient	typeref:typename:void	file:
disconnect	src/muduo/examples/asio/chat/loadtest.cc	/^  void disconnect()$/;"	f	class:ChatClient	typeref:typename:void	file:
disconnect	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockClient.java	/^    public void disconnect() {$/;"	m	class:MockClient
disconnect	src/muduo/examples/socks4a/tunnel.h	/^  void disconnect()$/;"	f	class:Tunnel	typeref:typename:void
disconnect	src/muduo/examples/wordcount/hasher.cc	/^  void disconnect()$/;"	f	class:SendThrottler	typeref:typename:void	file:
disconnect	src/muduo/muduo/net/TcpClient.cc	/^void TcpClient::disconnect()$/;"	f	class:TcpClient	typeref:typename:void
disconnectAll	src/muduo/examples/wordcount/hasher.cc	/^  void disconnectAll()$/;"	f	class:WordCountSender	typeref:typename:void	file:
disconnectCallback	src/muduo/contrib/hiredis/Hiredis.cc	/^\/* static *\/ void Hiredis::disconnectCallback(const redisAsyncContext* ac, int status)$/;"	f	class:Hiredis	typeref:typename:void
disconnectCallback	src/muduo/contrib/hiredis/Hiredis.cc	/^void Hiredis::disconnectCallback(int status)$/;"	f	class:Hiredis	typeref:typename:void
disconnectCallback	src/muduo/contrib/hiredis/mrediscli.cc	/^void disconnectCallback(hiredis::Hiredis* c, int status)$/;"	f	typeref:typename:void
disconnectCb_	src/muduo/contrib/hiredis/Hiredis.h	/^  DisconnectCallback disconnectCb_;$/;"	m	class:hiredis::Hiredis	typeref:typename:DisconnectCallback
disconnectLatch_	src/muduo/examples/wordcount/hasher.cc	/^  CountDownLatch disconnectLatch_;$/;"	m	class:SendThrottler	typeref:typename:CountDownLatch	file:
disconnected	src/muduo/muduo/net/TcpConnection.h	/^  bool disconnected() const { return state_ == kDisconnected; }$/;"	f	class:muduo::net::TcpConnection	typeref:typename:bool
dispatcher_	src/muduo/examples/protobuf/codec/client.cc	/^  ProtobufDispatcher dispatcher_;$/;"	m	class:QueryClient	typeref:typename:ProtobufDispatcher	file:
dispatcher_	src/muduo/examples/protobuf/codec/server.cc	/^  ProtobufDispatcher dispatcher_;$/;"	m	class:QueryServer	typeref:typename:ProtobufDispatcher	file:
distance_matcher_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    const Matcher<DistanceType> distance_matcher_;$/;"	m	class:testing::internal::BeginEndDistanceIsMatcher::Impl	typeref:typename:const Matcher<DistanceType>
distance_matcher_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const DistanceMatcher distance_matcher_;$/;"	m	class:testing::internal::BeginEndDistanceIsMatcher	typeref:typename:const DistanceMatcher
distclean	Makefile	/^distclean:$/;"	t
distributeMessage	src/muduo/examples/asio/chat/server_threaded_highperformance.cc	/^  void distributeMessage(const string& message)$/;"	f	class:ChatServer	typeref:typename:void	file:
divider	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  int divider() const { return divider_; }$/;"	f	class:testing::gmock_matchers_test::DivisibleByImpl	typeref:typename:int	file:
divider_	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  int divider_;$/;"	m	class:testing::gmock_matchers_test::DivisibleByImpl	typeref:typename:int	file:
doAccept	src/muduo/examples/ace/ttcp/ttcp_asio_async.cc	/^void doAccept(tcp::acceptor& acceptor)$/;"	f	typeref:typename:void
doCommand	src/muduo/examples/multiplexer/demux.cc	/^  void doCommand(const string& cmd)$/;"	f	class:DemuxServer	typeref:typename:void	file:
doCommand	src/muduo/examples/multiplexer/multiplexer_simple.cc	/^  void doCommand(const string& cmd)$/;"	f	class:MultiplexServer	typeref:typename:void	file:
doDelete	src/muduo/examples/memcached/server/Session.cc	/^void Session::doDelete(Session::Tokenizer::iterator& beg, Session::Tokenizer::iterator end)$/;"	f	class:Session	typeref:typename:void
doNotLogHup	src/muduo/muduo/net/Channel.h	/^  void doNotLogHup() { logHup_ = false; }$/;"	f	class:muduo::net::Channel	typeref:typename:void
doPendingFunctors	src/muduo/muduo/net/EventLoop.cc	/^void EventLoop::doPendingFunctors()$/;"	f	class:EventLoop	typeref:typename:void
doPublish	src/muduo/examples/hub/hub.cc	/^  void doPublish(const string& source,$/;"	f	class:pubsub::PubSubServer	typeref:typename:void	file:
doReadLength	src/muduo/examples/ace/ttcp/ttcp_asio_async.cc	/^  void doReadLength()$/;"	f	class:TtcpServerConnection	typeref:typename:void	file:
doReadPayload	src/muduo/examples/ace/ttcp/ttcp_asio_async.cc	/^  void doReadPayload()$/;"	f	class:TtcpServerConnection	typeref:typename:void	file:
doReadSession	src/muduo/examples/ace/ttcp/ttcp_asio_async.cc	/^  void doReadSession()$/;"	f	class:TtcpServerConnection	typeref:typename:void	file:
doSubscribe	src/muduo/examples/hub/hub.cc	/^  void doSubscribe(const TcpConnectionPtr& conn,$/;"	f	class:pubsub::PubSubServer	typeref:typename:void	file:
doUnsubscribe	src/muduo/examples/hub/hub.cc	/^  void doUnsubscribe(const TcpConnectionPtr& conn,$/;"	f	class:pubsub::PubSubServer	typeref:typename:void	file:
doUpdate	src/muduo/examples/memcached/server/Session.cc	/^bool Session::doUpdate(Session::Tokenizer::iterator& beg, Session::Tokenizer::iterator end)$/;"	f	class:Session	typeref:typename:bool
doWriteAck	src/muduo/examples/ace/ttcp/ttcp_asio_async.cc	/^  void doWriteAck()$/;"	f	class:TtcpServerConnection	typeref:typename:void	file:
done	src/muduo/examples/curl/Curl.cc	/^void Request::done(int code)$/;"	f	class:Request	typeref:typename:void
done	src/muduo/examples/curl/mcurl.cc	/^void done(curl::Request* c, int code)$/;"	f	typeref:typename:void
done	src/muduo/examples/sudoku/batch.cc	/^void done(const string& name, double elapsed, int count)$/;"	f	typeref:typename:void
done2	src/muduo/examples/curl/mcurl.cc	/^void done2(curl::Request* c, int code)$/;"	f	typeref:typename:void
doneCallback	src/muduo/examples/protobuf/resolver/server.cc	/^  void doneCallback(const std::string& host,$/;"	f	class:resolver::ResolverServiceImpl	typeref:typename:void	file:
doneCallback	src/muduo/muduo/net/protorpc/RpcChannel.cc	/^void RpcChannel::doneCallback(::google::protobuf::Message* response, int64_t id)$/;"	f	class:RpcChannel	typeref:typename:void
doneCb_	src/muduo/examples/curl/Curl.h	/^  DoneCallback doneCb_;$/;"	m	class:curl::Request	typeref:typename:DoneCallback
doneCb_	src/muduo/examples/curl/download.cc	/^  std::function<void()> doneCb_;$/;"	m	class:Piece	typeref:typename:std::function<void ()>	file:
done_	src/muduo/muduo/base/tests/BlockingQueue_bench2.cc	/^  TimestampQueue done_;$/;"	m	class:Bench	typeref:typename:TimestampQueue	file:
done_	src/muduo/muduo/base/tests/Thread_bench.cc	/^  TimestampQueue start_, run_, done_;$/;"	m	class:Bench	typeref:typename:TimestampQueue	file:
dot	src/muduo/examples/wordcount/slowsink.py	/^dot = bps$/;"	v
down	src/muduo/examples/sudoku/sudoku.cc	/^    Node* down;$/;"	m	struct:Node	typeref:typename:Node *	file:
down_cast	src/muduo/muduo/base/Types.h	/^inline To down_cast(From* f)                     \/\/ so we only accept pointers$/;"	f	namespace:muduo	typeref:typename:To
down_pointer_cast	src/muduo/muduo/net/Callbacks.h	/^inline ::std::shared_ptr<To> down_pointer_cast(const ::std::shared_ptr<From>& f) {$/;"	f	namespace:muduo	typeref:typename:::std::shared_ptr<To>
drain	src/muduo/muduo/base/BlockingQueue.h	/^  queue_type drain()$/;"	f	class:muduo::BlockingQueue	typeref:typename:queue_type
droppedRequests_	src/muduo/examples/sudoku/stat.h	/^  int64_t totalRequests_, totalResponses_, totalSolved_, badRequests_, droppedRequests_, totalLa/;"	m	class:SudokuStat	typeref:typename:int64_t
dtest	Makefile	/^dtest: builddtests$/;"	t
dtot32	src/libtfhe-superaic-core/numeric-functions.cpp	/^EXPORT Torus32 dtot32(double d) {$/;"	f	typeref:typename:EXPORT Torus32
dummy	src/muduo/contrib/hiredis/Hiredis.cc	/^static void dummy(const std::shared_ptr<Channel>&)$/;"	f	typeref:typename:void	file:
dummy	src/muduo/examples/curl/Curl.cc	/^static void dummy(const std::shared_ptr<Channel>&)$/;"	f	typeref:typename:void	file:
dummy	src/muduo/muduo/net/protobuf/ProtobufCodecLite.cc	/^  int __attribute__ ((unused)) dummy = ProtobufVersionCheck();$/;"	v	namespace:__anon5ee53c750111	typeref:typename:int
dummy	src/muduo/muduo/net/protorpc/RpcCodec.cc	/^  int dummy __attribute__ ((unused)) = ProtobufVersionCheck();$/;"	v	namespace:__anon451a24830111	typeref:typename:int
dummyOutput	src/muduo/muduo/base/tests/Logging_test.cc	/^void dummyOutput(const char* msg, int len)$/;"	f	typeref:typename:void
dummy_	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  static bool dummy_;$/;"	m	class:testing::internal::TypeIdHelper	typeref:typename:bool
dummy_	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^bool TypeIdHelper<T>::dummy_ = false;$/;"	m	class:testing::internal::TypeIdHelper<T>	typeref:typename:bool
dummyload	src/muduo/examples/procmon/CMakeLists.txt	/^add_executable(dummyload dummyload.cc)$/;"	t
dumpConnectionBuckets	src/muduo/examples/idleconnection/echo.cc	/^void EchoServer::dumpConnectionBuckets() const$/;"	f	class:EchoServer	typeref:typename:void
dumpConnectionList	src/muduo/examples/idleconnection/sortedlist.cc	/^void EchoServer::dumpConnectionList() const$/;"	f	class:EchoServer	typeref:typename:void
echo	src/muduo/contrib/hiredis/mrediscli.cc	/^void echo(hiredis::Hiredis* c, string* s)$/;"	f	typeref:typename:void
echo	src/muduo/contrib/thrift/tests/echo/EchoServer.cc	/^  void echo(std::string& str, const std::string& s)$/;"	f	class:EchoHandler	typeref:typename:void	file:
echo	src/muduo/contrib/thrift/tests/echo/echo.thrift	/^  string echo(1: string arg);$/;"	f	service:Echo	typeref:typename:string 
echo	src/muduo/contrib/thrift/tests/echo/echo.thrift	/^namespace cpp echo$/;"	n	target:cpp
echo	src/muduo/contrib/thrift/tests/echo/echo.thrift	/^namespace py echo$/;"	n	target:py
echo	src/muduo/contrib/thrift/tests/echo/echoclient.py	/^def echo(s):$/;"	f
echo	src/muduo/examples/protobuf/rpcbench/echo.proto	/^package echo;$/;"	p
echo	src/muduo/examples/protobuf/rpcbench/server.cc	/^namespace echo$/;"	n	file:
echoCallback	src/muduo/contrib/hiredis/mrediscli.cc	/^void echoCallback(hiredis::Hiredis* c, redisReply* reply, string* echo)$/;"	f	typeref:typename:void
echo_proto	src/muduo/examples/protobuf/rpcbench/CMakeLists.txt	/^add_library(echo_proto echo.pb.cc)$/;"	t
echoclient_unittest	src/muduo/muduo/net/tests/CMakeLists.txt	/^add_executable(echoclient_unittest EchoClient_unittest.cc)$/;"	t
echoserver_unittest	src/muduo/muduo/net/tests/CMakeLists.txt	/^add_executable(echoserver_unittest EchoServer_unittest.cc)$/;"	t
edit_cache	buildotests/Makefile	/^edit_cache:$/;"	t
edit_cache	buildotests/driver/Makefile	/^edit_cache:$/;"	t
edit_cache	buildotests/examples/Makefile	/^edit_cache:$/;"	t
edit_cache	buildotests/libtfhe-superaic-acc/Makefile	/^edit_cache:$/;"	t
edit_cache	buildotests/libtfhe-superaic-client/Makefile	/^edit_cache:$/;"	t
edit_cache	buildotests/libtfhe-superaic-core/Makefile	/^edit_cache:$/;"	t
edit_cache	buildotests/libtfhe-superaic-core/fft_processors/Makefile	/^edit_cache:$/;"	t
edit_cache	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^edit_cache:$/;"	t
edit_cache	buildotests/libtfhe-superaic-server/Makefile	/^edit_cache:$/;"	t
edit_cache	buildotests/tests/Makefile	/^edit_cache:$/;"	t
edit_cache	buildotests/tests/googletest/Makefile	/^edit_cache:$/;"	t
edit_cache	buildotests/tests/googletest/googlemock/Makefile	/^edit_cache:$/;"	t
edit_cache	buildotests/tests/googletest/googlemock/gtest/Makefile	/^edit_cache:$/;"	t
edit_cache/fast	buildotests/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
edit_cache/fast	buildotests/driver/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
edit_cache/fast	buildotests/examples/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
edit_cache/fast	buildotests/libtfhe-superaic-acc/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
edit_cache/fast	buildotests/libtfhe-superaic-client/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
edit_cache/fast	buildotests/libtfhe-superaic-core/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
edit_cache/fast	buildotests/libtfhe-superaic-core/fft_processors/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
edit_cache/fast	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
edit_cache/fast	buildotests/libtfhe-superaic-server/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
edit_cache/fast	buildotests/tests/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
edit_cache/fast	buildotests/tests/googletest/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
edit_cache/fast	buildotests/tests/googletest/googlemock/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
edit_cache/fast	buildotests/tests/googletest/googlemock/gtest/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
edit_distance	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^namespace edit_distance {$/;"	n	namespace:testing::internal
edit_distance	src/tests/googletest/googletest/src/gtest.cc	/^namespace edit_distance {$/;"	n	namespace:testing::internal	file:
elapsed	src/muduo/examples/wordcount/slowsink.py	/^elapsed = end - start$/;"	v
elapsed_time	src/tests/googletest/googletest/include/gtest/gtest.h	/^  TimeInMillis elapsed_time() const { return elapsed_time_; }$/;"	f	class:testing::TestCase	typeref:typename:TimeInMillis
elapsed_time	src/tests/googletest/googletest/include/gtest/gtest.h	/^  TimeInMillis elapsed_time() const { return elapsed_time_; }$/;"	f	class:testing::TestResult	typeref:typename:TimeInMillis
elapsed_time	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  TimeInMillis elapsed_time() const { return elapsed_time_; }$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:TimeInMillis
elapsed_time	src/tests/googletest/googletest/src/gtest.cc	/^internal::TimeInMillis UnitTest::elapsed_time() const {$/;"	f	class:testing::UnitTest	typeref:typename:internal::TimeInMillis
elapsed_time_	src/tests/googletest/googletest/include/gtest/gtest.h	/^  TimeInMillis elapsed_time_;$/;"	m	class:testing::TestCase	typeref:typename:TimeInMillis
elapsed_time_	src/tests/googletest/googletest/include/gtest/gtest.h	/^  TimeInMillis elapsed_time_;$/;"	m	class:testing::TestResult	typeref:typename:TimeInMillis
elapsed_time_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  TimeInMillis elapsed_time_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:TimeInMillis
element	src/tests/googletest/googletest/samples/sample3-inl.h	/^  const E& element() const { return element_; }$/;"	f	class:QueueNode	typeref:typename:const E &
element_	src/tests/googletest/googletest/samples/sample3-inl.h	/^  E element_;$/;"	m	class:QueueNode	typeref:typename:E
element_type	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  typedef T element_type;$/;"	t	class:testing::gmock_matchers_test::ConstPropagatingPtr	typeref:typename:T	file:
element_type	src/tests/googletest/googletest/include/gtest/internal/gtest-linked_ptr.h	/^  typedef T element_type;$/;"	t	class:testing::internal::linked_ptr	typeref:typename:T
element_type	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  typedef T element_type;$/;"	t	class:testing::internal::scoped_ptr	typeref:typename:T
elim_algo	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    ELIM_ALGO elim_algo = LRU;   \/\/ 加速器上Sesstion的淘汰算法 最近最少使用算法/;"	m	class:tfhe_superaic::TFHE_ACC	typeref:typename:ELIM_ALGO
empty	src/muduo/muduo/base/BoundedBlockingQueue.h	/^  bool empty() const$/;"	f	class:muduo::BoundedBlockingQueue	typeref:typename:bool
empty	src/muduo/muduo/base/StringPiece.h	/^  bool empty() const { return length_ == 0; }$/;"	f	class:muduo::StringPiece	typeref:typename:bool
enableInterrupt	src/libtfhe-superaic-acc/accs/FPGA-V0/acc_fpga_v0.cpp	/^ACC_RESULT FPGA_ACC_V0::enableInterrupt(bool en) {$/;"	f	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:ACC_RESULT
enableReading	src/muduo/muduo/net/Channel.h	/^  void enableReading() { events_ |= kReadEvent; update(); }$/;"	f	class:muduo::net::Channel	typeref:typename:void
enableRetry	src/muduo/muduo/net/TcpClient.h	/^  void enableRetry() { retry_ = true; }$/;"	f	class:muduo::net::TcpClient	typeref:typename:void
enableWriting	src/muduo/muduo/net/Channel.h	/^  void enableWriting() { events_ |= kWriteEvent; update(); }$/;"	f	class:muduo::net::Channel	typeref:typename:void
encrypt_lwe	src/libtfhe-superaic-core/message_functions.cpp	/^LweSample** encrypt_lwe($/;"	f	typeref:typename:LweSample **
encrypt_with_private_key	src/libtfhe-superaic-core/message_functions.cpp	/^void encrypt_with_private_key($/;"	f	typeref:typename:void
end	src/muduo/examples/wordcount/slowsink.py	/^end = time.time()$/;"	v
end	src/muduo/muduo/base/LogStream.h	/^  const char* end() const { return data_ + sizeof data_; }$/;"	f	class:muduo::detail::FixedBuffer	typeref:typename:const char *
end	src/muduo/muduo/base/StringPiece.h	/^  const char* end() const { return ptr_ + length_; }$/;"	f	class:muduo::StringPiece	typeref:typename:const char *
end	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  const_iterator end() const { return expectations_.end(); }$/;"	f	class:testing::ExpectationSet	typeref:typename:const_iterator
end	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  const_iterator end() const {$/;"	f	class:testing::gmock_matchers_test::Streamlike	typeref:typename:const_iterator	file:
end	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  const_iterator end() const { return array_ + size_; }$/;"	f	class:testing::internal::NativeArray	typeref:typename:const_iterator
end	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  iterator end() const { return iterator(impl_->End()); }$/;"	f	class:testing::internal::ParamGenerator	typeref:typename:iterator
end10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T10>::iterator end10_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator	typeref:typename:const typename ParamGenerator<T10>::iterator
end1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator	typeref:typename:const typename ParamGenerator<T1>::iterator
end1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator2::Iterator	typeref:typename:const typename ParamGenerator<T1>::iterator
end1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator	typeref:typename:const typename ParamGenerator<T1>::iterator
end1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator	typeref:typename:const typename ParamGenerator<T1>::iterator
end1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator	typeref:typename:const typename ParamGenerator<T1>::iterator
end1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator	typeref:typename:const typename ParamGenerator<T1>::iterator
end1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator	typeref:typename:const typename ParamGenerator<T1>::iterator
end1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator	typeref:typename:const typename ParamGenerator<T1>::iterator
end1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator	typeref:typename:const typename ParamGenerator<T1>::iterator
end2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator	typeref:typename:const typename ParamGenerator<T2>::iterator
end2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator2::Iterator	typeref:typename:const typename ParamGenerator<T2>::iterator
end2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator	typeref:typename:const typename ParamGenerator<T2>::iterator
end2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator	typeref:typename:const typename ParamGenerator<T2>::iterator
end2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator	typeref:typename:const typename ParamGenerator<T2>::iterator
end2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator	typeref:typename:const typename ParamGenerator<T2>::iterator
end2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator	typeref:typename:const typename ParamGenerator<T2>::iterator
end2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator	typeref:typename:const typename ParamGenerator<T2>::iterator
end2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator	typeref:typename:const typename ParamGenerator<T2>::iterator
end3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T3>::iterator end3_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator	typeref:typename:const typename ParamGenerator<T3>::iterator
end3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T3>::iterator end3_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator	typeref:typename:const typename ParamGenerator<T3>::iterator
end3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T3>::iterator end3_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator	typeref:typename:const typename ParamGenerator<T3>::iterator
end3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T3>::iterator end3_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator	typeref:typename:const typename ParamGenerator<T3>::iterator
end3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T3>::iterator end3_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator	typeref:typename:const typename ParamGenerator<T3>::iterator
end3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T3>::iterator end3_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator	typeref:typename:const typename ParamGenerator<T3>::iterator
end3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T3>::iterator end3_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator	typeref:typename:const typename ParamGenerator<T3>::iterator
end3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T3>::iterator end3_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator	typeref:typename:const typename ParamGenerator<T3>::iterator
end4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T4>::iterator end4_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator	typeref:typename:const typename ParamGenerator<T4>::iterator
end4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T4>::iterator end4_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator	typeref:typename:const typename ParamGenerator<T4>::iterator
end4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T4>::iterator end4_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator	typeref:typename:const typename ParamGenerator<T4>::iterator
end4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T4>::iterator end4_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator	typeref:typename:const typename ParamGenerator<T4>::iterator
end4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T4>::iterator end4_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator	typeref:typename:const typename ParamGenerator<T4>::iterator
end4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T4>::iterator end4_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator	typeref:typename:const typename ParamGenerator<T4>::iterator
end4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T4>::iterator end4_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator	typeref:typename:const typename ParamGenerator<T4>::iterator
end5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T5>::iterator end5_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator	typeref:typename:const typename ParamGenerator<T5>::iterator
end5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T5>::iterator end5_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator	typeref:typename:const typename ParamGenerator<T5>::iterator
end5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T5>::iterator end5_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator	typeref:typename:const typename ParamGenerator<T5>::iterator
end5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T5>::iterator end5_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator	typeref:typename:const typename ParamGenerator<T5>::iterator
end5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T5>::iterator end5_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator	typeref:typename:const typename ParamGenerator<T5>::iterator
end5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T5>::iterator end5_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator	typeref:typename:const typename ParamGenerator<T5>::iterator
end6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T6>::iterator end6_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator	typeref:typename:const typename ParamGenerator<T6>::iterator
end6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T6>::iterator end6_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator	typeref:typename:const typename ParamGenerator<T6>::iterator
end6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T6>::iterator end6_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator	typeref:typename:const typename ParamGenerator<T6>::iterator
end6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T6>::iterator end6_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator	typeref:typename:const typename ParamGenerator<T6>::iterator
end6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T6>::iterator end6_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator	typeref:typename:const typename ParamGenerator<T6>::iterator
end7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T7>::iterator end7_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator	typeref:typename:const typename ParamGenerator<T7>::iterator
end7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T7>::iterator end7_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator	typeref:typename:const typename ParamGenerator<T7>::iterator
end7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T7>::iterator end7_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator	typeref:typename:const typename ParamGenerator<T7>::iterator
end7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T7>::iterator end7_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator	typeref:typename:const typename ParamGenerator<T7>::iterator
end8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T8>::iterator end8_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator	typeref:typename:const typename ParamGenerator<T8>::iterator
end8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T8>::iterator end8_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator	typeref:typename:const typename ParamGenerator<T8>::iterator
end8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T8>::iterator end8_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator	typeref:typename:const typename ParamGenerator<T8>::iterator
end9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T9>::iterator end9_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator	typeref:typename:const typename ParamGenerator<T9>::iterator
end9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T9>::iterator end9_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator	typeref:typename:const typename ParamGenerator<T9>::iterator
endRequest	src/muduo/examples/fastcgi/fastcgi.cc	/^void FastCgiCodec::endRequest(Buffer* buf)$/;"	f	class:FastCgiCodec	typeref:typename:void
endStdout	src/muduo/examples/fastcgi/fastcgi.cc	/^void FastCgiCodec::endStdout(Buffer* buf)$/;"	f	class:FastCgiCodec	typeref:typename:void
end_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  const T end_;$/;"	m	class:testing::internal::RangeGenerator	typeref:typename:const T
end_index_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  const int end_index_;$/;"	m	class:testing::internal::RangeGenerator	typeref:typename:const int
endsWithCRLF	src/muduo/examples/memcached/server/Item.h	/^  bool endsWithCRLF() const$/;"	f	class:Item	typeref:typename:bool
ensureWritableBytes	src/muduo/muduo/net/Buffer.h	/^  void ensureWritableBytes(size_t len)$/;"	f	class:muduo::net::Buffer	typeref:typename:void
environ	src/tests/googletest/googlemock/test/gmock_leak_test.py	/^environ = gmock_test_utils.environ$/;"	v
environ	src/tests/googletest/googlemock/test/gmock_test_utils.py	/^environ = gtest_test_utils.environ$/;"	v
environ	src/tests/googletest/googletest/test/gtest_break_on_failure_unittest.py	/^environ = gtest_test_utils.environ$/;"	v
environ	src/tests/googletest/googletest/test/gtest_catch_exceptions_test.py	/^environ = gtest_test_utils.environ$/;"	v
environ	src/tests/googletest/googletest/test/gtest_env_var_test.py	/^environ = os.environ.copy()$/;"	v
environ	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^environ = os.environ.copy()$/;"	v
environ	src/tests/googletest/googletest/test/gtest_test_utils.py	/^environ = os.environ.copy()$/;"	v
environments	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  std::vector<Environment*>& environments() { return environments_; }$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:std::vector<Environment * > &
environments_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  std::vector<Environment*> environments_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:std::vector<Environment * >
epollfd_	src/muduo/muduo/net/poller/EPollPoller.h	/^  int epollfd_;$/;"	m	class:muduo::net::EPollPoller	typeref:typename:int
err_	src/muduo/muduo/base/FileUtil.h	/^  int err_;$/;"	m	class:muduo::FileUtil::ReadSmallFile	typeref:typename:int
errno_	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  const int errno_;$/;"	m	class:testing::internal::SetErrnoAndReturnAction	typeref:typename:const int
error	src/muduo/muduo/net/protorpc/rpc.proto	/^  optional ErrorCode error = 7;$/;"	f	message:muduo.net.RpcMessage	typeref:typename:ErrorCode
error	src/muduo/muduo/net/protorpc/rpcservice.proto	/^  required ErrorCode error = 1;$/;"	f	message:muduo.net.GetServiceResponse	typeref:typename:ErrorCode
error	src/muduo/muduo/net/protorpc/rpcservice.proto	/^  required ErrorCode error = 1;$/;"	f	message:muduo.net.ListRpcResponse	typeref:typename:ErrorCode
errorCallback_	src/muduo/examples/protobuf/codec/codec.h	/^  ErrorCallback errorCallback_;$/;"	m	class:ProtobufCodec	typeref:typename:ErrorCallback
errorCallback_	src/muduo/muduo/net/Channel.h	/^  EventCallback errorCallback_;$/;"	m	class:muduo::net::Channel	typeref:typename:EventCallback
errorCallback_	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^  ErrorCallback errorCallback_;$/;"	m	class:muduo::net::ProtobufCodecLite	typeref:typename:ErrorCallback
errorCodeToString	src/muduo/examples/protobuf/codec/codec.cc	/^const string& ProtobufCodec::errorCodeToString(ErrorCode errorCode)$/;"	f	class:ProtobufCodec	typeref:typename:const string &
errorCodeToString	src/muduo/muduo/net/protobuf/ProtobufCodecLite.cc	/^const string& ProtobufCodecLite::errorCodeToString(ErrorCode errorCode)$/;"	f	class:ProtobufCodecLite	typeref:typename:const string &
errstr	src/muduo/contrib/hiredis/Hiredis.cc	/^const char* Hiredis::errstr() const$/;"	f	class:Hiredis	typeref:typename:const char *
euid	src/muduo/muduo/base/ProcessInfo.cc	/^uid_t ProcessInfo::euid()$/;"	f	class:ProcessInfo	typeref:typename:uid_t
eventHandling	src/muduo/muduo/net/EventLoop.h	/^  bool eventHandling() const { return eventHandling_; }$/;"	f	class:muduo::net::EventLoop	typeref:typename:bool
eventHandling_	src/muduo/muduo/net/Channel.h	/^  bool eventHandling_;$/;"	m	class:muduo::net::Channel	typeref:typename:bool
eventHandling_	src/muduo/muduo/net/EventLoop.h	/^  bool eventHandling_; \/* atomic *\/$/;"	m	class:muduo::net::EventLoop	typeref:typename:bool
event_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  AutoHandle event_;$/;"	m	class:testing::internal::Notification	typeref:typename:AutoHandle
event_handle_	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  AutoHandle event_handle_;$/;"	m	class:testing::internal::WindowsDeathTest	typeref:typename:AutoHandle	file:
eventloop_unittest	src/muduo/muduo/net/tests/CMakeLists.txt	/^add_executable(eventloop_unittest EventLoop_unittest.cc)$/;"	t
eventloopthread_unittest	src/muduo/muduo/net/tests/CMakeLists.txt	/^add_executable(eventloopthread_unittest EventLoopThread_unittest.cc)$/;"	t
eventloopthreadpool_unittest	src/muduo/muduo/net/tests/CMakeLists.txt	/^add_executable(eventloopthreadpool_unittest EventLoopThreadPool_unittest.cc)$/;"	t
events	src/muduo/muduo/net/Channel.h	/^  int events() const { return events_; }$/;"	f	class:muduo::net::Channel	typeref:typename:int
eventsToString	src/muduo/muduo/net/Channel.cc	/^string Channel::eventsToString() const$/;"	f	class:Channel	typeref:typename:string
eventsToString	src/muduo/muduo/net/Channel.cc	/^string Channel::eventsToString(int fd, int ev)$/;"	f	class:Channel	typeref:typename:string
events_	src/muduo/muduo/net/Channel.h	/^  int        events_;$/;"	m	class:muduo::net::Channel	typeref:typename:int
events_	src/muduo/muduo/net/poller/EPollPoller.h	/^  EventList events_;$/;"	m	class:muduo::net::EPollPoller	typeref:typename:EventList
examples/CMakeFiles/client_only.dir/rule	buildotests/examples/Makefile	/^examples\/CMakeFiles\/client_only.dir\/rule:$/;"	t
examples/CMakeFiles/comparebits.dir/rule	buildotests/examples/Makefile	/^examples\/CMakeFiles\/comparebits.dir\/rule:$/;"	t
examples/CMakeFiles/server_with_driver.dir/rule	buildotests/examples/Makefile	/^examples\/CMakeFiles\/server_with_driver.dir\/rule:$/;"	t
examples/CMakeFiles/server_without_driver.dir/rule	buildotests/examples/Makefile	/^examples\/CMakeFiles\/server_without_driver.dir\/rule:$/;"	t
exceptionCaught	src/muduo/examples/filetransfer/loadtest/Handler.java	/^    public void exceptionCaught(ChannelHandlerContext ctx, ExceptionEvent e) throws Exception {$/;"	m	class:Handler
exceptionCaught	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockBackendServer.java	/^        public void exceptionCaught(ChannelHandlerContext ctx, ExceptionEvent e)$/;"	m	class:MockBackendServer.Handler
exceptionCaught	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockClient.java	/^        public void exceptionCaught(ChannelHandlerContext ctx, ExceptionEvent e)$/;"	m	class:MockClient.Handler
exception_test	src/muduo/muduo/base/tests/CMakeLists.txt	/^add_executable(exception_test Exception_test.cc)$/;"	t
exePath	src/muduo/muduo/base/ProcessInfo.cc	/^string ProcessInfo::exePath()$/;"	f	class:ProcessInfo	typeref:typename:string
exec_interrupt	src/libtfhe-superaic-acc/accs/FPGA-V0/acc_fpga_v0.cpp	/^ACC_RESULT FPGA_ACC_V0::exec_interrupt(struct timespec *ts_dur,uint8_t executor) {$/;"	f	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:ACC_RESULT
exec_non_interrupt	src/libtfhe-superaic-acc/accs/FPGA-V0/acc_fpga_v0.cpp	/^ACC_RESULT FPGA_ACC_V0::exec_non_interrupt(struct timespec *ts_dur,uint8_t executor) {$/;"	f	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:ACC_RESULT
execute_direct_torus32	src/libtfhe-superaic-core/fft_processors/nayuki/fft_processor_nayuki.cpp	/^void FFT_Processor_nayuki::execute_direct_torus32(Torus32* res, const cplx* a) {$/;"	f	class:FFT_Processor_nayuki	typeref:typename:void
execute_reverse_int	src/libtfhe-superaic-core/fft_processors/nayuki/fft_processor_nayuki.cpp	/^void FFT_Processor_nayuki::execute_reverse_int(cplx* res, const int32_t* a) {$/;"	f	class:FFT_Processor_nayuki	typeref:typename:void
execute_reverse_torus32	src/libtfhe-superaic-core/fft_processors/nayuki/fft_processor_nayuki.cpp	/^void FFT_Processor_nayuki::execute_reverse_torus32(cplx* res, const Torus32* a) {$/;"	f	class:FFT_Processor_nayuki	typeref:typename:void
executor_type	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    const Executor_Type executor_type;$/;"	m	class:tfhe_superaic::Executor	typeref:typename:const Executor_Type
executors	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    vector<shared_ptr<Executor>> executors;$/;"	m	class:tfhe_superaic::Executor_List	typeref:typename:vector<shared_ptr<Executor>>
exit_code_	src/tests/googletest/googletest/include/gtest/gtest-death-test.h	/^  const int exit_code_;$/;"	m	class:testing::ExitedWithCode	typeref:typename:const int
exiting_	src/muduo/muduo/net/EventLoopThread.h	/^  bool exiting_;$/;"	m	class:muduo::net::EventLoopThread	typeref:typename:bool
expect_eq_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const bool expect_eq_;$/;"	m	class:testing::internal::StrEqualityMatcher	typeref:typename:const bool
expectation_base	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  expectation_base() const {$/;"	f	class:testing::Expectation	typeref:typename:const internal::linked_ptr<internal::ExpectationBase> &
expectation_base_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  internal::linked_ptr<internal::ExpectationBase> expectation_base_;$/;"	m	class:testing::Expectation	typeref:typename:internal::linked_ptr<internal::ExpectationBase>
expectations_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  Expectation::Set expectations_;$/;"	m	class:testing::ExpectationSet	typeref:typename:Expectation::Set
expected_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    const FloatType expected_;$/;"	m	class:testing::internal::FloatingEqMatcher::Impl	typeref:typename:const FloatType
expected_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const FloatType expected_;$/;"	m	class:testing::internal::FloatingEqMatcher	typeref:typename:const FloatType
expected_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const StlContainer expected_;$/;"	m	class:testing::internal::ContainerEqMatcher	typeref:typename:const StlContainer
expected_diff	src/tests/googletest/googletest/test/gtest_unittest.cc	/^    const char* expected_diff;$/;"	m	struct:__anonf780395f0111::TEST::Case	typeref:typename:const char *	file:
expected_edits	src/tests/googletest/googletest/test/gtest_unittest.cc	/^    const char* expected_edits;$/;"	m	struct:__anonf780395f0111::TEST::Case	typeref:typename:const char *	file:
expected_to_finish_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  static bool expected_to_finish_;$/;"	m	class:Predicate1Test	typeref:typename:bool	file:
expected_to_finish_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  static bool expected_to_finish_;$/;"	m	class:Predicate2Test	typeref:typename:bool	file:
expected_to_finish_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  static bool expected_to_finish_;$/;"	m	class:Predicate3Test	typeref:typename:bool	file:
expected_to_finish_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  static bool expected_to_finish_;$/;"	m	class:Predicate4Test	typeref:typename:bool	file:
expected_to_finish_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  static bool expected_to_finish_;$/;"	m	class:Predicate5Test	typeref:typename:bool	file:
expected_to_finish_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^bool Predicate1Test::expected_to_finish_;$/;"	m	class:Predicate1Test	typeref:typename:bool
expected_to_finish_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^bool Predicate2Test::expected_to_finish_;$/;"	m	class:Predicate2Test	typeref:typename:bool
expected_to_finish_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^bool Predicate3Test::expected_to_finish_;$/;"	m	class:Predicate3Test	typeref:typename:bool
expected_to_finish_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^bool Predicate4Test::expected_to_finish_;$/;"	m	class:Predicate4Test	typeref:typename:bool
expected_to_finish_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^bool Predicate5Test::expected_to_finish_;$/;"	m	class:Predicate5Test	typeref:typename:bool
expiration	src/muduo/muduo/net/Timer.h	/^  Timestamp expiration() const  { return expiration_; }$/;"	f	class:muduo::net::Timer	typeref:typename:Timestamp
expiration_	src/muduo/muduo/net/Timer.h	/^  Timestamp expiration_;$/;"	m	class:muduo::net::Timer	typeref:typename:Timestamp
exponent_bits	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  Bits exponent_bits() const { return kExponentBitMask & u_.bits_; }$/;"	f	class:testing::internal::FloatingPoint	typeref:typename:Bits
export_gate_bootstrapping_ciphertext_toFile	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT void export_gate_bootstrapping_ciphertext_toFile(FILE *F, const LweSample *sample,$/;"	f	typeref:typename:EXPORT void
export_gate_bootstrapping_ciphertext_toStream	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT void export_gate_bootstrapping_ciphertext_toStream(std::ostream &F, const LweSample *samp/;"	f	typeref:typename:EXPORT void
export_lweBootstrappingKey_toFile	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT void export_lweBootstrappingKey_toFile(FILE *F, const LweBootstrappingKey *bk) {$/;"	f	typeref:typename:EXPORT void
export_lweBootstrappingKey_toStream	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT void export_lweBootstrappingKey_toStream(std::ostream &F, const LweBootstrappingKey *bk) /;"	f	typeref:typename:EXPORT void
export_lweKeySwitchKey_toFile	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT void export_lweKeySwitchKey_toFile(FILE *F, const LweKeySwitchKey *ks) {$/;"	f	typeref:typename:EXPORT void
export_lweKeySwitchKey_toStream	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT void export_lweKeySwitchKey_toStream(std::ostream &F, const LweKeySwitchKey *ks) {$/;"	f	typeref:typename:EXPORT void
export_lweKey_toFile	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT void export_lweKey_toFile(FILE *F, const LweKey *lwekey) { write_lweKey(to_Ostream(F), lw/;"	f	typeref:typename:EXPORT void
export_lweKey_toStream	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT void export_lweKey_toStream(ostream &F, const LweKey *lwekey) { write_lweKey(to_Ostream(F/;"	f	typeref:typename:EXPORT void
export_lweParams_toFile	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT void export_lweParams_toFile(FILE *F, const LweParams *lweparams) { write_lweParams(to_Os/;"	f	typeref:typename:EXPORT void
export_lweParams_toStream	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT void export_lweParams_toStream(ostream &F, const LweParams *lweparams) {$/;"	f	typeref:typename:EXPORT void
export_lweSample_toFile	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT void export_lweSample_toFile(FILE *F, const LweSample *lwesample, const LweParams *params/;"	f	typeref:typename:EXPORT void
export_lweSample_toStream	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT void export_lweSample_toStream(ostream &F, const LweSample *lwesample, const LweParams *p/;"	f	typeref:typename:EXPORT void
export_tGswParams_toFile	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT void export_tGswParams_toFile(FILE *F, const TGswParams *tgswparams) {$/;"	f	typeref:typename:EXPORT void
export_tGswParams_toStream	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT void export_tGswParams_toStream(ostream &F, const TGswParams *tgswparams) {$/;"	f	typeref:typename:EXPORT void
export_tLweParams_toFile	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT void export_tLweParams_toFile(FILE *F, const TLweParams *tlweparams) {$/;"	f	typeref:typename:EXPORT void
export_tLweParams_toStream	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT void export_tLweParams_toStream(ostream &F, const TLweParams *tlweparams) {$/;"	f	typeref:typename:EXPORT void
export_tfheGateBootstrappingCloudKeySet_toFile	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT void export_tfheGateBootstrappingCloudKeySet_toFile(FILE *F, const TFheGateBootstrappingC/;"	f	typeref:typename:EXPORT void
export_tfheGateBootstrappingCloudKeySet_toStream	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT void export_tfheGateBootstrappingCloudKeySet_toStream(std::ostream &F,$/;"	f	typeref:typename:EXPORT void
export_tfheGateBootstrappingParameterSet_toFile	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT void export_tfheGateBootstrappingParameterSet_toFile(FILE *F, const TFheGateBootstrapping/;"	f	typeref:typename:EXPORT void
export_tfheGateBootstrappingParameterSet_toStream	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT void export_tfheGateBootstrappingParameterSet_toStream(std::ostream &F,$/;"	f	typeref:typename:EXPORT void
export_tfheGateBootstrappingSecretKeySet_toFile	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT void export_tfheGateBootstrappingSecretKeySet_toFile(FILE *F, const TFheGateBootstrapping/;"	f	typeref:typename:EXPORT void
export_tfheGateBootstrappingSecretKeySet_toStream	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT void export_tfheGateBootstrappingSecretKeySet_toStream(std::ostream &F,$/;"	f	typeref:typename:EXPORT void
export_tgswKey_toFile	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT void export_tgswKey_toFile(FILE *F, const TGswKey *tgswkey) { write_tGswKey(to_Ostream(F)/;"	f	typeref:typename:EXPORT void
export_tgswKey_toStream	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT void export_tgswKey_toStream(std::ostream &F, const TGswKey *tgswkey) { write_tGswKey(to_/;"	f	typeref:typename:EXPORT void
export_tgswSample_toFile	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT void export_tgswSample_toFile(FILE *F, const TGswSample *tgswsample, const TGswParams *pa/;"	f	typeref:typename:EXPORT void
export_tgswSample_toStream	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT void export_tgswSample_toStream(std::ostream &F, const TGswSample *tgswsample, const TGsw/;"	f	typeref:typename:EXPORT void
export_tlweKey_toFile	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT void export_tlweKey_toFile(FILE *F, const TLweKey *tlwekey) { write_tLweKey(to_Ostream(F)/;"	f	typeref:typename:EXPORT void
export_tlweKey_toStream	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT void export_tlweKey_toStream(std::ostream &F, const TLweKey *tlwekey) { write_tLweKey(to_/;"	f	typeref:typename:EXPORT void
export_tlweSample_toFile	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT void export_tlweSample_toFile(FILE *F, const TLweSample *tlwesample, const TLweParams *pa/;"	f	typeref:typename:EXPORT void
export_tlweSample_toStream	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT void export_tlweSample_toStream(std::ostream &F, const TLweSample *tlwesample, const TLwe/;"	f	typeref:typename:EXPORT void
ext_tag	src/libtfhe-superaic-core/include/tfhe_session.h	/^    uint32_t ext_tag;   \/\/for test$/;"	m	class:tfhe_superaic::Session	typeref:typename:uint32_t
extern_gen	src/tests/googletest/googletest/test/gtest-param-test2_test.cc	/^ParamGenerator<int> extern_gen = Values(33);$/;"	v	typeref:typename:ParamGenerator<int>
external-gtest	src/tests/googletest/googlemock/configure.ac	/^AC_ARG_ENABLE([external-gtest],$/;"	e
extra_matcher	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  const Matcher<const ArgumentTuple&>& extra_matcher() const {$/;"	f	class:testing::internal::TypedExpectation	typeref:typename:const Matcher<const ArgumentTuple &> &
extra_matcher_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  Matcher<const ArgumentTuple&> extra_matcher_;$/;"	m	class:testing::internal::OnCallSpec	typeref:typename:Matcher<const ArgumentTuple &>
extra_matcher_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  Matcher<const ArgumentTuple&> extra_matcher_;$/;"	m	class:testing::internal::TypedExpectation	typeref:typename:Matcher<const ArgumentTuple &>
extra_matcher_specified_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  bool extra_matcher_specified_;$/;"	m	class:testing::internal::ExpectationBase	typeref:typename:bool
extract_params	src/libtfhe-superaic-core/include/lwebootstrappingkey.h	/^    const LweParams* extract_params; \/\/\/< params after extraction: key: s' $/;"	m	struct:LweBootstrappingKey	typeref:typename:const LweParams *
extract_params	src/libtfhe-superaic-core/include/lwebootstrappingkey.h	/^    const LweParams* extract_params; \/\/\/< params after extraction: key: s' $/;"	m	struct:LweBootstrappingKeyFFT	typeref:typename:const LweParams *
extract_params	src/tests/bootstrapping_classic_PBS_parameters_test.cpp	/^    const LweParams *extract_params = &accum_params->extracted_lweparams;$/;"	v	namespace:__anon8153b4f20111	typeref:typename:const LweParams *
extract_params	src/tests/bootstrapping_direct_test.cpp	/^    const LweParams *extract_params = &accum_params->extracted_lweparams;$/;"	v	namespace:__anon560166140111	typeref:typename:const LweParams *
extract_params	src/tests/bootstrapping_test.cpp	/^    const LweParams *extract_params = &accum_params->extracted_lweparams;$/;"	v	namespace:__anonf36cd29a0111	typeref:typename:const LweParams *
extract_params	src/tests/decrypt_with_plaintext_modulus.cpp	/^    const LweParams *extract_params = &accum_params->extracted_lweparams;$/;"	v	namespace:__anondb55d4a50111	typeref:typename:const LweParams *
extract_params	src/tests/fakes/lwe-bootstrapping-fft.h	/^        const LweParams *extract_params; \/\/\/< params after extraction: key: s'$/;"	m	struct:__anonaae24d1b0111::FakeLweBootstrappingKeyFFT	typeref:typename:const LweParams *
extract_params	src/tests/fakes/lwe-bootstrapping.h	/^        const LweParams *extract_params; \/\/\/< params after extraction: key: s'$/;"	m	struct:__anon027fcd4e0111::FakeLweBootstrappingKey	typeref:typename:const LweParams *
extract_params	src/tests/macros_decrypt_with_plaintext_modulus_macros.cpp	/^    const LweParams *extract_params = &accum_params->extracted_lweparams;$/;"	v	namespace:__anon478224cd0111	typeref:typename:const LweParams *
extract_params	src/tests/macros_modSwitch_with_plaintext_modulus_macros.cpp	/^    const LweParams *extract_params = &accum_params->extracted_lweparams;$/;"	v	namespace:__anon4cdaee640111	typeref:typename:const LweParams *
extract_params	src/tests/ops_add.cpp	/^    const LweParams *extract_params = &accum_params->extracted_lweparams;$/;"	v	namespace:__anonb1f413890111	typeref:typename:const LweParams *
extract_params	src/tests/ops_add_with_carry.cpp	/^    const LweParams *extract_params = &accum_params->extracted_lweparams;$/;"	v	namespace:__anon662e63c40111	typeref:typename:const LweParams *
extract_params	src/tests/zpf_for_bootstrap_detail.cpp	/^    const LweParams *extract_params = &accum_params->extracted_lweparams;$/;"	v	namespace:__anonc07144f40111	typeref:typename:const LweParams *
extracted_lweparams	src/libtfhe-superaic-core/include/tlwe.h	/^    const LweParams extracted_lweparams; \/\/\/< lwe params if one extracts$/;"	m	struct:TLweParams	typeref:typename:const LweParams
f	src/tests/ACC_test.cpp	/^    int32_t f(int32_t n, int32_t plaintext_modulus){$/;"	f	namespace:__anonef2481d50111	typeref:typename:int32_t
f	src/tests/FPGA_ACC_test.cpp	/^    int32_t f(int32_t n, int32_t plaintext_modulus){$/;"	f	namespace:__anon88d438720111	typeref:typename:int32_t
f	src/tests/QEMU_test.cpp	/^    int32_t f(int32_t n, int32_t plaintext_modulus){$/;"	f	namespace:__anon4f389dc60111	typeref:typename:int32_t
f	src/tests/bootstrapping_classic_PBS_parameters_test.cpp	/^    int32_t f(int32_t n, int32_t plaintext_modulus){$/;"	f	namespace:__anon8153b4f20111	typeref:typename:int32_t
f	src/tests/bootstrapping_direct_test.cpp	/^    int32_t f(int32_t n, int32_t plaintext_modulus){$/;"	f	namespace:__anon560166140111	typeref:typename:int32_t
f	src/tests/decrypt_with_plaintext_modulus.cpp	/^    int32_t f(int32_t n, int32_t plaintext_modulus){$/;"	f	namespace:__anondb55d4a50111	typeref:typename:int32_t
f	src/tests/macros_decrypt_with_plaintext_modulus_macros.cpp	/^    int32_t f(int32_t n, int32_t plaintext_modulus){$/;"	f	namespace:__anon478224cd0111	typeref:typename:int32_t
f	src/tests/macros_modSwitch_with_plaintext_modulus_macros.cpp	/^    int32_t f(int32_t n, int32_t plaintext_modulus){$/;"	f	namespace:__anon4cdaee640111	typeref:typename:int32_t
factoryInputTransport_	src/muduo/contrib/thrift/ThriftConnection.h	/^  boost::shared_ptr<TTransport> factoryInputTransport_;$/;"	m	class:ThriftConnection	typeref:typename:boost::shared_ptr<TTransport>
factoryOutputTransport_	src/muduo/contrib/thrift/ThriftConnection.h	/^  boost::shared_ptr<TTransport> factoryOutputTransport_;$/;"	m	class:ThriftConnection	typeref:typename:boost::shared_ptr<TTransport>
factory_	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    const FactoryFunction factory_;$/;"	m	class:testing::DefaultValue::FactoryValueProducer	typeref:typename:const FactoryFunction
factory_	src/tests/googletest/googletest/include/gtest/gtest.h	/^  internal::TestFactoryBase* const factory_;  \/\/ The factory that creates$/;"	m	class:testing::TestInfo	typeref:typename:internal::TestFactoryBase * const
factory_	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  static MockDeathTestFactory* factory_;$/;"	m	class:MacroLogicDeathTest	typeref:typename:MockDeathTestFactory *	file:
factory_	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^MockDeathTestFactory* MacroLogicDeathTest::factory_ = NULL;$/;"	m	class:MacroLogicDeathTest	typeref:typename:MockDeathTestFactory *
fail	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/TestCase.java	/^    protected void fail(String message) {$/;"	m	class:TestCase
failed	src/tests/googletest/googletest/include/gtest/gtest-test-part.h	/^  bool failed() const { return type_ != kSuccess; }$/;"	f	class:testing::TestPartResult	typeref:typename:bool
failed_test_case_count	src/tests/googletest/googletest/src/gtest.cc	/^int UnitTest::failed_test_case_count() const {$/;"	f	class:testing::UnitTest	typeref:typename:int
failed_test_case_count	src/tests/googletest/googletest/src/gtest.cc	/^int UnitTestImpl::failed_test_case_count() const {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:int
failed_test_count	src/tests/googletest/googletest/src/gtest.cc	/^int TestCase::failed_test_count() const {$/;"	f	class:testing::TestCase	typeref:typename:int
failed_test_count	src/tests/googletest/googletest/src/gtest.cc	/^int UnitTest::failed_test_count() const { return impl()->failed_test_count(); }$/;"	f	class:testing::UnitTest	typeref:typename:int
failed_test_count	src/tests/googletest/googletest/src/gtest.cc	/^int UnitTestImpl::failed_test_count() const {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:int
failure	src/muduo/muduo/base/tests/TimeZone_unittest.cc	/^int failure = 0;$/;"	v	typeref:typename:int
failure_in_set_up_	src/tests/googletest/googletest/test/gtest_environment_test.cc	/^  FailureType failure_in_set_up_;$/;"	m	class:__anon7fd7f0f30111::MyEnvironment	typeref:typename:FailureType	file:
failure_message	src/tests/googletest/googletest/include/gtest/gtest.h	/^  const char* failure_message() const { return message(); }$/;"	f	class:testing::AssertionResult	typeref:typename:const char *
fake	src/tests/fakes/lagrangehalfc.h	/^    inline FakeLagrangeHalfCPolynomial *fake(LagrangeHalfCPolynomial *ptr) {$/;"	f	namespace:__anonb49ff32c0111	typeref:typename:FakeLagrangeHalfCPolynomial *
fake	src/tests/fakes/lagrangehalfc.h	/^    inline const FakeLagrangeHalfCPolynomial *fake(const LagrangeHalfCPolynomial *ptr) {$/;"	f	namespace:__anonb49ff32c0111	typeref:typename:const FakeLagrangeHalfCPolynomial *
fake	src/tests/fakes/lwe-bootstrapping-fft.h	/^    FakeLweBootstrappingKeyFFT *fake(LweBootstrappingKeyFFT *key) {$/;"	f	namespace:__anonaae24d1b0111	typeref:typename:FakeLweBootstrappingKeyFFT *
fake	src/tests/fakes/lwe-bootstrapping-fft.h	/^    const FakeLweBootstrappingKeyFFT *fake(const LweBootstrappingKeyFFT *key) {$/;"	f	namespace:__anonaae24d1b0111	typeref:typename:const FakeLweBootstrappingKeyFFT *
fake	src/tests/fakes/lwe-bootstrapping.h	/^    FakeLweBootstrappingKey *fake(LweBootstrappingKey *key) {$/;"	f	namespace:__anon027fcd4e0111	typeref:typename:FakeLweBootstrappingKey *
fake	src/tests/fakes/lwe-bootstrapping.h	/^    const FakeLweBootstrappingKey *fake(const LweBootstrappingKey *key) {$/;"	f	namespace:__anon027fcd4e0111	typeref:typename:const FakeLweBootstrappingKey *
fake	src/tests/fakes/lwe-keyswitch.h	/^    inline FakeLweKeySwitchKey *fake(LweKeySwitchKey *key) {$/;"	f	namespace:__anonbf4a421d0111	typeref:typename:FakeLweKeySwitchKey *
fake	src/tests/fakes/lwe-keyswitch.h	/^    inline const FakeLweKeySwitchKey *fake(const LweKeySwitchKey *key) {$/;"	f	namespace:__anonbf4a421d0111	typeref:typename:const FakeLweKeySwitchKey *
fake	src/tests/fakes/lwe.h	/^inline FakeLwe *fake(LweSample *sample) {$/;"	f	typeref:typename:FakeLwe *
fake	src/tests/fakes/lwe.h	/^inline const FakeLwe *fake(const LweSample *sample) {$/;"	f	typeref:typename:const FakeLwe *
fake	src/tests/fakes/tgsw-fft.h	/^    inline FakeTGswFFT *fake(TGswSampleFFT *sample) {$/;"	f	namespace:__anonee999a9f0111	typeref:typename:FakeTGswFFT *
fake	src/tests/fakes/tgsw-fft.h	/^    inline const FakeTGswFFT *fake(const TGswSampleFFT *sample) {$/;"	f	namespace:__anonee999a9f0111	typeref:typename:const FakeTGswFFT *
fake	src/tests/fakes/tgsw.h	/^    inline FakeTGsw *fake(TGswSample *sample) {$/;"	f	namespace:__anond844f8d20111	typeref:typename:FakeTGsw *
fake	src/tests/fakes/tgsw.h	/^    inline const FakeTGsw *fake(const TGswSample *sample) {$/;"	f	namespace:__anond844f8d20111	typeref:typename:const FakeTGsw *
fake	src/tests/fakes/tlwe-fft.h	/^    inline FakeTLweFFT *fake(TLweSampleFFT *sample) {$/;"	f	namespace:__anon7c76dd960111	typeref:typename:FakeTLweFFT *
fake	src/tests/fakes/tlwe-fft.h	/^    inline const FakeTLweFFT *fake(const TLweSampleFFT *sample) {$/;"	f	namespace:__anon7c76dd960111	typeref:typename:const FakeTLweFFT *
fake	src/tests/fakes/tlwe.h	/^    inline FakeTLwe *fake(TLweSample *sample) {$/;"	f	namespace:__anond8a158490111	typeref:typename:FakeTLwe *
fake	src/tests/fakes/tlwe.h	/^    inline const FakeTLwe *fake(const TLweSample *sample) {$/;"	f	namespace:__anond8a158490111	typeref:typename:const FakeTLwe *
fake_IntPolynomial_ifft	src/tests/fakes/lagrangehalfc.h	/^    inline void fake_IntPolynomial_ifft(LagrangeHalfCPolynomial *result, const IntPolynomial *p)/;"	f	namespace:__anonb49ff32c0111	typeref:typename:void
fake_LagrangeHalfCPolynomialAddMul	src/tests/fakes/lagrangehalfc.h	/^    inline void fake_LagrangeHalfCPolynomialAddMul(LagrangeHalfCPolynomial *accum, const Lagrang/;"	f	namespace:__anonb49ff32c0111	typeref:typename:void
fake_LagrangeHalfCPolynomialClear	src/tests/fakes/lagrangehalfc.h	/^    inline void fake_LagrangeHalfCPolynomialClear(LagrangeHalfCPolynomial *result) {$/;"	f	namespace:__anonb49ff32c0111	typeref:typename:void
fake_TorusPolynomial_fft	src/tests/fakes/lagrangehalfc.h	/^    inline void fake_TorusPolynomial_fft(TorusPolynomial *result, const LagrangeHalfCPolynomial /;"	f	namespace:__anonb49ff32c0111	typeref:typename:void
fake_TorusPolynomial_ifft	src/tests/fakes/lagrangehalfc.h	/^    inline void fake_TorusPolynomial_ifft(LagrangeHalfCPolynomial *result, const TorusPolynomial/;"	f	namespace:__anonb49ff32c0111	typeref:typename:void
fake_delete_LagrangeHalfCPolynomial	src/tests/fakes/lagrangehalfc.h	/^    inline void fake_delete_LagrangeHalfCPolynomial(LagrangeHalfCPolynomial *ptr) {$/;"	f	namespace:__anonb49ff32c0111	typeref:typename:void
fake_delete_LagrangeHalfCPolynomial_array	src/tests/fakes/lagrangehalfc.h	/^    inline void fake_delete_LagrangeHalfCPolynomial_array(int32_t nbelts, LagrangeHalfCPolynomia/;"	f	namespace:__anonb49ff32c0111	typeref:typename:void
fake_delete_LweBootstrappingKey	src/tests/fakes/lwe-bootstrapping.h	/^    inline void fake_delete_LweBootstrappingKey(LweBootstrappingKey *bk) {$/;"	f	namespace:__anon027fcd4e0111	typeref:typename:void
fake_delete_LweBootstrappingKeyFFT	src/tests/fakes/lwe-bootstrapping-fft.h	/^    inline void fake_delete_LweBootstrappingKeyFFT(LweBootstrappingKeyFFT *bkFFT) {$/;"	f	namespace:__anonaae24d1b0111	typeref:typename:void
fake_delete_LweKeySwitchKey	src/tests/fakes/lwe-keyswitch.h	/^    inline void fake_delete_LweKeySwitchKey(LweKeySwitchKey *ks) {$/;"	f	namespace:__anonbf4a421d0111	typeref:typename:void
fake_delete_LweSample	src/tests/fakes/lwe.h	/^inline void fake_delete_LweSample(LweSample *sample) {$/;"	f	typeref:typename:void
fake_delete_LweSample_array	src/tests/fakes/lwe.h	/^inline void fake_delete_LweSample_array(int32_t nbelts, LweSample *sample) {$/;"	f	typeref:typename:void
fake_delete_TGswSample	src/tests/fakes/tgsw.h	/^    inline void fake_delete_TGswSample(TGswSample *sample) {$/;"	f	namespace:__anond844f8d20111	typeref:typename:void
fake_delete_TGswSampleFFT	src/tests/fakes/tgsw-fft.h	/^    inline void fake_delete_TGswSampleFFT(TGswSampleFFT *sample) {$/;"	f	namespace:__anonee999a9f0111	typeref:typename:void
fake_delete_TGswSampleFFT_array	src/tests/fakes/tgsw-fft.h	/^    inline void fake_delete_TGswSampleFFT_array(int32_t nbelts, TGswSampleFFT *sample) {$/;"	f	namespace:__anonee999a9f0111	typeref:typename:void
fake_delete_TGswSample_array	src/tests/fakes/tgsw.h	/^    inline void fake_delete_TGswSample_array(int32_t nbelts, TGswSample *sample) {$/;"	f	namespace:__anond844f8d20111	typeref:typename:void
fake_delete_TLweSample	src/tests/fakes/tlwe.h	/^    inline void fake_delete_TLweSample(TLweSample *sample) {$/;"	f	namespace:__anond8a158490111	typeref:typename:void
fake_delete_TLweSampleFFT	src/tests/fakes/tlwe-fft.h	/^    inline void fake_delete_TLweSampleFFT(TLweSampleFFT *sample) {$/;"	f	namespace:__anon7c76dd960111	typeref:typename:void
fake_delete_TLweSampleFFT_array	src/tests/fakes/tlwe-fft.h	/^    inline void fake_delete_TLweSampleFFT_array(int32_t nbelts, TLweSampleFFT *sample) {$/;"	f	namespace:__anon7c76dd960111	typeref:typename:void
fake_delete_TLweSample_array	src/tests/fakes/tlwe.h	/^    inline void fake_delete_TLweSample_array(int32_t nbelts, TLweSample *sample) {$/;"	f	namespace:__anond8a158490111	typeref:typename:void
fake_destroy_TGswSample	src/tests/fakes/tgsw.h	/^    inline void fake_destroy_TGswSample(TGswSample *ptr) {$/;"	f	namespace:__anond844f8d20111	typeref:typename:void
fake_init_TGswSample	src/tests/fakes/tgsw.h	/^    inline void fake_init_TGswSample(TGswSample *ptr, const TGswParams *params) {$/;"	f	namespace:__anond844f8d20111	typeref:typename:void
fake_lweAddMulTo	src/tests/fakes/lwe.h	/^inline void fake_lweAddMulTo(LweSample *result, const int32_t p, const LweSample *sample, const /;"	f	typeref:typename:void
fake_lweAddTo	src/tests/fakes/lwe.h	/^inline void fake_lweAddTo(LweSample *result, const LweSample *sample, const LweParams *params) {$/;"	f	typeref:typename:void
fake_lweCopy	src/tests/fakes/lwe.h	/^inline void fake_lweCopy(LweSample *result, const LweSample *sample, const LweParams *params) {$/;"	f	typeref:typename:void
fake_lweCreateKeySwitchKey	src/tests/fakes/lwe-keyswitch.h	/^    inline void fake_lweCreateKeySwitchKey(LweKeySwitchKey *result, const LweKey *in_key, const /;"	f	namespace:__anonbf4a421d0111	typeref:typename:void
fake_lweCreateKeySwitchKey_fromArray	src/tests/fakes/lwe-keyswitch.h	/^    inline void fake_lweCreateKeySwitchKey_fromArray(LweSample ***result,$/;"	f	namespace:__anonbf4a421d0111	typeref:typename:void
fake_lweKeySwitch	src/tests/fakes/lwe-keyswitch.h	/^    inline void fake_lweKeySwitch(LweSample *result, const LweKeySwitchKey *ks, const LweSample /;"	f	namespace:__anonbf4a421d0111	typeref:typename:void
fake_lweKeySwitchTranslate_fromArray	src/tests/fakes/lwe-keyswitch.h	/^    inline void fake_lweKeySwitchTranslate_fromArray(LweSample *result,$/;"	f	namespace:__anonbf4a421d0111	typeref:typename:void
fake_lweMessage	src/tests/fakes/lwe.h	/^inline Torus32 fake_lweMessage(const LweSample *sample) {$/;"	f	typeref:typename:Torus32
fake_lweNegate	src/tests/fakes/lwe.h	/^inline void fake_lweNegate(LweSample *result, const LweSample *sample, const LweParams *params) /;"	f	typeref:typename:void
fake_lweNoiselessTrivial	src/tests/fakes/lwe.h	/^inline void fake_lweNoiselessTrivial(LweSample *result, Torus32 message, const LweParams *params/;"	f	typeref:typename:void
fake_lwePhase	src/tests/fakes/lwe.h	/^inline Torus32 fake_lwePhase(const LweSample *sample, const LweKey *key) {$/;"	f	typeref:typename:Torus32
fake_lweSubMulTo	src/tests/fakes/lwe.h	/^inline void fake_lweSubMulTo(LweSample *result, const int32_t p, const LweSample *sample, const /;"	f	typeref:typename:void
fake_lweSubTo	src/tests/fakes/lwe.h	/^inline void fake_lweSubTo(LweSample *result, const LweSample *sample, const LweParams *params) {$/;"	f	typeref:typename:void
fake_lweSymEncrypt	src/tests/fakes/lwe.h	/^inline void fake_lweSymEncrypt(LweSample *result, Torus32 message, double alpha, const LweKey *k/;"	f	typeref:typename:void
fake_lweSymEncryptWithExternalNoise	src/tests/fakes/lwe.h	/^fake_lweSymEncryptWithExternalNoise(LweSample *result, Torus32 message, double noise, double alp/;"	f	typeref:typename:void
fake_lweVariance	src/tests/fakes/lwe.h	/^inline Torus32 fake_lweVariance(const LweSample *sample) {$/;"	f	typeref:typename:Torus32
fake_new_LagrangeHalfCPolynomial	src/tests/fakes/lagrangehalfc.h	/^    inline LagrangeHalfCPolynomial *fake_new_LagrangeHalfCPolynomial(int32_t N) {$/;"	f	namespace:__anonb49ff32c0111	typeref:typename:LagrangeHalfCPolynomial *
fake_new_LagrangeHalfCPolynomial_array	src/tests/fakes/lagrangehalfc.h	/^    inline LagrangeHalfCPolynomial *fake_new_LagrangeHalfCPolynomial_array(int32_t nbelts, int32/;"	f	namespace:__anonb49ff32c0111	typeref:typename:LagrangeHalfCPolynomial *
fake_new_LweBootstrappingKey	src/tests/fakes/lwe-bootstrapping.h	/^    inline LweBootstrappingKey *fake_new_LweBootstrappingKey(int32_t ks_t, int32_t ks_basebit, c/;"	f	namespace:__anon027fcd4e0111	typeref:typename:LweBootstrappingKey *
fake_new_LweBootstrappingKeyFFT	src/tests/fakes/lwe-bootstrapping-fft.h	/^    inline LweBootstrappingKeyFFT *fake_new_LweBootstrappingKeyFFT(const LweBootstrappingKey *bk/;"	f	namespace:__anonaae24d1b0111	typeref:typename:LweBootstrappingKeyFFT *
fake_new_LweKeySwitchKey	src/tests/fakes/lwe-keyswitch.h	/^    inline LweKeySwitchKey *fake_new_LweKeySwitchKey(int32_t n, int32_t t, int32_t basebit, cons/;"	f	namespace:__anonbf4a421d0111	typeref:typename:LweKeySwitchKey *
fake_new_LweSample	src/tests/fakes/lwe.h	/^inline LweSample *fake_new_LweSample(const LweParams *params) {$/;"	f	typeref:typename:LweSample *
fake_new_LweSample_array	src/tests/fakes/lwe.h	/^inline LweSample *fake_new_LweSample_array(int32_t nbelts, const LweParams *params) {$/;"	f	typeref:typename:LweSample *
fake_new_TGswSample	src/tests/fakes/tgsw.h	/^    inline TGswSample *fake_new_TGswSample(const TGswParams *params) {$/;"	f	namespace:__anond844f8d20111	typeref:typename:TGswSample *
fake_new_TGswSampleFFT	src/tests/fakes/tgsw-fft.h	/^    inline TGswSampleFFT *fake_new_TGswSampleFFT(const TGswParams *params) {$/;"	f	namespace:__anonee999a9f0111	typeref:typename:TGswSampleFFT *
fake_new_TGswSampleFFT_array	src/tests/fakes/tgsw-fft.h	/^    inline TGswSampleFFT *fake_new_TGswSampleFFT_array(int32_t nbelts, const TGswParams *params)/;"	f	namespace:__anonee999a9f0111	typeref:typename:TGswSampleFFT *
fake_new_TGswSample_array	src/tests/fakes/tgsw.h	/^    inline TGswSample *fake_new_TGswSample_array(int32_t nbelts, const TGswParams *params) {$/;"	f	namespace:__anond844f8d20111	typeref:typename:TGswSample *
fake_new_TLweSample	src/tests/fakes/tlwe.h	/^    inline TLweSample *fake_new_TLweSample(const TLweParams *params) {$/;"	f	namespace:__anond8a158490111	typeref:typename:TLweSample *
fake_new_TLweSampleFFT	src/tests/fakes/tlwe-fft.h	/^    inline TLweSampleFFT *fake_new_TLweSampleFFT(const TLweParams *params) {$/;"	f	namespace:__anon7c76dd960111	typeref:typename:TLweSampleFFT *
fake_new_TLweSampleFFT_array	src/tests/fakes/tlwe-fft.h	/^    inline TLweSampleFFT *fake_new_TLweSampleFFT_array(int32_t nbelts, const TLweParams *params)/;"	f	namespace:__anon7c76dd960111	typeref:typename:TLweSampleFFT *
fake_new_TLweSample_array	src/tests/fakes/tlwe.h	/^    inline TLweSample *fake_new_TLweSample_array(int32_t nbelts, const TLweParams *params) {$/;"	f	namespace:__anond8a158490111	typeref:typename:TLweSample *
fake_sock_writer_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  FakeSocketWriter* const fake_sock_writer_;$/;"	m	class:testing::internal::StreamingListenerTest	typeref:typename:FakeSocketWriter * const	file:
fake_tGswAddH	src/tests/fakes/tgsw.h	/^    inline void fake_tGswAddH(TGswSample *result, const TGswParams *params) {$/;"	f	namespace:__anond844f8d20111	typeref:typename:void
fake_tGswAddMuH	src/tests/fakes/tgsw.h	/^    inline void fake_tGswAddMuH(TGswSample *result, const IntPolynomial *message, const TGswPara/;"	f	namespace:__anond844f8d20111	typeref:typename:void
fake_tGswAddMuIntH	src/tests/fakes/tgsw.h	/^    inline void fake_tGswAddMuIntH(TGswSample *result, const int32_t message, const TGswParams */;"	f	namespace:__anond844f8d20111	typeref:typename:void
fake_tGswAddTo	src/tests/fakes/tgsw.h	/^    inline void fake_tGswAddTo(TGswSample *result, const TGswSample *sample, const TGswParams *p/;"	f	namespace:__anond844f8d20111	typeref:typename:void
fake_tGswClear	src/tests/fakes/tgsw.h	/^    inline void fake_tGswClear(TGswSample *result, const TGswParams *params) {$/;"	f	namespace:__anond844f8d20111	typeref:typename:void
fake_tGswEncryptZero	src/tests/fakes/tgsw.h	/^    inline void fake_tGswEncryptZero(TGswSample *result, double alpha, const TGswKey *key) {$/;"	f	namespace:__anond844f8d20111	typeref:typename:void
fake_tGswExternMulToTLwe	src/tests/fakes/tgsw.h	/^    inline void fake_tGswExternMulToTLwe(TLweSample *accum, const TGswSample *sample, const TGsw/;"	f	namespace:__anond844f8d20111	typeref:typename:void
fake_tGswFFTAddH	src/tests/fakes/tgsw-fft.h	/^    inline void fake_tGswFFTAddH(TGswSampleFFT *result, const TGswParams *params) {$/;"	f	namespace:__anonee999a9f0111	typeref:typename:void
fake_tGswFFTClear	src/tests/fakes/tgsw-fft.h	/^    inline void fake_tGswFFTClear(TGswSampleFFT *result, const TGswParams *params) {$/;"	f	namespace:__anonee999a9f0111	typeref:typename:void
fake_tGswFFTExternMulToTLwe	src/tests/fakes/tgsw-fft.h	/^    inline void fake_tGswFFTExternMulToTLwe(TLweSample *accum, const TGswSampleFFT *gsw, const T/;"	f	namespace:__anonee999a9f0111	typeref:typename:void
fake_tGswFFTMulByXaiMinusOne	src/tests/fakes/tgsw-fft.h	/^    inline void fake_tGswFFTMulByXaiMinusOne(TGswSampleFFT *result, const int32_t ai, const TGsw/;"	f	namespace:__anonee999a9f0111	typeref:typename:void
fake_tGswFromFFTConvert	src/tests/fakes/tgsw-fft.h	/^    inline void fake_tGswFromFFTConvert(TGswSample *result, const TGswSampleFFT *source, const T/;"	f	namespace:__anonee999a9f0111	typeref:typename:void
fake_tGswMulByXaiMinusOne	src/tests/fakes/tgsw.h	/^    inline void fake_tGswMulByXaiMinusOne(TGswSample *result, int32_t ai, const TGswSample *bk, /;"	f	namespace:__anond844f8d20111	typeref:typename:void
fake_tGswSymDecrypt	src/tests/fakes/tgsw.h	/^    fake_tGswSymDecrypt(IntPolynomial *result, const TGswSample *sample, const TGswKey *key, con/;"	f	namespace:__anond844f8d20111	typeref:typename:void
fake_tGswSymEncrypt	src/tests/fakes/tgsw.h	/^    fake_tGswSymEncrypt(TGswSample *result, const IntPolynomial *message, double alpha, const TG/;"	f	namespace:__anond844f8d20111	typeref:typename:void
fake_tGswSymEncryptInt	src/tests/fakes/tgsw.h	/^    inline void fake_tGswSymEncryptInt(TGswSample *result, const int32_t message, double alpha, /;"	f	namespace:__anond844f8d20111	typeref:typename:void
fake_tGswToFFTConvert	src/tests/fakes/tgsw-fft.h	/^    inline void fake_tGswToFFTConvert(TGswSampleFFT *result, const TGswSample *source, const TGs/;"	f	namespace:__anonee999a9f0111	typeref:typename:void
fake_tLweAddMulRTo	src/tests/fakes/tlwe.h	/^    fake_tLweAddMulRTo(TLweSample *result, const IntPolynomial *p, const TLweSample *sample, con/;"	f	namespace:__anond8a158490111	typeref:typename:void
fake_tLweAddMulTo	src/tests/fakes/tlwe.h	/^    inline void fake_tLweAddMulTo(TLweSample *result, int32_t p, const TLweSample *sample, const/;"	f	namespace:__anond8a158490111	typeref:typename:void
fake_tLweAddTo	src/tests/fakes/tlwe.h	/^    inline void fake_tLweAddTo(TLweSample *result, const TLweSample *sample, const TLweParams *p/;"	f	namespace:__anond8a158490111	typeref:typename:void
fake_tLweApproxPhase	src/tests/fakes/tlwe.h	/^    inline void fake_tLweApproxPhase(TorusPolynomial *message, const TorusPolynomial *phase, int/;"	f	namespace:__anond8a158490111	typeref:typename:void
fake_tLweClear	src/tests/fakes/tlwe.h	/^    inline void fake_tLweClear(TLweSample *result, const TLweParams *params) {$/;"	f	namespace:__anond8a158490111	typeref:typename:void
fake_tLweCopy	src/tests/fakes/tlwe.h	/^    inline void fake_tLweCopy(TLweSample *result, const TLweSample *sample, const TLweParams *pa/;"	f	namespace:__anond8a158490111	typeref:typename:void
fake_tLweExtractLweSample	src/tests/fakes/tlwe.h	/^    inline void fake_tLweExtractLweSample(LweSample *result, const TLweSample *x, const LweParam/;"	f	namespace:__anond8a158490111	typeref:typename:void
fake_tLweFFTAddMulRTo	src/tests/fakes/tlwe-fft.h	/^    fake_tLweFFTAddMulRTo(TLweSampleFFT *result, const LagrangeHalfCPolynomial *p, const TLweSam/;"	f	namespace:__anon7c76dd960111	typeref:typename:void
fake_tLweFFTClear	src/tests/fakes/tlwe-fft.h	/^    inline void fake_tLweFFTClear(TLweSampleFFT *result, const TLweParams *params) {$/;"	f	namespace:__anon7c76dd960111	typeref:typename:void
fake_tLweFromFFTConvert	src/tests/fakes/tlwe-fft.h	/^    inline void fake_tLweFromFFTConvert(TLweSample *result, const TLweSampleFFT *source, const T/;"	f	namespace:__anon7c76dd960111	typeref:typename:void
fake_tLweMulByXaiMinusOne	src/tests/fakes/tlwe.h	/^    inline void fake_tLweMulByXaiMinusOne(TLweSample *result, int32_t ai, const TLweSample *bk, /;"	f	namespace:__anond8a158490111	typeref:typename:void
fake_tLweNoiselessTrivial	src/tests/fakes/tlwe.h	/^    inline void fake_tLweNoiselessTrivial(TLweSample *result, const TorusPolynomial *mu, const T/;"	f	namespace:__anond8a158490111	typeref:typename:void
fake_tLwePhase	src/tests/fakes/tlwe.h	/^    inline void fake_tLwePhase(TorusPolynomial *phase, const TLweSample *sample, const TLweKey */;"	f	namespace:__anond8a158490111	typeref:typename:void
fake_tLweSubMulTo	src/tests/fakes/tlwe.h	/^    inline void fake_tLweSubMulTo(TLweSample *result, int32_t p, const TLweSample *sample, const/;"	f	namespace:__anond8a158490111	typeref:typename:void
fake_tLweSubTo	src/tests/fakes/tlwe.h	/^    inline void fake_tLweSubTo(TLweSample *result, const TLweSample *sample, const TLweParams *p/;"	f	namespace:__anond8a158490111	typeref:typename:void
fake_tLweSymDecrypt	src/tests/fakes/tlwe.h	/^    inline void fake_tLweSymDecrypt(TorusPolynomial *result, const TLweSample *sample, const TLw/;"	f	namespace:__anond8a158490111	typeref:typename:void
fake_tLweSymDecryptT	src/tests/fakes/tlwe.h	/^    inline Torus32 fake_tLweSymDecryptT(const TLweSample *sample, const TLweKey *key, int32_t pl/;"	f	namespace:__anond8a158490111	typeref:typename:Torus32
fake_tLweSymEncrypt	src/tests/fakes/tlwe.h	/^    inline void fake_tLweSymEncrypt(TLweSample *result, TorusPolynomial *message, double alpha, /;"	f	namespace:__anond8a158490111	typeref:typename:void
fake_tLweSymEncryptT	src/tests/fakes/tlwe.h	/^    inline void fake_tLweSymEncryptT(TLweSample *result, Torus32 message, double alpha, const TL/;"	f	namespace:__anond8a158490111	typeref:typename:void
fake_tLweSymEncryptZero	src/tests/fakes/tlwe.h	/^    inline void fake_tLweSymEncryptZero(TLweSample *result, double alpha, const TLweKey *key) {$/;"	f	namespace:__anond8a158490111	typeref:typename:void
fake_tLweToFFTConvert	src/tests/fakes/tlwe-fft.h	/^    inline void fake_tLweToFFTConvert(TLweSampleFFT *result, const TLweSample *source, const TLw/;"	f	namespace:__anon7c76dd960111	typeref:typename:void
fake_tfhe_blindRotate	src/tests/fakes/lwe-bootstrapping.h	/^    inline void fake_tfhe_blindRotate(TLweSample *accum, const TGswSample *bk, const int32_t *ba/;"	f	namespace:__anon027fcd4e0111	typeref:typename:void
fake_tfhe_blindRotateAndExtract	src/tests/fakes/lwe-bootstrapping.h	/^    inline void fake_tfhe_blindRotateAndExtract(LweSample *result,$/;"	f	namespace:__anon027fcd4e0111	typeref:typename:void
fake_tfhe_blindRotateAndExtract_FFT	src/tests/fakes/lwe-bootstrapping-fft.h	/^    inline void fake_tfhe_blindRotateAndExtract_FFT(LweSample *result,$/;"	f	namespace:__anonaae24d1b0111	typeref:typename:void
fake_tfhe_blindRotate_FFT	src/tests/fakes/lwe-bootstrapping-fft.h	/^    inline void fake_tfhe_blindRotate_FFT(TLweSample *accum, const TGswSampleFFT *bkFFT, const i/;"	f	namespace:__anonaae24d1b0111	typeref:typename:void
fake_tfhe_bootstrap	src/tests/fakes/lwe-bootstrapping.h	/^    inline void fake_tfhe_bootstrap(LweSample *result,$/;"	f	namespace:__anon027fcd4e0111	typeref:typename:void
fake_tfhe_bootstrap_FFT	src/tests/fakes/lwe-bootstrapping-fft.h	/^    inline void fake_tfhe_bootstrap_FFT(LweSample *result,$/;"	f	namespace:__anonaae24d1b0111	typeref:typename:void
fake_tfhe_bootstrap_woKS	src/tests/fakes/lwe-bootstrapping.h	/^    inline void fake_tfhe_bootstrap_woKS(LweSample *result,$/;"	f	namespace:__anon027fcd4e0111	typeref:typename:void
fake_tfhe_bootstrap_woKS_FFT	src/tests/fakes/lwe-bootstrapping-fft.h	/^    inline void fake_tfhe_bootstrap_woKS_FFT(LweSample *result, const LweBootstrappingKeyFFT *bk/;"	f	namespace:__anonaae24d1b0111	typeref:typename:void
fake_tfhe_createLweBootstrappingKey	src/tests/fakes/lwe-bootstrapping.h	/^    inline void fake_tfhe_createLweBootstrappingKey($/;"	f	namespace:__anon027fcd4e0111	typeref:typename:void
fake_uid	src/tests/fakes/lagrangehalfc.h	/^        const int32_t fake_uid;$/;"	m	struct:__anonb49ff32c0111::FakeLagrangeHalfCPolynomial	typeref:typename:const int32_t
fake_uid	src/tests/fakes/lwe-keyswitch.h	/^        const int64_t fake_uid;$/;"	m	struct:__anonbf4a421d0111::FakeLweKeySwitchKey	typeref:typename:const int64_t
fake_uid	src/tests/fakes/lwe.h	/^    const int32_t fake_uid;$/;"	m	struct:FakeLwe	typeref:typename:const int32_t
fake_uid	src/tests/fakes/tgsw-fft.h	/^        const int32_t fake_uid;$/;"	m	struct:__anonee999a9f0111::FakeTGswFFT	typeref:typename:const int32_t
fake_uid	src/tests/fakes/tgsw.h	/^        const int64_t fake_uid;$/;"	m	struct:__anond844f8d20111::FakeTGsw	typeref:typename:const int64_t
fake_uid	src/tests/fakes/tlwe-fft.h	/^        const int32_t fake_uid;$/;"	m	struct:__anon7c76dd960111::FakeTLweFFT	typeref:typename:const int32_t
fake_uid	src/tests/fakes/tlwe.h	/^        const int32_t fake_uid;$/;"	m	struct:__anond8a158490111::FakeTLwe	typeref:typename:const int32_t
false_type	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^typedef bool_constant<false> false_type;$/;"	t	namespace:testing::internal	typeref:typename:bool_constant<false>
family	src/muduo/muduo/net/InetAddress.h	/^  sa_family_t family() const { return addr_.sin_family; }$/;"	f	class:muduo::net::InetAddress	typeref:typename:sa_family_t
fastcgi_test	src/muduo/examples/fastcgi/CMakeLists.txt	/^add_executable(fastcgi_test fastcgi.cc fastcgi_test.cc ..\/sudoku\/sudoku.cc)$/;"	t
fatally_failed	src/tests/googletest/googletest/include/gtest/gtest-test-part.h	/^  bool fatally_failed() const { return type_ == kFatalFailure; }$/;"	f	class:testing::TestPartResult	typeref:typename:bool
favicon	src/muduo/examples/shorturl/shorturl.cc	/^char favicon[555] = {$/;"	v	typeref:typename:char[555]
favicon	src/muduo/muduo/net/http/tests/HttpServer_test.cc	/^char favicon[555] = {$/;"	v	typeref:typename:char[555]
favicon	src/muduo/muduo/net/inspect/Inspector.cc	/^char favicon[1743] =$/;"	v	typeref:typename:char[1743]
fd	src/muduo/contrib/hiredis/Hiredis.cc	/^int Hiredis::fd() const$/;"	f	class:Hiredis	typeref:typename:int
fd	src/muduo/muduo/net/Channel.h	/^  int fd() const { return fd_; }$/;"	f	class:muduo::net::Channel	typeref:typename:int
fd	src/muduo/muduo/net/Socket.h	/^  int fd() const { return sockfd_; }$/;"	f	class:muduo::net::Socket	typeref:typename:int
fdDirFilter	src/muduo/muduo/base/ProcessInfo.cc	/^int fdDirFilter(const struct dirent* d)$/;"	f	namespace:muduo::detail	typeref:typename:int
fd_	src/muduo/muduo/base/FileUtil.h	/^  int fd_;$/;"	m	class:muduo::FileUtil::ReadSmallFile	typeref:typename:int
fd_	src/muduo/muduo/net/Channel.h	/^  const int  fd_;$/;"	m	class:muduo::net::Channel	typeref:typename:const int
fd_	src/tests/googletest/googletest/src/gtest-port.cc	/^  const int fd_;  \/\/ A stream to capture.$/;"	m	class:testing::internal::CapturedStream	typeref:typename:const int	file:
feof	src/libtfhe-superaic-core/tfhe_generic_streams.cpp	/^bool CIstream::feof() const { return std::feof(F); }$/;"	f	class:CIstream	typeref:typename:bool
feof	src/libtfhe-superaic-core/tfhe_generic_streams.cpp	/^bool StdIstream::feof() const { return !((bool) in); }$/;"	f	class:StdIstream	typeref:typename:bool
fft-model-of-x8664-avx.c.i	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^fft-model-of-x8664-avx.c.i:$/;"	t
fft-model-of-x8664-avx.c.o	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^fft-model-of-x8664-avx.c.o:$/;"	t
fft-model-of-x8664-avx.c.s	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^fft-model-of-x8664-avx.c.s:$/;"	t
fft-model-of-x8664-avx.i	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^fft-model-of-x8664-avx.i: fft-model-of-x8664-avx.c.i$/;"	t
fft-model-of-x8664-avx.o	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^fft-model-of-x8664-avx.o: fft-model-of-x8664-avx.c.o$/;"	t
fft-model-of-x8664-avx.s	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^fft-model-of-x8664-avx.s: fft-model-of-x8664-avx.c.s$/;"	t
fft-x8664-avx-aux.c.i	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^fft-x8664-avx-aux.c.i:$/;"	t
fft-x8664-avx-aux.c.o	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^fft-x8664-avx-aux.c.o:$/;"	t
fft-x8664-avx-aux.c.s	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^fft-x8664-avx-aux.c.s:$/;"	t
fft-x8664-avx-aux.i	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^fft-x8664-avx-aux.i: fft-x8664-avx-aux.c.i$/;"	t
fft-x8664-avx-aux.o	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^fft-x8664-avx-aux.o: fft-x8664-avx-aux.c.o$/;"	t
fft-x8664-avx-aux.s	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^fft-x8664-avx-aux.s: fft-x8664-avx-aux.c.s$/;"	t
fft_destroy	src/libtfhe-superaic-core/fft_processors/nayuki/fft-portable.c	/^void fft_destroy(void *tables) {$/;"	f	typeref:typename:void
fft_destroy	src/libtfhe-superaic-core/fft_processors/nayuki/fft-x8664-avx-aux.c	/^void fft_destroy(void *tables) {$/;"	f	typeref:typename:void
fft_init	src/libtfhe-superaic-core/fft_processors/nayuki/fft-portable.c	/^void *fft_init(size_t n) {$/;"	f	typeref:typename:void *
fft_init	src/libtfhe-superaic-core/fft_processors/nayuki/fft-x8664-avx-aux.c	/^void *fft_init(size_t n) {$/;"	f	typeref:typename:void *
fft_init_reverse	src/libtfhe-superaic-core/fft_processors/nayuki/fft-x8664-avx-aux.c	/^void *fft_init_reverse(size_t n) {$/;"	f	typeref:typename:void *
fft_processor_nayuki.cpp.i	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^fft_processor_nayuki.cpp.i:$/;"	t
fft_processor_nayuki.cpp.o	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^fft_processor_nayuki.cpp.o:$/;"	t
fft_processor_nayuki.cpp.s	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^fft_processor_nayuki.cpp.s:$/;"	t
fft_processor_nayuki.i	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^fft_processor_nayuki.i: fft_processor_nayuki.cpp.i$/;"	t
fft_processor_nayuki.o	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^fft_processor_nayuki.o: fft_processor_nayuki.cpp.o$/;"	t
fft_processor_nayuki.s	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^fft_processor_nayuki.s: fft_processor_nayuki.cpp.s$/;"	t
fft_transform	src/libtfhe-superaic-core/fft_processors/nayuki/fft-model-of-x8664-avx.c	/^void fft_transform(const void *tables, double *real, double *imag) {$/;"	f	typeref:typename:void
fft_transform	src/libtfhe-superaic-core/fft_processors/nayuki/fft-portable.c	/^void fft_transform(const void *tables, double *real, double *imag) {$/;"	f	typeref:typename:void
fft_transform	src/libtfhe-superaic-core/fft_processors/nayuki/fft-x8664-avx.s	/^	.globl	fft_transform$/;"	s
fft_transform	src/libtfhe-superaic-core/fft_processors/nayuki/fft-x8664-avx.s	/^fft_transform:$/;"	l
fft_transform_reverse	src/libtfhe-superaic-core/fft_processors/nayuki/fft-model-of-x8664-avx.c	/^void fft_transform_reverse(const void *tables, double *real, double *imag) {$/;"	f	typeref:typename:void
fft_transform_reverse	src/libtfhe-superaic-core/fft_processors/nayuki/fft-x8664-avx-reverse.s	/^	.globl	fft_transform_reverse$/;"	s
fft_transform_reverse	src/libtfhe-superaic-core/fft_processors/nayuki/fft-x8664-avx-reverse.s	/^fft_transform_reverse:$/;"	l
field	src/tests/googletest/googlemock/test/gmock_link_test.h	/^  int field() const { return field_; }$/;"	f	class:FieldHelper	typeref:typename:int
field_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const FieldType Class::*field_;$/;"	m	class:testing::internal::FieldMatcher	typeref:typename:const FieldType Class::*
field_	src/tests/googletest/googlemock/test/gmock_link_test.h	/^  int field_;  \/\/ NOLINT -- need external access to field_ to test$/;"	m	class:FieldHelper	typeref:typename:int
file	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  const char* file() const { return file_; }$/;"	f	class:testing::internal::ExpectationBase	typeref:typename:const char *
file	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  const char* file() const { return file_; }$/;"	f	class:testing::internal::UntypedOnCallSpecBase	typeref:typename:const char *
file	src/tests/googletest/googletest/include/gtest/gtest.h	/^    const char* const file;$/;"	m	struct:testing::internal::AssertHelper::AssertHelperData	typeref:typename:const char * const
file	src/tests/googletest/googletest/include/gtest/gtest.h	/^  const char* file() const { return location_.file.c_str(); }$/;"	f	class:testing::TestInfo	typeref:typename:const char *
file	src/tests/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h	/^  const std::string& file() const { return file_; }$/;"	f	class:testing::internal::InternalRunDeathTestFlag	typeref:typename:const std::string &
file	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  std::string file;$/;"	m	struct:testing::internal::CodeLocation	typeref:typename:std::string
file	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^      const char* file;$/;"	m	struct:testing::internal::ParameterizedTestCaseInfo::InstantiationInfo	typeref:typename:const char *
file	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  const char* file;$/;"	m	struct:testing::internal::TraceInfo	typeref:typename:const char *
file_	src/muduo/examples/ace/logging/server.cc	/^  FileUtil::AppendFile file_;$/;"	m	class:logging::Session	typeref:typename:FileUtil::AppendFile	file:
file_	src/muduo/muduo/base/GzipFile.h	/^  gzFile file_;$/;"	m	class:muduo::GzipFile	typeref:typename:gzFile
file_	src/muduo/muduo/base/LogFile.h	/^  std::unique_ptr<FileUtil::AppendFile> file_;$/;"	m	class:muduo::LogFile	typeref:typename:std::unique_ptr<FileUtil::AppendFile>
file_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  const char* file_;          \/\/ The file that contains the expectation.$/;"	m	class:testing::internal::ExpectationBase	typeref:typename:const char *
file_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  const char* file_;$/;"	m	class:testing::internal::UntypedOnCallSpecBase	typeref:typename:const char *
file_	src/tests/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h	/^  std::string file_;$/;"	m	class:testing::internal::InternalRunDeathTestFlag	typeref:typename:std::string
file_	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  const char* const file_;$/;"	m	class:testing::internal::ExecDeathTest	typeref:typename:const char * const	file:
file_	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  const char* const file_;$/;"	m	class:testing::internal::WindowsDeathTest	typeref:typename:const char * const	file:
file_data	src/tests/googletest/googletest/xcode/Scripts/versiongenerate.py	/^file_data = """\/\/$/;"	v
file_name	src/tests/googletest/googletest/include/gtest/gtest-test-part.h	/^  const char* file_name() const {$/;"	f	class:testing::TestPartResult	typeref:typename:const char *
file_name_	src/tests/googletest/googletest/include/gtest/gtest-test-part.h	/^  std::string file_name_;$/;"	m	class:testing::TestPartResult	typeref:typename:std::string
filetransfer_download	src/muduo/examples/filetransfer/CMakeLists.txt	/^add_executable(filetransfer_download download.cc)$/;"	t
filetransfer_download2	src/muduo/examples/filetransfer/CMakeLists.txt	/^add_executable(filetransfer_download2 download2.cc)$/;"	t
filetransfer_download3	src/muduo/examples/filetransfer/CMakeLists.txt	/^add_executable(filetransfer_download3 download3.cc)$/;"	t
fileutil_test	src/muduo/muduo/base/tests/CMakeLists.txt	/^add_executable(fileutil_test FileUtil_test.cc)$/;"	t
fill	src/muduo/examples/memcached/client/bench.cc	/^  void fill(Buffer* buf)$/;"	f	class:Client	typeref:typename:void	file:
fillActiveChannels	src/muduo/muduo/net/poller/EPollPoller.cc	/^void EPollPoller::fillActiveChannels(int numEvents,$/;"	f	class:EPollPoller	typeref:typename:void
fillActiveChannels	src/muduo/muduo/net/poller/PollPoller.cc	/^void PollPoller::fillActiveChannels(int numEvents,$/;"	f	class:PollPoller	typeref:typename:void
fillEmptyBuffer	src/muduo/examples/protobuf/codec/codec.cc	/^void ProtobufCodec::fillEmptyBuffer(Buffer* buf, const google::protobuf::Message& message)$/;"	f	class:ProtobufCodec	typeref:typename:void
fillEmptyBuffer	src/muduo/muduo/net/protobuf/ProtobufCodecLite.cc	/^void ProtobufCodecLite::fillEmptyBuffer(muduo::net::Buffer* buf,$/;"	f	class:ProtobufCodecLite	typeref:typename:void
fillEmptyBuffer	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^  void fillEmptyBuffer(muduo::net::Buffer* buf, const MSG& message)$/;"	f	class:muduo::net::ProtobufCodecLiteT	typeref:typename:void
fillHMS	src/muduo/muduo/base/TimeZone.cc	/^inline void fillHMS(unsigned seconds, struct DateTime* dt)$/;"	f	namespace:muduo::detail	typeref:typename:void
fillOverview	src/muduo/examples/procmon/procmon.cc	/^  void fillOverview(const string& query)$/;"	f	class:Procmon	typeref:typename:void	file:
fillRandom	src/tests/lwe_test.cpp	/^    void fillRandom(LweSample *result, const LweParams *params) {$/;"	f	namespace:__anonc84148b60111	typeref:typename:void
fillRandom	src/tests/small_size_test.cpp	/^    void fillRandom(LweSample *result, const LweParams *params) {$/;"	f	namespace:__anon9baab4410111	typeref:typename:void
fillRandom	src/tests/tlwe_test.cpp	/^    void fillRandom(TLweSample *result, const TLweParams *params) {$/;"	f	namespace:__anonc028f2ea0111	typeref:typename:void
fillRefresh	src/muduo/examples/procmon/procmon.cc	/^  void fillRefresh(const string& query)$/;"	f	class:Procmon	typeref:typename:void	file:
filter	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  const char* filter;$/;"	m	struct:testing::Flags	typeref:typename:const char *	file:
filter_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  std::string filter_;$/;"	m	class:testing::internal::GTestFlagSaver	typeref:typename:std::string
finalize	src/libtfhe-superaic-core/tfhe_garbage_collector.cpp	/^void TfheGarbageCollector::finalize() { if (global_tfheGarbageCollector) delete global_tfheGarba/;"	f	class:TfheGarbageCollector	typeref:typename:void
findCRLF	src/muduo/muduo/net/Buffer.h	/^  const char* findCRLF() const$/;"	f	class:muduo::net::Buffer	typeref:typename:const char *
findCRLF	src/muduo/muduo/net/Buffer.h	/^  const char* findCRLF(const char* start) const$/;"	f	class:muduo::net::Buffer	typeref:typename:const char *
findCycles	src/muduo/examples/procmon/dummyload.cc	/^void findCycles()$/;"	f	typeref:typename:void
findEOL	src/muduo/muduo/net/Buffer.h	/^  const char* findEOL() const$/;"	f	class:muduo::net::Buffer	typeref:typename:const char *
findEOL	src/muduo/muduo/net/Buffer.h	/^  const char* findEOL(const char* start) const$/;"	f	class:muduo::net::Buffer	typeref:typename:const char *
findLocalTime	src/muduo/muduo/base/TimeZone.cc	/^const TimeZone::Data::LocalTime* TimeZone::Data::findLocalTime($/;"	f	class:TimeZone::Data	typeref:typename:const TimeZone::Data::LocalTime *
findLocalTime	src/muduo/muduo/base/TimeZone.cc	/^const TimeZone::Data::LocalTime* TimeZone::Data::findLocalTime(int64_t utcTime) const$/;"	f	class:TimeZone::Data	typeref:typename:const TimeZone::Data::LocalTime *
finish	src/muduo/muduo/base/Logging.cc	/^void Logger::Impl::finish()$/;"	f	class:Logger::Impl	typeref:typename:void
finish	src/muduo/muduo/net/ZlibStream.h	/^  bool finish()$/;"	f	class:muduo::net::ZlibOutputStream	typeref:typename:bool
finished_	src/muduo/examples/memcached/client/bench.cc	/^  CountDownLatch* const finished_;$/;"	m	class:Client	typeref:typename:CountDownLatch * const	file:
finished_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  bool finished_;  \/\/ true iff we know that the thread function has finished.$/;"	m	class:testing::internal::ThreadWithParam	typeref:typename:bool
finished_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  static bool finished_;$/;"	m	class:Predicate1Test	typeref:typename:bool	file:
finished_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  static bool finished_;$/;"	m	class:Predicate2Test	typeref:typename:bool	file:
finished_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  static bool finished_;$/;"	m	class:Predicate3Test	typeref:typename:bool	file:
finished_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  static bool finished_;$/;"	m	class:Predicate4Test	typeref:typename:bool	file:
finished_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  static bool finished_;$/;"	m	class:Predicate5Test	typeref:typename:bool	file:
finished_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^bool Predicate1Test::finished_;$/;"	m	class:Predicate1Test	typeref:typename:bool
finished_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^bool Predicate2Test::finished_;$/;"	m	class:Predicate2Test	typeref:typename:bool
finished_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^bool Predicate3Test::finished_;$/;"	m	class:Predicate3Test	typeref:typename:bool
finished_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^bool Predicate4Test::finished_;$/;"	m	class:Predicate4Test	typeref:typename:bool
finished_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^bool Predicate5Test::finished_;$/;"	m	class:Predicate5Test	typeref:typename:bool
first_	src/muduo/examples/memcached/server/Session.cc	/^  Tokenizer::iterator first_;$/;"	m	struct:Session::Reader	typeref:typename:Tokenizer::iterator	file:
first_matcher_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const FirstMatcher first_matcher_;$/;"	m	class:testing::internal::PairMatcher	typeref:typename:const FirstMatcher
first_matcher_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const Matcher<const FirstType&> first_matcher_;$/;"	m	class:testing::internal::PairMatcherImpl	typeref:typename:const Matcher<const FirstType &>
first_used_file	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^  const char* first_used_file;$/;"	m	struct:testing::__anonc1446e5b0111::MockObjectState	typeref:typename:const char *	file:
first_used_line	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^  int first_used_line;$/;"	m	struct:testing::__anonc1446e5b0111::MockObjectState	typeref:typename:int	file:
fix_default_compiler_settings_	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^macro(fix_default_compiler_settings_)$/;"	m
fix_version	src/tests/googletest/googletest/xcode/Scripts/versiongenerate.py	/^fix_version = version_values.group(3)$/;"	v
fixed	src/muduo/examples/procmon/dummyload.cc	/^void fixed()$/;"	f	typeref:typename:void
fixture_class_id_	src/tests/googletest/googletest/include/gtest/gtest.h	/^  const internal::TypeId fixture_class_id_;   \/\/ ID of the test fixture class$/;"	m	class:testing::TestInfo	typeref:typename:const internal::TypeId
fixture_constructor_count_	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  int fixture_constructor_count_;$/;"	m	class:TestGenerationEnvironment	typeref:typename:int	file:
flags	src/muduo/examples/memcached/server/Item.h	/^  uint32_t flags() const$/;"	f	class:Item	typeref:typename:uint32_t
flags	src/muduo/examples/procmon/procmon.cc	/^  int flags;$/;"	m	struct:StatData	typeref:typename:int	file:
flags_	src/muduo/examples/memcached/server/Item.h	/^  const uint32_t flags_;$/;"	m	class:Item	typeref:typename:const uint32_t
floor_log2	src/libtfhe-superaic-core/fft_processors/nayuki/fft-portable.c	/^static int32_t floor_log2(size_t n) {$/;"	f	typeref:typename:int32_t	file:
floor_log2	src/libtfhe-superaic-core/fft_processors/nayuki/fft-x8664-avx-aux.c	/^static int32_t floor_log2(uint64_t n) {$/;"	f	typeref:typename:int32_t	file:
flush	src/muduo/muduo/base/FileUtil.cc	/^void FileUtil::AppendFile::flush()$/;"	f	class:FileUtil::AppendFile	typeref:typename:void
flush	src/muduo/muduo/base/LogFile.cc	/^void LogFile::flush()$/;"	f	class:LogFile	typeref:typename:void
flushFunc	src/muduo/muduo/base/tests/LogFile_test.cc	/^void flushFunc()$/;"	f	typeref:typename:void
flushInterval_	src/muduo/muduo/base/AsyncLogging.h	/^  const int flushInterval_;$/;"	m	class:muduo::AsyncLogging	typeref:typename:const int
flushInterval_	src/muduo/muduo/base/LogFile.h	/^  const int flushInterval_;$/;"	m	class:muduo::LogFile	typeref:typename:const int
fontHeight_	src/muduo/examples/procmon/plot.h	/^  const int fontHeight_;$/;"	m	class:Plot	typeref:typename:const int
fontWidth_	src/muduo/examples/procmon/plot.h	/^  const int fontWidth_;$/;"	m	class:Plot	typeref:typename:const int
font_	src/muduo/examples/procmon/plot.h	/^  MyGdFontPtr const font_;$/;"	m	class:Plot	typeref:typename:MyGdFontPtr const
foo	src/muduo/muduo/base/tests/Exception_test.cc	/^void foo()$/;"	f	typeref:typename:void
foo	src/muduo/muduo/base/tests/Mutex_test.cc	/^int foo()$/;"	f	typeref:typename:int
foo	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^const int foo = 0;$/;"	v	namespace:testing::gmock_matchers_test	typeref:typename:const int
foo	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^namespace foo {$/;"	n	file:
foo	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^namespace foo {$/;"	n	file:
foo	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  Foo foo;$/;"	m	class:__anonf780395f0311::FRIEND_TEST_Test2	typeref:typename:Foo	file:
foo_	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^  FooInterface* const foo_;$/;"	m	class:testing::gmock_generated_function_mockers_test::FunctionMockerTest	typeref:typename:FooInterface * const	file:
foo_	src/tests/googletest/googlemock/test/gmock_output_test_.cc	/^  NaggyMock<MockFoo> foo_;$/;"	m	class:GMockOutputTest	typeref:typename:NaggyMock<MockFoo>	file:
forceClose	src/muduo/muduo/net/TcpConnection.cc	/^void TcpConnection::forceClose()$/;"	f	class:TcpConnection	typeref:typename:void
forceCloseInLoop	src/muduo/muduo/net/TcpConnection.cc	/^void TcpConnection::forceCloseInLoop()$/;"	f	class:TcpConnection	typeref:typename:void
forceCloseWithDelay	src/muduo/muduo/net/TcpConnection.cc	/^void TcpConnection::forceCloseWithDelay(double seconds)$/;"	f	class:TcpConnection	typeref:typename:void
forkBench	src/muduo/muduo/base/tests/Thread_bench.cc	/^void forkBench()$/;"	f	typeref:typename:void
fork_test	src/muduo/muduo/base/tests/CMakeLists.txt	/^add_executable(fork_test Fork_test.cc)$/;"	t
formatIEC	src/muduo/muduo/base/LogStream.cc	/^std::string formatIEC(int64_t s)$/;"	f	namespace:muduo	typeref:typename:std::string
formatInteger	src/muduo/muduo/base/LogStream.cc	/^void LogStream::formatInteger(T v)$/;"	f	class:LogStream	typeref:typename:void
formatSI	src/muduo/muduo/base/LogStream.cc	/^std::string formatSI(int64_t s)$/;"	f	namespace:muduo	typeref:typename:std::string
formatTime	src/muduo/muduo/base/Logging.cc	/^void Logger::Impl::formatTime()$/;"	f	class:Logger::Impl	typeref:typename:void
forwarding_enabled	src/tests/googletest/googletest/src/gtest.cc	/^  bool forwarding_enabled() const { return forwarding_enabled_; }$/;"	f	class:testing::internal::TestEventRepeater	typeref:typename:bool	file:
forwarding_enabled_	src/tests/googletest/googletest/src/gtest.cc	/^  bool forwarding_enabled_;$/;"	m	class:testing::internal::TestEventRepeater	typeref:typename:bool	file:
found_	src/muduo/examples/curl/download.cc	/^  bool found_;$/;"	m	class:Downloader	typeref:typename:bool	file:
fp1024_nayuki	src/libtfhe-superaic-core/fft_processors/nayuki/fft_processor_nayuki.cpp	/^thread_local FFT_Processor_nayuki fp1024_nayuki(1024);$/;"	v	typeref:typename:FFT_Processor_nayuki
fp_	src/muduo/muduo/base/FileUtil.h	/^  FILE* fp_;$/;"	m	class:muduo::FileUtil::AppendFile	typeref:typename:FILE *
fp_	src/muduo/muduo/base/TimeZone.cc	/^  FILE* fp_;$/;"	m	class:muduo::detail::File	typeref:typename:FILE *	file:
fputs	src/libtfhe-superaic-core/tfhe_generic_streams.cpp	/^void COstream::fputs(const string &s) const {$/;"	f	class:COstream	typeref:typename:void
fputs	src/libtfhe-superaic-core/tfhe_generic_streams.cpp	/^void StdOstream::fputs(const string &s) const { out << s; }$/;"	f	class:StdOstream	typeref:typename:void
fraction_bits	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  Bits fraction_bits() const { return kFractionBitMask & u_.bits_; }$/;"	f	class:testing::internal::FloatingPoint	typeref:typename:Bits
frameLen	src/muduo/examples/roundtrip/roundtrip.cc	/^const size_t frameLen = 2*sizeof(int64_t);$/;"	v	typeref:typename:const size_t
frameLen	src/muduo/examples/roundtrip/roundtrip_udp.cc	/^const size_t frameLen = 2*sizeof(int64_t);$/;"	v	typeref:typename:const size_t
frameSize_	src/muduo/contrib/thrift/ThriftConnection.h	/^  uint32_t frameSize_;$/;"	m	class:ThriftConnection	typeref:typename:uint32_t
fread	src/libtfhe-superaic-core/tfhe_generic_streams.cpp	/^void CIstream::fread(void *data, size_t bytes) const {$/;"	f	class:CIstream	typeref:typename:void
fread	src/libtfhe-superaic-core/tfhe_generic_streams.cpp	/^void StdIstream::fread(void *data, size_t bytes) const { in.read((char *) data, bytes); }$/;"	f	class:StdIstream	typeref:typename:void
free_IntPolynomial	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void free_IntPolynomial(IntPolynomial* ptr) {$/;"	f	typeref:typename:EXPORT void
free_IntPolynomial_array	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void free_IntPolynomial_array(int32_t nbelts, IntPolynomial* ptr) {$/;"	f	typeref:typename:EXPORT void
free_LagrangeHalfCPolynomial	src/libtfhe-superaic-core/polynomials.cpp	/^EXPORT void free_LagrangeHalfCPolynomial(LagrangeHalfCPolynomial* ptr) {$/;"	f	typeref:typename:EXPORT void
free_LagrangeHalfCPolynomial_array	src/libtfhe-superaic-core/polynomials.cpp	/^EXPORT void free_LagrangeHalfCPolynomial_array(int32_t nbelts, LagrangeHalfCPolynomial* ptr) {$/;"	f	typeref:typename:EXPORT void
free_LweBootstrappingKey	src/libtfhe-superaic-core/lwe-bootstrapping-functions.cpp	/^EXPORT void free_LweBootstrappingKey(LweBootstrappingKey *ptr) {$/;"	f	typeref:typename:EXPORT void
free_LweBootstrappingKeyFFT	src/libtfhe-superaic-core/lwe-bootstrapping-functions-fft.cpp	/^EXPORT void free_LweBootstrappingKeyFFT(LweBootstrappingKeyFFT *ptr) {$/;"	f	typeref:typename:EXPORT void
free_LweBootstrappingKeyFFT_array	src/libtfhe-superaic-core/lwe-bootstrapping-functions-fft.cpp	/^EXPORT void free_LweBootstrappingKeyFFT_array(int32_t nbelts, LweBootstrappingKeyFFT *ptr) {$/;"	f	typeref:typename:EXPORT void
free_LweBootstrappingKey_array	src/libtfhe-superaic-core/lwe-bootstrapping-functions.cpp	/^EXPORT void free_LweBootstrappingKey_array(int32_t nbelts, LweBootstrappingKey *ptr) {$/;"	f	typeref:typename:EXPORT void
free_LweKeySwitchKey	src/libtfhe-superaic-core/lwe-keyswitch-functions.cpp	/^EXPORT void free_LweKeySwitchKey(LweKeySwitchKey* ptr) {$/;"	f	typeref:typename:EXPORT void
free_LweKeySwitchKey_array	src/libtfhe-superaic-core/lwe-keyswitch-functions.cpp	/^EXPORT void free_LweKeySwitchKey_array(int32_t nbelts, LweKeySwitchKey* ptr) {$/;"	f	typeref:typename:EXPORT void
free_LweParams	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void free_LweParams(LweParams* ptr) {$/;"	f	typeref:typename:EXPORT void
free_LweParams_array	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void free_LweParams_array(int32_t nbelts, LweParams* ptr) {$/;"	f	typeref:typename:EXPORT void
free_TGswKey	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void free_TGswKey(TGswKey* ptr) {$/;"	f	typeref:typename:EXPORT void
free_TGswKey_array	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void free_TGswKey_array(int32_t nbelts, TGswKey* ptr) {$/;"	f	typeref:typename:EXPORT void
free_TGswParams	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void free_TGswParams(TGswParams* ptr) {$/;"	f	typeref:typename:EXPORT void
free_TGswParams_array	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void free_TGswParams_array(int32_t nbelts, TGswParams* ptr) {$/;"	f	typeref:typename:EXPORT void
free_TLweParams	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void free_TLweParams(TLweParams* ptr) {$/;"	f	typeref:typename:EXPORT void
free_TLweParams_array	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void free_TLweParams_array(int32_t nbelts, TLweParams* ptr) {$/;"	f	typeref:typename:EXPORT void
free_TorusPolynomial	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void free_TorusPolynomial(TorusPolynomial* ptr) {$/;"	f	typeref:typename:EXPORT void
free_TorusPolynomial_array	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void free_TorusPolynomial_array(int32_t nbelts, TorusPolynomial* ptr) {$/;"	f	typeref:typename:EXPORT void
fromIpPort	src/muduo/muduo/net/SocketsOps.cc	/^void sockets::fromIpPort(const char* ip, uint16_t port,$/;"	f	class:sockets	typeref:typename:void
fromLocalTime	src/muduo/muduo/base/TimeZone.cc	/^int64_t TimeZone::fromLocalTime(const struct DateTime& localtime, bool postTransition) const$/;"	f	class:TimeZone	typeref:typename:int64_t
fromUnixTime	src/muduo/muduo/base/Timestamp.h	/^  static Timestamp fromUnixTime(time_t t)$/;"	f	class:muduo::Timestamp	typeref:typename:Timestamp
fromUnixTime	src/muduo/muduo/base/Timestamp.h	/^  static Timestamp fromUnixTime(time_t t, int microseconds)$/;"	f	class:muduo::Timestamp	typeref:typename:Timestamp
fromUtcTime	src/muduo/muduo/base/TimeZone.cc	/^int64_t TimeZone::fromUtcTime(const DateTime& dt)$/;"	f	class:TimeZone	typeref:typename:int64_t
ftest	Makefile	/^ftest: buildftests$/;"	t
full	src/muduo/muduo/base/BoundedBlockingQueue.h	/^  bool full() const$/;"	f	class:muduo::BoundedBlockingQueue	typeref:typename:bool
full_match_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const bool full_match_;$/;"	m	class:testing::internal::MatchesRegexMatcher	typeref:typename:const bool
full_pattern_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  const char* full_pattern_;  \/\/ For FullMatch();$/;"	m	class:testing::internal::RE	typeref:typename:const char *
full_regex_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  regex_t full_regex_;     \/\/ For FullMatch().$/;"	m	class:testing::internal::RE	typeref:typename:regex_t
fullyRandomTGsw	src/tests/tgsw_direct_test.cpp	/^        inline void fullyRandomTGsw(TGswSample *result, double alpha, const TGswParams *params) /;"	f	class:__anon2d2168ad0111::TGswDirectTest	typeref:typename:void	file:
fullyRandomTGsw	src/tests/tgsw_test.cpp	/^        inline void fullyRandomTGsw(TGswSample *result, double alpha, const TGswParams *params) /;"	f	class:__anonfeb37f530111::TGswTest	typeref:typename:void	file:
func_	src/muduo/muduo/base/Thread.cc	/^  ThreadFunc func_;$/;"	m	struct:muduo::detail::ThreadData	typeref:typename:ThreadFunc	file:
func_	src/muduo/muduo/base/Thread.h	/^  ThreadFunc func_;$/;"	m	class:muduo::Thread	typeref:typename:ThreadFunc
func_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^    UserThreadFunc* const func_;$/;"	m	class:testing::internal::ThreadWithParam::RunnableImpl	typeref:typename:UserThreadFunc * const
func_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  UserThreadFunc* const func_;  \/\/ User-supplied thread function.$/;"	m	class:testing::internal::ThreadWithParam	typeref:typename:UserThreadFunc * const
function_	src/muduo/muduo/base/WeakCallback.h	/^  std::function<void (CLASS*, ARGS...)> function_;$/;"	m	class:muduo::WeakCallback	typeref:typename:std::function<void (CLASS *,ARGS...)>
function_impl_	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  FunctionImpl function_impl_;$/;"	m	class:testing::internal::InvokeWithoutArgsAction	typeref:typename:FunctionImpl
function_impl_	src/tests/googletest/googlemock/include/gmock/gmock-more-actions.h	/^  FunctionImpl function_impl_;$/;"	m	class:testing::internal::InvokeAction	typeref:typename:FunctionImpl
function_mocker_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  internal::FunctionMockerBase<F>* const function_mocker_;$/;"	m	class:testing::internal::MockSpec	typeref:typename:internal::FunctionMockerBase<F> * const
function_mockers	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^  FunctionMockers function_mockers;  \/\/ All registered methods of the object.$/;"	m	struct:testing::__anonc1446e5b0111::MockObjectState	typeref:typename:FunctionMockers	file:
further_from_infinity	src/tests/googletest/googletest/test/gtest_unittest.cc	/^    RawType further_from_infinity;$/;"	m	struct:__anonf780395f0111::FloatingPointTest::TestValues	typeref:typename:RawType	file:
further_from_infinity_	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  const RawType further_from_infinity_;$/;"	m	class:testing::gmock_matchers_test::FloatingPointTest	typeref:typename:const RawType	file:
further_from_negative_zero	src/tests/googletest/googletest/test/gtest_unittest.cc	/^    RawType further_from_negative_zero;$/;"	m	struct:__anonf780395f0111::FloatingPointTest::TestValues	typeref:typename:RawType	file:
further_from_negative_zero_	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  const RawType further_from_negative_zero_;$/;"	m	class:testing::gmock_matchers_test::FloatingPointTest	typeref:typename:const RawType	file:
further_from_one	src/tests/googletest/googletest/test/gtest_unittest.cc	/^    RawType further_from_one;$/;"	m	struct:__anonf780395f0111::FloatingPointTest::TestValues	typeref:typename:RawType	file:
further_from_one_	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  const RawType further_from_one_;$/;"	m	class:testing::gmock_matchers_test::FloatingPointTest	typeref:typename:const RawType	file:
fused-gmock-internal	src/tests/googletest/googlemock/Makefile.am	/^fused-gmock-internal: $(pkginclude_HEADERS) $(pkginclude_internal_HEADERS) \\$/;"	t
fused-gtest	src/tests/googletest/googletest/Makefile.am	/^fused-gtest: $(pkginclude_HEADERS) $(pkginclude_internal_HEADERS) \\$/;"	t
fwrite	src/libtfhe-superaic-core/tfhe_generic_streams.cpp	/^void COstream::fwrite(const void *data, size_t bytes) const { std::fwrite(data, 1, bytes, F); }$/;"	f	class:COstream	typeref:typename:void
fwrite	src/libtfhe-superaic-core/tfhe_generic_streams.cpp	/^void StdOstream::fwrite(const void *data, size_t bytes) const { out.write((char *) data, bytes);/;"	f	class:StdOstream	typeref:typename:void
g10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator10 g10_;$/;"	m	class:testing::internal::CartesianProductHolder10	typeref:typename:const Generator10
g10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T10> g10_;$/;"	m	class:testing::internal::CartesianProductGenerator10	typeref:typename:const ParamGenerator<T10>
g1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder10	typeref:typename:const Generator1
g1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder2	typeref:typename:const Generator1
g1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder3	typeref:typename:const Generator1
g1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder4	typeref:typename:const Generator1
g1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder5	typeref:typename:const Generator1
g1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder6	typeref:typename:const Generator1
g1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder7	typeref:typename:const Generator1
g1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder8	typeref:typename:const Generator1
g1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder9	typeref:typename:const Generator1
g1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator10	typeref:typename:const ParamGenerator<T1>
g1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator2	typeref:typename:const ParamGenerator<T1>
g1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator3	typeref:typename:const ParamGenerator<T1>
g1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator4	typeref:typename:const ParamGenerator<T1>
g1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator5	typeref:typename:const ParamGenerator<T1>
g1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator6	typeref:typename:const ParamGenerator<T1>
g1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator7	typeref:typename:const ParamGenerator<T1>
g1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator8	typeref:typename:const ParamGenerator<T1>
g1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator9	typeref:typename:const ParamGenerator<T1>
g2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder10	typeref:typename:const Generator2
g2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder2	typeref:typename:const Generator2
g2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder3	typeref:typename:const Generator2
g2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder4	typeref:typename:const Generator2
g2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder5	typeref:typename:const Generator2
g2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder6	typeref:typename:const Generator2
g2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder7	typeref:typename:const Generator2
g2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder8	typeref:typename:const Generator2
g2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder9	typeref:typename:const Generator2
g2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator10	typeref:typename:const ParamGenerator<T2>
g2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator2	typeref:typename:const ParamGenerator<T2>
g2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator3	typeref:typename:const ParamGenerator<T2>
g2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator4	typeref:typename:const ParamGenerator<T2>
g2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator5	typeref:typename:const ParamGenerator<T2>
g2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator6	typeref:typename:const ParamGenerator<T2>
g2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator7	typeref:typename:const ParamGenerator<T2>
g2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator8	typeref:typename:const ParamGenerator<T2>
g2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator9	typeref:typename:const ParamGenerator<T2>
g3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator3 g3_;$/;"	m	class:testing::internal::CartesianProductHolder10	typeref:typename:const Generator3
g3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator3 g3_;$/;"	m	class:testing::internal::CartesianProductHolder3	typeref:typename:const Generator3
g3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator3 g3_;$/;"	m	class:testing::internal::CartesianProductHolder4	typeref:typename:const Generator3
g3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator3 g3_;$/;"	m	class:testing::internal::CartesianProductHolder5	typeref:typename:const Generator3
g3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator3 g3_;$/;"	m	class:testing::internal::CartesianProductHolder6	typeref:typename:const Generator3
g3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator3 g3_;$/;"	m	class:testing::internal::CartesianProductHolder7	typeref:typename:const Generator3
g3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator3 g3_;$/;"	m	class:testing::internal::CartesianProductHolder8	typeref:typename:const Generator3
g3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator3 g3_;$/;"	m	class:testing::internal::CartesianProductHolder9	typeref:typename:const Generator3
g3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T3> g3_;$/;"	m	class:testing::internal::CartesianProductGenerator10	typeref:typename:const ParamGenerator<T3>
g3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T3> g3_;$/;"	m	class:testing::internal::CartesianProductGenerator3	typeref:typename:const ParamGenerator<T3>
g3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T3> g3_;$/;"	m	class:testing::internal::CartesianProductGenerator4	typeref:typename:const ParamGenerator<T3>
g3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T3> g3_;$/;"	m	class:testing::internal::CartesianProductGenerator5	typeref:typename:const ParamGenerator<T3>
g3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T3> g3_;$/;"	m	class:testing::internal::CartesianProductGenerator6	typeref:typename:const ParamGenerator<T3>
g3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T3> g3_;$/;"	m	class:testing::internal::CartesianProductGenerator7	typeref:typename:const ParamGenerator<T3>
g3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T3> g3_;$/;"	m	class:testing::internal::CartesianProductGenerator8	typeref:typename:const ParamGenerator<T3>
g3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T3> g3_;$/;"	m	class:testing::internal::CartesianProductGenerator9	typeref:typename:const ParamGenerator<T3>
g4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator4 g4_;$/;"	m	class:testing::internal::CartesianProductHolder10	typeref:typename:const Generator4
g4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator4 g4_;$/;"	m	class:testing::internal::CartesianProductHolder4	typeref:typename:const Generator4
g4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator4 g4_;$/;"	m	class:testing::internal::CartesianProductHolder5	typeref:typename:const Generator4
g4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator4 g4_;$/;"	m	class:testing::internal::CartesianProductHolder6	typeref:typename:const Generator4
g4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator4 g4_;$/;"	m	class:testing::internal::CartesianProductHolder7	typeref:typename:const Generator4
g4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator4 g4_;$/;"	m	class:testing::internal::CartesianProductHolder8	typeref:typename:const Generator4
g4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator4 g4_;$/;"	m	class:testing::internal::CartesianProductHolder9	typeref:typename:const Generator4
g4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T4> g4_;$/;"	m	class:testing::internal::CartesianProductGenerator10	typeref:typename:const ParamGenerator<T4>
g4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T4> g4_;$/;"	m	class:testing::internal::CartesianProductGenerator4	typeref:typename:const ParamGenerator<T4>
g4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T4> g4_;$/;"	m	class:testing::internal::CartesianProductGenerator5	typeref:typename:const ParamGenerator<T4>
g4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T4> g4_;$/;"	m	class:testing::internal::CartesianProductGenerator6	typeref:typename:const ParamGenerator<T4>
g4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T4> g4_;$/;"	m	class:testing::internal::CartesianProductGenerator7	typeref:typename:const ParamGenerator<T4>
g4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T4> g4_;$/;"	m	class:testing::internal::CartesianProductGenerator8	typeref:typename:const ParamGenerator<T4>
g4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T4> g4_;$/;"	m	class:testing::internal::CartesianProductGenerator9	typeref:typename:const ParamGenerator<T4>
g5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator5 g5_;$/;"	m	class:testing::internal::CartesianProductHolder10	typeref:typename:const Generator5
g5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator5 g5_;$/;"	m	class:testing::internal::CartesianProductHolder5	typeref:typename:const Generator5
g5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator5 g5_;$/;"	m	class:testing::internal::CartesianProductHolder6	typeref:typename:const Generator5
g5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator5 g5_;$/;"	m	class:testing::internal::CartesianProductHolder7	typeref:typename:const Generator5
g5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator5 g5_;$/;"	m	class:testing::internal::CartesianProductHolder8	typeref:typename:const Generator5
g5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator5 g5_;$/;"	m	class:testing::internal::CartesianProductHolder9	typeref:typename:const Generator5
g5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T5> g5_;$/;"	m	class:testing::internal::CartesianProductGenerator10	typeref:typename:const ParamGenerator<T5>
g5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T5> g5_;$/;"	m	class:testing::internal::CartesianProductGenerator5	typeref:typename:const ParamGenerator<T5>
g5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T5> g5_;$/;"	m	class:testing::internal::CartesianProductGenerator6	typeref:typename:const ParamGenerator<T5>
g5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T5> g5_;$/;"	m	class:testing::internal::CartesianProductGenerator7	typeref:typename:const ParamGenerator<T5>
g5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T5> g5_;$/;"	m	class:testing::internal::CartesianProductGenerator8	typeref:typename:const ParamGenerator<T5>
g5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T5> g5_;$/;"	m	class:testing::internal::CartesianProductGenerator9	typeref:typename:const ParamGenerator<T5>
g6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator6 g6_;$/;"	m	class:testing::internal::CartesianProductHolder10	typeref:typename:const Generator6
g6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator6 g6_;$/;"	m	class:testing::internal::CartesianProductHolder6	typeref:typename:const Generator6
g6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator6 g6_;$/;"	m	class:testing::internal::CartesianProductHolder7	typeref:typename:const Generator6
g6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator6 g6_;$/;"	m	class:testing::internal::CartesianProductHolder8	typeref:typename:const Generator6
g6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator6 g6_;$/;"	m	class:testing::internal::CartesianProductHolder9	typeref:typename:const Generator6
g6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T6> g6_;$/;"	m	class:testing::internal::CartesianProductGenerator10	typeref:typename:const ParamGenerator<T6>
g6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T6> g6_;$/;"	m	class:testing::internal::CartesianProductGenerator6	typeref:typename:const ParamGenerator<T6>
g6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T6> g6_;$/;"	m	class:testing::internal::CartesianProductGenerator7	typeref:typename:const ParamGenerator<T6>
g6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T6> g6_;$/;"	m	class:testing::internal::CartesianProductGenerator8	typeref:typename:const ParamGenerator<T6>
g6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T6> g6_;$/;"	m	class:testing::internal::CartesianProductGenerator9	typeref:typename:const ParamGenerator<T6>
g7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator7 g7_;$/;"	m	class:testing::internal::CartesianProductHolder10	typeref:typename:const Generator7
g7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator7 g7_;$/;"	m	class:testing::internal::CartesianProductHolder7	typeref:typename:const Generator7
g7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator7 g7_;$/;"	m	class:testing::internal::CartesianProductHolder8	typeref:typename:const Generator7
g7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator7 g7_;$/;"	m	class:testing::internal::CartesianProductHolder9	typeref:typename:const Generator7
g7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T7> g7_;$/;"	m	class:testing::internal::CartesianProductGenerator10	typeref:typename:const ParamGenerator<T7>
g7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T7> g7_;$/;"	m	class:testing::internal::CartesianProductGenerator7	typeref:typename:const ParamGenerator<T7>
g7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T7> g7_;$/;"	m	class:testing::internal::CartesianProductGenerator8	typeref:typename:const ParamGenerator<T7>
g7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T7> g7_;$/;"	m	class:testing::internal::CartesianProductGenerator9	typeref:typename:const ParamGenerator<T7>
g8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator8 g8_;$/;"	m	class:testing::internal::CartesianProductHolder10	typeref:typename:const Generator8
g8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator8 g8_;$/;"	m	class:testing::internal::CartesianProductHolder8	typeref:typename:const Generator8
g8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator8 g8_;$/;"	m	class:testing::internal::CartesianProductHolder9	typeref:typename:const Generator8
g8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T8> g8_;$/;"	m	class:testing::internal::CartesianProductGenerator10	typeref:typename:const ParamGenerator<T8>
g8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T8> g8_;$/;"	m	class:testing::internal::CartesianProductGenerator8	typeref:typename:const ParamGenerator<T8>
g8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T8> g8_;$/;"	m	class:testing::internal::CartesianProductGenerator9	typeref:typename:const ParamGenerator<T8>
g9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator9 g9_;$/;"	m	class:testing::internal::CartesianProductHolder10	typeref:typename:const Generator9
g9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator9 g9_;$/;"	m	class:testing::internal::CartesianProductHolder9	typeref:typename:const Generator9
g9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T9> g9_;$/;"	m	class:testing::internal::CartesianProductGenerator10	typeref:typename:const ParamGenerator<T9>
g9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T9> g9_;$/;"	m	class:testing::internal::CartesianProductGenerator9	typeref:typename:const ParamGenerator<T9>
g_aliveConnections	src/muduo/examples/asio/chat/loadtest.cc	/^AtomicInt32 g_aliveConnections;$/;"	v	typeref:typename:AtomicInt32
g_asyncLog	src/muduo/muduo/base/tests/AsyncLogging_test.cc	/^muduo::AsyncLogging* g_asyncLog = NULL;$/;"	v	typeref:typename:muduo::AsyncLogging *
g_backends	src/muduo/examples/socks4a/balancer.cc	/^std::vector<InetAddress> g_backends;$/;"	v	typeref:typename:std::vector<InetAddress>
g_bar	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^const int g_bar = 1;$/;"	v	namespace:testing::gmock_matchers_test	typeref:typename:const int
g_batchSize	src/muduo/examples/wordcount/hasher.cc	/^size_t g_batchSize = 65536;$/;"	v	typeref:typename:size_t
g_busy	src/muduo/examples/procmon/dummyload.cc	/^bool g_busy = false;$/;"	v	typeref:typename:bool
g_captured_stdout	src/tests/googletest/googletest/src/gtest-port.cc	/^static CapturedStream* g_captured_stdout = NULL;$/;"	v	namespace:testing::internal	typeref:typename:CapturedStream *	file:
g_cas	src/muduo/examples/memcached/server/MemcacheServer.cc	/^muduo::AtomicInt64 g_cas;$/;"	v	typeref:typename:muduo::AtomicInt64
g_channels	src/muduo/examples/pingpong/bench.cc	/^std::vector<std::unique_ptr<Channel>> g_channels;$/;"	v	typeref:typename:std::vector<std::unique_ptr<Channel>>
g_client	src/muduo/muduo/net/tests/TcpClient_reg1.cc	/^TcpClient* g_client;$/;"	v	typeref:typename:TcpClient *
g_clockTicks	src/muduo/muduo/base/ProcessInfo.cc	/^int g_clockTicks = static_cast<int>(::sysconf(_SC_CLK_TCK));$/;"	v	namespace:muduo::detail	typeref:typename:int
g_connections	src/muduo/examples/asio/chat/loadtest.cc	/^int g_connections = 0;$/;"	v	typeref:typename:int
g_connections	src/muduo/examples/sudoku/batch.cc	/^int g_connections;$/;"	v	typeref:typename:int
g_content	src/muduo/examples/hub/pub.cc	/^string g_content;$/;"	v	typeref:typename:string
g_count	src/muduo/examples/protobuf/codec/codec_test.cc	/^int g_count = 0;$/;"	v	typeref:typename:int
g_count	src/muduo/muduo/base/tests/Mutex_test.cc	/^int g_count = 0;$/;"	v	typeref:typename:int
g_count	src/muduo/muduo/base/tests/Thread_bench.cc	/^muduo::AtomicInt32 g_count;$/;"	v	typeref:typename:muduo::AtomicInt32
g_current	src/muduo/examples/socks4a/balancer.cc	/^size_t g_current = 0;$/;"	v	typeref:typename:size_t
g_cycles	src/muduo/examples/procmon/dummyload.cc	/^int g_cycles = 0;$/;"	v	typeref:typename:int
g_death_test_count	src/tests/googletest/googletest/test/gtest_repeat_test.cc	/^int g_death_test_count = 0;$/;"	v	namespace:__anon83eb3b5f0111	typeref:typename:int
g_delays	src/muduo/muduo/base/tests/Thread_bench.cc	/^std::map<int, int> g_delays;$/;"	v	typeref:typename:std::map<int,int>
g_done	src/muduo/examples/procmon/dummyload.cc	/^AtomicInt32 g_done;$/;"	v	typeref:typename:AtomicInt32
g_done	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^bool g_done = false;$/;"	v	namespace:__anon550198f10111	typeref:typename:bool
g_done	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^bool g_done = false;$/;"	v	namespace:testing::gmock_generated_actions_test	typeref:typename:bool
g_done	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^bool g_done = false;$/;"	v	namespace:testing::gmock_more_actions_test	typeref:typename:bool
g_double	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^const double g_double = 0;$/;"	v	namespace:testing::gmock_generated_actions_test	typeref:typename:const double
g_double	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^const double g_double = 0;$/;"	v	namespace:testing::gmock_more_actions_test	typeref:typename:const double
g_environment_set_up_count	src/tests/googletest/googletest/test/gtest_repeat_test.cc	/^int g_environment_set_up_count = 0;$/;"	v	namespace:__anon83eb3b5f0111	typeref:typename:int
g_environment_tear_down_count	src/tests/googletest/googletest/test/gtest_repeat_test.cc	/^int g_environment_tear_down_count = 0;$/;"	v	namespace:__anon83eb3b5f0111	typeref:typename:int
g_eventLoop	src/muduo/examples/socks4a/socks4a.cc	/^EventLoop* g_eventLoop;$/;"	v	typeref:typename:EventLoop *
g_eventLoop	src/muduo/examples/socks4a/tcprelay.cc	/^EventLoop* g_eventLoop;$/;"	v	typeref:typename:EventLoop *
g_events	src/tests/googletest/googletest/test/gtest-listener_test.cc	/^std::vector<std::string>* g_events = NULL;$/;"	v	typeref:typename:std::vector<std::string> *
g_file	src/muduo/examples/filetransfer/download.cc	/^const char* g_file = NULL;$/;"	v	typeref:typename:const char *
g_file	src/muduo/examples/filetransfer/download2.cc	/^const char* g_file = NULL;$/;"	v	typeref:typename:const char *
g_file	src/muduo/examples/filetransfer/download3.cc	/^const char* g_file = NULL;$/;"	v	typeref:typename:const char *
g_file	src/muduo/muduo/base/tests/Logging_test.cc	/^FILE* g_file;$/;"	v	typeref:typename:FILE *
g_finished	src/muduo/examples/sudoku/batch.cc	/^int g_finished;$/;"	v	typeref:typename:int
g_fired	src/muduo/examples/pingpong/bench.cc	/^int g_reads, g_writes, g_fired;$/;"	v	typeref:typename:int
g_flush	src/muduo/muduo/base/Logging.cc	/^Logger::FlushFunc g_flush = defaultFlush;$/;"	v	namespace:muduo	typeref:typename:Logger::FlushFunc
g_globalInspector	src/muduo/muduo/net/inspect/Inspector.cc	/^Inspector* g_globalInspector = 0;$/;"	v	namespace:__anon8c5f3b940111	typeref:typename:Inspector *
g_gmock_implicit_sequence	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^GTEST_API_ ThreadLocal<Sequence*> g_gmock_implicit_sequence;$/;"	v	namespace:testing::internal	typeref:typename:GTEST_API_ ThreadLocal<Sequence * >
g_help_flag	src/tests/googletest/googletest/src/gtest.cc	/^bool g_help_flag = false;$/;"	v	namespace:testing::internal	typeref:typename:bool
g_in_fast_death_test_child	src/tests/googletest/googletest/src/gtest-death-test.cc	/^static bool g_in_fast_death_test_child = false;$/;"	v	namespace:testing::internal	typeref:typename:bool	file:
g_injected_test_argvs	src/tests/googletest/googletest/src/gtest-port.cc	/^static const ::std::vector<testing::internal::string>* g_injected_test_argvs =$/;"	v	namespace:testing::internal	typeref:typename:const::std::vector<testing::internal::string> *	file:
g_logFile	src/muduo/muduo/base/tests/LogFile_test.cc	/^std::unique_ptr<muduo::LogFile> g_logFile;$/;"	v	typeref:typename:std::unique_ptr<muduo::LogFile>
g_logFile	src/muduo/muduo/base/tests/Logging_test.cc	/^std::unique_ptr<muduo::LogFile> g_logFile;$/;"	v	typeref:typename:std::unique_ptr<muduo::LogFile>
g_logLevel	src/muduo/muduo/base/Logging.cc	/^Logger::LogLevel g_logLevel = initLogLevel();$/;"	v	namespace:muduo	typeref:typename:Logger::LogLevel
g_logTimeZone	src/muduo/muduo/base/Logging.cc	/^TimeZone g_logTimeZone;$/;"	v	namespace:muduo	typeref:typename:TimeZone
g_loop	src/muduo/examples/ace/ttcp/ttcp.cc	/^EventLoop* g_loop;$/;"	v	typeref:typename:EventLoop *
g_loop	src/muduo/examples/asio/chat/loadtest.cc	/^EventLoop* g_loop;$/;"	v	typeref:typename:EventLoop *
g_loop	src/muduo/examples/cdns/dns.cc	/^EventLoop* g_loop;$/;"	v	typeref:typename:EventLoop *
g_loop	src/muduo/examples/curl/mcurl.cc	/^EventLoop* g_loop = NULL;$/;"	v	typeref:typename:EventLoop *
g_loop	src/muduo/examples/hub/pub.cc	/^EventLoop* g_loop = NULL;$/;"	v	typeref:typename:EventLoop *
g_loop	src/muduo/examples/hub/sub.cc	/^EventLoop* g_loop = NULL;$/;"	v	typeref:typename:EventLoop *
g_loop	src/muduo/examples/pingpong/bench.cc	/^EventLoop* g_loop;$/;"	v	typeref:typename:EventLoop *
g_loop	src/muduo/examples/sudoku/batch.cc	/^EventLoop* g_loop;$/;"	v	typeref:typename:EventLoop *
g_loop	src/muduo/muduo/net/tests/EventLoop_unittest.cc	/^EventLoop* g_loop;$/;"	v	typeref:typename:EventLoop *
g_loop	src/muduo/muduo/net/tests/TimerQueue_unittest.cc	/^EventLoop* g_loop;$/;"	v	typeref:typename:EventLoop *
g_message	src/muduo/examples/zeromq/remote_lat.cc	/^muduo::string g_message;$/;"	v	typeref:typename:muduo::string
g_messagesReceived	src/muduo/examples/asio/chat/loadtest.cc	/^AtomicInt32 g_messagesReceived;$/;"	v	typeref:typename:AtomicInt32
g_mock_object_registry	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^MockObjectRegistry g_mock_object_registry;$/;"	v	namespace:testing::__anonc1446e5b0111	typeref:typename:MockObjectRegistry
g_msgCount	src/muduo/examples/zeromq/remote_lat.cc	/^int g_msgCount = 0;$/;"	v	typeref:typename:int
g_msgSize	src/muduo/examples/zeromq/remote_lat.cc	/^int g_msgSize = 0;$/;"	v	typeref:typename:int
g_msgptr	src/muduo/muduo/net/protorpc/RpcCodec_test.cc	/^MessagePtr g_msgptr;$/;"	v	typeref:typename:MessagePtr
g_mutex	src/muduo/examples/procmon/dummyload.cc	/^MutexLock g_mutex;$/;"	v	typeref:typename:MutexLock
g_mutex	src/muduo/examples/socks4a/balancer.cc	/^MutexLock g_mutex;$/;"	v	typeref:typename:MutexLock
g_mutex	src/muduo/muduo/base/tests/Mutex_test.cc	/^MutexLock g_mutex;$/;"	v	typeref:typename:MutexLock
g_mutex	src/muduo/muduo/base/tests/Thread_bench.cc	/^muduo::MutexLock g_mutex;$/;"	v	typeref:typename:muduo::MutexLock
g_output	src/muduo/muduo/base/Logging.cc	/^Logger::OutputFunc g_output = defaultOutput;$/;"	v	namespace:muduo	typeref:typename:Logger::OutputFunc
g_pageSize	src/muduo/muduo/base/ProcessInfo.cc	/^int g_pageSize = static_cast<int>(::sysconf(_SC_PAGE_SIZE));$/;"	v	namespace:muduo::detail	typeref:typename:int
g_param_test_count	src/tests/googletest/googletest/test/gtest_repeat_test.cc	/^int g_param_test_count = 0;$/;"	v	namespace:__anon83eb3b5f0111	typeref:typename:int
g_percent	src/muduo/examples/procmon/dummyload.cc	/^int g_percent = 82;$/;"	v	typeref:typename:int
g_pipes	src/muduo/examples/pingpong/bench.cc	/^std::vector<int> g_pipes;$/;"	v	typeref:typename:std::vector<int>
g_reads	src/muduo/examples/pingpong/bench.cc	/^int g_reads, g_writes, g_fired;$/;"	v	typeref:typename:int
g_receiveTime	src/muduo/examples/asio/chat/loadtest.cc	/^std::vector<Timestamp> g_receiveTime;$/;"	v	typeref:typename:std::vector<Timestamp>
g_serverAddr	src/muduo/examples/socks4a/tcprelay.cc	/^InetAddress* g_serverAddr;$/;"	v	typeref:typename:InetAddress *
g_session_map	src/libtfhe-superaic-core/tfhe_session.cpp	/^static map<Session_ID_t,shared_ptr<Session>> g_session_map;$/;"	v	namespace:tfhe_superaic	typeref:typename:map<Session_ID_t,shared_ptr<Session>>	file:
g_should_fail_count	src/tests/googletest/googletest/test/gtest_repeat_test.cc	/^int g_should_fail_count = 0;$/;"	v	namespace:__anon83eb3b5f0111	typeref:typename:int
g_should_pass_count	src/tests/googletest/googletest/test/gtest_repeat_test.cc	/^int g_should_pass_count = 0;$/;"	v	namespace:__anon83eb3b5f0111	typeref:typename:int
g_start	src/muduo/examples/sudoku/batch.cc	/^Timestamp g_start;$/;"	v	typeref:typename:Timestamp
g_start	src/muduo/examples/zeromq/remote_lat.cc	/^muduo::Timestamp g_start;$/;"	v	typeref:typename:muduo::Timestamp
g_startTime	src/muduo/examples/asio/chat/loadtest.cc	/^Timestamp g_startTime;$/;"	v	typeref:typename:Timestamp
g_startTime	src/muduo/muduo/base/ProcessInfo.cc	/^Timestamp g_startTime = Timestamp::now();$/;"	v	namespace:muduo::detail	typeref:typename:Timestamp
g_statistic	src/muduo/examples/asio/chat/loadtest.cc	/^std::function<void()> g_statistic;$/;"	v	typeref:typename:std::function<void ()>
g_sum	src/tests/googletest/googletest/test/gtest_unittest.cc	/^static int g_sum = 0;$/;"	v	namespace:__anonf780395f0111	typeref:typename:int	file:
g_tcpNoDelay	src/muduo/examples/zeromq/local_lat.cc	/^bool g_tcpNoDelay = false;$/;"	v	typeref:typename:bool
g_tcpNoDelay	src/muduo/examples/zeromq/remote_lat.cc	/^bool g_tcpNoDelay = false;$/;"	v	typeref:typename:bool
g_topic	src/muduo/examples/hub/pub.cc	/^string g_topic;$/;"	v	typeref:typename:string
g_topics	src/muduo/examples/hub/sub.cc	/^std::vector<string> g_topics;$/;"	v	typeref:typename:std::vector<string>
g_total	src/muduo/muduo/base/tests/Logging_test.cc	/^int g_total;$/;"	v	typeref:typename:int
g_totalMsgs	src/muduo/examples/zeromq/remote_lat.cc	/^int g_totalMsgs = 0;$/;"	v	typeref:typename:int
g_tunnels	src/muduo/examples/socks4a/socks4a.cc	/^std::map<string, TunnelPtr> g_tunnels;$/;"	v	typeref:typename:std::map<string,TunnelPtr>
g_tunnels	src/muduo/examples/socks4a/tcprelay.cc	/^std::map<string, TunnelPtr> g_tunnels;$/;"	v	typeref:typename:std::map<string,TunnelPtr>
g_uninteresting_call_reaction	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^std::map<const void*, internal::CallReaction> g_uninteresting_call_reaction;$/;"	v	namespace:testing::__anonc1446e5b0111	typeref:typename:std::map<const void *,internal::CallReaction>
g_vec	src/muduo/muduo/base/tests/Mutex_test.cc	/^vector<int> g_vec;$/;"	v	typeref:typename:vector<int>
g_verbose	src/muduo/muduo/base/tests/BlockingQueue_bench.cc	/^bool g_verbose = false;$/;"	v	typeref:typename:bool
g_verbose	src/muduo/muduo/base/tests/Thread_bench.cc	/^bool g_verbose = false;$/;"	v	typeref:typename:bool
g_writes	src/muduo/examples/pingpong/bench.cc	/^int g_reads, g_writes, g_fired;$/;"	v	typeref:typename:int
gaussian32	src/libtfhe-superaic-core/numeric-functions.cpp	/^EXPORT Torus32 gaussian32(Torus32 message, double sigma){$/;"	f	typeref:typename:EXPORT Torus32
gb_params	src/libtfhe-superaic-core/include/tfhe_garbage_collector.h	/^    std::vector<TFheGateBootstrappingParameterSet *> gb_params;$/;"	m	class:TfheGarbageCollector	typeref:typename:std::vector<TFheGateBootstrappingParameterSet * >
gbp1	src/tests/ACC_test.cpp	/^    const TFheGateBootstrappingParameterSet* gbp1 = new TFheGateBootstrappingParameterSet(6,2,lw/;"	v	namespace:__anonef2481d50111	typeref:typename:const TFheGateBootstrappingParameterSet *
gbp1	src/tests/FPGA_ACC_test.cpp	/^    const TFheGateBootstrappingParameterSet* gbp1 = new TFheGateBootstrappingParameterSet(6,2,lw/;"	v	namespace:__anon88d438720111	typeref:typename:const TFheGateBootstrappingParameterSet *
gbp1	src/tests/QEMU_test.cpp	/^    const TFheGateBootstrappingParameterSet* gbp1 = new TFheGateBootstrappingParameterSet(6,2,lw/;"	v	namespace:__anon4f389dc60111	typeref:typename:const TFheGateBootstrappingParameterSet *
gbp1	src/tests/io_test.cpp	/^    const TFheGateBootstrappingParameterSet* gbp1 = new TFheGateBootstrappingParameterSet(6,2,lw/;"	v	namespace:__anon2d72c1c60111	typeref:typename:const TFheGateBootstrappingParameterSet *
gbp1	src/tests/session_test.cpp	/^    const TFheGateBootstrappingParameterSet* gbp1 = new TFheGateBootstrappingParameterSet(6,2,lw/;"	v	namespace:__anon23f859320111	typeref:typename:const TFheGateBootstrappingParameterSet *
gbsk1	src/tests/io_test.cpp	/^    const TFheGateBootstrappingSecretKeySet* gbsk1 = new TFheGateBootstrappingSecretKeySet(gbp1,/;"	v	namespace:__anon2d72c1c60111	typeref:typename:const TFheGateBootstrappingSecretKeySet *
gdImagePtr	src/muduo/examples/procmon/plot.h	/^typedef struct gdImageStruct* gdImagePtr;$/;"	t	typeref:struct:gdImageStruct *
generate key with default key	docs/rustops/key_and_config.md	/^# generate key with default key$/;"	c
generator	src/libtfhe-superaic-core/numeric-functions.cpp	/^default_random_engine generator;$/;"	v	typeref:typename:default_random_engine
generator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^      GeneratorCreationFunc* generator;$/;"	m	struct:testing::internal::ParameterizedTestCaseInfo::InstantiationInfo	typeref:typename:GeneratorCreationFunc *
get	src/muduo/muduo/base/Atomic.h	/^  T get()$/;"	f	class:muduo::detail::AtomicIntegerT	typeref:typename:T
get	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  T* get() { return val_; }$/;"	f	class:testing::gmock_matchers_test::ConstPropagatingPtr	typeref:typename:T *	file:
get	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  const T* get() const { return val_; }$/;"	f	class:testing::gmock_matchers_test::ConstPropagatingPtr	typeref:typename:const T *	file:
get	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^      const typename ::std::tr1::tuple_element<I, Tuple>::type>::type get($/;"	f	struct:testing::internal::TuplePolicy	typeref:typename:AddReference<const typename::std::tr1::tuple_element<I,Tuple>::type>::type
get	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^  static const typename ::std::tuple_element<I, Tuple>::type& get($/;"	f	struct:testing::internal::TuplePolicy	typeref:typename:const typename::std::tuple_element<I,Tuple>::type &
get	src/tests/googletest/googletest/include/gtest/internal/gtest-linked_ptr.h	/^  T* get() const { return value_; }$/;"	f	class:testing::internal::linked_ptr	typeref:typename:T *
get	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  T* get() const { return ptr_; }$/;"	f	class:testing::internal::scoped_ptr	typeref:typename:T *
get	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  const T& get() const { return *pointer(); }$/;"	f	class:testing::internal::ThreadLocal	typeref:typename:const T &
get	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  const T& get() const { return value_; }$/;"	f	class:testing::internal::ThreadLocal	typeref:typename:const T &
getAllLoops	src/muduo/muduo/net/EventLoopThreadPool.cc	/^std::vector<EventLoop*> EventLoopThreadPool::getAllLoops()$/;"	f	class:EventLoopThreadPool	typeref:typename:std::vector<EventLoop * >
getAndAdd	src/muduo/muduo/base/Atomic.h	/^  T getAndAdd(T x)$/;"	f	class:muduo::detail::AtomicIntegerT	typeref:typename:T
getAndSet	src/muduo/muduo/base/Atomic.h	/^  T getAndSet(T newValue)$/;"	f	class:muduo::detail::AtomicIntegerT	typeref:typename:T
getBackend	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MultiplexerTest.java	/^    public MockBackendServer getBackend() {$/;"	m	class:MultiplexerTest
getBootTime	src/muduo/examples/procmon/procmon.cc	/^  static long getBootTime()$/;"	f	class:Procmon	typeref:typename:long	file:
getBootstrap	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockBackendServer.java	/^    private ServerBootstrap getBootstrap() {$/;"	m	class:MockBackendServer	file:
getChannel	src/muduo/examples/curl/Curl.h	/^  muduo::net::Channel* getChannel() { return muduo::get_pointer(channel_); }$/;"	f	class:curl::Request	typeref:typename:muduo::net::Channel *
getCmdLine	src/muduo/examples/procmon/procmon.cc	/^  string getCmdLine()$/;"	f	class:Procmon	typeref:typename:string	file:
getConnectionList	src/muduo/examples/asio/chat/server_threaded_efficient.cc	/^  ConnectionListPtr getConnectionList()$/;"	f	class:ChatServer	typeref:typename:ConnectionListPtr	file:
getContext	src/muduo/muduo/net/EventLoop.h	/^  const boost::any& getContext() const$/;"	f	class:muduo::net::EventLoop	typeref:typename:const boost::any &
getContext	src/muduo/muduo/net/TcpConnection.h	/^  const boost::any& getContext() const$/;"	f	class:muduo::net::TcpConnection	typeref:typename:const boost::any &
getCount	src/muduo/muduo/base/CountDownLatch.cc	/^int CountDownLatch::getCount() const$/;"	f	class:CountDownLatch	typeref:typename:int
getCpuTime	src/muduo/muduo/net/inspect/ProcessInspector.cc	/^ProcessInfo::CpuTime getCpuTime(StringPiece data)$/;"	f	namespace:muduo::inspect	typeref:typename:ProcessInfo::CpuTime
getCurl	src/muduo/examples/curl/Curl.h	/^  CURL* getCurl() { return curl_; }$/;"	f	class:curl::Request	typeref:typename:CURL *
getCurlm	src/muduo/examples/curl/Curl.h	/^  CURLM* getCurlm() { return curlm_; }$/;"	f	class:curl::Curl	typeref:typename:CURLM *
getDirType	src/muduo/examples/procmon/procmon.cc	/^  static char getDirType(char d_type)$/;"	f	class:Procmon	typeref:typename:char	file:
getEffectiveUrl	src/muduo/examples/curl/Curl.cc	/^const char* Request::getEffectiveUrl()$/;"	f	class:Request	typeref:typename:const char *
getEnviron	src/muduo/examples/procmon/procmon.cc	/^  string getEnviron()$/;"	f	class:Procmon	typeref:typename:string	file:
getEventLoopOfCurrentThread	src/muduo/muduo/net/EventLoop.cc	/^EventLoop* EventLoop::getEventLoopOfCurrentThread()$/;"	f	class:EventLoop	typeref:typename:EventLoop *
getEventQueue	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MultiplexerTest.java	/^    public EventQueue getEventQueue() {$/;"	m	class:MultiplexerTest
getExpired	src/muduo/muduo/net/TimerQueue.cc	/^std::vector<TimerQueue::Entry> TimerQueue::getExpired(Timestamp now)$/;"	f	class:TimerQueue	typeref:typename:std::vector<TimerQueue::Entry>
getFileName	src/muduo/examples/ace/logging/server.cc	/^  string getFileName(const TcpConnectionPtr& conn)$/;"	f	class:logging::Session	typeref:typename:string	file:
getGmt	src/muduo/muduo/base/tests/TimeZone_unittest.cc	/^time_t getGmt(const char* str)$/;"	f	typeref:typename:time_t
getGmt	src/muduo/muduo/base/tests/TimeZone_unittest.cc	/^time_t getGmt(int year, int month, int day,$/;"	f	typeref:typename:time_t
getHeader	src/muduo/muduo/net/http/HttpRequest.h	/^  string getHeader(const string& field) const$/;"	f	class:muduo::net::HttpRequest	typeref:typename:string
getHiredis	src/muduo/contrib/hiredis/Hiredis.cc	/^\/* static *\/ Hiredis* Hiredis::getHiredis(const redisAsyncContext* ac)$/;"	f	class:Hiredis	typeref:typename:Hiredis *
getIntPolynomialPtr	src/tests/fakes/lagrangehalfc.h	/^        IntPolynomial *getIntPolynomialPtr() {$/;"	f	struct:__anonb49ff32c0111::FakeLagrangeHalfCPolynomial	typeref:typename:IntPolynomial *
getIntPolynomialPtr	src/tests/fakes/lagrangehalfc.h	/^        const IntPolynomial *getIntPolynomialPtr() const {$/;"	f	struct:__anonb49ff32c0111::FakeLagrangeHalfCPolynomial	typeref:typename:const IntPolynomial *
getItem	src/muduo/examples/memcached/server/MemcacheServer.cc	/^ConstItemPtr MemcacheServer::getItem(const ConstItemPtr& key) const$/;"	f	class:MemcacheServer	typeref:typename:ConstItemPtr
getJulianDayNumber	src/muduo/muduo/base/Date.cc	/^int getJulianDayNumber(int year, int month, int day)$/;"	f	namespace:muduo::detail	typeref:typename:int
getLine	src/libtfhe-superaic-core/tfhe_generic_streams.cpp	/^void CIstream::getLine(string &reps) const {$/;"	f	class:CIstream	typeref:typename:void
getLine	src/libtfhe-superaic-core/tfhe_generic_streams.cpp	/^void StdIstream::getLine(string &reps) const { std::getline(in, reps); }$/;"	f	class:StdIstream	typeref:typename:void
getLocalAddr	src/muduo/muduo/net/SocketsOps.cc	/^struct sockaddr_in6 sockets::getLocalAddr(int sockfd)$/;"	f	class:sockets	typeref:struct:sockaddr_in6
getLogFileName	src/muduo/muduo/base/LogFile.cc	/^string LogFile::getLogFileName(const string& basename, time_t* now)$/;"	f	class:LogFile	typeref:typename:string
getLong	src/muduo/examples/netty/echo/server2.cc	/^  long getLong(const string& procStatus, const char* key)$/;"	f	class:EchoServer	typeref:typename:long	file:
getLong	src/muduo/examples/procmon/procmon.cc	/^  static long getLong(const string& status, const char* key)$/;"	f	class:Procmon	typeref:typename:long	file:
getLong	src/muduo/muduo/net/inspect/ProcessInspector.cc	/^long getLong(const string& procStatus, const char* key)$/;"	f	namespace:muduo::inspect	typeref:typename:long
getLoop	src/muduo/examples/curl/Curl.h	/^  muduo::net::EventLoop* getLoop() { return loop_; }$/;"	f	class:curl::Curl	typeref:typename:muduo::net::EventLoop *
getLoop	src/muduo/muduo/net/TcpClient.h	/^  EventLoop* getLoop() const { return loop_; }$/;"	f	class:muduo::net::TcpClient	typeref:typename:EventLoop *
getLoop	src/muduo/muduo/net/TcpConnection.h	/^  EventLoop* getLoop() const { return loop_; }$/;"	f	class:muduo::net::TcpConnection	typeref:typename:EventLoop *
getLoop	src/muduo/muduo/net/TcpServer.h	/^  EventLoop* getLoop() const { return loop_; }$/;"	f	class:muduo::net::TcpServer	typeref:typename:EventLoop *
getLoop	src/muduo/muduo/net/http/HttpServer.h	/^  EventLoop* getLoop() const { return server_.getLoop(); }$/;"	f	class:muduo::net::HttpServer	typeref:typename:EventLoop *
getLoopForHash	src/muduo/muduo/net/EventLoopThreadPool.cc	/^EventLoop* EventLoopThreadPool::getLoopForHash(size_t hashCode)$/;"	f	class:EventLoopThreadPool	typeref:typename:EventLoop *
getMap	src/libtfhe-superaic-core/tfhe_generic_streams.cpp	/^    const map<string, string> &getMap() const {$/;"	f	class:MapTextModeProperties	typeref:typename:const map<string,string> &	file:
getMutableContext	src/muduo/muduo/net/EventLoop.h	/^  boost::any* getMutableContext()$/;"	f	class:muduo::net::EventLoop	typeref:typename:boost::any *
getMutableContext	src/muduo/muduo/net/TcpConnection.h	/^  boost::any* getMutableContext()$/;"	f	class:muduo::net::TcpConnection	typeref:typename:boost::any *
getName	src/muduo/examples/procmon/procmon.cc	/^  string getName() const$/;"	f	class:Procmon	typeref:typename:string	file:
getNextLoop	src/muduo/muduo/net/EventLoopThreadPool.cc	/^EventLoop* EventLoopThreadPool::getNextLoop()$/;"	f	class:EventLoopThreadPool	typeref:typename:EventLoop *
getPeerAddr	src/muduo/muduo/net/SocketsOps.cc	/^struct sockaddr_in6 sockets::getPeerAddr(int sockfd)$/;"	f	class:sockets	typeref:struct:sockaddr_in6
getPercentile	src/muduo/examples/sudoku/percentile.h	/^  static int getPercentile(const std::vector<int>& latencies, int percent)$/;"	f	class:Percentile	typeref:typename:int
getPipeline	src/muduo/examples/filetransfer/loadtest/Client.java	/^        public ChannelPipeline getPipeline() throws Exception {$/;"	m	class:Client.PipelineFactory
getProcessName	src/muduo/muduo/net/inspect/ProcessInspector.cc	/^string getProcessName(const string& procStatus)$/;"	f	namespace:muduo::inspect	typeref:typename:string
getProperty	src/libtfhe-superaic-core/tfhe_generic_streams.cpp	/^    virtual const std::string &getProperty(const std::string &name) const {$/;"	f	class:MapTextModeProperties	typeref:typename:const std::string &	file:
getProperty_double	src/libtfhe-superaic-core/tfhe_generic_streams.cpp	/^    virtual double getProperty_double(const std::string &name) const {$/;"	f	class:MapTextModeProperties	typeref:typename:double	file:
getProperty_int64_t	src/libtfhe-superaic-core/tfhe_generic_streams.cpp	/^    virtual int64_t getProperty_int64_t(const std::string &name) const {$/;"	f	class:MapTextModeProperties	typeref:typename:int64_t	file:
getPthreadMutex	src/muduo/muduo/base/Mutex.h	/^  pthread_mutex_t* getPthreadMutex() \/* non-const *\/$/;"	f	class:muduo::MutexLock	typeref:typename:pthread_mutex_t *
getRedirectUrl	src/muduo/examples/curl/Curl.cc	/^const char* Request::getRedirectUrl()$/;"	f	class:Request	typeref:typename:const char *
getResponseCode	src/muduo/examples/curl/Curl.cc	/^int Request::getResponseCode()$/;"	f	class:Request	typeref:typename:int
getSeconds	src/muduo/examples/cdns/Resolver.cc	/^double getSeconds(struct timeval* tv)$/;"	f	namespace:__anonfa97fe800111	typeref:typename:double
getSeconds	src/muduo/examples/procmon/dummyload.cc	/^double getSeconds(int cycles)$/;"	f	typeref:typename:double
getSeconds	src/muduo/examples/procmon/procmon.cc	/^  double getSeconds(long ticks)$/;"	f	class:Procmon	typeref:typename:double	file:
getService	src/muduo/muduo/net/protorpc/rpcservice.proto	/^  rpc getService (GetServiceRequest) returns (GetServiceResponse);$/;"	r	service:muduo.net.RpcService	typeref:typename:GetServiceResponse
getSockAddr	src/muduo/muduo/net/InetAddress.h	/^  const struct sockaddr* getSockAddr() const { return sockets::sockaddr_cast(&addr6_); }$/;"	f	class:muduo::net::InetAddress	typeref:typename:const struct sockaddr *
getSocketError	src/muduo/muduo/net/SocketsOps.cc	/^int sockets::getSocketError(int sockfd)$/;"	f	class:sockets	typeref:typename:int
getSocketType	src/muduo/examples/cdns/Resolver.cc	/^const char* getSocketType(int type)$/;"	f	namespace:__anonfa97fe800111	typeref:typename:const char *
getStartTime	src/muduo/examples/procmon/procmon.cc	/^  Timestamp getStartTime(long starttime)$/;"	f	class:Procmon	typeref:typename:Timestamp	file:
getState	src/muduo/examples/procmon/procmon.cc	/^  static const char* getState(char state)$/;"	f	class:Procmon	typeref:typename:const char *	file:
getString	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/DataEvent.java	/^    public String getString() {$/;"	m	class:DataEvent
getTcpInfo	src/muduo/muduo/net/Socket.cc	/^bool Socket::getTcpInfo(struct tcp_info* tcpi) const$/;"	f	class:Socket	typeref:typename:bool
getTcpInfo	src/muduo/muduo/net/TcpConnection.cc	/^bool TcpConnection::getTcpInfo(struct tcp_info* tcpi) const$/;"	f	class:TcpConnection	typeref:typename:bool
getTcpInfoString	src/muduo/muduo/net/Socket.cc	/^bool Socket::getTcpInfoString(char* buf, int len) const$/;"	f	class:Socket	typeref:typename:bool
getTcpInfoString	src/muduo/muduo/net/TcpConnection.cc	/^string TcpConnection::getTcpInfoString() const$/;"	f	class:TcpConnection	typeref:typename:string
getTm	src/muduo/muduo/base/tests/TimeZone_unittest.cc	/^struct tm getTm(const char* str)$/;"	f	typeref:struct:tm
getTm	src/muduo/muduo/base/tests/TimeZone_unittest.cc	/^struct tm getTm(int year, int month, int day,$/;"	f	typeref:struct:tm
getTopic	src/muduo/examples/hub/hub.cc	/^  Topic& getTopic(const string& topic)$/;"	f	class:pubsub::PubSubServer	typeref:typename:Topic &	file:
getTorusPolynomialPtr	src/tests/fakes/lagrangehalfc.h	/^        TorusPolynomial *getTorusPolynomialPtr() {$/;"	f	struct:__anonb49ff32c0111::FakeLagrangeHalfCPolynomial	typeref:typename:TorusPolynomial *
getTorusPolynomialPtr	src/tests/fakes/lagrangehalfc.h	/^        const TorusPolynomial *getTorusPolynomialPtr() const {$/;"	f	struct:__anonb49ff32c0111::FakeLagrangeHalfCPolynomial	typeref:typename:const TorusPolynomial *
getTypeTitle	src/libtfhe-superaic-core/tfhe_generic_streams.cpp	/^    virtual const std::string &getTypeTitle() const {$/;"	f	class:MapTextModeProperties	typeref:typename:const std::string &	file:
getUrl	src/muduo/examples/curl/Curl.cc	/^RequestPtr Curl::getUrl(StringArg url)$/;"	f	class:Curl	typeref:typename:RequestPtr
getUser	src/muduo/examples/twisted/finger/finger06.cc	/^string getUser(const string& user)$/;"	f	typeref:typename:string
getUser	src/muduo/examples/twisted/finger/finger07.cc	/^string getUser(const string& user)$/;"	f	typeref:typename:string
getVersion	src/muduo/muduo/net/http/HttpRequest.h	/^  Version getVersion() const$/;"	f	class:muduo::net::HttpRequest	typeref:typename:Version
getX	src/muduo/examples/procmon/plot.cc	/^int Plot::getX(ssize_t i, ssize_t total) const$/;"	f	class:Plot	typeref:typename:int
getY	src/muduo/examples/procmon/plot.cc	/^int Plot::getY(double value) const$/;"	f	class:Plot	typeref:typename:int
getYearMonthDay	src/muduo/muduo/base/Date.cc	/^struct Date::YearMonthDay getYearMonthDay(int julianDayNumber)$/;"	f	namespace:muduo::detail	typeref:struct:Date::YearMonthDay
get_CPU_exector_num	src/libtfhe-superaic-acc/tfhe_acc.cpp	/^size_t TFHE_ACC::get_CPU_exector_num(void) {$/;"	f	class:tfhe_superaic::TFHE_ACC	typeref:typename:size_t
get_CPU_loading	src/libtfhe-superaic-acc/tfhe_acc.cpp	/^float TFHE_ACC::get_CPU_loading()$/;"	f	class:tfhe_superaic::TFHE_ACC	typeref:typename:float
get_FPGA_version	src/libtfhe-superaic-acc/accs/FPGA-V0/acc_fpga_v0.cpp	/^bool get_FPGA_version(const char * dev,uint32_t &version) {$/;"	f	namespace:tfhe_superaic	typeref:typename:bool
get_bootstrap_key	src/libtfhe-superaic-core/tfhe_session.cpp	/^const LweBootstrappingKey *Session::get_bootstrap_key()$/;"	f	class:tfhe_superaic::Session	typeref:typename:const LweBootstrappingKey *
get_box_col	src/muduo/examples/sudoku/sudoku.cc	/^    int get_box_col(int box, int val)$/;"	f	class:SudokuSolver	typeref:typename:int	file:
get_buffer_size	src/libtfhe-superaic-core/tfhe_package.cpp	/^size_t TFHE_Payload::get_buffer_size()$/;"	f	class:TFHE_Payload	typeref:typename:size_t
get_col_col	src/muduo/examples/sudoku/sudoku.cc	/^    int get_col_col(int col, int val)$/;"	f	class:SudokuSolver	typeref:typename:int	file:
get_full_coef	src/libtfhe-superaic-acc/accs/FPGA-V0/acc_fpga_v0.cpp	/^int FPGA_ACC_V0::get_full_coef(Torus32 * out_buffer,uint64_t address){$/;"	f	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:int
get_last_use_time	src/libtfhe-superaic-core/tfhe_session.cpp	/^chrono::steady_clock::time_point Session::get_last_use_time()$/;"	f	class:tfhe_superaic::Session	typeref:typename:chrono::steady_clock::time_point
get_loading	src/libtfhe-superaic-acc/tfhe_acc.cpp	/^float TFHE_ACC::get_loading()$/;"	f	class:tfhe_superaic::TFHE_ACC	typeref:typename:float
get_min_column	src/muduo/examples/sudoku/sudoku.cc	/^    Column* get_min_column()$/;"	f	class:SudokuSolver	typeref:typename:Column *	file:
get_pack_head_size	src/libtfhe-superaic-core/include/tfhe_package.h	/^inline size_t get_pack_head_size(void){return sizeof(TFHE_Comm_Pack);}$/;"	f	typeref:typename:size_t
get_pack_size	src/libtfhe-superaic-core/include/tfhe_package.h	/^inline size_t get_pack_size(TFHE_Comm_Pack &pack){return pack.payload_size + get_pack_head_size(/;"	f	typeref:typename:size_t
get_payload_size	src/libtfhe-superaic-core/tfhe_package.cpp	/^size_t TFHE_Payload::get_payload_size()$/;"	f	class:TFHE_Payload	typeref:typename:size_t
get_pointer	src/muduo/muduo/net/Callbacks.h	/^inline T* get_pointer(const std::shared_ptr<T>& ptr)$/;"	f	namespace:muduo	typeref:typename:T *
get_pointer	src/muduo/muduo/net/Callbacks.h	/^inline T* get_pointer(const std::unique_ptr<T>& ptr)$/;"	f	namespace:muduo	typeref:typename:T *
get_row_col	src/muduo/examples/sudoku/sudoku.cc	/^    int get_row_col(int row, int val)$/;"	f	class:SudokuSolver	typeref:typename:int	file:
get_session	src/libtfhe-superaic-acc/tfhe_acc.cpp	/^shared_ptr<Session> TFHE_ACC::get_session(Session_ID_t sessionID)$/;"	f	class:tfhe_superaic::TFHE_ACC	typeref:typename:shared_ptr<Session>
get_session	src/libtfhe-superaic-core/tfhe_session.cpp	/^shared_ptr<Session> get_session(Session_ID_t sessionID){$/;"	f	namespace:tfhe_superaic	typeref:typename:shared_ptr<Session>
get_session_ID	src/libtfhe-superaic-core/tfhe_session.cpp	/^Session_ID_t Session::get_session_ID()$/;"	f	class:tfhe_superaic::Session	typeref:typename:Session_ID_t
getkey	src/libtfhe-superaic-core/include/tfhe_session.h	/^    const LweBootstrappingKey* getkey(){return key;};$/;"	f	class:tfhe_superaic::LweBootstrappingKey_Wrap	typeref:typename:const LweBootstrappingKey *
gettid	src/muduo/muduo/base/Thread.cc	/^pid_t gettid()$/;"	f	namespace:muduo::detail	typeref:typename:pid_t
globalCount_	src/muduo/examples/ace/logging/server.cc	/^  static AtomicInt32 globalCount_;$/;"	m	class:logging::Session	typeref:typename:AtomicInt32	file:
globalCount_	src/muduo/examples/ace/logging/server.cc	/^AtomicInt32 Session::globalCount_;$/;"	m	class:logging::Session	typeref:typename:AtomicInt32
global_count_	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  static int global_count_;$/;"	m	class:ParameterizedDerivedTest	typeref:typename:int	file:
global_count_	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  static int global_count_;$/;"	m	class:SeparateInstanceTest	typeref:typename:int	file:
global_count_	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^int ParameterizedDerivedTest::global_count_ = 0;$/;"	m	class:ParameterizedDerivedTest	typeref:typename:int
global_count_	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^int SeparateInstanceTest::global_count_ = 0;$/;"	m	class:SeparateInstanceTest	typeref:typename:int
global_integer	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^int global_integer = 0;$/;"	v	typeref:typename:int
global_test_part_result_reporter_mutex_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  internal::Mutex global_test_part_result_reporter_mutex_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:internal::Mutex
global_test_part_result_repoter_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  TestPartResultReporterInterface* global_test_part_result_repoter_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:TestPartResultReporterInterface *
global_tfheGarbageCollector	src/libtfhe-superaic-core/include/tfhe_garbage_collector.h	/^    static TfheGarbageCollector *global_tfheGarbageCollector;$/;"	m	class:TfheGarbageCollector	typeref:typename:TfheGarbageCollector *
global_tfheGarbageCollector	src/libtfhe-superaic-core/tfhe_garbage_collector.cpp	/^TfheGarbageCollector* TfheGarbageCollector::global_tfheGarbageCollector(0);$/;"	m	class:TfheGarbageCollector	typeref:typename:TfheGarbageCollector *
global_var	src/tests/googletest/googletest/test/gtest_unittest.cc	/^static int global_var = 0;$/;"	v	namespace:__anonf780395f0111	typeref:typename:int	file:
gmock	buildotests/Makefile	/^gmock: cmake_check_build_system$/;"	t
gmock	buildotests/tests/googletest/googlemock/Makefile	/^gmock: tests\/googletest\/googlemock\/CMakeFiles\/gmock.dir\/rule$/;"	t
gmock	src/tests/googletest/googlemock/CMakeLists.txt	/^project(gmock CXX C)$/;"	p
gmock-all.o	src/tests/googletest/googlemock/make/Makefile	/^gmock-all.o : $(GMOCK_SRCS_)$/;"	t
gmock.a	src/tests/googletest/googlemock/make/Makefile	/^gmock.a : gmock-all.o gtest-all.o$/;"	t
gmock/fast	buildotests/Makefile	/^gmock\/fast:$/;"	t
gmock/fast	buildotests/tests/googletest/googlemock/Makefile	/^gmock\/fast:$/;"	t
gmock_build_tests	src/tests/googletest/googlemock/CMakeLists.txt	/^option(gmock_build_tests "Build all of Google Mock's own tests." OFF)$/;"	D
gmock_generated_actions_test	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^namespace gmock_generated_actions_test {$/;"	n	namespace:testing	file:
gmock_generated_function_mockers_test	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^namespace gmock_generated_function_mockers_test {$/;"	n	namespace:testing	file:
gmock_main	buildotests/Makefile	/^gmock_main: cmake_check_build_system$/;"	t
gmock_main	buildotests/tests/googletest/googlemock/Makefile	/^gmock_main: tests\/googletest\/googlemock\/CMakeFiles\/gmock_main.dir\/rule$/;"	t
gmock_main	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^int gmock_main(int argc, char **argv) {$/;"	f	typeref:typename:int
gmock_main.a	src/tests/googletest/googlemock/make/Makefile	/^gmock_main.a : gmock-all.o gtest-all.o gmock_main.o$/;"	t
gmock_main.o	src/tests/googletest/googlemock/make/Makefile	/^gmock_main.o : $(GMOCK_SRCS_)$/;"	t
gmock_main/fast	buildotests/Makefile	/^gmock_main\/fast:$/;"	t
gmock_main/fast	buildotests/tests/googletest/googlemock/Makefile	/^gmock_main\/fast:$/;"	t
gmock_matchers_test	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^namespace gmock_matchers_test {$/;"	n	namespace:testing	file:
gmock_more_actions_test	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^namespace gmock_more_actions_test {$/;"	n	namespace:testing	file:
gmock_nice_strict_test	src/tests/googletest/googlemock/test/gmock-nice-strict_test.cc	/^namespace gmock_nice_strict_test {$/;"	n	namespace:testing	file:
gmock_test	src/tests/googletest/googlemock/make/Makefile	/^gmock_test : gmock_test.o gmock_main.a$/;"	t
gmock_test.o	src/tests/googletest/googlemock/make/Makefile	/^gmock_test.o : $(USER_DIR)\/gmock_test.cc $(GMOCK_HEADERS)$/;"	t
gmt	src/muduo/muduo/base/tests/TimeZone_unittest.cc	/^  const char* gmt;$/;"	m	struct:LocalToUtcTestCase	typeref:typename:const char *	file:
gmt	src/muduo/muduo/base/tests/TimeZone_unittest.cc	/^  const char* gmt;$/;"	m	struct:TestCase	typeref:typename:const char *	file:
god	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/TestCase.java	/^    protected MultiplexerTest god;$/;"	f	class:TestCase
golden_file	src/tests/googletest/googlemock/test/gmock_output_test.py	/^    golden_file = open(GOLDEN_PATH, 'wb')$/;"	v
golden_file	src/tests/googletest/googletest/test/gtest_output_test.py	/^      golden_file = open(GOLDEN_PATH, 'wb')$/;"	v
google	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^namespace google$/;"	n
google	src/muduo/muduo/net/protorpc/RpcChannel.h	/^namespace google {$/;"	n
google	src/muduo/muduo/net/protorpc/RpcServer.h	/^namespace google {$/;"	n
googletest-distribution	src/tests/googletest/CMakeLists.txt	/^project( googletest-distribution )$/;"	p
gotAll	src/muduo/muduo/net/http/HttpContext.h	/^  bool gotAll() const$/;"	f	class:muduo::net::HttpContext	typeref:typename:bool
gotRequest_	src/muduo/examples/fastcgi/fastcgi.h	/^  bool gotRequest_;$/;"	m	class:FastCgiCodec	typeref:typename:bool
got_	src/muduo/examples/protobuf/resolver/client.cc	/^  int got_;$/;"	m	class:RpcClient	typeref:typename:int	file:
gperfport	src/muduo/examples/memcached/server/MemcacheServer.h	/^    uint16_t gperfport;$/;"	m	struct:MemcacheServer::Options	typeref:typename:uint16_t
graph_	src/tests/googletest/googlemock/src/gmock-matchers.cc	/^  const MatchMatrix* graph_;  \/\/ not owned$/;"	m	class:testing::internal::MaxBipartiteMatchState	typeref:typename:const MatchMatrix *	file:
graph_	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  const Graph* graph_;  \/\/ not owned$/;"	m	class:testing::gmock_matchers_test::__anon745c08170311::BacktrackingMaxBPMState	typeref:typename:const Graph *	file:
gray_	src/muduo/examples/procmon/plot.h	/^  const int gray_;$/;"	m	class:Plot	typeref:typename:const int
group	src/tests/googletest/googlemock/scripts/upload.py	/^group = parser.add_option_group("Issue options")$/;"	v
group	src/tests/googletest/googlemock/scripts/upload.py	/^group = parser.add_option_group("Logging options")$/;"	v
group	src/tests/googletest/googlemock/scripts/upload.py	/^group = parser.add_option_group("Patch options")$/;"	v
group	src/tests/googletest/googlemock/scripts/upload.py	/^group = parser.add_option_group("Review server options")$/;"	v
group	src/tests/googletest/googletest/scripts/upload.py	/^group = parser.add_option_group("Issue options")$/;"	v
group	src/tests/googletest/googletest/scripts/upload.py	/^group = parser.add_option_group("Logging options")$/;"	v
group	src/tests/googletest/googletest/scripts/upload.py	/^group = parser.add_option_group("Patch options")$/;"	v
group	src/tests/googletest/googletest/scripts/upload.py	/^group = parser.add_option_group("Review server options")$/;"	v
growth	src/muduo/muduo/net/inspect/PerformanceInspector.cc	/^string PerformanceInspector::growth(HttpRequest::Method, const Inspector::ArgList&)$/;"	f	class:PerformanceInspector	typeref:typename:string
gtest	buildotests/Makefile	/^gtest: cmake_check_build_system$/;"	t
gtest	buildotests/tests/googletest/googlemock/gtest/Makefile	/^gtest: tests\/googletest\/googlemock\/gtest\/CMakeFiles\/gtest.dir\/rule$/;"	t
gtest	src/tests/googletest/README.md	/^also an IRC channel on OFTC (irc.oftc.net) #gtest available.  Please$/;"	h	chapter:Google Test
gtest	src/tests/googletest/googlemock/README.md	/^also an IRC channel on OFTC (irc.oftc.net) #gtest available.  Please$/;"	h	subsection:Google Mock""Features
gtest	src/tests/googletest/googlemock/configure.ac	/^AC_ARG_WITH([gtest],$/;"	w
gtest	src/tests/googletest/googlemock/scripts/fuse_gmock_files.py	/^gtest = fuse_gtest_files$/;"	v
gtest	src/tests/googletest/googletest/CMakeLists.txt	/^project(gtest CXX C)$/;"	p
gtest	src/tests/googletest/googletest/m4/gtest.m4	/^AC_ARG_ENABLE([gtest],$/;"	e
gtest-all.o	src/tests/googletest/googlemock/make/Makefile	/^gtest-all.o : $(GTEST_SRCS_)$/;"	t
gtest-all.o	src/tests/googletest/googletest/make/Makefile	/^gtest-all.o : $(GTEST_SRCS_)$/;"	t
gtest-all.o	src/tests/googletest/googletest/scripts/test/Makefile	/^gtest-all.o : $(FUSED_GTEST_H) $(FUSED_GTEST_ALL_CC)$/;"	t
gtest.a	src/tests/googletest/googletest/make/Makefile	/^gtest.a : gtest-all.o$/;"	t
gtest/fast	buildotests/Makefile	/^gtest\/fast:$/;"	t
gtest/fast	buildotests/tests/googletest/googlemock/gtest/Makefile	/^gtest\/fast:$/;"	t
gtest_build_samples	src/tests/googletest/googletest/CMakeLists.txt	/^option(gtest_build_samples "Build gtest's sample programs." OFF)$/;"	D
gtest_build_tests	src/tests/googletest/googletest/CMakeLists.txt	/^option(gtest_build_tests "Build all of gtest's own tests." OFF)$/;"	D
gtest_dir	src/tests/googletest/googlemock/CMakeLists.txt	/^  set(gtest_dir ..\/googletest)$/;"	v
gtest_dir	src/tests/googletest/googlemock/CMakeLists.txt	/^  set(gtest_dir gtest)$/;"	v
gtest_disable_pthreads	src/tests/googletest/googletest/CMakeLists.txt	/^option(gtest_disable_pthreads "Disable uses of pthreads in gtest." OFF)$/;"	D
gtest_flag_saver_	src/tests/googletest/googletest/include/gtest/gtest.h	/^  const internal::scoped_ptr< GTEST_FLAG_SAVER_ > gtest_flag_saver_;$/;"	m	class:testing::Test	typeref:typename:const internal::scoped_ptr<GTEST_FLAG_SAVER_>
gtest_force_shared_crt	src/tests/googletest/googletest/CMakeLists.txt	/^  gtest_force_shared_crt$/;"	D
gtest_hide_internal_symbols	src/tests/googletest/googletest/CMakeLists.txt	/^  gtest_hide_internal_symbols$/;"	D
gtest_internal	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^namespace gtest_internal {$/;"	n	namespace:std::tr1
gtest_main	buildotests/Makefile	/^gtest_main: cmake_check_build_system$/;"	t
gtest_main	buildotests/tests/googletest/googlemock/gtest/Makefile	/^gtest_main: tests\/googletest\/googlemock\/gtest\/CMakeFiles\/gtest_main.dir\/rule$/;"	t
gtest_main.a	src/tests/googletest/googletest/make/Makefile	/^gtest_main.a : gtest-all.o gtest_main.o$/;"	t
gtest_main.o	src/tests/googletest/googletest/make/Makefile	/^gtest_main.o : $(GTEST_SRCS_)$/;"	t
gtest_main.o	src/tests/googletest/googletest/scripts/test/Makefile	/^gtest_main.o : $(FUSED_GTEST_H) $(GTEST_MAIN_CC)$/;"	t
gtest_main/fast	buildotests/Makefile	/^gtest_main\/fast:$/;"	t
gtest_main/fast	buildotests/tests/googletest/googlemock/gtest/Makefile	/^gtest_main\/fast:$/;"	t
gtest_printers_test	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^namespace gtest_printers_test {$/;"	n	namespace:testing	file:
gtest_tests_util_dir	src/tests/googletest/googlemock/test/gmock_test_utils.py	/^gtest_tests_util_dir = os.path.join(SCRIPT_DIR, '..\/gtest\/test')$/;"	v
gtest_trace_stack	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  const std::vector<TraceInfo>& gtest_trace_stack() const {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:const std::vector<TraceInfo> &
gtest_trace_stack	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  std::vector<TraceInfo>& gtest_trace_stack() {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:std::vector<TraceInfo> &
gtest_trace_stack_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  internal::ThreadLocal<std::vector<TraceInfo> > gtest_trace_stack_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:internal::ThreadLocal<std::vector<TraceInfo>>
gzipfile_test	src/muduo/muduo/base/tests/CMakeLists.txt	/^  add_executable(gzipfile_test GzipFile_test.cc)$/;"	t
h	src/libtfhe-superaic-core/include/tgsw.h	/^    Torus32 *h; \/\/\/< powers of Bgbit$/;"	m	struct:TGswParams	typeref:typename:Torus32 *
h2c_fp	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    int h2c_fp = 0;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:int
halfBg	src/libtfhe-superaic-core/include/tgsw.h	/^    const int32_t halfBg; \/\/\/< Bg\/2$/;"	m	struct:TGswParams	typeref:typename:const int32_t
handleClose	src/muduo/muduo/net/TcpConnection.cc	/^void TcpConnection::handleClose()$/;"	f	class:TcpConnection	typeref:typename:void
handleError	src/muduo/muduo/net/Connector.cc	/^void Connector::handleError()$/;"	f	class:Connector	typeref:typename:void
handleError	src/muduo/muduo/net/TcpConnection.cc	/^void TcpConnection::handleError()$/;"	f	class:TcpConnection	typeref:typename:void
handleEvent	src/muduo/muduo/net/Channel.cc	/^void Channel::handleEvent(Timestamp receiveTime)$/;"	f	class:Channel	typeref:typename:void
handleEventWithGuard	src/muduo/muduo/net/Channel.cc	/^void Channel::handleEventWithGuard(Timestamp receiveTime)$/;"	f	class:Channel	typeref:typename:void
handleRead	src/muduo/contrib/hiredis/Hiredis.cc	/^void Hiredis::handleRead(muduo::Timestamp receiveTime)$/;"	f	class:Hiredis	typeref:typename:void
handleRead	src/muduo/muduo/net/Acceptor.cc	/^void Acceptor::handleRead()$/;"	f	class:Acceptor	typeref:typename:void
handleRead	src/muduo/muduo/net/EventLoop.cc	/^void EventLoop::handleRead()$/;"	f	class:EventLoop	typeref:typename:void
handleRead	src/muduo/muduo/net/TcpConnection.cc	/^void TcpConnection::handleRead(Timestamp receiveTime)$/;"	f	class:TcpConnection	typeref:typename:void
handleRead	src/muduo/muduo/net/TimerQueue.cc	/^void TimerQueue::handleRead()$/;"	f	class:TimerQueue	typeref:typename:void
handleRead	src/muduo/muduo/net/tests/Channel_test.cc	/^  void handleRead()$/;"	f	class:PeriodicTimer	typeref:typename:void	file:
handleTimeout	src/muduo/examples/pingpong/client.cc	/^  void handleTimeout()$/;"	f	class:Client	typeref:typename:void	file:
handleWrite	src/muduo/contrib/hiredis/Hiredis.cc	/^void Hiredis::handleWrite()$/;"	f	class:Hiredis	typeref:typename:void
handleWrite	src/muduo/muduo/net/Connector.cc	/^void Connector::handleWrite()$/;"	f	class:Connector	typeref:typename:void
handleWrite	src/muduo/muduo/net/TcpConnection.cc	/^void TcpConnection::handleWrite()$/;"	f	class:TcpConnection	typeref:typename:void
handle_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  Handle handle_;$/;"	m	class:testing::internal::AutoHandle	typeref:typename:Handle
handle_asm	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_asm(self):$/;"	m	class:AstBuilder
handle_auto	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_auto(self):$/;"	m	class:AstBuilder
handle_bool	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_bool(self):$/;"	m	class:AstBuilder
handle_break	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_break(self):$/;"	m	class:AstBuilder
handle_case	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_case(self):$/;"	m	class:AstBuilder
handle_catch	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_catch(self):$/;"	m	class:AstBuilder
handle_char	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_char(self):$/;"	m	class:AstBuilder
handle_class	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_class(self):$/;"	m	class:AstBuilder
handle_const	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_const(self):$/;"	m	class:AstBuilder
handle_const_cast	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_const_cast(self):$/;"	m	class:AstBuilder
handle_continue	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_continue(self):$/;"	m	class:AstBuilder
handle_default	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_default(self):$/;"	m	class:AstBuilder
handle_delete	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_delete(self):$/;"	m	class:AstBuilder
handle_do	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_do(self):$/;"	m	class:AstBuilder
handle_double	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_double(self):$/;"	m	class:AstBuilder
handle_dynamic_cast	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_dynamic_cast(self):$/;"	m	class:AstBuilder
handle_else	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_else(self):$/;"	m	class:AstBuilder
handle_enum	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_enum(self):$/;"	m	class:AstBuilder
handle_explicit	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_explicit(self):$/;"	m	class:AstBuilder
handle_extern	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_extern(self):$/;"	m	class:AstBuilder
handle_false	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_false(self):$/;"	m	class:AstBuilder
handle_float	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_float(self):$/;"	m	class:AstBuilder
handle_for	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_for(self):$/;"	m	class:AstBuilder
handle_friend	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_friend(self):$/;"	m	class:AstBuilder
handle_goto	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_goto(self):$/;"	m	class:AstBuilder
handle_if	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_if(self):$/;"	m	class:AstBuilder
handle_inline	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_inline(self):$/;"	m	class:AstBuilder
handle_int	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_int(self):$/;"	m	class:AstBuilder
handle_long	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_long(self):$/;"	m	class:AstBuilder
handle_mutable	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_mutable(self):$/;"	m	class:AstBuilder
handle_namespace	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_namespace(self):$/;"	m	class:AstBuilder
handle_new	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_new(self):$/;"	m	class:AstBuilder
handle_operator	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_operator(self):$/;"	m	class:AstBuilder
handle_private	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_private(self):$/;"	m	class:AstBuilder
handle_protected	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_protected(self):$/;"	m	class:AstBuilder
handle_public	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_public(self):$/;"	m	class:AstBuilder
handle_register	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_register(self):$/;"	m	class:AstBuilder
handle_reinterpret_cast	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_reinterpret_cast(self):$/;"	m	class:AstBuilder
handle_return	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_return(self):$/;"	m	class:AstBuilder
handle_short	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_short(self):$/;"	m	class:AstBuilder
handle_signed	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_signed(self):$/;"	m	class:AstBuilder
handle_sizeof	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_sizeof(self):$/;"	m	class:AstBuilder
handle_static	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_static(self):$/;"	m	class:AstBuilder
handle_static_cast	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_static_cast(self):$/;"	m	class:AstBuilder
handle_struct	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_struct(self):$/;"	m	class:AstBuilder
handle_switch	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_switch(self):$/;"	m	class:AstBuilder
handle_template	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_template(self):$/;"	m	class:AstBuilder
handle_this	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_this(self):$/;"	m	class:AstBuilder
handle_throw	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_throw(self):$/;"	m	class:AstBuilder
handle_true	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_true(self):$/;"	m	class:AstBuilder
handle_try	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_try(self):$/;"	m	class:AstBuilder
handle_typedef	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_typedef(self):$/;"	m	class:AstBuilder
handle_typeid	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_typeid(self):$/;"	m	class:AstBuilder
handle_typename	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_typename(self):$/;"	m	class:AstBuilder
handle_union	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_union(self):$/;"	m	class:AstBuilder
handle_unsigned	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_unsigned(self):$/;"	m	class:AstBuilder
handle_using	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_using(self):$/;"	m	class:AstBuilder
handle_virtual	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_virtual(self):$/;"	m	class:AstBuilder
handle_void	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_void(self):$/;"	m	class:AstBuilder
handle_volatile	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_volatile(self):$/;"	m	class:AstBuilder
handle_wchar_t	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_wchar_t(self):$/;"	m	class:AstBuilder
handle_while	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def handle_while(self):$/;"	m	class:AstBuilder
hasChannel	src/muduo/muduo/net/EventLoop.cc	/^bool EventLoop::hasChannel(Channel* channel)$/;"	f	class:EventLoop	typeref:typename:bool
hasChannel	src/muduo/muduo/net/Poller.cc	/^bool Poller::hasChannel(Channel* channel) const$/;"	f	class:Poller	typeref:typename:bool
hasWritten	src/muduo/muduo/net/Buffer.h	/^  void hasWritten(size_t len)$/;"	f	class:muduo::net::Buffer	typeref:typename:void
has_edits	src/tests/googletest/googletest/src/gtest.cc	/^  bool has_edits() const { return adds_ || removes_; }$/;"	f	class:testing::internal::edit_distance::__anon3f29b7680211::Hunk	typeref:typename:bool	file:
has_new_fatal_failure	src/tests/googletest/googletest/include/gtest/gtest-test-part.h	/^  bool has_new_fatal_failure() const { return has_new_fatal_failure_; }$/;"	f	class:testing::internal::HasNewFatalFailureHelper	typeref:typename:bool
has_new_fatal_failure_	src/tests/googletest/googletest/include/gtest/gtest-test-part.h	/^  bool has_new_fatal_failure_;$/;"	m	class:testing::internal::HasNewFatalFailureHelper	typeref:typename:bool
has_no_destroy	src/muduo/muduo/base/Singleton.h	/^struct has_no_destroy$/;"	s	namespace:muduo::detail
has_owner_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  bool has_owner_;$/;"	m	class:testing::internal::MutexBase	typeref:typename:bool
has_trivial_assignment_operator	src/muduo/muduo/base/StringPiece.h	/^  typedef __true_type    has_trivial_assignment_operator;$/;"	t	struct:__type_traits	typeref:typename:__true_type
has_trivial_copy_constructor	src/muduo/muduo/base/StringPiece.h	/^  typedef __true_type    has_trivial_copy_constructor;$/;"	t	struct:__type_traits	typeref:typename:__true_type
has_trivial_default_constructor	src/muduo/muduo/base/StringPiece.h	/^  typedef __true_type    has_trivial_default_constructor;$/;"	t	struct:__type_traits	typeref:typename:__true_type
has_trivial_destructor	src/muduo/muduo/base/StringPiece.h	/^  typedef __true_type    has_trivial_destructor;$/;"	t	struct:__type_traits	typeref:typename:__true_type
hash	src/muduo/examples/memcached/server/Item.h	/^  size_t hash() const$/;"	f	class:Item	typeref:typename:size_t
hash_	src/muduo/examples/memcached/server/Item.h	/^  size_t         hash_;$/;"	m	class:Item	typeref:typename:size_t
head	src/libtfhe-superaic-core/include/tfhe_package.h	/^    uint32_t head;$/;"	m	struct:TFHE_Comm_Pack	typeref:typename:uint32_t
head_	src/tests/googletest/googletest/samples/sample3-inl.h	/^  QueueNode<E>* head_;  \/\/ The first node of the queue.$/;"	m	class:Queue	typeref:typename:QueueNode<E> *
headerCallback	src/muduo/examples/curl/Curl.cc	/^void Request::headerCallback(const char* buffer, int len)$/;"	f	class:Request	typeref:typename:void
headerCb_	src/muduo/examples/curl/Curl.h	/^  DataCallback headerCb_;$/;"	m	class:curl::Request	typeref:typename:DataCallback
headerData	src/muduo/examples/curl/Curl.cc	/^size_t Request::headerData(char* buffer, size_t size, size_t nmemb, void* userp)$/;"	f	class:Request	typeref:typename:size_t
headerOnly	src/muduo/examples/curl/Curl.cc	/^void Request::headerOnly()$/;"	f	class:Request	typeref:typename:void
headers	src/muduo/muduo/net/http/HttpRequest.h	/^  const std::map<string, string>& headers() const$/;"	f	class:muduo::net::HttpRequest	typeref:typename:const std::map<string,string> &
headers_	src/muduo/muduo/net/http/HttpRequest.h	/^  std::map<string, string> headers_;$/;"	m	class:muduo::net::HttpRequest	typeref:typename:std::map<string,string>
headers_	src/muduo/muduo/net/http/HttpResponse.h	/^  std::map<string, string> headers_;$/;"	m	class:muduo::net::HttpResponse	typeref:typename:std::map<string,string>
heap	src/muduo/muduo/net/inspect/PerformanceInspector.cc	/^string PerformanceInspector::heap(HttpRequest::Method, const Inspector::ArgList&)$/;"	f	class:PerformanceInspector	typeref:typename:string
heartbeat	src/muduo/examples/ace/logging/logrecord.proto	/^  optional Heartbeat heartbeat = 1;$/;"	f	message:logging.LogRecord	typeref:typename:Heartbeat
height_	src/muduo/examples/procmon/plot.h	/^  const int height_;$/;"	m	class:Plot	typeref:typename:const int
help	buildotests/Makefile	/^help:$/;"	t
help	buildotests/driver/Makefile	/^help:$/;"	t
help	buildotests/examples/Makefile	/^help:$/;"	t
help	buildotests/libtfhe-superaic-acc/Makefile	/^help:$/;"	t
help	buildotests/libtfhe-superaic-client/Makefile	/^help:$/;"	t
help	buildotests/libtfhe-superaic-core/Makefile	/^help:$/;"	t
help	buildotests/libtfhe-superaic-core/fft_processors/Makefile	/^help:$/;"	t
help	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^help:$/;"	t
help	buildotests/libtfhe-superaic-server/Makefile	/^help:$/;"	t
help	buildotests/tests/Makefile	/^help:$/;"	t
help	buildotests/tests/googletest/Makefile	/^help:$/;"	t
help	buildotests/tests/googletest/googlemock/Makefile	/^help:$/;"	t
help	buildotests/tests/googletest/googlemock/gtest/Makefile	/^help:$/;"	t
helper_	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^  LogTestHelper helper_;$/;"	m	class:__anon6b6cf3b20111::GMockLogTest	typeref:typename:LogTestHelper	file:
highWaterMark	src/muduo/examples/sudoku/server_prod.cc	/^  void highWaterMark(const TcpConnectionPtr& conn, size_t tosend)$/;"	f	class:SudokuServer	typeref:typename:void	file:
highWaterMarkCallback_	src/muduo/muduo/net/TcpConnection.h	/^  HighWaterMarkCallback highWaterMarkCallback_;$/;"	m	class:muduo::net::TcpConnection	typeref:typename:HighWaterMarkCallback
highWaterMark_	src/muduo/muduo/net/TcpConnection.h	/^  size_t highWaterMark_;$/;"	m	class:muduo::net::TcpConnection	typeref:typename:size_t
hiredis	src/muduo/contrib/hiredis/Hiredis.h	/^namespace hiredis$/;"	n
history	src/tests/googletest/googletest/test/gtest-linked_ptr_test.cc	/^Message* history = NULL;$/;"	v	namespace:__anonf616d1f80111	typeref:typename:Message *
holder_	src/muduo/muduo/base/Mutex.h	/^  pid_t holder_;$/;"	m	class:muduo::MutexLock	typeref:typename:pid_t
host	src/muduo/examples/ace/ttcp/common.h	/^  std::string host;$/;"	m	struct:Options	typeref:typename:std::string
host	src/muduo/examples/wordcount/slowsink.py	/^	host = sys.argv[2]$/;"	v
host	src/muduo/examples/wordcount/slowsink.py	/^host = ''$/;"	v
hostToNetwork16	src/muduo/muduo/net/Endian.h	/^inline uint16_t hostToNetwork16(uint16_t host16)$/;"	f	namespace:muduo::net::sockets	typeref:typename:uint16_t
hostToNetwork32	src/muduo/muduo/net/Endian.h	/^inline uint32_t hostToNetwork32(uint32_t host32)$/;"	f	namespace:muduo::net::sockets	typeref:typename:uint32_t
hostToNetwork64	src/muduo/muduo/net/Endian.h	/^inline uint64_t hostToNetwork64(uint64_t host64)$/;"	f	namespace:muduo::net::sockets	typeref:typename:uint64_t
host_name_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^    const std::string host_name_;$/;"	m	class:testing::internal::StreamingListener::SocketWriter	typeref:typename:const std::string
hostname	src/muduo/examples/ace/logging/logrecord.proto	/^    required string hostname = 1;$/;"	f	message:logging.LogRecord.Heartbeat	typeref:typename:string
hostname	src/muduo/muduo/base/ProcessInfo.cc	/^string ProcessInfo::hostname()$/;"	f	class:ProcessInfo	typeref:typename:string
hostname_	src/muduo/examples/procmon/procmon.cc	/^  const string hostname_;$/;"	m	class:Procmon	typeref:typename:const string	file:
hour	src/muduo/muduo/base/TimeZone.h	/^  int hour = 0;     \/\/ [0, 23]$/;"	m	struct:muduo::DateTime	typeref:typename:int
howMuchTimeFromNow	src/muduo/muduo/net/TimerQueue.cc	/^struct timespec howMuchTimeFromNow(Timestamp when)$/;"	f	namespace:muduo::net::detail	typeref:struct:timespec
htoll	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^#  define htoll(/;"	d
htols	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^#  define htols(/;"	d
httpCallback_	src/muduo/muduo/net/http/HttpServer.h	/^  HttpCallback httpCallback_;$/;"	m	class:muduo::net::HttpServer	typeref:typename:HttpCallback
http_SRCS	src/muduo/muduo/net/http/CMakeLists.txt	/^set(http_SRCS$/;"	v
httprequest_unittest	src/muduo/muduo/net/http/CMakeLists.txt	/^add_executable(httprequest_unittest tests\/HttpRequest_unittest.cc)$/;"	t
httpserver_test	src/muduo/muduo/net/http/CMakeLists.txt	/^add_executable(httpserver_test tests\/HttpServer_test.cc)$/;"	t
hub	src/muduo/examples/hub/CMakeLists.txt	/^add_executable(hub hub.cc codec.cc)$/;"	t
hunk_	src/tests/googletest/googletest/src/gtest.cc	/^  std::list<std::pair<char, const char*> > hunk_, hunk_adds_, hunk_removes_;$/;"	m	class:testing::internal::edit_distance::__anon3f29b7680211::Hunk	typeref:typename:std::list<std::pair<char,const char * >>	file:
hunk_adds_	src/tests/googletest/googletest/src/gtest.cc	/^  std::list<std::pair<char, const char*> > hunk_, hunk_adds_, hunk_removes_;$/;"	m	class:testing::internal::edit_distance::__anon3f29b7680211::Hunk	typeref:typename:std::list<std::pair<char,const char * >>	file:
hunk_removes_	src/tests/googletest/googletest/src/gtest.cc	/^  std::list<std::pair<char, const char*> > hunk_, hunk_adds_, hunk_removes_;$/;"	m	class:testing::internal::edit_distance::__anon3f29b7680211::Hunk	typeref:typename:std::list<std::pair<char,const char * >>	file:
i	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  int i;$/;"	m	class:testing::gmock_matchers_test::Derived	typeref:typename:int	file:
id	src/muduo/examples/fastcgi/fastcgi.cc	/^  uint16_t id;$/;"	m	struct:FastCgiCodec::RecordHeader	typeref:typename:uint16_t	file:
id	src/muduo/examples/filetransfer/loadtest/Handler.java	/^    private int id;$/;"	f	class:Handler	file:
id	src/muduo/examples/protobuf/codec/query.proto	/^  optional int32 id = 1;$/;"	f	message:muduo.Empty	typeref:typename:int32
id	src/muduo/examples/protobuf/codec/query.proto	/^  required int64 id = 1;$/;"	f	message:muduo.Answer	typeref:typename:int64
id	src/muduo/examples/protobuf/codec/query.proto	/^  required int64 id = 1;$/;"	f	message:muduo.Query	typeref:typename:int64
id	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^  uint64_t id() const { return id_; }$/;"	f	struct:RawMessage	typeref:typename:uint64_t	file:
id	src/muduo/examples/sudoku/server_hybrid.cc	/^    string id;$/;"	m	struct:SudokuServer::Request	typeref:typename:string	file:
id	src/muduo/examples/sudoku/server_prod.cc	/^    string id;$/;"	m	struct:SudokuServer::Request	typeref:typename:string	file:
id	src/muduo/muduo/net/protorpc/rpc.proto	/^  required fixed64 id = 2;$/;"	f	message:muduo.net.RpcMessage	typeref:typename:fixed64
id_	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^  uint64_t id_;$/;"	m	struct:RawMessage	typeref:typename:uint64_t	file:
id_	src/muduo/muduo/net/protorpc/RpcChannel.h	/^  AtomicInt64 id_;$/;"	m	class:muduo::net::RpcChannel	typeref:typename:AtomicInt64
id_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  const char* const id_;$/;"	m	class:SequenceTestingListener	typeref:typename:const char * const	file:
identifying_attribute	src/tests/googletest/googletest/test/gtest_xml_test_utils.py	/^  identifying_attribute = {$/;"	v	class:GTestXMLTestCase
idleFd_	src/muduo/muduo/net/Acceptor.h	/^  int idleFd_;$/;"	m	class:muduo::net::Acceptor	typeref:typename:int
idleSeconds_	src/muduo/examples/idleconnection/sortedlist.cc	/^  int idleSeconds_;$/;"	m	class:EchoServer	typeref:typename:int	file:
idleconnection_echo	src/muduo/examples/idleconnection/CMakeLists.txt	/^add_executable(idleconnection_echo echo.cc main.cc)$/;"	t
idleconnection_echo2	src/muduo/examples/idleconnection/CMakeLists.txt	/^add_executable(idleconnection_echo2 sortedlist.cc)$/;"	t
ids_	src/tests/googletest/googletest/src/gtest.cc	/^  IdMap ids_;$/;"	m	class:testing::internal::edit_distance::__anon3f29b7680111::InternalStrings	typeref:typename:IdMap	file:
imag_inout	src/libtfhe-superaic-core/fft_processors/nayuki/lagrangehalfc_impl.h	/^    double* imag_inout;$/;"	m	class:FFT_Processor_nayuki	typeref:typename:double *
image_	src/muduo/examples/procmon/plot.h	/^  gdImagePtr const image_;$/;"	m	class:Plot	typeref:typename:gdImagePtr const
immediate_prerequisites_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  ExpectationSet immediate_prerequisites_;$/;"	m	class:testing::internal::ExpectationBase	typeref:typename:ExpectationSet
impl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const Impl& impl() const { return impl_; }$/;"	f	class:testing::PolymorphicMatcher	typeref:typename:const Impl &
impl	src/tests/googletest/googletest/include/gtest/gtest.h	/^  const internal::UnitTestImpl* impl() const { return impl_; }$/;"	f	class:testing::UnitTest	typeref:typename:const internal::UnitTestImpl *
impl	src/tests/googletest/googletest/include/gtest/gtest.h	/^  internal::UnitTestImpl* impl() { return impl_; }$/;"	f	class:testing::UnitTest	typeref:typename:internal::UnitTestImpl *
impl_	src/muduo/muduo/base/Logging.h	/^  Impl impl_;$/;"	m	class:muduo::Logger	typeref:typename:Impl
impl_	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    Impl impl_;$/;"	m	class:testing::PolymorphicAction::MonomorphicImpl	typeref:typename:Impl
impl_	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  Impl impl_;$/;"	m	class:testing::PolymorphicAction	typeref:typename:Impl
impl_	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  const internal::linked_ptr<ActionInterface<F2> > impl_;$/;"	m	class:testing::internal::ActionAdaptor	typeref:typename:const internal::linked_ptr<ActionInterface<F2>>
impl_	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  internal::linked_ptr<ActionInterface<F> > impl_;$/;"	m	class:testing::Action	typeref:typename:internal::linked_ptr<ActionInterface<F>>
impl_	src/tests/googletest/googlemock/include/gmock/gmock-cardinalities.h	/^  internal::linked_ptr<const CardinalityInterface> impl_;$/;"	m	class:testing::Cardinality	typeref:typename:internal::linked_ptr<const CardinalityInterface>
impl_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    const Impl impl_;$/;"	m	class:testing::PolymorphicMatcher::MonomorphicImpl	typeref:typename:const Impl
impl_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  Impl impl_;$/;"	m	class:testing::PolymorphicMatcher	typeref:typename:Impl
impl_	src/tests/googletest/googletest/include/gtest/gtest.h	/^  internal::UnitTestImpl* impl_;$/;"	m	class:testing::UnitTest	typeref:typename:internal::UnitTestImpl *
impl_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  linked_ptr<const ParamGeneratorInterface<T> > impl_;$/;"	m	class:testing::internal::ParamGenerator	typeref:typename:linked_ptr<const ParamGeneratorInterface<T>>
impl_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  scoped_ptr<ParamIteratorInterface<T> > impl_;$/;"	m	class:testing::internal::ParamIterator	typeref:typename:scoped_ptr<ParamIteratorInterface<T>>
implicit_cast	src/muduo/muduo/base/Types.h	/^inline To implicit_cast(From const &f)$/;"	f	namespace:muduo	typeref:typename:To
import_gate_bootstrapping_ciphertext_fromFile	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT void import_gate_bootstrapping_ciphertext_fromFile(FILE *F, LweSample *sample,$/;"	f	typeref:typename:EXPORT void
import_gate_bootstrapping_ciphertext_fromStream	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT void import_gate_bootstrapping_ciphertext_fromStream(std::istream &F, LweSample *sample,$/;"	f	typeref:typename:EXPORT void
import_lweSample_fromFile	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT void import_lweSample_fromFile(FILE *F, LweSample *lwesample, const LweParams *params) {$/;"	f	typeref:typename:EXPORT void
import_lweSample_fromStream	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT void import_lweSample_fromStream(std::istream &in, LweSample *lwesample, const LweParams /;"	f	typeref:typename:EXPORT void
import_tgswSample_fromFile	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT void import_tgswSample_fromFile(FILE *F, TGswSample *tgswsample, const TGswParams *params/;"	f	typeref:typename:EXPORT void
import_tgswSample_fromStream	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT void import_tgswSample_fromStream(std::istream &F, TGswSample *tgswsample, const TGswPara/;"	f	typeref:typename:EXPORT void
import_tlweSample_fromFile	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT void import_tlweSample_fromFile(FILE *F, TLweSample *tlwesample, const TLweParams *params/;"	f	typeref:typename:EXPORT void
import_tlweSample_fromStream	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT void import_tlweSample_fromStream(std::istream &F, TLweSample *tlwesample, const TLwePara/;"	f	typeref:typename:EXPORT void
in	src/libtfhe-superaic-core/include/tfhe_generic_streams.h	/^    std::istream &in;$/;"	m	class:StdIstream	typeref:typename:std::istream &
in_lweparams	src/tests/zpf_for_bootstrap_detail.cpp	/^    const LweParams *in_lweparams = new_LweParams(n, plaintext_modulus, alpha_in, 1. \/ MAX_NOIS/;"	v	namespace:__anonc07144f40111	typeref:typename:const LweParams *
in_out_params	src/libtfhe-superaic-core/include/lwebootstrappingkey.h	/^    const LweParams* in_out_params; \/\/\/< paramètre de l'input et de l'output. key: s$/;"	m	struct:LweBootstrappingKey	typeref:typename:const LweParams *
in_out_params	src/libtfhe-superaic-core/include/lwebootstrappingkey.h	/^    const LweParams* in_out_params; \/\/\/< paramètre de l'input et de l'output. key: s$/;"	m	struct:LweBootstrappingKeyFFT	typeref:typename:const LweParams *
in_out_params	src/libtfhe-superaic-core/include/tfhe_gate_bootstrapping_structures.h	/^    const LweParams *const in_out_params;$/;"	m	struct:TFheGateBootstrappingParameterSet	typeref:typename:const LweParams * const
in_out_params	src/tests/fakes/lwe-bootstrapping-fft.h	/^        const LweParams *in_out_params; \/\/\/< paramètre de l'input et de l'output. key: s$/;"	m	struct:__anonaae24d1b0111::FakeLweBootstrappingKeyFFT	typeref:typename:const LweParams *
in_out_params	src/tests/fakes/lwe-bootstrapping.h	/^        const LweParams *in_out_params; \/\/\/< paramètre de l'input et de l'output. key: s$/;"	m	struct:__anon027fcd4e0111::FakeLweBootstrappingKey	typeref:typename:const LweParams *
in_params	src/tests/bootstrapping_classic_PBS_parameters_test.cpp	/^    const LweParams *in_params = new_LweParams(n, plaintext_modulus, alpha_in, 1. \/ 16.);$/;"	v	namespace:__anon8153b4f20111	typeref:typename:const LweParams *
in_params	src/tests/bootstrapping_direct_test.cpp	/^    const LweParams *in_params = new_LweParams(n, plaintext_modulus, alpha_in, 1. \/ 16.);$/;"	v	namespace:__anon560166140111	typeref:typename:const LweParams *
in_params	src/tests/bootstrapping_test.cpp	/^    const LweParams *in_params = new_LweParams(n, plaintext_modulus, alpha_in, 1. \/ 16.);$/;"	v	namespace:__anonf36cd29a0111	typeref:typename:const LweParams *
in_params	src/tests/decrypt_with_plaintext_modulus.cpp	/^    const LweParams *in_params = new_LweParams(n, plaintext_modulus, alpha_in, 1. \/ MAX_NOISE);$/;"	v	namespace:__anondb55d4a50111	typeref:typename:const LweParams *
in_params	src/tests/macros_decrypt_with_plaintext_modulus_macros.cpp	/^    const LweParams *in_params = new_LweParams(n, plaintext_modulus, alpha_in, 1. \/ MAX_NOISE);$/;"	v	namespace:__anon478224cd0111	typeref:typename:const LweParams *
in_params	src/tests/macros_modSwitch_with_plaintext_modulus_macros.cpp	/^    const LweParams *in_params = new_LweParams(n, plaintext_modulus, alpha_in, 1. \/ MAX_NOISE);$/;"	v	namespace:__anon4cdaee640111	typeref:typename:const LweParams *
in_params	src/tests/ops_add.cpp	/^    const LweParams *in_params = new_LweParams(n, plaintext_modulus, alpha_in, 1. \/ MAX_NOISE);$/;"	v	namespace:__anonb1f413890111	typeref:typename:const LweParams *
in_params	src/tests/ops_add_with_carry.cpp	/^    const LweParams *in_params = new_LweParams(n, plaintext_modulus, alpha_in, 1. \/ MAX_NOISE);$/;"	v	namespace:__anon662e63c40111	typeref:typename:const LweParams *
increment	src/muduo/muduo/base/Atomic.h	/^  void increment()$/;"	f	class:muduo::detail::AtomicIntegerT	typeref:typename:void
incrementAndGet	src/muduo/muduo/base/Atomic.h	/^  T incrementAndGet()$/;"	f	class:muduo::detail::AtomicIntegerT	typeref:typename:T
increment_death_test_count	src/tests/googletest/googletest/include/gtest/gtest.h	/^  int increment_death_test_count() { return ++death_test_count_; }$/;"	f	class:testing::TestResult	typeref:typename:int
increment_death_test_count	src/tests/googletest/googletest/include/gtest/gtest.h	/^  int increment_death_test_count() {$/;"	f	class:testing::TestInfo	typeref:typename:int
index	src/muduo/muduo/net/Channel.h	/^  int index() { return index_; }$/;"	f	class:muduo::net::Channel	typeref:typename:int
index	src/tests/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h	/^  int index() const { return index_; }$/;"	f	class:testing::internal::InternalRunDeathTestFlag	typeref:typename:int
index	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  size_t index;$/;"	m	struct:testing::TestParamInfo	typeref:typename:size_t
index_	src/muduo/muduo/net/Channel.h	/^  int        index_; \/\/ used by Poller.$/;"	m	class:muduo::net::Channel	typeref:typename:int
index_	src/tests/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h	/^  int index_;$/;"	m	class:testing::internal::InternalRunDeathTestFlag	typeref:typename:int
index_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^    int index_;$/;"	m	class:testing::internal::RangeGenerator::Iterator	typeref:typename:int
index_	src/tests/googletest/googletest/test/gtest-port_test.cc	/^  const size_t index_;$/;"	m	class:testing::internal::DestructorTracker	typeref:typename:const size_t	file:
index_var_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  const char* index_var_;$/;"	m	class:__anonf780395f0111::ShouldShardTest	typeref:typename:const char *	file:
inetaddress_unittest	src/muduo/muduo/net/tests/CMakeLists.txt	/^add_executable(inetaddress_unittest InetAddress_unittest.cc)$/;"	t
infinity	src/tests/googletest/googletest/test/gtest_unittest.cc	/^    RawType infinity;$/;"	m	struct:__anonf780395f0111::FloatingPointTest::TestValues	typeref:typename:RawType	file:
infinity_	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  const RawType infinity_;$/;"	m	class:testing::gmock_matchers_test::FloatingPointTest	typeref:typename:const RawType	file:
infinity_bits_	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  const Bits infinity_bits_;  \/\/ The bits that represent +infinity.$/;"	m	class:testing::gmock_matchers_test::FloatingPointTest	typeref:typename:const Bits	file:
info_arch	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v	typeref:typename:char const *
info_arch	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v	typeref:typename:char const *
info_compiler	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v	typeref:typename:char const *
info_compiler	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v	typeref:typename:char const *
info_cray	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v	typeref:typename:char const *
info_cray	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v	typeref:typename:char const *
info_language_dialect_default	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_dialect_default =$/;"	v	typeref:typename:const char *
info_language_dialect_default	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_dialect_default = "INFO" ":" "dialect_default["$/;"	v	typeref:typename:const char *
info_platform	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v	typeref:typename:char const *
info_platform	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v	typeref:typename:char const *
info_simulate	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v	typeref:typename:char const *
info_simulate	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v	typeref:typename:char const *
info_simulate_version	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v	typeref:typename:char const[]
info_simulate_version	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v	typeref:typename:char const[]
info_version	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v	typeref:typename:char const[]
info_version	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v	typeref:typename:char const[]
info_version_internal	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^char const info_version_internal[] = {$/;"	v	typeref:typename:char const[]
info_version_internal	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version_internal[] = {$/;"	v	typeref:typename:char const[]
init	src/libtfhe-superaic-acc/accs/FPGA-V0/acc_fpga_v0.cpp	/^ACC_RESULT FPGA_ACC_V0::init(const char * config_dev, const char * user_dev, const char * h2c_de/;"	f	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:ACC_RESULT
init	src/libtfhe-superaic-core/tfhe_garbage_collector.cpp	/^void TfheGarbageCollector::init() { if (!global_tfheGarbageCollector) global_tfheGarbageCollecto/;"	f	class:TfheGarbageCollector	typeref:typename:void
init	src/muduo/muduo/base/Singleton.h	/^  static void init()$/;"	f	class:muduo::Singleton	typeref:typename:void
init	src/muduo/muduo/base/Thread.cc	/^ThreadNameInitializer init;$/;"	v	namespace:muduo::detail	typeref:typename:ThreadNameInitializer
init	src/muduo/muduo/net/tests/EventLoopThreadPool_unittest.cc	/^void init(EventLoop* p)$/;"	f	typeref:typename:void
initLogLevel	src/muduo/muduo/base/Logging.cc	/^Logger::LogLevel initLogLevel()$/;"	f	namespace:muduo	typeref:typename:Logger::LogLevel
initObj	src/muduo/muduo/net/EventLoop.cc	/^IgnoreSigPipe initObj;$/;"	v	namespace:__anon600130340111	typeref:typename:IgnoreSigPipe
initPerThread	src/muduo/examples/protobuf/rpcbalancer/balancer.cc	/^  void initPerThread(EventLoop* ioLoop)$/;"	f	class:Balancer	typeref:typename:void	file:
initPerThread	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^  void initPerThread(EventLoop* ioLoop)$/;"	f	class:Balancer	typeref:typename:void	file:
init_IntPolynomial	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void init_IntPolynomial(IntPolynomial* obj, const int32_t N) {$/;"	f	typeref:typename:EXPORT void
init_IntPolynomial_array	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void init_IntPolynomial_array(int32_t nbelts, IntPolynomial* obj, const int32_t N) {$/;"	f	typeref:typename:EXPORT void
init_LagrangeHalfCPolynomial	src/libtfhe-superaic-core/fft_processors/nayuki/lagrangehalfc_impl.cpp	/^EXPORT void init_LagrangeHalfCPolynomial(LagrangeHalfCPolynomial* obj, const int32_t N) {$/;"	f	typeref:typename:EXPORT void
init_LagrangeHalfCPolynomial_array	src/libtfhe-superaic-core/fft_processors/nayuki/lagrangehalfc_impl.cpp	/^EXPORT void init_LagrangeHalfCPolynomial_array(int32_t nbelts, LagrangeHalfCPolynomial* obj, con/;"	f	typeref:typename:EXPORT void
init_LweBootstrappingKey	src/libtfhe-superaic-core/lwe-bootstrapping-functions.cpp	/^EXPORT void init_LweBootstrappingKey(LweBootstrappingKey *obj, int32_t ks_t, int32_t ks_basebit,/;"	f	typeref:typename:EXPORT void
init_LweBootstrappingKeyFFT	src/libtfhe-superaic-core/lwe-bootstrapping-functions-fft.cpp	/^EXPORT void init_LweBootstrappingKeyFFT(LweBootstrappingKeyFFT *obj, const LweBootstrappingKey */;"	f	typeref:typename:EXPORT void
init_LweBootstrappingKeyFFT_array	src/libtfhe-superaic-core/lwe-bootstrapping-functions-fft.cpp	/^EXPORT void init_LweBootstrappingKeyFFT_array(int32_t nbelts, LweBootstrappingKeyFFT *obj, const/;"	f	typeref:typename:EXPORT void
init_LweBootstrappingKey_array	src/libtfhe-superaic-core/lwe-bootstrapping-functions.cpp	/^EXPORT void init_LweBootstrappingKey_array(int32_t nbelts, LweBootstrappingKey *obj, int32_t ks_/;"	f	typeref:typename:EXPORT void
init_LweKey	src/libtfhe-superaic-core/lwe-functions.cpp	/^EXPORT void init_LweKey(LweKey* obj, const LweParams* params) {$/;"	f	typeref:typename:EXPORT void
init_LweKeySwitchKey	src/libtfhe-superaic-core/lwe-keyswitch-functions.cpp	/^EXPORT void init_LweKeySwitchKey(LweKeySwitchKey* obj, int32_t n, int32_t t, int32_t basebit, co/;"	f	typeref:typename:EXPORT void
init_LweKeySwitchKey_array	src/libtfhe-superaic-core/lwe-keyswitch-functions.cpp	/^EXPORT void init_LweKeySwitchKey_array(int32_t nbelts, LweKeySwitchKey* obj, int32_t n, int32_t /;"	f	typeref:typename:EXPORT void
init_LweParams	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void init_LweParams(LweParams* obj, int32_t n, int32_t plaintext_modulus, double alpha_mi/;"	f	typeref:typename:EXPORT void
init_LweParams_array	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void init_LweParams_array(int32_t nbelts, LweParams* obj, int32_t n, int32_t plaintext_mo/;"	f	typeref:typename:EXPORT void
init_LweSample	src/libtfhe-superaic-core/lwe-functions.cpp	/^EXPORT void init_LweSample(LweSample* obj, const LweParams* params) {$/;"	f	typeref:typename:EXPORT void
init_TGswKey	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void init_TGswKey(TGswKey* obj, const TGswParams* params) {$/;"	f	typeref:typename:EXPORT void
init_TGswKey_array	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void init_TGswKey_array(int32_t nbelts, TGswKey* obj, const TGswParams* params) {$/;"	f	typeref:typename:EXPORT void
init_TGswParams	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void init_TGswParams(TGswParams* obj, int32_t l, int32_t Bgbit, const TLweParams* tlwe_pa/;"	f	typeref:typename:EXPORT void
init_TGswParams_array	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void init_TGswParams_array(int32_t nbelts, TGswParams* obj, int32_t l, int32_t Bgbit, con/;"	f	typeref:typename:EXPORT void
init_TGswSample	src/libtfhe-superaic-core/tgsw-functions.cpp	/^EXPORT void init_TGswSample(TGswSample *obj, const TGswParams *params) {$/;"	f	typeref:typename:EXPORT void
init_TGswSampleFFT	src/libtfhe-superaic-core/tgsw-fft-operations.cpp	/^EXPORT void init_TGswSampleFFT(TGswSampleFFT *obj, const TGswParams *params) {$/;"	f	typeref:typename:EXPORT void
init_TLweKey	src/libtfhe-superaic-core/tlwe-functions.cpp	/^EXPORT void init_TLweKey(TLweKey *obj, const TLweParams *params) {$/;"	f	typeref:typename:EXPORT void
init_TLweParams	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void init_TLweParams(TLweParams* obj, int32_t N, int32_t k, int32_t plaintext_modulus, do/;"	f	typeref:typename:EXPORT void
init_TLweParams_array	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void init_TLweParams_array(int32_t nbelts, TLweParams* obj, int32_t N, int32_t k, int32_t/;"	f	typeref:typename:EXPORT void
init_TLweSample	src/libtfhe-superaic-core/tlwe-functions.cpp	/^EXPORT void init_TLweSample(TLweSample *obj, const TLweParams *params) {$/;"	f	typeref:typename:EXPORT void
init_TLweSampleFFT	src/libtfhe-superaic-core/tlwe-fft-operations.cpp	/^EXPORT void init_TLweSampleFFT(TLweSampleFFT *obj, const TLweParams *params) {$/;"	f	typeref:typename:EXPORT void
init_TorusPolynomial	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void init_TorusPolynomial(TorusPolynomial* obj, const int32_t N) {$/;"	f	typeref:typename:EXPORT void
init_TorusPolynomial_array	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT void init_TorusPolynomial_array(int32_t nbelts, TorusPolynomial* obj, const int32_t N) {$/;"	f	typeref:typename:EXPORT void
initialize	src/muduo/examples/curl/Curl.cc	/^void Curl::initialize(Option opt)$/;"	f	class:Curl	typeref:typename:void
initially_allocated_	src/tests/googletest/googletest/samples/sample10_unittest.cc	/^  int initially_allocated_;$/;"	m	class:__anona6935d300111::LeakChecker	typeref:typename:int	file:
innerPolynomial	src/tests/fakes/lagrangehalfc.h	/^        union innerPolynomial {$/;"	u	struct:__anonb49ff32c0111::FakeLagrangeHalfCPolynomial
inner_matcher_	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^  const InnerMatcher inner_matcher_;$/;"	m	class:testing::internal::ArgsMatcher	typeref:typename:const InnerMatcher
inner_matcher_	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^  const MonomorphicInnerMatcher inner_matcher_;$/;"	m	class:testing::internal::ArgsMatcherImpl	typeref:typename:const MonomorphicInnerMatcher
inner_matcher_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const M inner_matcher_;$/;"	m	class:testing::internal::ContainsMatcher	typeref:typename:const M
inner_matcher_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const M inner_matcher_;$/;"	m	class:testing::internal::EachMatcher	typeref:typename:const M
inner_matcher_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const Matcher<const Element&> inner_matcher_;$/;"	m	class:testing::internal::QuantifierMatcherImpl	typeref:typename:const Matcher<const Element &>
inner_matcher_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const Matcher<const KeyType&> inner_matcher_;$/;"	m	class:testing::internal::KeyMatcherImpl	typeref:typename:const Matcher<const KeyType &>
innerloop	src/libtfhe-superaic-core/fft_processors/nayuki/fft-x8664-avx-reverse.s	/^innerloop:   \/* For each 4 elements up to halfsize. r9 is the vector start. *\/$/;"	l
innerloop	src/libtfhe-superaic-core/fft_processors/nayuki/fft-x8664-avx.s	/^innerloop:   \/* For each 4 elements up to halfsize. r9 is the vector start. *\/$/;"	l
inout_	src/muduo/examples/sudoku/sudoku.cc	/^    int*    inout_;$/;"	m	class:SudokuSolver	typeref:typename:int *	file:
inputBuffer	src/muduo/muduo/net/TcpConnection.h	/^  Buffer* inputBuffer()$/;"	f	class:muduo::net::TcpConnection	typeref:typename:Buffer *
inputBuffer_	src/muduo/muduo/net/TcpConnection.h	/^  Buffer inputBuffer_;$/;"	m	class:muduo::net::TcpConnection	typeref:typename:Buffer
inputBytes	src/muduo/muduo/net/ZlibStream.h	/^  int64_t inputBytes() const { return zstream_.total_in; }$/;"	f	class:muduo::net::ZlibOutputStream	typeref:typename:int64_t
inputProtocol_	src/muduo/contrib/thrift/ThriftConnection.h	/^  boost::shared_ptr<TProtocol> inputProtocol_;$/;"	m	class:ThriftConnection	typeref:typename:boost::shared_ptr<TProtocol>
inputTransport_	src/muduo/contrib/thrift/ThriftConnection.h	/^  boost::shared_ptr<TMemoryBuffer> inputTransport_;$/;"	m	class:ThriftConnection	typeref:typename:boost::shared_ptr<TMemoryBuffer>
input_	src/muduo/examples/sudoku/batch.cc	/^  InputPtr input_;$/;"	m	class:SudokuClient	typeref:typename:InputPtr	file:
input_	src/muduo/examples/sudoku/loadtest.cc	/^  const InputPtr input_;$/;"	m	class:SudokuClient	typeref:typename:const InputPtr	file:
input_	src/muduo/examples/sudoku/pipeline.cc	/^  const InputPtr input_;$/;"	m	class:SudokuClient	typeref:typename:const InputPtr	file:
input_dir	src/tests/googletest/googletest/xcode/Scripts/versiongenerate.py	/^  input_dir = sys.argv[1]$/;"	v
insert	src/muduo/muduo/net/TimerQueue.cc	/^bool TimerQueue::insert(Timer* timer)$/;"	f	class:TimerQueue	typeref:typename:bool
inspect	src/muduo/muduo/net/inspect/ProcessInspector.cc	/^namespace inspect$/;"	n	namespace:muduo	file:
inspect	src/muduo/muduo/net/inspect/SystemInspector.cc	/^namespace inspect$/;"	n	namespace:muduo	file:
inspectThread_	src/muduo/examples/sudoku/server_hybrid.cc	/^  EventLoopThread inspectThread_;$/;"	m	class:SudokuServer	typeref:typename:EventLoopThread	file:
inspectThread_	src/muduo/examples/sudoku/server_prod.cc	/^  EventLoopThread inspectThread_;$/;"	m	class:SudokuServer	typeref:typename:EventLoopThread	file:
inspect_SRCS	src/muduo/muduo/net/inspect/CMakeLists.txt	/^set(inspect_SRCS$/;"	v
inspector_	src/muduo/examples/sudoku/server_hybrid.cc	/^  Inspector inspector_;$/;"	m	class:SudokuServer	typeref:typename:Inspector	file:
inspector_	src/muduo/examples/sudoku/server_prod.cc	/^  Inspector inspector_;$/;"	m	class:SudokuServer	typeref:typename:Inspector	file:
inspector_test	src/muduo/muduo/net/inspect/CMakeLists.txt	/^add_executable(inspector_test tests\/Inspector_test.cc)$/;"	t
install	Makefile	/^install: build$/;"	t
install	buildotests/Makefile	/^install: preinstall$/;"	t
install	buildotests/driver/Makefile	/^install: preinstall$/;"	t
install	buildotests/examples/Makefile	/^install: preinstall$/;"	t
install	buildotests/libtfhe-superaic-acc/Makefile	/^install: preinstall$/;"	t
install	buildotests/libtfhe-superaic-client/Makefile	/^install: preinstall$/;"	t
install	buildotests/libtfhe-superaic-core/Makefile	/^install: preinstall$/;"	t
install	buildotests/libtfhe-superaic-core/fft_processors/Makefile	/^install: preinstall$/;"	t
install	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^install: preinstall$/;"	t
install	buildotests/libtfhe-superaic-server/Makefile	/^install: preinstall$/;"	t
install	buildotests/tests/Makefile	/^install: preinstall$/;"	t
install	buildotests/tests/googletest/Makefile	/^install: preinstall$/;"	t
install	buildotests/tests/googletest/googlemock/Makefile	/^install: preinstall$/;"	t
install	buildotests/tests/googletest/googlemock/gtest/Makefile	/^install: preinstall$/;"	t
install-data-local	src/tests/googletest/googlemock/Makefile.am	/^install-data-local:$/;"	t
install-data-local	src/tests/googletest/googletest/Makefile.am	/^install-data-local:$/;"	t
install-exec-local	src/tests/googletest/googlemock/Makefile.am	/^install-exec-local:$/;"	t
install-exec-local	src/tests/googletest/googletest/Makefile.am	/^install-exec-local:$/;"	t
install/fast	buildotests/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/fast	buildotests/driver/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/fast	buildotests/examples/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/fast	buildotests/libtfhe-superaic-acc/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/fast	buildotests/libtfhe-superaic-client/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/fast	buildotests/libtfhe-superaic-core/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/fast	buildotests/libtfhe-superaic-core/fft_processors/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/fast	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/fast	buildotests/libtfhe-superaic-server/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/fast	buildotests/tests/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/fast	buildotests/tests/googletest/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/fast	buildotests/tests/googletest/googlemock/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/fast	buildotests/tests/googletest/googlemock/gtest/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/local	buildotests/Makefile	/^install\/local: preinstall$/;"	t
install/local	buildotests/driver/Makefile	/^install\/local: preinstall$/;"	t
install/local	buildotests/examples/Makefile	/^install\/local: preinstall$/;"	t
install/local	buildotests/libtfhe-superaic-acc/Makefile	/^install\/local: preinstall$/;"	t
install/local	buildotests/libtfhe-superaic-client/Makefile	/^install\/local: preinstall$/;"	t
install/local	buildotests/libtfhe-superaic-core/Makefile	/^install\/local: preinstall$/;"	t
install/local	buildotests/libtfhe-superaic-core/fft_processors/Makefile	/^install\/local: preinstall$/;"	t
install/local	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^install\/local: preinstall$/;"	t
install/local	buildotests/libtfhe-superaic-server/Makefile	/^install\/local: preinstall$/;"	t
install/local	buildotests/tests/Makefile	/^install\/local: preinstall$/;"	t
install/local	buildotests/tests/googletest/Makefile	/^install\/local: preinstall$/;"	t
install/local	buildotests/tests/googletest/googlemock/Makefile	/^install\/local: preinstall$/;"	t
install/local	buildotests/tests/googletest/googlemock/gtest/Makefile	/^install\/local: preinstall$/;"	t
install/local/fast	buildotests/Makefile	/^install\/local\/fast: preinstall\/fast$/;"	t
install/local/fast	buildotests/driver/Makefile	/^install\/local\/fast: preinstall\/fast$/;"	t
install/local/fast	buildotests/examples/Makefile	/^install\/local\/fast: preinstall\/fast$/;"	t
install/local/fast	buildotests/libtfhe-superaic-acc/Makefile	/^install\/local\/fast: preinstall\/fast$/;"	t
install/local/fast	buildotests/libtfhe-superaic-client/Makefile	/^install\/local\/fast: preinstall\/fast$/;"	t
install/local/fast	buildotests/libtfhe-superaic-core/Makefile	/^install\/local\/fast: preinstall\/fast$/;"	t
install/local/fast	buildotests/libtfhe-superaic-core/fft_processors/Makefile	/^install\/local\/fast: preinstall\/fast$/;"	t
install/local/fast	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^install\/local\/fast: preinstall\/fast$/;"	t
install/local/fast	buildotests/libtfhe-superaic-server/Makefile	/^install\/local\/fast: preinstall\/fast$/;"	t
install/local/fast	buildotests/tests/Makefile	/^install\/local\/fast: preinstall\/fast$/;"	t
install/local/fast	buildotests/tests/googletest/Makefile	/^install\/local\/fast: preinstall\/fast$/;"	t
install/local/fast	buildotests/tests/googletest/googlemock/Makefile	/^install\/local\/fast: preinstall\/fast$/;"	t
install/local/fast	buildotests/tests/googletest/googlemock/gtest/Makefile	/^install\/local\/fast: preinstall\/fast$/;"	t
install/strip	buildotests/Makefile	/^install\/strip: preinstall$/;"	t
install/strip	buildotests/driver/Makefile	/^install\/strip: preinstall$/;"	t
install/strip	buildotests/examples/Makefile	/^install\/strip: preinstall$/;"	t
install/strip	buildotests/libtfhe-superaic-acc/Makefile	/^install\/strip: preinstall$/;"	t
install/strip	buildotests/libtfhe-superaic-client/Makefile	/^install\/strip: preinstall$/;"	t
install/strip	buildotests/libtfhe-superaic-core/Makefile	/^install\/strip: preinstall$/;"	t
install/strip	buildotests/libtfhe-superaic-core/fft_processors/Makefile	/^install\/strip: preinstall$/;"	t
install/strip	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^install\/strip: preinstall$/;"	t
install/strip	buildotests/libtfhe-superaic-server/Makefile	/^install\/strip: preinstall$/;"	t
install/strip	buildotests/tests/Makefile	/^install\/strip: preinstall$/;"	t
install/strip	buildotests/tests/googletest/Makefile	/^install\/strip: preinstall$/;"	t
install/strip	buildotests/tests/googletest/googlemock/Makefile	/^install\/strip: preinstall$/;"	t
install/strip	buildotests/tests/googletest/googlemock/gtest/Makefile	/^install\/strip: preinstall$/;"	t
install/strip/fast	buildotests/Makefile	/^install\/strip\/fast: preinstall\/fast$/;"	t
install/strip/fast	buildotests/driver/Makefile	/^install\/strip\/fast: preinstall\/fast$/;"	t
install/strip/fast	buildotests/examples/Makefile	/^install\/strip\/fast: preinstall\/fast$/;"	t
install/strip/fast	buildotests/libtfhe-superaic-acc/Makefile	/^install\/strip\/fast: preinstall\/fast$/;"	t
install/strip/fast	buildotests/libtfhe-superaic-client/Makefile	/^install\/strip\/fast: preinstall\/fast$/;"	t
install/strip/fast	buildotests/libtfhe-superaic-core/Makefile	/^install\/strip\/fast: preinstall\/fast$/;"	t
install/strip/fast	buildotests/libtfhe-superaic-core/fft_processors/Makefile	/^install\/strip\/fast: preinstall\/fast$/;"	t
install/strip/fast	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^install\/strip\/fast: preinstall\/fast$/;"	t
install/strip/fast	buildotests/libtfhe-superaic-server/Makefile	/^install\/strip\/fast: preinstall\/fast$/;"	t
install/strip/fast	buildotests/tests/Makefile	/^install\/strip\/fast: preinstall\/fast$/;"	t
install/strip/fast	buildotests/tests/googletest/Makefile	/^install\/strip\/fast: preinstall\/fast$/;"	t
install/strip/fast	buildotests/tests/googletest/googlemock/Makefile	/^install\/strip\/fast: preinstall\/fast$/;"	t
install/strip/fast	buildotests/tests/googletest/googlemock/gtest/Makefile	/^install\/strip\/fast: preinstall\/fast$/;"	t
instance	src/muduo/muduo/base/Singleton.h	/^  static T& instance()$/;"	f	class:muduo::Singleton	typeref:typename:T &
instance	src/muduo/muduo/base/ThreadLocalSingleton.h	/^  static T& instance()$/;"	f	class:muduo::ThreadLocalSingleton	typeref:typename:T &
instantiations_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  InstantiationContainer instantiations_;$/;"	m	class:testing::internal::ParameterizedTestCaseInfo	typeref:typename:InstantiationContainer
intPolynomialAddTo	src/libtfhe-superaic-core/toruspolynomial-functions.cpp	/^EXPORT void intPolynomialAddTo(IntPolynomial *accum, const IntPolynomial *source) {$/;"	f	typeref:typename:EXPORT void
intPolynomialClear	src/libtfhe-superaic-core/toruspolynomial-functions.cpp	/^EXPORT void intPolynomialClear(IntPolynomial *poly) {$/;"	f	typeref:typename:EXPORT void
intPolynomialCopy	src/libtfhe-superaic-core/toruspolynomial-functions.cpp	/^EXPORT void intPolynomialCopy(IntPolynomial *result, const IntPolynomial *source) {$/;"	f	typeref:typename:EXPORT void
intPolynomialMulByXaiMinusOne	src/libtfhe-superaic-core/toruspolynomial-functions.cpp	/^EXPORT void intPolynomialMulByXaiMinusOne(IntPolynomial *result, int32_t ai, const IntPolynomial/;"	f	typeref:typename:EXPORT void
intPolynomialNorm2sq	src/libtfhe-superaic-core/toruspolynomial-functions.cpp	/^EXPORT double intPolynomialNorm2sq(const IntPolynomial *poly) {$/;"	f	typeref:typename:EXPORT double
intPolynomialNormInftyDist	src/libtfhe-superaic-core/toruspolynomial-functions.cpp	/^EXPORT double intPolynomialNormInftyDist(const IntPolynomial *poly1, const IntPolynomial *poly2)/;"	f	typeref:typename:EXPORT double
intPolynomialNormSq2	src/libtfhe-superaic-core/toruspolynomial-functions.cpp	/^EXPORT double intPolynomialNormSq2(const IntPolynomial *poly) {$/;"	f	typeref:typename:EXPORT double
intVecSubTo_avx	src/libtfhe-superaic-core/lwe-functions.cpp	/^EXPORT void __attribute__ ((noinline)) intVecSubTo_avx(int32_t* r, const int32_t* a, int64_t n) /;"	f	typeref:typename:EXPORT void
intVecSubTo_avx_test	src/libtfhe-superaic-core/lwe-functions.cpp	/^int32_t intVecSubTo_avx_test() {$/;"	f	typeref:typename:int32_t
int_tab_copy	src/tests/polynomial_test.cpp	/^    void int_tab_copy(int32_t *dest, const int32_t *tab, int32_t N) {$/;"	f	namespace:__anon87ebe9520111	typeref:typename:void
intercept_mode_	src/tests/googletest/googletest/include/gtest/gtest-spi.h	/^  const InterceptMode intercept_mode_;$/;"	m	class:testing::ScopedFakeTestPartResultReporter	typeref:typename:const InterceptMode
internal	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^namespace internal {$/;"	n	namespace:testing
internal	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^namespace internal {$/;"	n	namespace:testing
internal	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^namespace internal {$/;"	n	namespace:testing
internal	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^namespace internal {$/;"	n	namespace:testing
internal	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^namespace internal {$/;"	n	namespace:testing
internal	src/tests/googletest/googlemock/include/gmock/gmock-more-actions.h	/^namespace internal {$/;"	n	namespace:testing
internal	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^namespace internal {$/;"	n	namespace:testing
internal	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^namespace internal {$/;"	n	namespace:testing
internal	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^namespace internal {$/;"	n	namespace:testing
internal	src/tests/googletest/googlemock/src/gmock-internal-utils.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	src/tests/googletest/googlemock/src/gmock-matchers.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	src/tests/googletest/googlemock/src/gmock.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	src/tests/googletest/googletest/include/gtest/gtest-death-test.h	/^namespace internal {$/;"	n	namespace:testing
internal	src/tests/googletest/googletest/include/gtest/gtest-message.h	/^namespace internal {$/;"	n	namespace:testing
internal	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^namespace internal {$/;"	n	namespace:testing
internal	src/tests/googletest/googletest/include/gtest/gtest-spi.h	/^namespace internal {$/;"	n	namespace:testing
internal	src/tests/googletest/googletest/include/gtest/gtest-test-part.h	/^namespace internal {$/;"	n	namespace:testing
internal	src/tests/googletest/googletest/include/gtest/gtest.h	/^namespace internal {$/;"	n	namespace:testing
internal	src/tests/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h	/^namespace internal {$/;"	n	namespace:testing
internal	src/tests/googletest/googletest/include/gtest/internal/gtest-filepath.h	/^namespace internal {$/;"	n	namespace:testing
internal	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^namespace internal {$/;"	n	namespace:testing
internal	src/tests/googletest/googletest/include/gtest/internal/gtest-linked_ptr.h	/^namespace internal {$/;"	n	namespace:testing
internal	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^namespace internal {$/;"	n	namespace:testing
internal	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^namespace internal {$/;"	n	namespace:testing
internal	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^namespace internal {$/;"	n	namespace:testing
internal	src/tests/googletest/googletest/include/gtest/internal/gtest-string.h	/^namespace internal {$/;"	n	namespace:testing
internal	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^namespace internal {$/;"	n	namespace:testing
internal	src/tests/googletest/googletest/src/gtest-death-test.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	src/tests/googletest/googletest/src/gtest-filepath.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^namespace internal {$/;"	n	namespace:testing
internal	src/tests/googletest/googletest/src/gtest-port.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	src/tests/googletest/googletest/src/gtest-printers.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	src/tests/googletest/googletest/src/gtest-test-part.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	src/tests/googletest/googletest/src/gtest-typed-test.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	src/tests/googletest/googletest/src/gtest.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	src/tests/googletest/googletest/test/gtest-listener_test.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	src/tests/googletest/googletest/test/gtest-options_test.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	src/tests/googletest/googletest/test/gtest-port_test.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	src/tests/googletest/googletest/test/gtest-unittest-api_test.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	src/tests/googletest/googletest/test/gtest_unittest.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal2	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^namespace internal2 {$/;"	n	namespace:testing
internal2	src/tests/googletest/googletest/src/gtest-printers.cc	/^namespace internal2 {$/;"	n	namespace:testing	file:
internalCapacity	src/muduo/muduo/net/Buffer.h	/^  size_t internalCapacity() const$/;"	f	class:muduo::net::Buffer	typeref:typename:size_t
internalOutputBufferSize	src/muduo/muduo/net/ZlibStream.h	/^  int internalOutputBufferSize() const { return bufferSize_; }$/;"	f	class:muduo::net::ZlibOutputStream	typeref:typename:int
internal_run_death_test_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  std::string internal_run_death_test_;$/;"	m	class:testing::internal::GTestFlagSaver	typeref:typename:std::string
internal_run_death_test_flag	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  const InternalRunDeathTestFlag* internal_run_death_test_flag() const {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:const InternalRunDeathTestFlag *
internal_run_death_test_flag_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  internal::scoped_ptr<InternalRunDeathTestFlag> internal_run_death_test_flag_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:internal::scoped_ptr<InternalRunDeathTestFlag>
interval_	src/muduo/muduo/net/Timer.h	/^  const double interval_;$/;"	m	class:muduo::net::Timer	typeref:typename:const double
interval_	src/muduo/muduo/net/tests/Channel_test.cc	/^  const double interval_; \/\/ in seconds$/;"	m	class:PeriodicTimer	typeref:typename:const double	file:
invalid	src/muduo/muduo/base/Timestamp.h	/^  static Timestamp invalid()$/;"	f	class:muduo::Timestamp	typeref:typename:Timestamp
invoke_argument	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^namespace invoke_argument {$/;"	n	namespace:testing::internal
invoked_	src/tests/googletest/googletest/test/gtest-port_test.cc	/^  bool invoked_;$/;"	m	class:testing::internal::DestructorCall	typeref:typename:bool	file:
ip	src/muduo/examples/protobuf/resolver/resolver.proto	/^  repeated fixed32 ip = 2;$/;"	f	message:resolver.ResolveResponse	typeref:typename:fixed32
ipPort	src/muduo/muduo/net/TcpServer.h	/^  const string& ipPort() const { return ipPort_; }$/;"	f	class:muduo::net::TcpServer	typeref:typename:const string &
ipPort_	src/muduo/muduo/net/TcpServer.h	/^  const string ipPort_;$/;"	m	class:muduo::net::TcpServer	typeref:typename:const string
ipv4NetEndian	src/muduo/muduo/net/InetAddress.cc	/^uint32_t InetAddress::ipv4NetEndian() const$/;"	f	class:InetAddress	typeref:typename:uint32_t
isBinaryProtocol	src/muduo/examples/memcached/server/Session.cc	/^static bool isBinaryProtocol(uint8_t firstByte)$/;"	f	typeref:typename:bool	file:
isBusy	src/libtfhe-superaic-acc/accs/executor.cpp	/^bool Executor::isBusy() {$/;"	f	class:tfhe_superaic::Executor	typeref:typename:bool
isDebugBuild	src/muduo/muduo/base/ProcessInfo.cc	/^bool ProcessInfo::isDebugBuild()$/;"	f	class:ProcessInfo	typeref:typename:bool
isDst	src/muduo/muduo/base/TimeZone.cc	/^    bool isDst;$/;"	m	struct:TimeZone::Data::LocalTime	typeref:typename:bool	file:
isEmpty	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/EventQueue.java	/^    public boolean isEmpty() {$/;"	m	class:EventQueue
isFull	src/muduo/muduo/base/ThreadPool.cc	/^bool ThreadPool::isFull() const$/;"	f	class:ThreadPool	typeref:typename:bool
isInLoopThread	src/muduo/muduo/net/EventLoop.h	/^  bool isInLoopThread() const { return threadId_ == CurrentThread::tid(); }$/;"	f	class:muduo::net::EventLoop	typeref:typename:bool
isInt	src/tests/fakes/lagrangehalfc.h	/^        int32_t isInt; \/\/ -1: nsp, 0: torus, 1: int32_t$/;"	m	struct:__anonb49ff32c0111::FakeLagrangeHalfCPolynomial	typeref:typename:int32_t
isLeapYear	src/muduo/muduo/base/tests/Date_unittest.cc	/^int isLeapYear(int year)$/;"	f	typeref:typename:int
isLockedByThisThread	src/muduo/muduo/base/Mutex.h	/^  bool isLockedByThisThread() const$/;"	f	class:muduo::MutexLock	typeref:typename:bool
isMainThread	src/muduo/muduo/base/Thread.cc	/^bool CurrentThread::isMainThread()$/;"	f	class:muduo::CurrentThread	typeref:typename:bool
isNoneEvent	src/muduo/muduo/net/Channel.h	/^  bool isNoneEvent() const { return events_ == kNoneEvent; }$/;"	f	class:muduo::net::Channel	typeref:typename:bool
isReading	src/muduo/muduo/net/Channel.h	/^  bool isReading() const { return events_ & kReadEvent; }$/;"	f	class:muduo::net::Channel	typeref:typename:bool
isReading	src/muduo/muduo/net/TcpConnection.h	/^  bool isReading() const { return reading_; }; \/\/ NOT thread safe, may race with start\/stopRe/;"	f	class:muduo::net::TcpConnection	typeref:typename:bool
isSelfConnect	src/muduo/muduo/net/SocketsOps.cc	/^bool sockets::isSelfConnect(int sockfd)$/;"	f	class:sockets	typeref:typename:bool
isWorkerThreadPoolProcessing	src/muduo/contrib/thrift/ThriftServer.h	/^  bool isWorkerThreadPoolProcessing() const$/;"	f	class:ThriftServer	typeref:typename:bool
isWriting	src/muduo/muduo/net/Channel.h	/^  bool isWriting() const { return events_ & kWriteEvent; }$/;"	f	class:muduo::net::Channel	typeref:typename:bool
is_POD_type	src/muduo/muduo/base/StringPiece.h	/^  typedef __true_type    is_POD_type;$/;"	t	struct:__type_traits	typeref:typename:__true_type
is_deleted_	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^  bool* is_deleted_;$/;"	m	class:testing::gmock_more_actions_test::DeletionTester	typeref:typename:bool *	file:
is_destroyed_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  bool* is_destroyed_;$/;"	m	class:TestListener	typeref:typename:bool *	file:
is_disabled_	src/tests/googletest/googletest/include/gtest/gtest.h	/^  bool is_disabled_;                \/\/ True iff this test is disabled$/;"	m	class:testing::TestInfo	typeref:typename:bool
is_nan	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  bool is_nan() const {$/;"	f	class:testing::internal::FloatingPoint	typeref:typename:bool
is_pointer	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^struct is_pointer : public false_type {};$/;"	s	namespace:testing::internal
is_pointer	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^struct is_pointer<T*> : public true_type {};$/;"	s	namespace:testing::internal
is_prime_	src/tests/googletest/googletest/samples/prime_tables.h	/^  bool* const is_prime_;$/;"	m	class:PreCalculatedPrimeTable	typeref:typename:bool * const
is_prime_size_	src/tests/googletest/googletest/samples/prime_tables.h	/^  const int is_prime_size_;$/;"	m	class:PreCalculatedPrimeTable	typeref:typename:const int
is_reference	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^template <typename T> struct is_reference : public false_type {};$/;"	s	namespace:testing::internal
is_reference	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^template <typename T> struct is_reference<T&> : public true_type {};$/;"	s	namespace:testing::internal
is_reportable	src/tests/googletest/googletest/include/gtest/gtest.h	/^  bool is_reportable() const {$/;"	f	class:testing::TestInfo	typeref:typename:bool
is_retired	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  bool is_retired() const$/;"	f	class:testing::internal::ExpectationBase	typeref:typename:bool
is_valid_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  bool is_valid_;$/;"	m	class:testing::internal::RE	typeref:typename:bool
items	src/muduo/examples/memcached/server/MemcacheServer.h	/^    ItemMap items;$/;"	m	struct:MemcacheServer::MapWithLock	typeref:typename:ItemMap
iteration	src/muduo/muduo/net/EventLoop.h	/^  int64_t iteration() const { return iteration_; }$/;"	f	class:muduo::net::EventLoop	typeref:typename:int64_t
iteration_	src/muduo/muduo/net/EventLoop.h	/^  int64_t iteration_;$/;"	m	class:muduo::net::EventLoop	typeref:typename:int64_t
iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  typedef Element* iterator;$/;"	t	class:testing::internal::NativeArray	typeref:typename:Element *
iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  typedef ParamIterator<T> iterator;$/;"	t	class:testing::internal::ParamGenerator	typeref:typename:ParamIterator<T>
iterator	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^struct iterator {$/;"	s	namespace:testing::gtest_printers_test	file:
iterator_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^    typename ContainerType::const_iterator iterator_;$/;"	m	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator	typeref:typename:ContainerType::const_iterator
itrealvalue	src/muduo/examples/procmon/procmon.cc	/^  long itrealvalue;$/;"	m	struct:StatData	typeref:typename:long	file:
join	src/muduo/muduo/base/Thread.cc	/^int Thread::join()$/;"	f	class:muduo::Thread	typeref:typename:int
join	src/tests/googletest/googletest/include/gtest/internal/gtest-linked_ptr.h	/^  void join(linked_ptr_internal const* ptr)$/;"	f	class:testing::internal::linked_ptr_internal	typeref:typename:void
joinAll	src/muduo/muduo/base/tests/BlockingQueue_bench.cc	/^  void joinAll()$/;"	f	class:Bench	typeref:typename:void	file:
joinAll	src/muduo/muduo/base/tests/BlockingQueue_test.cc	/^  void joinAll()$/;"	f	class:Test	typeref:typename:void	file:
joinAll	src/muduo/muduo/base/tests/BoundedBlockingQueue_test.cc	/^  void joinAll()$/;"	f	class:Test	typeref:typename:void	file:
join_new	src/tests/googletest/googletest/include/gtest/internal/gtest-linked_ptr.h	/^  void join_new() {$/;"	f	class:testing::internal::linked_ptr_internal	typeref:typename:void
joined_	src/muduo/muduo/base/Thread.h	/^  bool       joined_;$/;"	m	class:muduo::Thread	typeref:typename:bool
julianDayNumber	src/muduo/muduo/base/Date.h	/^  int julianDayNumber() const { return julianDayNumber_; }$/;"	f	class:muduo::Date	typeref:typename:int
julianDayNumber_	src/muduo/muduo/base/Date.h	/^  int julianDayNumber_;$/;"	m	class:muduo::Date	typeref:typename:int
k	src/libtfhe-superaic-core/include/tgsw.h	/^    const int32_t k;$/;"	m	struct:TGswSample	typeref:typename:const int32_t
k	src/libtfhe-superaic-core/include/tgsw.h	/^    const int32_t k;$/;"	m	struct:TGswSampleFFT	typeref:typename:const int32_t
k	src/libtfhe-superaic-core/include/tlwe.h	/^    const int32_t k; \/\/\/< number of polynomials in the mask$/;"	m	struct:TLweParams	typeref:typename:const int32_t
k	src/libtfhe-superaic-core/include/tlwe.h	/^    const int32_t k; \/\/required during the destructor call...$/;"	m	struct:TLweSampleFFT	typeref:typename:const int32_t
k	src/libtfhe-superaic-core/include/tlwe.h	/^    const int32_t k;$/;"	m	struct:TLweSample	typeref:typename:const int32_t
k	src/tests/bootstrapping_classic_PBS_parameters_test.cpp	/^    const int32_t k = M8_PARAM.tlwe_dimension;$/;"	v	namespace:__anon8153b4f20111	typeref:typename:const int32_t
k	src/tests/bootstrapping_direct_test.cpp	/^    const int32_t k = 1;$/;"	v	namespace:__anon560166140111	typeref:typename:const int32_t
k	src/tests/bootstrapping_test.cpp	/^    const int32_t k = 1;$/;"	v	namespace:__anonf36cd29a0111	typeref:typename:const int32_t
k	src/tests/decrypt_with_plaintext_modulus.cpp	/^    const int32_t k = M8_PARAM.tlwe_dimension;$/;"	v	namespace:__anondb55d4a50111	typeref:typename:const int32_t
k	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  int k() const { return k_; }$/;"	f	class:testing::gmock_matchers_test::DerivedClass	typeref:typename:int	file:
k	src/tests/macros_decrypt_with_plaintext_modulus_macros.cpp	/^    const int32_t k = M8_PARAM.tlwe_dimension;$/;"	v	namespace:__anon478224cd0111	typeref:typename:const int32_t
k	src/tests/macros_modSwitch_with_plaintext_modulus_macros.cpp	/^    const int32_t k = M8_PARAM.tlwe_dimension;$/;"	v	namespace:__anon4cdaee640111	typeref:typename:const int32_t
k	src/tests/ops_add.cpp	/^    const int32_t k = M8_PARAM.tlwe_dimension;$/;"	v	namespace:__anonb1f413890111	typeref:typename:const int32_t
k	src/tests/ops_add_with_carry.cpp	/^    const int32_t k = M8_PARAM.tlwe_dimension;$/;"	v	namespace:__anon662e63c40111	typeref:typename:const int32_t
k	src/tests/zpf_for_bootstrap_detail.cpp	/^    const int32_t k = M8_PARAM.tlwe_dimension;$/;"	v	namespace:__anonc07144f40111	typeref:typename:const int32_t
k200Ok	src/muduo/muduo/net/http/HttpResponse.h	/^    k200Ok = 200,$/;"	e	enum:muduo::net::HttpResponse::HttpStatusCode
k301MovedPermanently	src/muduo/muduo/net/http/HttpResponse.h	/^    k301MovedPermanently = 301,$/;"	e	enum:muduo::net::HttpResponse::HttpStatusCode
k400BadRequest	src/muduo/muduo/net/http/HttpResponse.h	/^    k400BadRequest = 400,$/;"	e	enum:muduo::net::HttpResponse::HttpStatusCode
k404NotFound	src/muduo/muduo/net/http/HttpResponse.h	/^    k404NotFound = 404,$/;"	e	enum:muduo::net::HttpResponse::HttpStatusCode
kAE1	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^  kAE1 = -1,$/;"	e	enum:AnonymousEnum	file:
kAE2	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^  kAE2 = 1$/;"	e	enum:AnonymousEnum	file:
kAdd	src/muduo/examples/memcached/server/Item.h	/^    kAdd,$/;"	e	enum:Item::UpdatePolicy
kAdd	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^enum EditType { kMatch, kAdd, kRemove, kReplace };$/;"	e	enum:testing::internal::edit_distance::EditType
kAdded	src/muduo/muduo/net/poller/EPollPoller.cc	/^const int kAdded = 1;$/;"	v	namespace:__anon15fadeff0111	typeref:typename:const int
kAfter	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^    kAfter,$/;"	e	enum:testing::internal::ExpectationBase::Clause
kAllow	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  kAllow,$/;"	e	enum:testing::internal::CallReaction
kAlsoRunDisabledTestsFlag	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^const char kAlsoRunDisabledTestsFlag[] = "also_run_disabled_tests";$/;"	v	namespace:testing::internal	typeref:typename:const char[]
kAlternatePathSeparator	src/tests/googletest/googletest/src/gtest-filepath.cc	/^const char kAlternatePathSeparator = '\/';$/;"	v	namespace:testing::internal	typeref:typename:const char
kAlternatePathSeparatorString	src/tests/googletest/googletest/src/gtest-filepath.cc	/^const char kAlternatePathSeparatorString[] = "\/";$/;"	v	namespace:testing::internal	typeref:typename:const char[]
kAppend	src/muduo/examples/memcached/server/Item.h	/^    kAppend,$/;"	e	enum:Item::UpdatePolicy
kAsIs	src/tests/googletest/googletest/src/gtest-printers.cc	/^  kAsIs,$/;"	e	enum:testing::internal::CharFormat	file:
kAscii	src/muduo/examples/memcached/server/Session.h	/^    kAscii,$/;"	e	enum:Session::Protocol
kAuto	src/muduo/examples/memcached/server/Session.h	/^    kAuto,$/;"	e	enum:Session::Protocol
kBackend	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/EventSource.java	/^    kBackend, kClient$/;"	e	enum:EventSource	file:
kBackendPort	src/muduo/examples/multiplexer/multiplexer.cc	/^const uint16_t kBackendPort = 9999;$/;"	v	typeref:typename:const uint16_t
kBackendPort	src/muduo/examples/multiplexer/multiplexer_simple.cc	/^const uint16_t kBackendPort = 9999;$/;"	v	typeref:typename:const uint16_t
kBiggestParsableMax	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^const BiggestParsable kBiggestParsableMax = ULLONG_MAX;$/;"	v	typeref:typename:const BiggestParsable
kBiggestSignedParsableMax	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^const BiggestSignedParsable kBiggestSignedParsableMax = LLONG_MAX;$/;"	v	typeref:typename:const BiggestSignedParsable
kBinary	src/muduo/examples/memcached/server/Session.h	/^    kBinary,$/;"	e	enum:Session::Protocol
kBitCount	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  static const size_t kBitCount = 8*sizeof(RawType);$/;"	m	class:testing::internal::FloatingPoint	typeref:typename:const size_t
kBool	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^  kBool, kInteger, kFloatingPoint, kOther$/;"	e	enum:testing::internal::TypeKind
kBootTime_	src/muduo/examples/procmon/procmon.cc	/^  const long kBootTime_;  \/\/ in Unix-time$/;"	m	class:Procmon	typeref:typename:const long	file:
kBox	src/muduo/examples/sudoku/sudoku.cc	/^const int kRow = 100, kCol = 200, kBox = 300;$/;"	v	typeref:typename:const int
kBreakOnFailureFlag	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^const char kBreakOnFailureFlag[] = "break_on_failure";$/;"	v	namespace:testing::internal	typeref:typename:const char[]
kBufSize	src/muduo/examples/filetransfer/download2.cc	/^const int kBufSize = 64*1024;$/;"	v	typeref:typename:const int
kBufSize	src/muduo/examples/filetransfer/download3.cc	/^const int kBufSize = 64*1024;$/;"	v	typeref:typename:const int
kBufferSize	src/muduo/muduo/base/FileUtil.h	/^  static const int kBufferSize = 64*1024;$/;"	m	class:muduo::FileUtil::ReadSmallFile	typeref:typename:const int
kCRLF	src/muduo/muduo/net/Buffer.cc	/^const char Buffer::kCRLF[] = "\\r\\n";$/;"	m	class:Buffer	typeref:typename:const char[]
kCRLF	src/muduo/muduo/net/Buffer.h	/^  static const char kCRLF[];$/;"	m	class:muduo::net::Buffer	typeref:typename:const char[]
kCURLnossl	src/muduo/examples/curl/Curl.h	/^    kCURLnossl = 0,$/;"	e	enum:curl::Curl::Option
kCURLssl	src/muduo/examples/curl/Curl.h	/^    kCURLssl   = 1,$/;"	e	enum:curl::Curl::Option
kCas	src/muduo/examples/memcached/server/Item.h	/^    kCas,$/;"	e	enum:Item::UpdatePolicy
kCaseA	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  kCaseA = -1,$/;"	e	enum:__anonf780395f0111::__anonf780395f0203	file:
kCaseB	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  kCaseB = testing::internal::kMaxBiggestInt,$/;"	e	enum:__anonf780395f0111::__anonf780395f0203	file:
kCaseC	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  kCaseC = 42$/;"	e	enum:__anonf780395f0111::__anonf780395f0203	file:
kCatchExceptionsFlag	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^const char kCatchExceptionsFlag[] = "catch_exceptions";$/;"	v	namespace:testing::internal	typeref:typename:const char[]
kCells	src/muduo/examples/sudoku/sudoku.h	/^const int kCells = 81;$/;"	v	typeref:typename:const int
kCheapPrepend	src/muduo/muduo/net/Buffer.cc	/^const size_t Buffer::kCheapPrepend;$/;"	m	class:Buffer	typeref:typename:const size_t
kCheapPrepend	src/muduo/muduo/net/Buffer.h	/^  static const size_t kCheapPrepend = 8;$/;"	m	class:muduo::net::Buffer	typeref:typename:const size_t
kCheckSumError	src/muduo/examples/protobuf/codec/codec.h	/^    kCheckSumError,$/;"	e	enum:ProtobufCodec::ErrorCode
kCheckSumError	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^    kCheckSumError,$/;"	e	enum:muduo::net::ProtobufCodecLite::ErrorCode
kCheckSumErrorStr	src/muduo/examples/protobuf/codec/codec.cc	/^  const string kCheckSumErrorStr = "CheckSumError";$/;"	v	namespace:__anon65c1aa420111	typeref:typename:const string
kCheckSumErrorStr	src/muduo/muduo/net/protobuf/ProtobufCodecLite.cc	/^  const string kCheckSumErrorStr = "CheckSumError";$/;"	v	namespace:__anon5ee53c750211	typeref:typename:const string
kCheckTypeIsNotConstOrAReference	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^    kCheckTypeIsNotConstOrAReference = StaticAssertTypeEqHelper<$/;"	e	enum:testing::internal::NativeArray::__anond73b42720103
kChecksumLen	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^  const static int kChecksumLen = sizeof(int32_t);$/;"	m	class:muduo::net::ProtobufCodecLite	typeref:typename:const int
kClient	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/EventSource.java	/^    kBackend, kClient$/;"	e	enum:EventSource	file:
kClient	src/muduo/examples/socks4a/tunnel.h	/^    kServer, kClient$/;"	e	enum:Tunnel::ServerClient
kClientPort	src/muduo/examples/multiplexer/multiplexer.cc	/^const uint16_t kClientPort = 3333;$/;"	v	typeref:typename:const uint16_t
kClientPort	src/muduo/examples/multiplexer/multiplexer_simple.cc	/^const uint16_t kClientPort = 3333;$/;"	v	typeref:typename:const uint16_t
kClients	src/muduo/examples/filetransfer/loadtest/Client.java	/^    static final int kClients = 500;$/;"	f	class:Client
kClockTicksPerSecond_	src/muduo/examples/procmon/procmon.cc	/^  const int kClockTicksPerSecond_;$/;"	m	class:Procmon	typeref:typename:const int	file:
kCol	src/muduo/examples/sudoku/sudoku.cc	/^const int kRow = 100, kCol = 200, kBox = 300;$/;"	v	typeref:typename:const int
kColorEncodedHelpMessage	src/tests/googletest/googletest/src/gtest.cc	/^static const char kColorEncodedHelpMessage[] =$/;"	v	namespace:testing::internal	typeref:typename:const char[]	file:
kColorFlag	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^const char kColorFlag[] = "color";$/;"	v	namespace:testing::internal	typeref:typename:const char[]
kConcurrent	src/muduo/examples/curl/download.cc	/^  const static int kConcurrent = 4;$/;"	m	class:Downloader	typeref:typename:const int	file:
kConnected	src/muduo/muduo/net/Connector.h	/^  enum States { kDisconnected, kConnecting, kConnected };$/;"	e	enum:muduo::net::Connector::States
kConnected	src/muduo/muduo/net/TcpConnection.h	/^  enum StateE { kDisconnected, kConnecting, kConnected, kDisconnecting };$/;"	e	enum:muduo::net::TcpConnection::StateE
kConnecting	src/muduo/muduo/net/Connector.h	/^  enum States { kDisconnected, kConnecting, kConnected };$/;"	e	enum:muduo::net::Connector::States
kConnecting	src/muduo/muduo/net/TcpConnection.h	/^  enum StateE { kDisconnected, kConnecting, kConnected, kDisconnecting };$/;"	e	enum:muduo::net::TcpConnection::StateE
kContinue	src/muduo/examples/hub/codec.h	/^  kContinue,$/;"	e	enum:pubsub::ParseResult
kConvertibleToInteger	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^  kConvertibleToInteger,  \/\/ a type implicitly convertible to BiggestInt$/;"	e	enum:testing::internal2::TypeKind
kCount	src/muduo/muduo/base/tests/Mutex_test.cc	/^const int kCount = 10*1000*1000;$/;"	v	typeref:typename:const int
kCurrentDirectoryString	src/tests/googletest/googletest/src/gtest-filepath.cc	/^const char kCurrentDirectoryString[] = ".\\\\";$/;"	v	namespace:testing::internal	typeref:typename:const char[]
kCurrentDirectoryString	src/tests/googletest/googletest/src/gtest-filepath.cc	/^const char kCurrentDirectoryString[] = "\\\\";$/;"	v	namespace:testing::internal	typeref:typename:const char[]
kDNSandHostsFile	src/muduo/examples/cdns/Resolver.h	/^    kDNSandHostsFile,$/;"	e	enum:cdns::Resolver::Option
kDNSonly	src/muduo/examples/cdns/Resolver.h	/^    kDNSonly,$/;"	e	enum:cdns::Resolver::Option
kDaysPerWeek	src/muduo/muduo/base/Date.h	/^  static const int kDaysPerWeek = 7;$/;"	m	class:muduo::Date	typeref:typename:const int
kDeathTestCaseFilter	src/tests/googletest/googletest/src/gtest.cc	/^static const char kDeathTestCaseFilter[] = "*DeathTest:*DeathTest\/*";$/;"	v	namespace:testing	typeref:typename:const char[]	file:
kDeathTestInternalError	src/tests/googletest/googletest/src/gtest-death-test.cc	/^static const char kDeathTestInternalError = 'I';$/;"	v	namespace:testing::internal	typeref:typename:const char	file:
kDeathTestLived	src/tests/googletest/googletest/src/gtest-death-test.cc	/^static const char kDeathTestLived = 'L';$/;"	v	namespace:testing::internal	typeref:typename:const char	file:
kDeathTestReturned	src/tests/googletest/googletest/src/gtest-death-test.cc	/^static const char kDeathTestReturned = 'R';$/;"	v	namespace:testing::internal	typeref:typename:const char	file:
kDeathTestStyleFlag	src/tests/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h	/^const char kDeathTestStyleFlag[] = "death_test_style";$/;"	v	namespace:testing::internal	typeref:typename:const char[]
kDeathTestThrew	src/tests/googletest/googletest/src/gtest-death-test.cc	/^static const char kDeathTestThrew = 'T';$/;"	v	namespace:testing::internal	typeref:typename:const char	file:
kDeathTestUseFork	src/tests/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h	/^const char kDeathTestUseFork[] = "death_test_use_fork";$/;"	v	namespace:testing::internal	typeref:typename:const char[]
kDebug	src/muduo/examples/cdns/Resolver.cc	/^const bool kDebug = false;$/;"	v	namespace:__anonfa97fe800111	typeref:typename:const bool
kDefault	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  kDefault = kWarn  \/\/ By default, warn about uninteresting calls.$/;"	e	enum:testing::internal::CallReaction
kDefaultDeathTestStyle	src/tests/googletest/googletest/src/gtest-death-test.cc	/^static const char kDefaultDeathTestStyle[] = "fast";$/;"	v	namespace:testing	typeref:typename:const char[]	file:
kDefaultOutputFile	src/tests/googletest/googletest/src/gtest.cc	/^static const char kDefaultOutputFile[] = "test_detail.xml";$/;"	v	namespace:testing	typeref:typename:const char[]	file:
kDelete	src/muduo/muduo/net/http/HttpRequest.h	/^    kInvalid, kGet, kPost, kHead, kPut, kDelete$/;"	e	enum:muduo::net::HttpRequest::Method
kDeleted	src/muduo/muduo/net/poller/EPollPoller.cc	/^const int kDeleted = 2;$/;"	v	namespace:__anon15fadeff0111	typeref:typename:const int
kDisableTestFilter	src/tests/googletest/googletest/src/gtest.cc	/^static const char kDisableTestFilter[] = "DISABLED_*:*\/DISABLED_*";$/;"	v	namespace:testing	typeref:typename:const char[]	file:
kDiscardValue	src/muduo/examples/memcached/server/Session.h	/^    kDiscardValue,$/;"	e	enum:Session::State
kDisconnected	src/muduo/muduo/net/Connector.h	/^  enum States { kDisconnected, kConnecting, kConnected };$/;"	e	enum:muduo::net::Connector::States
kDisconnected	src/muduo/muduo/net/TcpConnection.h	/^  enum StateE { kDisconnected, kConnecting, kConnected, kDisconnecting };$/;"	e	enum:muduo::net::TcpConnection::StateE
kDisconnecting	src/muduo/muduo/net/TcpConnection.h	/^  enum StateE { kDisconnected, kConnecting, kConnected, kDisconnecting };$/;"	e	enum:muduo::net::TcpConnection::StateE
kDynamic	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  enum MutexType { kStatic = 0, kDynamic = 1 };$/;"	e	enum:testing::internal::Mutex::MutexType
kE1	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  kE1 = 0,$/;"	e	enum:__anonf780395f0111::NamedEnum	file:
kE2	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  kE2 = 1$/;"	e	enum:__anonf780395f0111::NamedEnum	file:
kEWP1	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^  kEWP1 = -2,$/;"	e	enum:EnumWithoutPrinter	file:
kEWP2	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^  kEWP2 = 42$/;"	e	enum:EnumWithoutPrinter	file:
kEWPT1	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^  kEWPT1 = 1$/;"	e	enum:EnumWithPrintTo	file:
kEWS1	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^  kEWS1 = 10$/;"	e	enum:EnumWithStreaming	file:
kElidedFramesMarker	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  static const char* const kElidedFramesMarker;$/;"	m	class:testing::internal::OsStackTraceGetterInterface	typeref:typename:const char * const
kElidedFramesMarker	src/tests/googletest/googletest/src/gtest.cc	/^const char* const OsStackTraceGetterInterface::kElidedFramesMarker =$/;"	m	class:testing::internal::OsStackTraceGetterInterface	typeref:typename:const char * const
kError	src/muduo/examples/hub/codec.h	/^  kError,$/;"	e	enum:pubsub::ParseResult
kErrorVerbosity	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^const char kErrorVerbosity[] = "error";$/;"	v	namespace:testing::internal	typeref:typename:const char[]
kExpectBody	src/muduo/muduo/net/http/HttpContext.h	/^    kExpectBody,$/;"	e	enum:muduo::net::HttpContext::HttpRequestParseState
kExpectFrame	src/muduo/contrib/thrift/ThriftConnection.h	/^    kExpectFrame$/;"	e	enum:ThriftConnection::State
kExpectFrameSize	src/muduo/contrib/thrift/ThriftConnection.h	/^    kExpectFrameSize,$/;"	e	enum:ThriftConnection::State
kExpectHeaders	src/muduo/muduo/net/http/HttpContext.h	/^    kExpectHeaders,$/;"	e	enum:muduo::net::HttpContext::HttpRequestParseState
kExpectRequestLine	src/muduo/muduo/net/http/HttpContext.h	/^    kExpectRequestLine,$/;"	e	enum:muduo::net::HttpContext::HttpRequestParseState
kExponentBitCount	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  static const size_t kExponentBitCount = kBitCount - 1 - kFractionBitCount;$/;"	m	class:testing::internal::FloatingPoint	typeref:typename:const size_t
kExponentBitMask	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  static const Bits kExponentBitMask = ~(kSignBitMask | kFractionBitMask);$/;"	m	class:testing::internal::FloatingPoint	typeref:typename:const Bits
kFail	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  kFail,$/;"	e	enum:testing::internal::CallReaction
kFatal	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^    kNonfatal, kFatal$/;"	e	enum:testing::internal::FailureReporterInterface::FailureType
kFatalFailure	src/tests/googletest/googletest/include/gtest/gtest-test-part.h	/^    kFatalFailure      \/\/ Failed and the test should be terminated.$/;"	e	enum:testing::TestPartResult::Type
kFcgiAbortRequest	src/muduo/examples/fastcgi/fastcgi.cc	/^  kFcgiAbortRequest = 2,$/;"	e	enum:FcgiType	file:
kFcgiAuthorizer	src/muduo/examples/fastcgi/fastcgi.cc	/^  kFcgiAuthorizer = 2,$/;"	e	enum:FcgiRole	file:
kFcgiBeginRequest	src/muduo/examples/fastcgi/fastcgi.cc	/^  kFcgiBeginRequest = 1,$/;"	e	enum:FcgiType	file:
kFcgiData	src/muduo/examples/fastcgi/fastcgi.cc	/^  kFcgiData = 8,$/;"	e	enum:FcgiType	file:
kFcgiEndRequest	src/muduo/examples/fastcgi/fastcgi.cc	/^  kFcgiEndRequest = 3,$/;"	e	enum:FcgiType	file:
kFcgiGetValues	src/muduo/examples/fastcgi/fastcgi.cc	/^  kFcgiGetValues = 9,$/;"	e	enum:FcgiType	file:
kFcgiGetValuesResult	src/muduo/examples/fastcgi/fastcgi.cc	/^  kFcgiGetValuesResult = 10,$/;"	e	enum:FcgiType	file:
kFcgiInvalid	src/muduo/examples/fastcgi/fastcgi.cc	/^  kFcgiInvalid = 0,$/;"	e	enum:FcgiType	file:
kFcgiKeepConn	src/muduo/examples/fastcgi/fastcgi.cc	/^  kFcgiKeepConn = 1,$/;"	e	enum:FcgiConstant	file:
kFcgiParams	src/muduo/examples/fastcgi/fastcgi.cc	/^  kFcgiParams = 4,$/;"	e	enum:FcgiType	file:
kFcgiResponder	src/muduo/examples/fastcgi/fastcgi.cc	/^  kFcgiResponder = 1,$/;"	e	enum:FcgiRole	file:
kFcgiStderr	src/muduo/examples/fastcgi/fastcgi.cc	/^  kFcgiStderr = 7,$/;"	e	enum:FcgiType	file:
kFcgiStdin	src/muduo/examples/fastcgi/fastcgi.cc	/^  kFcgiStdin = 5,$/;"	e	enum:FcgiType	file:
kFcgiStdout	src/muduo/examples/fastcgi/fastcgi.cc	/^  kFcgiStdout = 6,$/;"	e	enum:FcgiType	file:
kFilterFlag	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^const char kFilterFlag[] = "filter";$/;"	v	namespace:testing::internal	typeref:typename:const char[]
kFlagfileFlag	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^const char kFlagfileFlag[] = "flagfile";$/;"	v	namespace:testing::internal	typeref:typename:const char[]
kFloatingPoint	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^  kBool, kInteger, kFloatingPoint, kOther$/;"	e	enum:testing::internal::TypeKind
kFractionBitCount	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  static const size_t kFractionBitCount =$/;"	m	class:testing::internal::FloatingPoint	typeref:typename:const size_t
kFractionBitMask	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  static const Bits kFractionBitMask =$/;"	m	class:testing::internal::FloatingPoint	typeref:typename:const Bits
kGet	src/muduo/examples/memcached/client/bench.cc	/^    kGet,$/;"	e	enum:Client::Operation	file:
kGet	src/muduo/muduo/net/http/HttpRequest.h	/^    kInvalid, kGet, kPost, kHead, kPut, kDelete$/;"	e	enum:muduo::net::HttpRequest::Method
kGoldenString	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^static const char kGoldenString[] = "\\"Line\\0 1\\"\\nLine 2";$/;"	v	typeref:typename:const char[]	file:
kGotAll	src/muduo/muduo/net/http/HttpContext.h	/^    kGotAll,$/;"	e	enum:muduo::net::HttpContext::HttpRequestParseState
kHead	src/muduo/muduo/net/http/HttpRequest.h	/^    kInvalid, kGet, kPost, kHead, kPut, kDelete$/;"	e	enum:muduo::net::HttpRequest::Method
kHeaderLen	src/muduo/examples/asio/chat/codec.h	/^  const static size_t kHeaderLen = sizeof(int32_t);$/;"	m	class:LengthHeaderCodec	typeref:typename:const size_t
kHeaderLen	src/muduo/examples/multiplexer/demux.cc	/^const size_t kHeaderLen = 3;$/;"	v	typeref:typename:const size_t
kHeaderLen	src/muduo/examples/multiplexer/multiplexer.cc	/^const size_t kHeaderLen = 3;$/;"	v	typeref:typename:const size_t
kHeaderLen	src/muduo/examples/multiplexer/multiplexer_simple.cc	/^const size_t kHeaderLen = 3;$/;"	v	typeref:typename:const size_t
kHeaderLen	src/muduo/examples/protobuf/codec/codec.h	/^  const static int kHeaderLen = sizeof(int32_t);$/;"	m	class:ProtobufCodec	typeref:typename:const int
kHeaderLen	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^  const static int kHeaderLen = sizeof(int32_t);$/;"	m	class:muduo::net::ProtobufCodecLite	typeref:typename:const int
kHelloString	src/tests/googletest/googletest/samples/sample2_unittest.cc	/^const char kHelloString[] = "Hello, world!";$/;"	v	typeref:typename:const char[]
kHexEscape	src/tests/googletest/googletest/src/gtest-printers.cc	/^  kHexEscape,$/;"	e	enum:testing::internal::CharFormat	file:
kHi	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^const char kHi[] = "hi";$/;"	v	namespace:__anoncaf4ae130111	typeref:typename:const char[]
kHttp10	src/muduo/muduo/net/http/HttpRequest.h	/^    kUnknown, kHttp10, kHttp11$/;"	e	enum:muduo::net::HttpRequest::Version
kHttp11	src/muduo/muduo/net/http/HttpRequest.h	/^    kUnknown, kHttp10, kHttp11$/;"	e	enum:muduo::net::HttpRequest::Version
kHz	src/muduo/examples/sudoku/loadtest.cc	/^  static const int kHz = 100;$/;"	m	class:SudokuLoadtest	typeref:typename:const int	file:
kInSequence	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^    kInSequence,$/;"	e	enum:testing::internal::ExpectationBase::Clause
kInaddrAny	src/muduo/muduo/net/InetAddress.cc	/^static const in_addr_t kInaddrAny = INADDR_ANY;$/;"	v	typeref:typename:const in_addr_t	file:
kInaddrLoopback	src/muduo/muduo/net/InetAddress.cc	/^static const in_addr_t kInaddrLoopback = INADDR_LOOPBACK;$/;"	v	typeref:typename:const in_addr_t	file:
kInfo	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^  kInfo = 0,$/;"	e	enum:testing::internal::LogSeverity
kInfoVerbosity	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^const char kInfoVerbosity[] = "info";$/;"	v	namespace:testing::internal	typeref:typename:const char[]
kInitEventListSize	src/muduo/muduo/net/poller/EPollPoller.h	/^  static const int kInitEventListSize = 16;$/;"	m	class:muduo::net::EPollPoller	typeref:typename:const int
kInitRetryDelayMs	src/muduo/muduo/net/Connector.h	/^  static const int kInitRetryDelayMs = 500;$/;"	m	class:muduo::net::Connector	typeref:typename:const int
kInitialSize	src/muduo/muduo/net/Buffer.cc	/^const size_t Buffer::kInitialSize;$/;"	m	class:Buffer	typeref:typename:const size_t
kInitialSize	src/muduo/muduo/net/Buffer.h	/^  static const size_t kInitialSize = 1024;$/;"	m	class:muduo::net::Buffer	typeref:typename:const size_t
kInteger	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^  kBool, kInteger, kFloatingPoint, kOther$/;"	e	enum:testing::internal::TypeKind
kInternalRunDeathTestFlag	src/tests/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h	/^const char kInternalRunDeathTestFlag[] = "internal_run_death_test";$/;"	v	namespace:testing::internal	typeref:typename:const char[]
kInvalid	src/muduo/examples/memcached/server/Item.h	/^    kInvalid,$/;"	e	enum:Item::UpdatePolicy
kInvalid	src/muduo/muduo/net/http/HttpRequest.h	/^    kInvalid, kGet, kPost, kHead, kPut, kDelete$/;"	e	enum:muduo::net::HttpRequest::Method
kInvalidFileAttributes	src/tests/googletest/googletest/src/gtest-filepath.cc	/^const DWORD kInvalidFileAttributes = 0xffffffff;$/;"	v	namespace:testing::internal	typeref:typename:const DWORD
kInvalidLength	src/muduo/examples/protobuf/codec/codec.h	/^    kInvalidLength,$/;"	e	enum:ProtobufCodec::ErrorCode
kInvalidLength	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^    kInvalidLength,$/;"	e	enum:muduo::net::ProtobufCodecLite::ErrorCode
kInvalidLengthStr	src/muduo/examples/protobuf/codec/codec.cc	/^  const string kInvalidLengthStr = "InvalidLength";$/;"	v	namespace:__anon65c1aa420111	typeref:typename:const string
kInvalidLengthStr	src/muduo/muduo/net/protobuf/ProtobufCodecLite.cc	/^  const string kInvalidLengthStr = "InvalidLength";$/;"	v	namespace:__anon5ee53c750211	typeref:typename:const string
kInvalidNameLen	src/muduo/examples/protobuf/codec/codec.h	/^    kInvalidNameLen,$/;"	e	enum:ProtobufCodec::ErrorCode
kInvalidNameLen	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^    kInvalidNameLen,$/;"	e	enum:muduo::net::ProtobufCodecLite::ErrorCode
kInvalidNameLenStr	src/muduo/examples/protobuf/codec/codec.cc	/^  const string kInvalidNameLenStr = "InvalidNameLen";$/;"	v	namespace:__anon65c1aa420111	typeref:typename:const string
kInvalidNameLenStr	src/muduo/muduo/net/protobuf/ProtobufCodecLite.cc	/^  const string kInvalidNameLenStr = "InvalidNameLen";$/;"	v	namespace:__anon5ee53c750211	typeref:typename:const string
kJulianDayOf1970_01_01	src/muduo/muduo/base/Date.cc	/^const int Date::kJulianDayOf1970_01_01 = detail::getJulianDayNumber(1970, 1, 1);$/;"	m	class:muduo::Date	typeref:typename:const int
kJulianDayOf1970_01_01	src/muduo/muduo/base/Date.h	/^  static const int kJulianDayOf1970_01_01;$/;"	m	class:muduo::Date	typeref:typename:const int
kLargeBuffer	src/muduo/muduo/base/LogStream.h	/^const int kLargeBuffer = 4000*1000;$/;"	v	namespace:muduo::detail	typeref:typename:const int
kLeftMargin_	src/muduo/examples/procmon/plot.h	/^  static const int kLeftMargin_ = 5;$/;"	m	class:Plot	typeref:typename:const int
kListTestsFlag	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^const char kListTestsFlag[] = "list_tests";$/;"	v	namespace:testing::internal	typeref:typename:const char[]
kListenPort	src/muduo/examples/multiplexer/demux.cc	/^const uint16_t kListenPort = 9999;$/;"	v	typeref:typename:const uint16_t
kLogicalServerPort	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MultiplexerTest.java	/^    private static final int kLogicalServerPort = 9999;$/;"	f	class:MultiplexerTest	file:
kLongestKey	src/muduo/examples/memcached/server/Session.cc	/^string Session::kLongestKey(kLongestKeySize, 'x');$/;"	m	class:Session	typeref:typename:string
kLongestKey	src/muduo/examples/memcached/server/Session.h	/^  static string kLongestKey;$/;"	m	class:Session	typeref:typename:string
kLongestKeySize	src/muduo/examples/memcached/server/Session.cc	/^const int kLongestKeySize = 250;$/;"	v	typeref:typename:const int
kMB	src/muduo/examples/filetransfer/loadtest/Client.java	/^    static final int kMB = 1024 * 1024;$/;"	f	class:Client
kMarginY_	src/muduo/examples/procmon/plot.h	/^  static const int kMarginY_ = 5;$/;"	m	class:Plot	typeref:typename:const int
kMatch	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^enum EditType { kMatch, kAdd, kRemove, kReplace };$/;"	e	enum:testing::internal::edit_distance::EditType
kMaxBiggestInt	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^const BiggestInt kMaxBiggestInt =$/;"	v	namespace:testing::internal	typeref:typename:const BiggestInt
kMaxCodePoint1	src/tests/googletest/googletest/src/gtest.cc	/^const UInt32 kMaxCodePoint1 = (static_cast<UInt32>(1) <<  7) - 1;$/;"	v	namespace:testing::internal	typeref:typename:const UInt32
kMaxCodePoint2	src/tests/googletest/googletest/src/gtest.cc	/^const UInt32 kMaxCodePoint2 = (static_cast<UInt32>(1) << (5 + 6)) - 1;$/;"	v	namespace:testing::internal	typeref:typename:const UInt32
kMaxCodePoint3	src/tests/googletest/googletest/src/gtest.cc	/^const UInt32 kMaxCodePoint3 = (static_cast<UInt32>(1) << (4 + 2*6)) - 1;$/;"	v	namespace:testing::internal	typeref:typename:const UInt32
kMaxCodePoint4	src/tests/googletest/googletest/src/gtest.cc	/^const UInt32 kMaxCodePoint4 = (static_cast<UInt32>(1) << (3 + 3*6)) - 1;$/;"	v	namespace:testing::internal	typeref:typename:const UInt32
kMaxConnections_	src/muduo/examples/maxconnection/echo.h	/^  const int kMaxConnections_;$/;"	m	class:EchoServer	typeref:typename:const int
kMaxConns	src/muduo/examples/multiplexer/multiplexer.cc	/^const int kMaxConns = 10;  \/\/ 65535$/;"	v	typeref:typename:const int
kMaxConns	src/muduo/examples/multiplexer/multiplexer_simple.cc	/^const int kMaxConns = 10;  \/\/ 65535$/;"	v	typeref:typename:const int
kMaxHashSize	src/muduo/examples/wordcount/hasher.cc	/^const size_t kMaxHashSize = 10 * 1000 * 1000;$/;"	v	typeref:typename:const size_t
kMaxLength	src/muduo/examples/filetransfer/loadtest/Client.java	/^        private final int kMaxLength;$/;"	f	class:Client.PipelineFactory	file:
kMaxLength	src/muduo/examples/filetransfer/loadtest/Client.java	/^    static final int kMaxLength = 6 * kMB;$/;"	f	class:Client
kMaxMessageLen	src/muduo/examples/protobuf/codec/codec.h	/^  const static int kMaxMessageLen = 64*1024*1024; \/\/ same as codec_stream.h kDefaultTotalBytes/;"	m	class:ProtobufCodec	typeref:typename:const int
kMaxMessageLen	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^  const static int kMaxMessageLen = 64*1024*1024; \/\/ same as codec_stream.h kDefaultTotalBytes/;"	m	class:muduo::net::ProtobufCodecLite	typeref:typename:const int
kMaxNodes	src/muduo/examples/sudoku/sudoku.cc	/^const int kMaxNodes = 1 + 81*4 + 9*9*9*4;$/;"	v	typeref:typename:const int
kMaxNumericSize	src/muduo/muduo/base/LogStream.h	/^  static const int kMaxNumericSize = 48;$/;"	m	class:muduo::LogStream	typeref:typename:const int
kMaxPacketLen	src/muduo/examples/multiplexer/demux.cc	/^const size_t kMaxPacketLen = 255;$/;"	v	typeref:typename:const size_t
kMaxPacketLen	src/muduo/examples/multiplexer/multiplexer.cc	/^const size_t kMaxPacketLen = 255;$/;"	v	typeref:typename:const size_t
kMaxPacketLen	src/muduo/examples/multiplexer/multiplexer_simple.cc	/^const size_t kMaxPacketLen = 255;$/;"	v	typeref:typename:const size_t
kMaxRandomSeed	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^const int kMaxRandomSeed = 99999;$/;"	v	namespace:testing::internal	typeref:typename:const int
kMaxRange	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  static const UInt32 kMaxRange = 1u << 31;$/;"	m	class:testing::internal::Random	typeref:typename:const UInt32
kMaxRetryDelayMs	src/muduo/muduo/net/Connector.cc	/^const int Connector::kMaxRetryDelayMs;$/;"	m	class:Connector	typeref:typename:const int
kMaxRetryDelayMs	src/muduo/muduo/net/Connector.h	/^  static const int kMaxRetryDelayMs = 30*1000;$/;"	m	class:muduo::net::Connector	typeref:typename:const int
kMaxStackTraceDepth	src/tests/googletest/googletest/include/gtest/gtest.h	/^const int kMaxStackTraceDepth = 100;$/;"	v	namespace:testing	typeref:typename:const int
kMaxTestThreads	src/tests/googletest/googlemock/test/gmock_stress_test.cc	/^const int kMaxTestThreads = 50;$/;"	v	namespace:testing::__anonc83180760111	typeref:typename:const int
kMaxUlps	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  static const size_t kMaxUlps = 4;$/;"	m	class:testing::internal::FloatingPoint	typeref:typename:const size_t
kMicroSecondsPerSecond	src/muduo/muduo/base/Timestamp.h	/^  static const int kMicroSecondsPerSecond = 1000 * 1000;$/;"	m	class:muduo::Timestamp	typeref:typename:const int
kMillisPerSec	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static const TimeInMillis kMillisPerSec = 1000;$/;"	m	class:__anonf780395f0111::FormatEpochTimeInMillisAsIso8601Test	typeref:typename:const TimeInMillis	file:
kMillisPerSec	src/tests/googletest/googletest/test/gtest_unittest.cc	/^const TimeInMillis FormatEpochTimeInMillisAsIso8601Test::kMillisPerSec;$/;"	m	class:__anonf780395f0111::FormatEpochTimeInMillisAsIso8601Test	typeref:typename:const TimeInMillis
kMinLength	src/muduo/examples/filetransfer/loadtest/Client.java	/^        private final int kMinLength;$/;"	f	class:Client.PipelineFactory	file:
kMinLength	src/muduo/examples/filetransfer/loadtest/Client.java	/^    static final int kMinLength = 1 * kMB;$/;"	f	class:Client
kMinMessageLen	src/muduo/examples/protobuf/codec/codec.h	/^  const static int kMinMessageLen = 2*kHeaderLen + 2; \/\/ nameLen + typeName + checkSum$/;"	m	class:ProtobufCodec	typeref:typename:const int
kMinMessageLen	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^  const int kMinMessageLen;$/;"	m	class:muduo::net::ProtobufCodecLite	typeref:typename:const int
kMonthsOfYear	src/muduo/muduo/base/tests/Date_unittest.cc	/^const int kMonthsOfYear = 12;$/;"	v	typeref:typename:const int
kMultiplexerServerPort	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MultiplexerTest.java	/^    private static final int kMultiplexerServerPort = 3333;$/;"	f	class:MultiplexerTest	file:
kNew	src/muduo/muduo/net/poller/EPollPoller.cc	/^const int kNew = -1;$/;"	v	namespace:__anon15fadeff0111	typeref:typename:const int
kNewCommand	src/muduo/examples/memcached/server/Session.h	/^    kNewCommand,$/;"	e	enum:Session::State
kNoError	src/muduo/examples/protobuf/codec/codec.h	/^    kNoError = 0,$/;"	e	enum:ProtobufCodec::ErrorCode
kNoError	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^    kNoError = 0,$/;"	e	enum:muduo::net::ProtobufCodecLite::ErrorCode
kNoErrorStr	src/muduo/examples/protobuf/codec/codec.cc	/^  const string kNoErrorStr = "NoError";$/;"	v	namespace:__anon65c1aa420111	typeref:typename:const string
kNoErrorStr	src/muduo/muduo/net/protobuf/ProtobufCodecLite.cc	/^  const string kNoErrorStr = "NoError";$/;"	v	namespace:__anon5ee53c750211	typeref:typename:const string
kNoReusePort	src/muduo/muduo/net/TcpServer.h	/^    kNoReusePort,$/;"	e	enum:muduo::net::TcpServer::Option
kNonFatalFailure	src/tests/googletest/googletest/include/gtest/gtest-test-part.h	/^    kNonFatalFailure,  \/\/ Failed but the test can continue.$/;"	e	enum:testing::TestPartResult::Type
kNone	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^    kNone,$/;"	e	enum:testing::internal::ExpectationBase::Clause
kNone	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^    kNone,$/;"	e	enum:testing::internal::UntypedOnCallSpecBase::Clause
kNoneEvent	src/muduo/muduo/net/Channel.cc	/^const int Channel::kNoneEvent = 0;$/;"	m	class:Channel	typeref:typename:const int
kNoneEvent	src/muduo/muduo/net/Channel.h	/^  static const int kNoneEvent;$/;"	m	class:muduo::net::Channel	typeref:typename:const int
kNonfatal	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^    kNonfatal, kFatal$/;"	e	enum:testing::internal::FailureReporterInterface::FailureType
kNull	src/tests/googletest/googletest/test/gtest_unittest.cc	/^static const wchar_t* const kNull = NULL;$/;"	v	namespace:__anonf780395f0111	typeref:typename:const wchar_t * const	file:
kNumberOfParamTests	src/tests/googletest/googletest/test/gtest_repeat_test.cc	/^const int kNumberOfParamTests = 10;$/;"	v	namespace:__anon83eb3b5f0111	typeref:typename:const int
kOther	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^  kBool, kInteger, kFloatingPoint, kOther$/;"	e	enum:testing::internal::TypeKind
kOtherType	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^  kOtherType              \/\/ anything else$/;"	e	enum:testing::internal2::TypeKind
kOutputFlag	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^const char kOutputFlag[] = "output";$/;"	v	namespace:testing::internal	typeref:typename:const char[]
kParseError	src/muduo/examples/protobuf/codec/codec.h	/^    kParseError,$/;"	e	enum:ProtobufCodec::ErrorCode
kParseError	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^    kParseError,$/;"	e	enum:muduo::net::ProtobufCodecLite::ErrorCode
kParseErrorStr	src/muduo/examples/protobuf/codec/codec.cc	/^  const string kParseErrorStr = "ParseError";$/;"	v	namespace:__anon65c1aa420111	typeref:typename:const string
kParseErrorStr	src/muduo/muduo/net/protobuf/ProtobufCodecLite.cc	/^  const string kParseErrorStr = "ParseError";$/;"	v	namespace:__anon5ee53c750211	typeref:typename:const string
kPath	src/muduo/examples/fastcgi/fastcgi_test.cc	/^const string kPath = "\/sudoku\/";$/;"	v	typeref:typename:const string
kPathSeparator	src/tests/googletest/googletest/src/gtest-filepath.cc	/^const char kPathSeparator = '\\\\';$/;"	v	namespace:testing::internal	typeref:typename:const char
kPeriod_	src/muduo/examples/procmon/procmon.cc	/^  const static int kPeriod_ = 2.0;$/;"	m	class:Procmon	typeref:typename:const int	file:
kPollTimeMs	src/muduo/muduo/net/EventLoop.cc	/^const int kPollTimeMs = 10000;$/;"	v	namespace:__anon600130340111	typeref:typename:const int
kPost	src/muduo/muduo/net/http/HttpRequest.h	/^    kInvalid, kGet, kPost, kHead, kPut, kDelete$/;"	e	enum:muduo::net::HttpRequest::Method
kPrepend	src/muduo/examples/memcached/server/Item.h	/^    kPrepend,$/;"	e	enum:Item::UpdatePolicy
kPrintContainer	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^  kPrintContainer,$/;"	e	enum:testing::internal::DefaultPrinterType
kPrintFunctionPointer	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^  kPrintFunctionPointer,$/;"	e	enum:testing::internal::DefaultPrinterType
kPrintOther	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^  kPrintOther,$/;"	e	enum:testing::internal::DefaultPrinterType
kPrintPointer	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^  kPrintPointer,$/;"	e	enum:testing::internal::DefaultPrinterType
kPrintTimeFlag	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^const char kPrintTimeFlag[] = "print_time";$/;"	v	namespace:testing::internal	typeref:typename:const char[]
kProtobuf	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^  kProtobuf,              \/\/ a protobuf type$/;"	e	enum:testing::internal2::TypeKind
kProtobufOneLinerMaxLength	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^const size_t kProtobufOneLinerMaxLength = 50;$/;"	v	namespace:testing::internal2	typeref:typename:const size_t
kPut	src/muduo/muduo/net/http/HttpRequest.h	/^    kInvalid, kGet, kPost, kHead, kPut, kDelete$/;"	e	enum:muduo::net::HttpRequest::Method
kRandomSeedFlag	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^const char kRandomSeedFlag[] = "random_seed";$/;"	v	namespace:testing::internal	typeref:typename:const char[]
kReadEvent	src/muduo/muduo/net/Channel.cc	/^const int Channel::kReadEvent = POLLIN | POLLPRI;$/;"	m	class:Channel	typeref:typename:const int
kReadEvent	src/muduo/muduo/net/Channel.h	/^  static const int kReadEvent;$/;"	m	class:muduo::net::Channel	typeref:typename:const int
kReceiveValue	src/muduo/examples/memcached/server/Session.h	/^    kReceiveValue,$/;"	e	enum:Session::State
kRecordHeader	src/muduo/examples/fastcgi/fastcgi.cc	/^const unsigned FastCgiCodec::kRecordHeader = static_cast<unsigned>(sizeof(FastCgiCodec::RecordHe/;"	m	class:FastCgiCodec	typeref:typename:const unsigned
kRecordHeader	src/muduo/examples/fastcgi/fastcgi.h	/^  const static unsigned kRecordHeader;$/;"	m	class:FastCgiCodec	typeref:typename:const unsigned
kRemove	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^enum EditType { kMatch, kAdd, kRemove, kReplace };$/;"	e	enum:testing::internal::edit_distance::EditType
kRepeat	src/tests/googletest/googlemock/test/gmock_stress_test.cc	/^const int kRepeat = 50;$/;"	v	namespace:testing::__anonc83180760111	typeref:typename:const int
kRepeatFlag	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^const char kRepeatFlag[] = "repeat";$/;"	v	namespace:testing::internal	typeref:typename:const char[]
kReplace	src/muduo/examples/memcached/server/Item.h	/^    kReplace,$/;"	e	enum:Item::UpdatePolicy
kReplace	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^enum EditType { kMatch, kAdd, kRemove, kReplace };$/;"	e	enum:testing::internal::edit_distance::EditType
kRequests	src/muduo/examples/protobuf/rpcbench/client.cc	/^static const int kRequests = 50000;$/;"	v	typeref:typename:const int	file:
kReservedTestCaseAttributes	src/tests/googletest/googletest/src/gtest.cc	/^static const char* const kReservedTestCaseAttributes[] = {$/;"	v	namespace:testing	typeref:typename:const char * const[]	file:
kReservedTestSuiteAttributes	src/tests/googletest/googletest/src/gtest.cc	/^static const char* const kReservedTestSuiteAttributes[] = {$/;"	v	namespace:testing	typeref:typename:const char * const[]	file:
kReservedTestSuitesAttributes	src/tests/googletest/googletest/src/gtest.cc	/^static const char* const kReservedTestSuitesAttributes[] = {$/;"	v	namespace:testing	typeref:typename:const char * const[]	file:
kRetiresOnSaturation	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^    kRetiresOnSaturation$/;"	e	enum:testing::internal::ExpectationBase::Clause
kReusePort	src/muduo/muduo/net/TcpServer.h	/^    kReusePort,$/;"	e	enum:muduo::net::TcpServer::Option
kRightMargin_	src/muduo/examples/procmon/plot.h	/^  const int kRightMargin_;$/;"	m	class:Plot	typeref:typename:const int
kRollPerSeconds_	src/muduo/muduo/base/LogFile.h	/^  const static int kRollPerSeconds_ = 60*60*24;$/;"	m	class:muduo::LogFile	typeref:typename:const int
kRollSize	src/muduo/muduo/base/tests/AsyncLogging_test.cc	/^off_t kRollSize = 500*1000*1000;$/;"	v	typeref:typename:off_t
kRow	src/muduo/examples/sudoku/sudoku.cc	/^const int kRow = 100, kCol = 200, kBox = 300;$/;"	v	typeref:typename:const int
kSeconds	src/muduo/examples/sudoku/stat.h	/^  static const int kSeconds = 60;$/;"	m	class:SudokuStat	typeref:typename:const int
kSecondsPerDay	src/muduo/muduo/base/TimeZone.cc	/^const int kSecondsPerDay = 24*60*60;$/;"	v	namespace:muduo	typeref:typename:const int
kServer	src/muduo/examples/socks4a/tunnel.h	/^    kServer, kClient$/;"	e	enum:Tunnel::ServerClient
kSet	src/muduo/examples/memcached/client/bench.cc	/^    kSet,$/;"	e	enum:Client::Operation	file:
kSet	src/muduo/examples/memcached/server/Item.h	/^    kSet,$/;"	e	enum:Item::UpdatePolicy
kShards	src/muduo/examples/memcached/server/MemcacheServer.h	/^  const static int kShards = 4096;$/;"	m	class:MemcacheServer	typeref:typename:const int
kShuffleFlag	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^const char kShuffleFlag[] = "shuffle";$/;"	v	namespace:testing::internal	typeref:typename:const char[]
kSignBitMask	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  static const Bits kSignBitMask = static_cast<Bits>(1) << (kBitCount - 1);$/;"	m	class:testing::internal::FloatingPoint	typeref:typename:const Bits
kSmallBuffer	src/muduo/muduo/base/LogStream.h	/^const int kSmallBuffer = 4000;$/;"	v	namespace:muduo::detail	typeref:typename:const int
kSocksPort	src/muduo/examples/multiplexer/demux.cc	/^const uint16_t kSocksPort = 7777;$/;"	v	typeref:typename:const uint16_t
kSpecialEscape	src/tests/googletest/googletest/src/gtest-printers.cc	/^  kSpecialEscape$/;"	e	enum:testing::internal::CharFormat	file:
kStackTraceDepthFlag	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^const char kStackTraceDepthFlag[] = "stack_trace_depth";$/;"	v	namespace:testing::internal	typeref:typename:const char[]
kStackTraceMarker	src/tests/googletest/googletest/src/gtest.cc	/^const char kStackTraceMarker[] = "\\nStack trace:\\n";$/;"	v	namespace:testing::internal	typeref:typename:const char[]
kStatic	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  enum MutexType { kStatic = 0, kDynamic = 1 };$/;"	e	enum:testing::internal::Mutex::MutexType
kStaticMutex	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  enum StaticConstructorSelector { kStaticMutex = 0 };$/;"	e	enum:testing::internal::Mutex::StaticConstructorSelector
kStdErrFileno	src/tests/googletest/googletest/src/gtest-port.cc	/^const int kStdErrFileno = 2;$/;"	v	namespace:testing::internal	typeref:typename:const int
kStdOutFileno	src/tests/googletest/googletest/src/gtest-port.cc	/^const int kStdOutFileno = 1;$/;"	v	namespace:testing::internal	typeref:typename:const int
kStreamResultToFlag	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^const char kStreamResultToFlag[] = "stream_result_to";$/;"	v	namespace:testing::internal	typeref:typename:const char[]
kSuccess	src/muduo/examples/hub/codec.h	/^  kSuccess,$/;"	e	enum:pubsub::ParseResult
kSuccess	src/tests/googletest/googletest/include/gtest/gtest-test-part.h	/^    kSuccess,          \/\/ Succeeded.$/;"	e	enum:testing::TestPartResult::Type
kTestShardIndex	src/tests/googletest/googletest/src/gtest.cc	/^static const char kTestShardIndex[] = "GTEST_SHARD_INDEX";$/;"	v	namespace:testing	typeref:typename:const char[]	file:
kTestShardStatusFile	src/tests/googletest/googletest/src/gtest.cc	/^static const char kTestShardStatusFile[] = "GTEST_SHARD_STATUS_FILE";$/;"	v	namespace:testing	typeref:typename:const char[]	file:
kTestTotalShards	src/tests/googletest/googletest/src/gtest.cc	/^static const char kTestTotalShards[] = "GTEST_TOTAL_SHARDS";$/;"	v	namespace:testing	typeref:typename:const char[]	file:
kThreadCount	src/tests/googletest/googletest/test/gtest_stress_test.cc	/^const int kThreadCount = 50;$/;"	v	namespace:testing::__anon9be581a20111	typeref:typename:const int
kThrowOnFailureFlag	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^const char kThrowOnFailureFlag[] = "throw_on_failure";$/;"	v	namespace:testing::internal	typeref:typename:const char[]
kTimes	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^    kTimes,$/;"	e	enum:testing::internal::ExpectationBase::Clause
kTypeParamLabel	src/tests/googletest/googletest/src/gtest.cc	/^static const char kTypeParamLabel[] = "TypeParam";$/;"	v	namespace:testing::internal	typeref:typename:const char[]	file:
kTypedTestCases	src/tests/googletest/googletest/test/gtest-unittest-api_test.cc	/^const int kTypedTestCases = 0;$/;"	v	namespace:testing::internal	typeref:typename:const int
kTypedTestCases	src/tests/googletest/googletest/test/gtest-unittest-api_test.cc	/^const int kTypedTestCases = 1;$/;"	v	namespace:testing::internal	typeref:typename:const int
kTypedTests	src/tests/googletest/googletest/test/gtest-unittest-api_test.cc	/^const int kTypedTests = 0;$/;"	v	namespace:testing::internal	typeref:typename:const int
kTypedTests	src/tests/googletest/googletest/test/gtest-unittest-api_test.cc	/^const int kTypedTests = 1;$/;"	v	namespace:testing::internal	typeref:typename:const int
kUniversalFilter	src/tests/googletest/googletest/src/gtest.cc	/^static const char kUniversalFilter[] = "*";$/;"	v	namespace:testing	typeref:typename:const char[]	file:
kUnknown	src/muduo/muduo/net/http/HttpRequest.h	/^    kUnknown, kHttp10, kHttp11$/;"	e	enum:muduo::net::HttpRequest::Version
kUnknown	src/muduo/muduo/net/http/HttpResponse.h	/^    kUnknown,$/;"	e	enum:muduo::net::HttpResponse::HttpStatusCode
kUnknownErrorStr	src/muduo/examples/protobuf/codec/codec.cc	/^  const string kUnknownErrorStr = "UnknownError";$/;"	v	namespace:__anon65c1aa420111	typeref:typename:const string
kUnknownErrorStr	src/muduo/muduo/net/protobuf/ProtobufCodecLite.cc	/^  const string kUnknownErrorStr = "UnknownError";$/;"	v	namespace:__anon5ee53c750211	typeref:typename:const string
kUnknownFile	src/tests/googletest/googletest/src/gtest-port.cc	/^const char kUnknownFile[] = "unknown file";$/;"	v	namespace:testing::internal	typeref:typename:const char[]
kUnknownMessageType	src/muduo/examples/protobuf/codec/codec.h	/^    kUnknownMessageType,$/;"	e	enum:ProtobufCodec::ErrorCode
kUnknownMessageType	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^    kUnknownMessageType,$/;"	e	enum:muduo::net::ProtobufCodecLite::ErrorCode
kUnknownMessageTypeStr	src/muduo/examples/protobuf/codec/codec.cc	/^  const string kUnknownMessageTypeStr = "UnknownMessageType";$/;"	v	namespace:__anon65c1aa420111	typeref:typename:const string
kUnknownMessageTypeStr	src/muduo/muduo/net/protobuf/ProtobufCodecLite.cc	/^  const string kUnknownMessageTypeStr = "UnknownMessageType";$/;"	v	namespace:__anon5ee53c750211	typeref:typename:const string
kUnused	src/tests/googletest/googlemock/src/gmock-matchers.cc	/^  static const size_t kUnused = static_cast<size_t>(-1);$/;"	m	class:testing::internal::MaxBipartiteMatchState	typeref:typename:const size_t	file:
kUnused	src/tests/googletest/googlemock/src/gmock-matchers.cc	/^const size_t MaxBipartiteMatchState::kUnused;$/;"	m	class:testing::internal::MaxBipartiteMatchState	typeref:typename:const size_t
kUnused	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  static const size_t kUnused = static_cast<size_t>(-1);$/;"	m	class:testing::gmock_matchers_test::__anon745c08170311::BacktrackingMaxBPMState	typeref:typename:const size_t	file:
kUnused	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^const size_t BacktrackingMaxBPMState<Graph>::kUnused;$/;"	m	class:testing::gmock_matchers_test::__anon745c08170311::BacktrackingMaxBPMState<Graph>	typeref:typename:const size_t
kValueParamLabel	src/tests/googletest/googletest/src/gtest.cc	/^static const char kValueParamLabel[] = "GetParam()";$/;"	v	namespace:testing::internal	typeref:typename:const char[]	file:
kVectorSize	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static const int kVectorSize = 20;$/;"	m	class:__anonf780395f0111::VectorShuffleTest	typeref:typename:const int	file:
kVectorSize	src/tests/googletest/googletest/test/gtest_unittest.cc	/^const int VectorShuffleTest::kVectorSize;$/;"	m	class:__anonf780395f0111::VectorShuffleTest	typeref:typename:const int
kWarn	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  kWarn,$/;"	e	enum:testing::internal::CallReaction
kWarning	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^  kWarning = 1$/;"	e	enum:testing::internal::LogSeverity
kWarningVerbosity	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^const char kWarningVerbosity[] = "warning";$/;"	v	namespace:testing::internal	typeref:typename:const char[]
kWillByDefault	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^    kWillByDefault$/;"	e	enum:testing::internal::UntypedOnCallSpecBase::Clause
kWillOnce	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^    kWillOnce,$/;"	e	enum:testing::internal::ExpectationBase::Clause
kWillRepeatedly	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^    kWillRepeatedly,$/;"	e	enum:testing::internal::ExpectationBase::Clause
kWith	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^    kWith,$/;"	e	enum:testing::internal::ExpectationBase::Clause
kWith	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^    kWith,$/;"	e	enum:testing::internal::UntypedOnCallSpecBase::Clause
kWriteEvent	src/muduo/muduo/net/Channel.cc	/^const int Channel::kWriteEvent = POLLOUT;$/;"	m	class:Channel	typeref:typename:const int
kWriteEvent	src/muduo/muduo/net/Channel.h	/^  static const int kWriteEvent;$/;"	m	class:muduo::net::Channel	typeref:typename:const int
k_	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  int k_;$/;"	m	class:testing::gmock_matchers_test::DerivedClass	typeref:typename:int	file:
kbPerPage_	src/muduo/examples/procmon/procmon.cc	/^  const int kbPerPage_;$/;"	m	class:Procmon	typeref:typename:const int	file:
keepConn_	src/muduo/examples/fastcgi/fastcgi.h	/^  bool keepConn_;$/;"	m	class:FastCgiCodec	typeref:typename:bool
key	src/libtfhe-superaic-core/include/lwekey.h	/^   int32_t* key;$/;"	m	struct:LweKey	typeref:typename:int32_t *
key	src/libtfhe-superaic-core/include/tfhe_session.h	/^    LweBootstrappingKey* key;   \/\/ 没有办法阻止其他的程序把key拿到以后在外面/;"	m	class:tfhe_superaic::LweBootstrappingKey_Wrap	typeref:typename:LweBootstrappingKey *
key	src/libtfhe-superaic-core/include/tgsw.h	/^    IntPolynomial *key = nullptr; \/\/\/< the key (array of k polynomials)$/;"	m	struct:TGswKey	typeref:typename:IntPolynomial *
key	src/libtfhe-superaic-core/include/tlwe.h	/^    IntPolynomial *key; \/\/\/< the key (i.e k binary polynomials)$/;"	m	struct:TLweKey	typeref:typename:IntPolynomial *
key	src/muduo/examples/memcached/server/Item.h	/^  muduo::StringPiece key() const$/;"	f	class:Item	typeref:typename:muduo::StringPiece
key	src/tests/googletest/googletest/include/gtest/gtest.h	/^  const char* key() const {$/;"	f	class:testing::TestProperty	typeref:typename:const char *
key1024	src/tests/lwe_test.cpp	/^        static const LweKey *key1024;$/;"	m	class:__anonc84148b60111::LweTest	typeref:typename:const LweKey *	file:
key1024	src/tests/lwe_test.cpp	/^    const LweKey *LweTest::key1024 = new_random_LweKey(params1024);$/;"	m	class:__anonc84148b60111::LweTest	typeref:typename:const LweKey *
key1024_1	src/tests/tgsw_direct_test.cpp	/^    const TGswKey *key1024_1 = new_random_key(params1024_1);$/;"	v	namespace:__anon2d2168ad0111	typeref:typename:const TGswKey *
key1024_1	src/tests/tgsw_test.cpp	/^    const TGswKey *key1024_1 = new_random_key(params1024_1);$/;"	v	namespace:__anonfeb37f530111	typeref:typename:const TGswKey *
key1024_1	src/tests/tlwe_test.cpp	/^    const TLweKey *key1024_1 = new_random_key(params1024_1);$/;"	v	namespace:__anonc028f2ea0111	typeref:typename:const TLweKey *
key1024_2	src/tests/tgsw_direct_test.cpp	/^    const TGswKey *key1024_2 = new_random_key(params1024_2);$/;"	v	namespace:__anon2d2168ad0111	typeref:typename:const TGswKey *
key1024_2	src/tests/tgsw_test.cpp	/^    const TGswKey *key1024_2 = new_random_key(params1024_2);$/;"	v	namespace:__anonfeb37f530111	typeref:typename:const TGswKey *
key1024_2	src/tests/tlwe_test.cpp	/^    const TLweKey *key1024_2 = new_random_key(params1024_2);$/;"	v	namespace:__anonc028f2ea0111	typeref:typename:const TLweKey *
key2048_1	src/tests/tgsw_direct_test.cpp	/^    const TGswKey *key2048_1 = new_random_key(params2048_1);$/;"	v	namespace:__anon2d2168ad0111	typeref:typename:const TGswKey *
key2048_1	src/tests/tgsw_test.cpp	/^    const TGswKey *key2048_1 = new_random_key(params2048_1);$/;"	v	namespace:__anonfeb37f530111	typeref:typename:const TGswKey *
key2048_1	src/tests/tlwe_test.cpp	/^    const TLweKey *key2048_1 = new_random_key(params2048_1);$/;"	v	namespace:__anonc028f2ea0111	typeref:typename:const TLweKey *
key2048_2	src/tests/tgsw_direct_test.cpp	/^    const TGswKey *key2048_2 = new_random_key(params2048_2);$/;"	v	namespace:__anon2d2168ad0111	typeref:typename:const TGswKey *
key2048_2	src/tests/tgsw_test.cpp	/^    const TGswKey *key2048_2 = new_random_key(params2048_2);$/;"	v	namespace:__anonfeb37f530111	typeref:typename:const TGswKey *
key2048_2	src/tests/tlwe_test.cpp	/^    const TLweKey *key2048_2 = new_random_key(params2048_2);$/;"	v	namespace:__anonc028f2ea0111	typeref:typename:const TLweKey *
key4	src/tests/small_size_test.cpp	/^        static const LweKey *key4;$/;"	m	class:__anon9baab4410111::LweTest	typeref:typename:const LweKey *	file:
key4	src/tests/small_size_test.cpp	/^    const LweKey *LweTest::key4 = new_random_LweKey(params4);$/;"	m	class:__anon9baab4410111::LweTest	typeref:typename:const LweKey *
key500	src/tests/lwe_test.cpp	/^        static const LweKey *key500;$/;"	m	class:__anonc84148b60111::LweTest	typeref:typename:const LweKey *	file:
key500	src/tests/lwe_test.cpp	/^    const LweKey *LweTest::key500 = new_random_LweKey(params500);$/;"	m	class:__anonc84148b60111::LweTest	typeref:typename:const LweKey *
key500	src/tests/lwekeyswitch_test.cpp	/^    const LweKey *key500 = new_LweKey(params500_0);$/;"	v	namespace:__anon0e34bff10111	typeref:typename:const LweKey *
key512_1	src/tests/tgsw_direct_test.cpp	/^    const TGswKey *key512_1 = new_random_key(params512_1);$/;"	v	namespace:__anon2d2168ad0111	typeref:typename:const TGswKey *
key512_1	src/tests/tgsw_test.cpp	/^    const TGswKey *key512_1 = new_random_key(params512_1);$/;"	v	namespace:__anonfeb37f530111	typeref:typename:const TGswKey *
key512_1	src/tests/tlwe_test.cpp	/^    const TLweKey *key512_1 = new_random_key(params512_1);$/;"	v	namespace:__anonc028f2ea0111	typeref:typename:const TLweKey *
key512_2	src/tests/tgsw_direct_test.cpp	/^    const TGswKey *key512_2 = new_random_key(params512_2);$/;"	v	namespace:__anon2d2168ad0111	typeref:typename:const TGswKey *
key512_2	src/tests/tgsw_test.cpp	/^    const TGswKey *key512_2 = new_random_key(params512_2);$/;"	v	namespace:__anonfeb37f530111	typeref:typename:const TGswKey *
key512_2	src/tests/tlwe_test.cpp	/^    const TLweKey *key512_2 = new_random_key(params512_2);$/;"	v	namespace:__anonc028f2ea0111	typeref:typename:const TLweKey *
key750	src/tests/lwe_test.cpp	/^        static const LweKey *key750;$/;"	m	class:__anonc84148b60111::LweTest	typeref:typename:const LweKey *	file:
key750	src/tests/lwe_test.cpp	/^    const LweKey *LweTest::key750 = new_random_LweKey(params750);$/;"	m	class:__anonc84148b60111::LweTest	typeref:typename:const LweKey *
key_	src/tests/googletest/googletest/include/gtest/gtest.h	/^  std::string key_;$/;"	m	class:testing::TestProperty	typeref:typename:std::string
key_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  const pthread_key_t key_;$/;"	m	class:testing::internal::ThreadLocal	typeref:typename:const pthread_key_t
key_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  std::string key_;$/;"	m	class:testing::internal::TestPropertyKeyIs	typeref:typename:std::string
keylen_	src/muduo/examples/memcached/server/Item.h	/^  int            keylen_;$/;"	m	class:Item	typeref:typename:int
keys	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    keys = values = items = iterkeys = itervalues = iteritems = lambda self: ()$/;"	v	class:_NullDict
keys_	src/muduo/examples/memcached/client/bench.cc	/^  const int keys_;$/;"	m	class:Client	typeref:typename:const int	file:
keyswitch	docs/code_note.md	/^## keyswitch$/;"	s	chapter:Fake
kpl	src/libtfhe-superaic-core/include/tgsw.h	/^    const int32_t kpl; \/\/\/< number of rows = (k+1)*l$/;"	m	struct:TGswParams	typeref:typename:const int32_t
ks	src/libtfhe-superaic-core/include/lwebootstrappingkey.h	/^    LweKeySwitchKey* ks; \/\/\/< the keyswitch key (s'->s)$/;"	m	struct:LweBootstrappingKey	typeref:typename:LweKeySwitchKey *
ks	src/libtfhe-superaic-core/include/lwebootstrappingkey.h	/^    const LweKeySwitchKey* ks; \/\/\/< the keyswitch key (s'->s)$/;"	m	struct:LweBootstrappingKeyFFT	typeref:typename:const LweKeySwitchKey *
ks	src/libtfhe-superaic-core/include/lwekeyswitch.h	/^    LweSample*** ks; \/\/\/< the keyswitch elements: a n.l.base matrix$/;"	m	struct:LweKeySwitchKey	typeref:typename:LweSample ***
ks	src/tests/fakes/lwe-bootstrapping-fft.h	/^        LweKeySwitchKey *ks; \/\/\/< the keyswitch key (s'->s)$/;"	m	struct:__anonaae24d1b0111::FakeLweBootstrappingKeyFFT	typeref:typename:LweKeySwitchKey *
ks	src/tests/fakes/lwe-bootstrapping.h	/^        LweKeySwitchKey *ks; \/\/\/< the keyswitch key (s'->s)$/;"	m	struct:__anon027fcd4e0111::FakeLweBootstrappingKey	typeref:typename:LweKeySwitchKey *
ks0_raw	src/libtfhe-superaic-core/include/lwekeyswitch.h	/^    LweSample* ks0_raw; \/\/tableau qui contient tout les Lwe samples de taille nlbase  百度翻/;"	m	struct:LweKeySwitchKey	typeref:typename:LweSample *
ks128	src/tests/io_test.cpp	/^    const LweKeySwitchKey* ks128 = new_random_ks_key(256,6,2,lweparams120);$/;"	v	namespace:__anon2d72c1c60111	typeref:typename:const LweKeySwitchKey *
ks1_raw	src/libtfhe-superaic-core/include/lwekeyswitch.h	/^    LweSample** ks1_raw;\/\/ de taille nl  pointe vers un tableau ks0_raw dont les cases sont es/;"	m	struct:LweKeySwitchKey	typeref:typename:LweSample **
ks_basebit	src/libtfhe-superaic-core/include/tfhe_gate_bootstrapping_structures.h	/^    const int32_t ks_basebit;$/;"	m	struct:TFheGateBootstrappingParameterSet	typeref:typename:const int32_t
ks_basebit	src/tests/bootstrapping_classic_PBS_parameters_test.cpp	/^    const int32_t ks_basebit = M8_PARAM.pbs_Bgbit;$/;"	v	namespace:__anon8153b4f20111	typeref:typename:const int32_t
ks_basebit	src/tests/bootstrapping_direct_test.cpp	/^    const int32_t ks_basebit = 1;$/;"	v	namespace:__anon560166140111	typeref:typename:const int32_t
ks_basebit	src/tests/bootstrapping_test.cpp	/^    const int32_t ks_basebit = 1;$/;"	v	namespace:__anonf36cd29a0111	typeref:typename:const int32_t
ks_basebit	src/tests/decrypt_with_plaintext_modulus.cpp	/^    const int32_t ks_basebit = M8_PARAM.pbs_Bgbit;$/;"	v	namespace:__anondb55d4a50111	typeref:typename:const int32_t
ks_basebit	src/tests/macros_decrypt_with_plaintext_modulus_macros.cpp	/^    const int32_t ks_basebit = M8_PARAM.pbs_Bgbit;$/;"	v	namespace:__anon478224cd0111	typeref:typename:const int32_t
ks_basebit	src/tests/macros_modSwitch_with_plaintext_modulus_macros.cpp	/^    const int32_t ks_basebit = M8_PARAM.pbs_Bgbit;$/;"	v	namespace:__anon4cdaee640111	typeref:typename:const int32_t
ks_basebit	src/tests/ops_add.cpp	/^    const int32_t ks_basebit = M8_PARAM.pbs_Bgbit;$/;"	v	namespace:__anonb1f413890111	typeref:typename:const int32_t
ks_basebit	src/tests/ops_add_with_carry.cpp	/^    const int32_t ks_basebit = M8_PARAM.pbs_Bgbit;$/;"	v	namespace:__anon662e63c40111	typeref:typename:const int32_t
ks_basebit	src/tests/small_size_test.cpp	/^    const int32_t ks_basebit = 1;$/;"	v	namespace:__anon9baab4410111	typeref:typename:const int32_t
ks_basebit	src/tests/zpf_for_bootstrap_detail.cpp	/^    const int32_t ks_basebit = M8_PARAM.pbs_Bgbit;$/;"	v	namespace:__anonc07144f40111	typeref:typename:const int32_t
ks_t	src/libtfhe-superaic-core/include/tfhe_gate_bootstrapping_structures.h	/^    const int32_t ks_t;$/;"	m	struct:TFheGateBootstrappingParameterSet	typeref:typename:const int32_t
ks_t	src/tests/bootstrapping_classic_PBS_parameters_test.cpp	/^    const int32_t ks_t = M8_PARAM.pbs_decompose_length;$/;"	v	namespace:__anon8153b4f20111	typeref:typename:const int32_t
ks_t	src/tests/bootstrapping_direct_test.cpp	/^    const int32_t ks_t = 15;$/;"	v	namespace:__anon560166140111	typeref:typename:const int32_t
ks_t	src/tests/bootstrapping_test.cpp	/^    const int32_t ks_t = 15;$/;"	v	namespace:__anonf36cd29a0111	typeref:typename:const int32_t
ks_t	src/tests/decrypt_with_plaintext_modulus.cpp	/^    const int32_t ks_t = M8_PARAM.pbs_decompose_length;$/;"	v	namespace:__anondb55d4a50111	typeref:typename:const int32_t
ks_t	src/tests/macros_decrypt_with_plaintext_modulus_macros.cpp	/^    const int32_t ks_t = M8_PARAM.pbs_decompose_length;$/;"	v	namespace:__anon478224cd0111	typeref:typename:const int32_t
ks_t	src/tests/macros_modSwitch_with_plaintext_modulus_macros.cpp	/^    const int32_t ks_t = M8_PARAM.pbs_decompose_length;$/;"	v	namespace:__anon4cdaee640111	typeref:typename:const int32_t
ks_t	src/tests/ops_add.cpp	/^    const int32_t ks_t = M8_PARAM.pbs_decompose_length;$/;"	v	namespace:__anonb1f413890111	typeref:typename:const int32_t
ks_t	src/tests/ops_add_with_carry.cpp	/^    const int32_t ks_t = M8_PARAM.pbs_decompose_length;$/;"	v	namespace:__anon662e63c40111	typeref:typename:const int32_t
ks_t	src/tests/small_size_test.cpp	/^    const int32_t ks_t = 15;$/;"	v	namespace:__anon9baab4410111	typeref:typename:const int32_t
ks_t	src/tests/zpf_for_bootstrap_detail.cpp	/^    const int32_t ks_t = M8_PARAM.pbs_decompose_length;$/;"	v	namespace:__anonc07144f40111	typeref:typename:const int32_t
l	src/libtfhe-superaic-core/include/tgsw.h	/^    const int32_t l; \/\/\/< decomp length$/;"	m	struct:TGswParams	typeref:typename:const int32_t
l	src/libtfhe-superaic-core/include/tgsw.h	/^    const int32_t l;$/;"	m	struct:TGswSample	typeref:typename:const int32_t
l	src/libtfhe-superaic-core/include/tgsw.h	/^    const int32_t l;$/;"	m	struct:TGswSampleFFT	typeref:typename:const int32_t
l_bk	src/tests/bootstrapping_classic_PBS_parameters_test.cpp	/^    const int32_t l_bk = M8_PARAM.tgsw_decompose_length; \/\/ell$/;"	v	namespace:__anon8153b4f20111	typeref:typename:const int32_t
l_bk	src/tests/bootstrapping_direct_test.cpp	/^    const int32_t l_bk = 3; \/\/ell$/;"	v	namespace:__anon560166140111	typeref:typename:const int32_t
l_bk	src/tests/bootstrapping_test.cpp	/^    const int32_t l_bk = 3; \/\/ell$/;"	v	namespace:__anonf36cd29a0111	typeref:typename:const int32_t
l_bk	src/tests/macros_decrypt_with_plaintext_modulus_macros.cpp	/^    const int32_t l_bk = M8_PARAM.tgsw_decompose_length; \/\/ell$/;"	v	namespace:__anon478224cd0111	typeref:typename:const int32_t
l_bk	src/tests/macros_modSwitch_with_plaintext_modulus_macros.cpp	/^    const int32_t l_bk = M8_PARAM.tgsw_decompose_length; \/\/ell$/;"	v	namespace:__anon4cdaee640111	typeref:typename:const int32_t
l_bk	src/tests/ops_add.cpp	/^    const int32_t l_bk = M8_PARAM.tgsw_decompose_length; \/\/ell$/;"	v	namespace:__anonb1f413890111	typeref:typename:const int32_t
l_bk	src/tests/ops_add_with_carry.cpp	/^    const int32_t l_bk = M8_PARAM.tgsw_decompose_length; \/\/ell$/;"	v	namespace:__anon662e63c40111	typeref:typename:const int32_t
l_bk	src/tests/small_size_test.cpp	/^    const int32_t l_bk = 3; \/\/ell$/;"	v	namespace:__anon9baab4410111	typeref:typename:const int32_t
l_bk	src/tests/zpf_for_bootstrap_detail.cpp	/^    const int32_t l_bk = M8_PARAM.tgsw_decompose_length; \/\/ell$/;"	v	namespace:__anonc07144f40111	typeref:typename:const int32_t
l_bsk	src/tests/decrypt_with_plaintext_modulus.cpp	/^    const int32_t l_bsk = M8_PARAM.tgsw_decompose_length; \/\/ell$/;"	v	namespace:__anondb55d4a50111	typeref:typename:const int32_t
label	src/muduo/examples/procmon/plot.cc	/^void Plot::label(double maxValue)$/;"	f	class:Plot	typeref:typename:void
lagrangehalfc_impl.cpp.i	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^lagrangehalfc_impl.cpp.i:$/;"	t
lagrangehalfc_impl.cpp.o	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^lagrangehalfc_impl.cpp.o:$/;"	t
lagrangehalfc_impl.cpp.s	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^lagrangehalfc_impl.cpp.s:$/;"	t
lagrangehalfc_impl.i	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^lagrangehalfc_impl.i: lagrangehalfc_impl.cpp.i$/;"	t
lagrangehalfc_impl.o	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^lagrangehalfc_impl.o: lagrangehalfc_impl.cpp.o$/;"	t
lagrangehalfc_impl.s	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^lagrangehalfc_impl.s: lagrangehalfc_impl.cpp.s$/;"	t
lastFlush_	src/muduo/muduo/base/LogFile.h	/^  time_t lastFlush_;$/;"	m	class:muduo::LogFile	typeref:typename:time_t
lastPubTime_	src/muduo/examples/hub/hub.cc	/^  Timestamp lastPubTime_;$/;"	m	class:pubsub::Topic	typeref:typename:Timestamp	file:
lastReceiveTime	src/muduo/examples/idleconnection/sortedlist.cc	/^    Timestamp lastReceiveTime;$/;"	m	struct:EchoServer::Node	typeref:typename:Timestamp	file:
lastRoll_	src/muduo/muduo/base/LogFile.h	/^  time_t lastRoll_;$/;"	m	class:muduo::LogFile	typeref:typename:time_t
lastSecond_	src/muduo/examples/sudoku/stat.h	/^  time_t lastSecond_;$/;"	m	class:SudokuStat	typeref:typename:time_t
lastStatData_	src/muduo/examples/procmon/procmon.cc	/^  StatData lastStatData_;$/;"	m	class:Procmon	typeref:typename:StatData	file:
last_	src/muduo/examples/memcached/server/Session.cc	/^  Tokenizer::iterator last_;;$/;"	m	struct:Session::Reader	typeref:typename:Tokenizer::iterator	file:
last_	src/tests/googletest/googletest/samples/sample3-inl.h	/^  QueueNode<E>* last_;  \/\/ The last node of the queue.$/;"	m	class:Queue	typeref:typename:QueueNode<E> *
last_clause_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  Clause last_clause_;$/;"	m	class:testing::internal::ExpectationBase	typeref:typename:Clause
last_clause_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  Clause last_clause_;$/;"	m	class:testing::internal::UntypedOnCallSpecBase	typeref:typename:Clause
last_death_test_case_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  int last_death_test_case_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:int
last_death_test_message_	src/tests/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h	/^  static std::string last_death_test_message_;$/;"	m	class:testing::internal::DeathTest	typeref:typename:std::string
last_death_test_message_	src/tests/googletest/googletest/src/gtest-death-test.cc	/^std::string DeathTest::last_death_test_message_;$/;"	m	class:testing::internal::DeathTest	typeref:typename:std::string
last_expectation_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  internal::linked_ptr<Expectation> last_expectation_;$/;"	m	class:testing::Sequence	typeref:typename:internal::linked_ptr<Expectation>
last_use_time	src/libtfhe-superaic-core/include/tfhe_session.h	/^    chrono::steady_clock::time_point last_use_time;$/;"	m	class:tfhe_superaic::Session	typeref:typename:chrono::steady_clock::time_point
latch	src/muduo/examples/filetransfer/loadtest/Client.java	/^        private final CountDownLatch latch;$/;"	f	class:Client.PipelineFactory	file:
latch	src/muduo/examples/filetransfer/loadtest/Handler.java	/^    private CountDownLatch latch;$/;"	f	class:Handler	file:
latch	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockBackendServer.java	/^    private final CountDownLatch latch;$/;"	f	class:MockBackendServer	file:
latch	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockClient.java	/^    private MyCountDownLatch latch;$/;"	f	class:MockClient	file:
latch	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MultiplexerTest.java	/^    private MyCountDownLatch latch;$/;"	f	class:MultiplexerTest	file:
latch_	src/muduo/muduo/base/AsyncLogging.h	/^  muduo::CountDownLatch latch_;$/;"	m	class:muduo::AsyncLogging	typeref:typename:muduo::CountDownLatch
latch_	src/muduo/muduo/base/Thread.cc	/^  CountDownLatch* latch_;$/;"	m	struct:muduo::detail::ThreadData	typeref:typename:CountDownLatch *	file:
latch_	src/muduo/muduo/base/Thread.h	/^  CountDownLatch latch_;$/;"	m	class:muduo::Thread	typeref:typename:CountDownLatch
latch_	src/muduo/muduo/base/tests/BlockingQueue_bench.cc	/^  muduo::CountDownLatch latch_;$/;"	m	class:Bench	typeref:typename:muduo::CountDownLatch	file:
latch_	src/muduo/muduo/base/tests/BlockingQueue_test.cc	/^  muduo::CountDownLatch latch_;$/;"	m	class:Test	typeref:typename:muduo::CountDownLatch	file:
latch_	src/muduo/muduo/base/tests/BoundedBlockingQueue_test.cc	/^  muduo::CountDownLatch latch_;$/;"	m	class:Test	typeref:typename:muduo::CountDownLatch	file:
latencies_	src/muduo/examples/sudoku/loadtest.cc	/^  std::vector<int> latencies_;$/;"	m	class:SudokuClient	typeref:typename:std::vector<int>	file:
latencies_	src/muduo/examples/sudoku/pipeline.cc	/^  std::vector<int> latencies_;$/;"	m	class:SudokuClient	typeref:typename:std::vector<int>	file:
latencies_	src/muduo/examples/sudoku/stat.h	/^  boost::circular_buffer<int64_t> latencies_;$/;"	m	class:SudokuStat	typeref:typename:boost::circular_buffer<int64_t>
leakable	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^  bool leakable;  \/\/ true iff it's OK to leak the object.$/;"	m	struct:testing::__anonc1446e5b0111::MockObjectState	typeref:typename:bool	file:
left	src/muduo/examples/sudoku/sudoku.cc	/^    Node* left;$/;"	m	struct:Node	typeref:typename:Node *	file:
left	src/tests/googletest/googletest/test/gtest_unittest.cc	/^    const char* left;$/;"	m	struct:__anonf780395f0111::TEST::Case	typeref:typename:const char *	file:
left_start_	src/tests/googletest/googletest/src/gtest.cc	/^  size_t left_start_, right_start_;$/;"	m	class:testing::internal::edit_distance::__anon3f29b7680211::Hunk	typeref:typename:size_t	file:
len_	src/muduo/muduo/base/Logging.cc	/^  const unsigned len_;$/;"	m	class:muduo::T	typeref:typename:const unsigned	file:
length	src/muduo/examples/ace/ttcp/common.h	/^  int length;$/;"	m	struct:Options	typeref:typename:int
length	src/muduo/examples/ace/ttcp/common.h	/^  int32_t length;$/;"	m	struct:PayloadMessage	typeref:typename:int32_t
length	src/muduo/examples/ace/ttcp/common.h	/^  int32_t length;$/;"	m	struct:SessionMessage	typeref:typename:int32_t
length	src/muduo/examples/fastcgi/fastcgi.cc	/^  uint16_t length;$/;"	m	struct:FastCgiCodec::RecordHeader	typeref:typename:uint16_t	file:
length	src/muduo/muduo/base/LogStream.h	/^  int length() const { return length_; }$/;"	f	class:muduo::Fmt	typeref:typename:int
length	src/muduo/muduo/base/LogStream.h	/^  int length() const { return static_cast<int>(cur_ - data_); }$/;"	f	class:muduo::detail::FixedBuffer	typeref:typename:int
length_	src/muduo/examples/curl/download.cc	/^  int64_t length_;$/;"	m	class:Downloader	typeref:typename:int64_t	file:
length_	src/muduo/muduo/base/LogStream.h	/^  int length_;$/;"	m	class:muduo::Fmt	typeref:typename:int
length_	src/muduo/muduo/base/StringPiece.h	/^  int           length_;$/;"	m	class:muduo::StringPiece	typeref:typename:int
level	src/muduo/examples/ace/logging/logrecord.proto	/^  required int32 level = 2;$/;"	f	message:logging.LogRecord	typeref:typename:int32
level_	src/muduo/muduo/base/Logging.h	/^  LogLevel level_;$/;"	m	class:muduo::Logger::Impl	typeref:typename:LogLevel
lhs_used_	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  std::vector<size_t> lhs_used_;$/;"	m	class:testing::gmock_matchers_test::__anon745c08170311::BacktrackingMaxBPMState	typeref:typename:std::vector<size_t>	file:
lib/libgmock.la	src/tests/googletest/googlemock/Makefile.am	/^lib_LTLIBRARIES = lib\/libgmock.la lib\/libgmock_main.la$/;"	T	directory:lib
lib/libgmock_main.la	src/tests/googletest/googlemock/Makefile.am	/^lib_LTLIBRARIES = lib\/libgmock.la lib\/libgmock_main.la$/;"	T	directory:lib
lib/libgtest.la	src/tests/googletest/googletest/Makefile.am	/^lib_LTLIBRARIES = lib\/libgtest.la lib\/libgtest_main.la$/;"	T	directory:lib
lib/libgtest_main.la	src/tests/googletest/googletest/Makefile.am	/^lib_LTLIBRARIES = lib\/libgtest.la lib\/libgtest_main.la$/;"	T	directory:lib
lib_LTLIBRARIES	src/tests/googletest/googlemock/Makefile.am	/^lib_LTLIBRARIES = lib\/libgmock.la lib\/libgmock_main.la$/;"	m
lib_LTLIBRARIES	src/tests/googletest/googletest/Makefile.am	/^lib_LTLIBRARIES = lib\/libgtest.la lib\/libgtest_main.la$/;"	m
lib_libgmock_la	src/tests/googletest/googlemock/Makefile.am	/^lib_LTLIBRARIES = lib\/libgmock.la lib\/libgmock_main.la$/;"	T	directory:lib
lib_libgmock_la_SOURCES	src/tests/googletest/googlemock/Makefile.am	/^lib_libgmock_la_SOURCES = src\/gmock-all.cc$/;"	m
lib_libgmock_main_la	src/tests/googletest/googlemock/Makefile.am	/^lib_LTLIBRARIES = lib\/libgmock.la lib\/libgmock_main.la$/;"	T	directory:lib
lib_libgmock_main_la_LIBADD	src/tests/googletest/googlemock/Makefile.am	/^lib_libgmock_main_la_LIBADD = lib\/libgmock.la$/;"	m
lib_libgmock_main_la_SOURCES	src/tests/googletest/googlemock/Makefile.am	/^lib_libgmock_main_la_SOURCES = src\/gmock_main.cc$/;"	m
lib_libgtest_la	src/tests/googletest/googletest/Makefile.am	/^lib_LTLIBRARIES = lib\/libgtest.la lib\/libgtest_main.la$/;"	T	directory:lib
lib_libgtest_la_SOURCES	src/tests/googletest/googletest/Makefile.am	/^lib_libgtest_la_SOURCES = src\/gtest-all.cc$/;"	m
lib_libgtest_main_la	src/tests/googletest/googletest/Makefile.am	/^lib_LTLIBRARIES = lib\/libgtest.la lib\/libgtest_main.la$/;"	T	directory:lib
lib_libgtest_main_la_LIBADD	src/tests/googletest/googletest/Makefile.am	/^lib_libgtest_main_la_LIBADD = lib\/libgtest.la$/;"	m
lib_libgtest_main_la_SOURCES	src/tests/googletest/googletest/Makefile.am	/^lib_libgtest_main_la_SOURCES = src\/gtest_main.cc$/;"	m
library1	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^namespace library1 {$/;"	n	file:
library2	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^namespace library2 {$/;"	n	file:
libtfhe-superaic-acc/CMakeFiles/tfhe_superaic_acc.dir/rule	buildotests/libtfhe-superaic-acc/Makefile	/^libtfhe-superaic-acc\/CMakeFiles\/tfhe_superaic_acc.dir\/rule:$/;"	t
libtfhe-superaic-client/CMakeFiles/tfhe_superaic_client.dir/rule	buildotests/libtfhe-superaic-client/Makefile	/^libtfhe-superaic-client\/CMakeFiles\/tfhe_superaic_client.dir\/rule:$/;"	t
libtfhe-superaic-core/CMakeFiles/tfhe_superaic_core.dir/rule	buildotests/libtfhe-superaic-core/Makefile	/^libtfhe-superaic-core\/CMakeFiles\/tfhe_superaic_core.dir\/rule:$/;"	t
libtfhe-superaic-core/fft_processors/nayuki/CMakeFiles/tfhe-fft-nayuki-portable.dir/rule	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^libtfhe-superaic-core\/fft_processors\/nayuki\/CMakeFiles\/tfhe-fft-nayuki-portable.dir\/rule:$/;"	t
libtfhe-superaic-server/CMakeFiles/tfhe_superaic_server.dir/rule	buildotests/libtfhe-superaic-server/Makefile	/^libtfhe-superaic-server\/CMakeFiles\/tfhe_superaic_server.dir\/rule:$/;"	t
line	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  int line() const { return line_; }$/;"	f	class:testing::internal::ExpectationBase	typeref:typename:int
line	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  int line() const { return line_; }$/;"	f	class:testing::internal::UntypedOnCallSpecBase	typeref:typename:int
line	src/tests/googletest/googletest/include/gtest/gtest.h	/^    int const line;$/;"	m	struct:testing::internal::AssertHelper::AssertHelperData	typeref:typename:int const
line	src/tests/googletest/googletest/include/gtest/gtest.h	/^  int line() const { return location_.line; }$/;"	f	class:testing::TestInfo	typeref:typename:int
line	src/tests/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h	/^  int line() const { return line_; }$/;"	f	class:testing::internal::InternalRunDeathTestFlag	typeref:typename:int
line	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  int line;$/;"	m	struct:testing::internal::CodeLocation	typeref:typename:int
line	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^      int line;$/;"	m	struct:testing::internal::ParameterizedTestCaseInfo::InstantiationInfo	typeref:typename:int
line	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  int line;$/;"	m	struct:testing::internal::TraceInfo	typeref:typename:int
line	src/tests/googletest/googletest/test/gtest_unittest.cc	/^    int line;$/;"	m	struct:__anonf780395f0111::TEST::Case	typeref:typename:int	file:
line_	src/muduo/muduo/base/Logging.h	/^  int line_;$/;"	m	class:muduo::Logger::Impl	typeref:typename:int
line_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  int line_;                  \/\/ The line number of the expectation.$/;"	m	class:testing::internal::ExpectationBase	typeref:typename:int
line_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  int line_;$/;"	m	class:testing::internal::UntypedOnCallSpecBase	typeref:typename:int
line_	src/tests/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h	/^  int line_;$/;"	m	class:testing::internal::InternalRunDeathTestFlag	typeref:typename:int
line_	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  const int line_;$/;"	m	class:testing::internal::ExecDeathTest	typeref:typename:const int	file:
line_	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  const int line_;$/;"	m	class:testing::internal::WindowsDeathTest	typeref:typename:const int	file:
line_number	src/tests/googletest/googletest/include/gtest/gtest-test-part.h	/^  int line_number() const { return line_number_; }$/;"	f	class:testing::TestPartResult	typeref:typename:int
line_number_	src/tests/googletest/googletest/include/gtest/gtest-test-part.h	/^  int line_number_;$/;"	m	class:testing::TestPartResult	typeref:typename:int
link_	src/tests/googletest/googletest/include/gtest/internal/gtest-linked_ptr.h	/^  linked_ptr_internal link_;$/;"	m	class:testing::internal::linked_ptr	typeref:typename:linked_ptr_internal
linked_ptr	src/tests/googletest/googletest/include/gtest/internal/gtest-linked_ptr.h	/^  explicit linked_ptr(T* ptr = NULL) { capture(ptr); }$/;"	f	class:testing::internal::linked_ptr
linked_ptr	src/tests/googletest/googletest/include/gtest/internal/gtest-linked_ptr.h	/^  linked_ptr(linked_ptr const& ptr) {  \/\/ NOLINT$/;"	f	class:testing::internal::linked_ptr
linked_ptr	src/tests/googletest/googletest/include/gtest/internal/gtest-linked_ptr.h	/^  template <typename U> linked_ptr(linked_ptr<U> const& ptr) { copy(&ptr); }$/;"	f	class:testing::internal::linked_ptr
linked_ptr	src/tests/googletest/googletest/include/gtest/internal/gtest-linked_ptr.h	/^class linked_ptr {$/;"	c	namespace:testing::internal
linked_ptr_internal	src/tests/googletest/googletest/include/gtest/internal/gtest-linked_ptr.h	/^class linked_ptr_internal {$/;"	c	namespace:testing::internal
listFiles	src/muduo/examples/procmon/procmon.cc	/^  void listFiles()$/;"	f	class:Procmon	typeref:typename:void	file:
listRpc	src/muduo/muduo/net/protorpc/rpcservice.proto	/^  rpc listRpc (ListRpcRequest) returns (ListRpcResponse);$/;"	r	service:muduo.net.RpcService	typeref:typename:ListRpcResponse
listThreads	src/muduo/examples/procmon/procmon.cc	/^  void listThreads()$/;"	f	class:Procmon	typeref:typename:void	file:
list_	src/tests/googletest/googletest/test/gtest-port_test.cc	/^  static std::vector<DestructorCall*>* const list_;$/;"	m	class:testing::internal::DestructorCall	typeref:typename:std::vector<DestructorCall * > * const	file:
list_	src/tests/googletest/googletest/test/gtest-port_test.cc	/^std::vector<DestructorCall*>* const DestructorCall::list_ =$/;"	m	class:testing::internal::DestructorCall	typeref:typename:std::vector<DestructorCall * > * const
list_install_components	buildotests/Makefile	/^list_install_components:$/;"	t
list_install_components	buildotests/driver/Makefile	/^list_install_components:$/;"	t
list_install_components	buildotests/examples/Makefile	/^list_install_components:$/;"	t
list_install_components	buildotests/libtfhe-superaic-acc/Makefile	/^list_install_components:$/;"	t
list_install_components	buildotests/libtfhe-superaic-client/Makefile	/^list_install_components:$/;"	t
list_install_components	buildotests/libtfhe-superaic-core/Makefile	/^list_install_components:$/;"	t
list_install_components	buildotests/libtfhe-superaic-core/fft_processors/Makefile	/^list_install_components:$/;"	t
list_install_components	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^list_install_components:$/;"	t
list_install_components	buildotests/libtfhe-superaic-server/Makefile	/^list_install_components:$/;"	t
list_install_components	buildotests/tests/Makefile	/^list_install_components:$/;"	t
list_install_components	buildotests/tests/googletest/Makefile	/^list_install_components:$/;"	t
list_install_components	buildotests/tests/googletest/googlemock/Makefile	/^list_install_components:$/;"	t
list_install_components	buildotests/tests/googletest/googlemock/gtest/Makefile	/^list_install_components:$/;"	t
list_install_components/fast	buildotests/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
list_install_components/fast	buildotests/driver/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
list_install_components/fast	buildotests/examples/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
list_install_components/fast	buildotests/libtfhe-superaic-acc/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
list_install_components/fast	buildotests/libtfhe-superaic-client/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
list_install_components/fast	buildotests/libtfhe-superaic-core/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
list_install_components/fast	buildotests/libtfhe-superaic-core/fft_processors/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
list_install_components/fast	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
list_install_components/fast	buildotests/libtfhe-superaic-server/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
list_install_components/fast	buildotests/tests/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
list_install_components/fast	buildotests/tests/googletest/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
list_install_components/fast	buildotests/tests/googletest/googlemock/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
list_install_components/fast	buildotests/tests/googletest/googlemock/gtest/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
list_method	src/muduo/muduo/net/protorpc/rpcservice.proto	/^  optional bool list_method = 2;$/;"	f	message:muduo.net.ListRpcRequest	typeref:typename:bool
list_tests	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  bool list_tests;$/;"	m	struct:testing::Flags	typeref:typename:bool	file:
list_tests_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  bool list_tests_;$/;"	m	class:testing::internal::GTestFlagSaver	typeref:typename:bool
listen	src/muduo/muduo/net/Acceptor.cc	/^void Acceptor::listen()$/;"	f	class:Acceptor	typeref:typename:void
listen	src/muduo/muduo/net/Socket.cc	/^void Socket::listen()$/;"	f	class:Socket	typeref:typename:void
listenOrDie	src/muduo/muduo/net/SocketsOps.cc	/^void sockets::listenOrDie(int sockfd)$/;"	f	class:sockets	typeref:typename:void
listen_address	src/muduo/examples/wordcount/slowsink.py	/^	listen_address = ("", port)$/;"	v
listener	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockBackendServer.java	/^    private Channel listener;$/;"	f	class:MockBackendServer	file:
listeners	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  TestEventListeners* listeners() { return &listeners_; }$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:TestEventListeners *
listeners	src/tests/googletest/googletest/src/gtest.cc	/^TestEventListeners& UnitTest::listeners() {$/;"	f	class:testing::UnitTest	typeref:typename:TestEventListeners &
listeners_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  TestEventListeners listeners_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:TestEventListeners
listeners_	src/tests/googletest/googletest/src/gtest.cc	/^  std::vector<TestEventListener*> listeners_;$/;"	m	class:testing::internal::TestEventRepeater	typeref:typename:std::vector<TestEventListener * >	file:
listening	src/muduo/muduo/net/Acceptor.h	/^  bool listening() const { return listening_; }$/;"	f	class:muduo::net::Acceptor	typeref:typename:bool
listening_	src/muduo/muduo/net/Acceptor.h	/^  bool listening_;$/;"	m	class:muduo::net::Acceptor	typeref:typename:bool
load	src/muduo/examples/procmon/dummyload.cc	/^void load(int percent)$/;"	f	typeref:typename:void
loadZoneFile	src/muduo/muduo/base/TimeZone.cc	/^TimeZone TimeZone::loadZoneFile(const char* zonefile)$/;"	f	class:TimeZone	typeref:typename:TimeZone
loadavg	src/muduo/muduo/net/inspect/SystemInspector.cc	/^string SystemInspector::loadavg(HttpRequest::Method, const Inspector::ArgList&)$/;"	f	class:SystemInspector	typeref:typename:string
loc_	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^  const void* loc_;$/;"	m	struct:RawMessage	typeref:typename:const void *	file:
local	src/muduo/muduo/base/tests/TimeZone_unittest.cc	/^  const char* local;$/;"	m	struct:LocalToUtcTestCase	typeref:typename:const char *	file:
local	src/muduo/muduo/base/tests/TimeZone_unittest.cc	/^  const char* local;$/;"	m	struct:TestCase	typeref:typename:const char *	file:
localAddr_	src/muduo/muduo/net/TcpConnection.h	/^  const InetAddress localAddr_;$/;"	m	class:muduo::net::TcpConnection	typeref:typename:const InetAddress
localAddress	src/muduo/muduo/net/TcpConnection.h	/^  const InetAddress& localAddress() const { return localAddr_; }$/;"	f	class:muduo::net::TcpConnection	typeref:typename:const InetAddress &
localtime	src/muduo/muduo/base/TimeZone.cc	/^    int64_t localtime;  \/\/ Shifted Epoch$/;"	m	struct:TimeZone::Data::Transition	typeref:typename:int64_t	file:
localtimeIdx	src/muduo/muduo/base/TimeZone.cc	/^    int localtimeIdx;$/;"	m	struct:TimeZone::Data::Transition	typeref:typename:int	file:
localtimes	src/muduo/muduo/base/TimeZone.cc	/^  std::vector<LocalTime> localtimes;$/;"	m	struct:TimeZone::Data	typeref:typename:std::vector<LocalTime>	file:
location_	src/tests/googletest/googletest/include/gtest/gtest.h	/^  internal::CodeLocation location_;$/;"	m	class:testing::TestInfo	typeref:typename:internal::CodeLocation
lock	src/muduo/muduo/base/Mutex.h	/^  void lock() ACQUIRE()$/;"	f	class:muduo::MutexLock	typeref:typename:void
log10_rms_err	src/libtfhe-superaic-core/fft_processors/nayuki/fft-test.c	/^static double log10_rms_err(const double *xreal, const double *ximag, const double *yreal, const/;"	f	typeref:typename:double	file:
logConnection	src/muduo/contrib/hiredis/Hiredis.cc	/^void Hiredis::logConnection(bool up) const$/;"	f	class:Hiredis	typeref:typename:void
logHup_	src/muduo/muduo/net/Channel.h	/^  bool       logHup_;$/;"	m	class:muduo::net::Channel	typeref:typename:bool
logInThread	src/muduo/muduo/base/tests/Logging_test.cc	/^void logInThread()$/;"	f	typeref:typename:void
logLevel	src/muduo/muduo/base/Logging.h	/^inline Logger::LogLevel Logger::logLevel()$/;"	f	class:muduo::Logger	typeref:typename:Logger::LogLevel
logfile_test	src/muduo/muduo/base/tests/CMakeLists.txt	/^add_executable(logfile_test LogFile_test.cc)$/;"	t
logger	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockBackendServer.java	/^    private static final Logger logger = LoggerFactory.getLogger("MockBackendServer");$/;"	f	class:MockBackendServer	file:
logger	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockClient.java	/^    private static final Logger logger = LoggerFactory.getLogger("MockClient");$/;"	f	class:MockClient	file:
logger	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MultiplexerTest.java	/^    private static final Logger logger = LoggerFactory.getLogger("MultiplexerTest");$/;"	f	class:MultiplexerTest	file:
logging	src/muduo/examples/ace/logging/client.cc	/^namespace logging$/;"	n	file:
logging	src/muduo/examples/ace/logging/logrecord.proto	/^package logging;$/;"	p
logging	src/muduo/examples/ace/logging/server.cc	/^namespace logging$/;"	n	file:
logging_test	src/muduo/muduo/base/tests/CMakeLists.txt	/^add_executable(logging_test Logging_test.cc)$/;"	t
logstream_bench	src/muduo/muduo/base/tests/CMakeLists.txt	/^add_executable(logstream_bench LogStream_bench.cc)$/;"	t
logstream_test	src/muduo/muduo/base/tests/CMakeLists.txt	/^add_executable(logstream_test LogStream_test.cc)$/;"	t
longTask	src/muduo/muduo/base/tests/ThreadPool_test.cc	/^void longTask(int num)$/;"	f	typeref:typename:void
loop	src/muduo/muduo/net/EventLoop.cc	/^void EventLoop::loop()$/;"	f	class:EventLoop	typeref:typename:void
loop1_	src/muduo/examples/asio/tutorial/timer6/timer.cc	/^  muduo::net::EventLoop* loop1_;$/;"	m	class:Printer	typeref:typename:muduo::net::EventLoop *	file:
loop2_	src/muduo/examples/asio/tutorial/timer6/timer.cc	/^  muduo::net::EventLoop* loop2_;$/;"	m	class:Printer	typeref:typename:muduo::net::EventLoop *	file:
loopThread_	src/muduo/examples/wordcount/hasher.cc	/^  EventLoopThread loopThread_;$/;"	m	class:WordCountSender	typeref:typename:EventLoopThread	file:
loop_	src/muduo/contrib/hiredis/Hiredis.h	/^  muduo::net::EventLoop* loop_;$/;"	m	class:hiredis::Hiredis	typeref:typename:muduo::net::EventLoop *
loop_	src/muduo/examples/ace/logging/server.cc	/^  EventLoop* loop_;$/;"	m	class:logging::LogServer	typeref:typename:EventLoop *	file:
loop_	src/muduo/examples/asio/chat/loadtest.cc	/^  EventLoop* loop_;$/;"	m	class:ChatClient	typeref:typename:EventLoop *	file:
loop_	src/muduo/examples/asio/tutorial/timer4/timer.cc	/^  muduo::net::EventLoop* loop_;$/;"	m	class:Printer	typeref:typename:muduo::net::EventLoop *	file:
loop_	src/muduo/examples/cdns/Resolver.h	/^  muduo::net::EventLoop* loop_;$/;"	m	class:cdns::Resolver	typeref:typename:muduo::net::EventLoop *
loop_	src/muduo/examples/curl/Curl.h	/^  muduo::net::EventLoop* loop_;$/;"	m	class:curl::Curl	typeref:typename:muduo::net::EventLoop *
loop_	src/muduo/examples/curl/download.cc	/^  EventLoop* loop_;$/;"	m	class:Downloader	typeref:typename:EventLoop *	file:
loop_	src/muduo/examples/hub/hub.cc	/^  EventLoop* loop_;$/;"	m	class:pubsub::PubSubServer	typeref:typename:EventLoop *	file:
loop_	src/muduo/examples/memcached/server/MemcacheServer.h	/^  muduo::net::EventLoop* loop_;  \/\/ not own$/;"	m	class:MemcacheServer	typeref:typename:muduo::net::EventLoop *
loop_	src/muduo/examples/multiplexer/demux.cc	/^  EventLoop* loop_;$/;"	m	class:DemuxServer	typeref:typename:EventLoop *	file:
loop_	src/muduo/examples/netty/discard/client.cc	/^  EventLoop* loop_;$/;"	m	class:DiscardClient	typeref:typename:EventLoop *	file:
loop_	src/muduo/examples/netty/echo/client.cc	/^  EventLoop* loop_;$/;"	m	class:EchoClient	typeref:typename:EventLoop *	file:
loop_	src/muduo/examples/pingpong/client.cc	/^  EventLoop* loop_;$/;"	m	class:Client	typeref:typename:EventLoop *	file:
loop_	src/muduo/examples/protobuf/codec/client.cc	/^  EventLoop* loop_;$/;"	m	class:QueryClient	typeref:typename:EventLoop *	file:
loop_	src/muduo/examples/protobuf/resolver/client.cc	/^  EventLoop* loop_;$/;"	m	class:RpcClient	typeref:typename:EventLoop *	file:
loop_	src/muduo/examples/protobuf/rpc/client.cc	/^  EventLoop* loop_;$/;"	m	class:RpcClient	typeref:typename:EventLoop *	file:
loop_	src/muduo/examples/protobuf/rpcbalancer/balancer.cc	/^  EventLoop* loop_;$/;"	m	class:BackendSession	typeref:typename:EventLoop *	file:
loop_	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^  EventLoop* loop_;$/;"	m	class:BackendSession	typeref:typename:EventLoop *	file:
loop_	src/muduo/examples/simple/chargenclient/chargenclient.cc	/^  EventLoop* loop_;$/;"	m	class:ChargenClient	typeref:typename:EventLoop *	file:
loop_	src/muduo/examples/simple/timeclient/timeclient.cc	/^  EventLoop* loop_;$/;"	m	class:TimeClient	typeref:typename:EventLoop *	file:
loop_	src/muduo/examples/wordcount/hasher.cc	/^  EventLoop* loop_;$/;"	m	class:WordCountSender	typeref:typename:EventLoop *	file:
loop_	src/muduo/examples/wordcount/receiver.cc	/^  EventLoop* loop_;$/;"	m	class:WordCountReceiver	typeref:typename:EventLoop *	file:
loop_	src/muduo/muduo/net/Acceptor.h	/^  EventLoop* loop_;$/;"	m	class:muduo::net::Acceptor	typeref:typename:EventLoop *
loop_	src/muduo/muduo/net/Channel.h	/^  EventLoop* loop_;$/;"	m	class:muduo::net::Channel	typeref:typename:EventLoop *
loop_	src/muduo/muduo/net/Connector.h	/^  EventLoop* loop_;$/;"	m	class:muduo::net::Connector	typeref:typename:EventLoop *
loop_	src/muduo/muduo/net/TcpClient.h	/^  EventLoop* loop_;$/;"	m	class:muduo::net::TcpClient	typeref:typename:EventLoop *
loop_	src/muduo/muduo/net/TcpConnection.h	/^  EventLoop* loop_;$/;"	m	class:muduo::net::TcpConnection	typeref:typename:EventLoop *
loop_	src/muduo/muduo/net/TcpServer.h	/^  EventLoop* loop_;  \/\/ the acceptor loop$/;"	m	class:muduo::net::TcpServer	typeref:typename:EventLoop *
loop_	src/muduo/muduo/net/TimerQueue.h	/^  EventLoop* loop_;$/;"	m	class:muduo::net::TimerQueue	typeref:typename:EventLoop *
loop_	src/muduo/muduo/net/tests/Channel_test.cc	/^  EventLoop* loop_;$/;"	m	class:PeriodicTimer	typeref:typename:EventLoop *	file:
loop_	src/muduo/muduo/net/tests/EchoClient_unittest.cc	/^  EventLoop* loop_;$/;"	m	class:EchoClient	typeref:typename:EventLoop *	file:
loop_	src/muduo/muduo/net/tests/EchoServer_unittest.cc	/^  EventLoop* loop_;$/;"	m	class:EchoServer	typeref:typename:EventLoop *	file:
looping_	src/muduo/muduo/net/EventLoop.h	/^  bool looping_; \/* atomic *\/$/;"	m	class:muduo::net::EventLoop	typeref:typename:bool
loops_	src/muduo/muduo/net/EventLoopThreadPool.h	/^  std::vector<EventLoop*> loops_;$/;"	m	class:muduo::net::EventLoopThreadPool	typeref:typename:std::vector<EventLoop * >
ltohl	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^#  define ltohl(/;"	d
ltohs	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^#  define ltohs(/;"	d
lwe	docs/code_note.md	/^## lwe$/;"	s	chapter:Fake
lwe-bootstrapping-functions-fft.cpp.i	buildotests/libtfhe-superaic-core/Makefile	/^lwe-bootstrapping-functions-fft.cpp.i:$/;"	t
lwe-bootstrapping-functions-fft.cpp.o	buildotests/libtfhe-superaic-core/Makefile	/^lwe-bootstrapping-functions-fft.cpp.o:$/;"	t
lwe-bootstrapping-functions-fft.cpp.s	buildotests/libtfhe-superaic-core/Makefile	/^lwe-bootstrapping-functions-fft.cpp.s:$/;"	t
lwe-bootstrapping-functions-fft.i	buildotests/libtfhe-superaic-core/Makefile	/^lwe-bootstrapping-functions-fft.i: lwe-bootstrapping-functions-fft.cpp.i$/;"	t
lwe-bootstrapping-functions-fft.o	buildotests/libtfhe-superaic-core/Makefile	/^lwe-bootstrapping-functions-fft.o: lwe-bootstrapping-functions-fft.cpp.o$/;"	t
lwe-bootstrapping-functions-fft.s	buildotests/libtfhe-superaic-core/Makefile	/^lwe-bootstrapping-functions-fft.s: lwe-bootstrapping-functions-fft.cpp.s$/;"	t
lwe-bootstrapping-functions.cpp.i	buildotests/libtfhe-superaic-core/Makefile	/^lwe-bootstrapping-functions.cpp.i:$/;"	t
lwe-bootstrapping-functions.cpp.o	buildotests/libtfhe-superaic-core/Makefile	/^lwe-bootstrapping-functions.cpp.o:$/;"	t
lwe-bootstrapping-functions.cpp.s	buildotests/libtfhe-superaic-core/Makefile	/^lwe-bootstrapping-functions.cpp.s:$/;"	t
lwe-bootstrapping-functions.i	buildotests/libtfhe-superaic-core/Makefile	/^lwe-bootstrapping-functions.i: lwe-bootstrapping-functions.cpp.i$/;"	t
lwe-bootstrapping-functions.o	buildotests/libtfhe-superaic-core/Makefile	/^lwe-bootstrapping-functions.o: lwe-bootstrapping-functions.cpp.o$/;"	t
lwe-bootstrapping-functions.s	buildotests/libtfhe-superaic-core/Makefile	/^lwe-bootstrapping-functions.s: lwe-bootstrapping-functions.cpp.s$/;"	t
lwe-functions.cpp.i	buildotests/libtfhe-superaic-core/Makefile	/^lwe-functions.cpp.i:$/;"	t
lwe-functions.cpp.o	buildotests/libtfhe-superaic-core/Makefile	/^lwe-functions.cpp.o:$/;"	t
lwe-functions.cpp.s	buildotests/libtfhe-superaic-core/Makefile	/^lwe-functions.cpp.s:$/;"	t
lwe-functions.i	buildotests/libtfhe-superaic-core/Makefile	/^lwe-functions.i: lwe-functions.cpp.i$/;"	t
lwe-functions.o	buildotests/libtfhe-superaic-core/Makefile	/^lwe-functions.o: lwe-functions.cpp.o$/;"	t
lwe-functions.s	buildotests/libtfhe-superaic-core/Makefile	/^lwe-functions.s: lwe-functions.cpp.s$/;"	t
lwe-keyswitch-functions.cpp.i	buildotests/libtfhe-superaic-core/Makefile	/^lwe-keyswitch-functions.cpp.i:$/;"	t
lwe-keyswitch-functions.cpp.o	buildotests/libtfhe-superaic-core/Makefile	/^lwe-keyswitch-functions.cpp.o:$/;"	t
lwe-keyswitch-functions.cpp.s	buildotests/libtfhe-superaic-core/Makefile	/^lwe-keyswitch-functions.cpp.s:$/;"	t
lwe-keyswitch-functions.i	buildotests/libtfhe-superaic-core/Makefile	/^lwe-keyswitch-functions.i: lwe-keyswitch-functions.cpp.i$/;"	t
lwe-keyswitch-functions.o	buildotests/libtfhe-superaic-core/Makefile	/^lwe-keyswitch-functions.o: lwe-keyswitch-functions.cpp.o$/;"	t
lwe-keyswitch-functions.s	buildotests/libtfhe-superaic-core/Makefile	/^lwe-keyswitch-functions.s: lwe-keyswitch-functions.cpp.s$/;"	t
lwe.cpp.i	buildotests/libtfhe-superaic-core/Makefile	/^lwe.cpp.i:$/;"	t
lwe.cpp.o	buildotests/libtfhe-superaic-core/Makefile	/^lwe.cpp.o:$/;"	t
lwe.cpp.s	buildotests/libtfhe-superaic-core/Makefile	/^lwe.cpp.s:$/;"	t
lwe.i	buildotests/libtfhe-superaic-core/Makefile	/^lwe.i: lwe.cpp.i$/;"	t
lwe.o	buildotests/libtfhe-superaic-core/Makefile	/^lwe.o: lwe.cpp.o$/;"	t
lwe.s	buildotests/libtfhe-superaic-core/Makefile	/^lwe.s: lwe.cpp.s$/;"	t
lweAddMulTo	src/libtfhe-superaic-core/lwe-functions.cpp	/^EXPORT void lweAddMulTo(LweSample* result, int32_t p, const LweSample* sample, const LweParams* /;"	f	typeref:typename:EXPORT void
lweAddTo	src/libtfhe-superaic-core/lwe-functions.cpp	/^EXPORT void lweAddTo(LweSample* result, const LweSample* sample, const LweParams* params){$/;"	f	typeref:typename:EXPORT void
lweClear	src/libtfhe-superaic-core/lwe-functions.cpp	/^EXPORT void lweClear(LweSample* result, const LweParams* params){$/;"	f	typeref:typename:EXPORT void
lweCopy	src/libtfhe-superaic-core/lwe-functions.cpp	/^EXPORT void lweCopy(LweSample* result, const LweSample* sample, const LweParams* params){$/;"	f	typeref:typename:EXPORT void
lweCreateKeySwitchKey	src/libtfhe-superaic-core/lwe-keyswitch-functions.cpp	/^EXPORT void lweCreateKeySwitchKey(LweKeySwitchKey* result, const LweKey* in_key, const LweKey* o/;"	f	typeref:typename:EXPORT void
lweCreateKeySwitchKey	src/tests/bootstrapping_test.cpp	/^        void lweCreateKeySwitchKey(LweKeySwitchKey *result, const LweKey *in_key, const LweKey */;"	f	class:__anonf36cd29a0111::TfheCreateBootstrapKeyTest	typeref:typename:void	file:
lweCreateKeySwitchKey_fromArray	src/libtfhe-superaic-core/lwe-keyswitch-functions.cpp	/^void lweCreateKeySwitchKey_fromArray(LweSample*** result, $/;"	f	typeref:typename:void
lweCreateKeySwitchKey_old	src/libtfhe-superaic-core/lwe-keyswitch-functions.cpp	/^EXPORT void lweCreateKeySwitchKey_old(LweKeySwitchKey* result, const LweKey* in_key, const LweKe/;"	f	typeref:typename:EXPORT void
lweKeyGen	src/libtfhe-superaic-core/lwe-functions.cpp	/^EXPORT void lweKeyGen(LweKey* result) {$/;"	f	typeref:typename:EXPORT void
lweKeySwitch	src/libtfhe-superaic-core/lwe-keyswitch-functions.cpp	/^EXPORT void lweKeySwitch(LweSample* result, const LweKeySwitchKey* ks, const LweSample* sample){$/;"	f	typeref:typename:EXPORT void
lweKeySwitchTranslate_fromArray	src/libtfhe-superaic-core/lwe-keyswitch-functions.cpp	/^void lweKeySwitchTranslate_fromArray(LweSample* result, $/;"	f	typeref:typename:void
lweNegate	src/libtfhe-superaic-core/lwe-functions.cpp	/^EXPORT void lweNegate(LweSample* result, const LweSample* sample, const LweParams* params){$/;"	f	typeref:typename:EXPORT void
lweNoiselessTrivial	src/libtfhe-superaic-core/lwe-functions.cpp	/^EXPORT void lweNoiselessTrivial(LweSample* result, Torus32 mu, const LweParams* params){$/;"	f	typeref:typename:EXPORT void
lwePhase	src/libtfhe-superaic-core/lwe-functions.cpp	/^EXPORT Torus32 lwePhase(const LweSample* sample, const LweKey* key){$/;"	f	typeref:typename:EXPORT Torus32
lweSampleUniform	src/tests/io_test.cpp	/^    void lweSampleUniform(LweSample* a, const LweParams* params) {$/;"	f	namespace:__anon2d72c1c60111	typeref:typename:void
lweSubMulTo	src/libtfhe-superaic-core/lwe-functions.cpp	/^EXPORT void lweSubMulTo(LweSample* result, int32_t p, const LweSample* sample, const LweParams* /;"	f	typeref:typename:EXPORT void
lweSubTo	src/libtfhe-superaic-core/lwe-functions.cpp	/^EXPORT void lweSubTo(LweSample* result, const LweSample* sample, const LweParams* params){$/;"	f	typeref:typename:EXPORT void
lweSymDecrypt	docs/code_note.md	/^## lweSymDecrypt$/;"	s	chapter:LWE
lweSymDecrypt	src/libtfhe-superaic-core/lwe-functions.cpp	/^EXPORT Torus32 lweSymDecrypt(const LweSample* sample, const LweKey* key, const int32_t plaintext/;"	f	typeref:typename:EXPORT Torus32
lweSymEncrypt	src/libtfhe-superaic-core/lwe-functions.cpp	/^EXPORT void lweSymEncrypt(LweSample* result, Torus32 message, double alpha, const LweKey* key){$/;"	f	typeref:typename:EXPORT void
lweSymEncrypt	src/tests/lwekeyswitch_test.cpp	/^        static void lweSymEncrypt($/;"	f	class:__anon0e34bff10111::LweKeySwitchTest	typeref:typename:void	file:
lweSymEncryptWithExternalNoise	src/libtfhe-superaic-core/lwe-functions.cpp	/^EXPORT void lweSymEncryptWithExternalNoise(LweSample* result, Torus32 message, double noise, dou/;"	f	typeref:typename:EXPORT void
lwe_alpha_max	src/libtfhe-superaic-core/include/classic_PBS_parameters.h	/^    const double lwe_alpha_max; \/\/\/< maximal noise s.t. we can decrypt$/;"	m	struct:ClassicPBSParameters	typeref:typename:const double
lwe_alpha_max	src/tests/classic_PBS_parameters.cpp	/^    const double lwe_alpha_max; \/\/\/< maximal noise s.t. we can decrypt$/;"	m	struct:ClassicPBSParameters	typeref:typename:const double	file:
lwe_alpha_min	src/libtfhe-superaic-core/include/classic_PBS_parameters.h	/^    const double lwe_alpha_min; \/\/\/< minimal noise s.t. the lwe sample is secure$/;"	m	struct:ClassicPBSParameters	typeref:typename:const double
lwe_alpha_min	src/tests/classic_PBS_parameters.cpp	/^    const double lwe_alpha_min; \/\/\/< minimal noise s.t. the lwe sample is secure$/;"	m	struct:ClassicPBSParameters	typeref:typename:const double	file:
lwe_bootstrapping_key	src/tests/classic_PBS_parameters.cpp	/^    LweBootstrappingKey *lwe_bootstrapping_key;$/;"	m	struct:ServerKey	typeref:typename:LweBootstrappingKey *	file:
lwe_dimension	src/libtfhe-superaic-core/include/classic_PBS_parameters.h	/^    const int32_t lwe_dimension; \/\/\/< size of the mask$/;"	m	struct:ClassicPBSParameters	typeref:typename:const int32_t
lwe_dimension	src/tests/classic_PBS_parameters.cpp	/^    const int32_t lwe_dimension; \/\/\/< size of the mask$/;"	m	struct:ClassicPBSParameters	typeref:typename:const int32_t	file:
lwe_key	src/libtfhe-superaic-core/include/tfhe_gate_bootstrapping_structures.h	/^    const LweKey *lwe_key;$/;"	m	struct:TFheGateBootstrappingSecretKeySet	typeref:typename:const LweKey *
lwe_key_switching_key	src/tests/classic_PBS_parameters.cpp	/^    LweKeySwitchKey *lwe_key_switching_key;$/;"	m	struct:ServerKey	typeref:typename:LweKeySwitchKey *	file:
lwe_params	src/libtfhe-superaic-core/include/tfhe_garbage_collector.h	/^    std::vector<LweParams *> lwe_params;$/;"	m	class:TfheGarbageCollector	typeref:typename:std::vector<LweParams * >
lwe_secret_key	src/tests/classic_PBS_parameters.cpp	/^    LweKey *lwe_secret_key; \/\/ plaintext <--encrypt\/decrypt--> ciphertext$/;"	m	struct:ClientKey	typeref:typename:LweKey *	file:
lwebootstrappingkey.cpp.i	buildotests/libtfhe-superaic-core/Makefile	/^lwebootstrappingkey.cpp.i:$/;"	t
lwebootstrappingkey.cpp.o	buildotests/libtfhe-superaic-core/Makefile	/^lwebootstrappingkey.cpp.o:$/;"	t
lwebootstrappingkey.cpp.s	buildotests/libtfhe-superaic-core/Makefile	/^lwebootstrappingkey.cpp.s:$/;"	t
lwebootstrappingkey.i	buildotests/libtfhe-superaic-core/Makefile	/^lwebootstrappingkey.i: lwebootstrappingkey.cpp.i$/;"	t
lwebootstrappingkey.o	buildotests/libtfhe-superaic-core/Makefile	/^lwebootstrappingkey.o: lwebootstrappingkey.cpp.o$/;"	t
lwebootstrappingkey.s	buildotests/libtfhe-superaic-core/Makefile	/^lwebootstrappingkey.s: lwebootstrappingkey.cpp.s$/;"	t
lwekey.cpp.i	buildotests/libtfhe-superaic-core/Makefile	/^lwekey.cpp.i:$/;"	t
lwekey.cpp.o	buildotests/libtfhe-superaic-core/Makefile	/^lwekey.cpp.o:$/;"	t
lwekey.cpp.s	buildotests/libtfhe-superaic-core/Makefile	/^lwekey.cpp.s:$/;"	t
lwekey.i	buildotests/libtfhe-superaic-core/Makefile	/^lwekey.i: lwekey.cpp.i$/;"	t
lwekey.o	buildotests/libtfhe-superaic-core/Makefile	/^lwekey.o: lwekey.cpp.o$/;"	t
lwekey.s	buildotests/libtfhe-superaic-core/Makefile	/^lwekey.s: lwekey.cpp.s$/;"	t
lwekey120	src/tests/io_test.cpp	/^    const LweKey* lwekey120 = new_random_lwe_key(lweparams120);$/;"	v	namespace:__anon2d72c1c60111	typeref:typename:const LweKey *
lwekey500	src/tests/io_test.cpp	/^    const LweKey* lwekey500 = new_random_lwe_key(lweparams500);$/;"	v	namespace:__anon2d72c1c60111	typeref:typename:const LweKey *
lwekeyswitch.cpp.i	buildotests/libtfhe-superaic-core/Makefile	/^lwekeyswitch.cpp.i:$/;"	t
lwekeyswitch.cpp.o	buildotests/libtfhe-superaic-core/Makefile	/^lwekeyswitch.cpp.o:$/;"	t
lwekeyswitch.cpp.s	buildotests/libtfhe-superaic-core/Makefile	/^lwekeyswitch.cpp.s:$/;"	t
lwekeyswitch.i	buildotests/libtfhe-superaic-core/Makefile	/^lwekeyswitch.i: lwekeyswitch.cpp.i$/;"	t
lwekeyswitch.o	buildotests/libtfhe-superaic-core/Makefile	/^lwekeyswitch.o: lwekeyswitch.cpp.o$/;"	t
lwekeyswitch.s	buildotests/libtfhe-superaic-core/Makefile	/^lwekeyswitch.s: lwekeyswitch.cpp.s$/;"	t
lweparams.cpp.i	buildotests/libtfhe-superaic-core/Makefile	/^lweparams.cpp.i:$/;"	t
lweparams.cpp.o	buildotests/libtfhe-superaic-core/Makefile	/^lweparams.cpp.o:$/;"	t
lweparams.cpp.s	buildotests/libtfhe-superaic-core/Makefile	/^lweparams.cpp.s:$/;"	t
lweparams.i	buildotests/libtfhe-superaic-core/Makefile	/^lweparams.i: lweparams.cpp.i$/;"	t
lweparams.o	buildotests/libtfhe-superaic-core/Makefile	/^lweparams.o: lweparams.cpp.o$/;"	t
lweparams.s	buildotests/libtfhe-superaic-core/Makefile	/^lweparams.s: lweparams.cpp.s$/;"	t
lweparams120	src/tests/ACC_test.cpp	/^    const LweParams* lweparams120 = new_LweParams(120, plaintext_modulus,0.1,0.3);$/;"	v	namespace:__anonef2481d50111	typeref:typename:const LweParams *
lweparams120	src/tests/FPGA_ACC_test.cpp	/^    const LweParams* lweparams120 = new_LweParams(120, plaintext_modulus,0.1,0.3);$/;"	v	namespace:__anon88d438720111	typeref:typename:const LweParams *
lweparams120	src/tests/QEMU_test.cpp	/^    const LweParams* lweparams120 = new_LweParams(120, plaintext_modulus,0.1,0.3);$/;"	v	namespace:__anon4f389dc60111	typeref:typename:const LweParams *
lweparams120	src/tests/io_test.cpp	/^    const LweParams* lweparams120 = new_LweParams(120, plaintext_modulus,0.1,0.3);$/;"	v	namespace:__anon2d72c1c60111	typeref:typename:const LweParams *
lweparams120	src/tests/session_test.cpp	/^    const LweParams* lweparams120 = new_LweParams(120, plaintext_modulus,0.1,0.3);$/;"	v	namespace:__anon23f859320111	typeref:typename:const LweParams *
lweparams500	src/tests/ACC_test.cpp	/^    const LweParams* lweparams500 = new_LweParams(500, plaintext_modulus,0.1,0.3);$/;"	v	namespace:__anonef2481d50111	typeref:typename:const LweParams *
lweparams500	src/tests/FPGA_ACC_test.cpp	/^    const LweParams* lweparams500 = new_LweParams(500, plaintext_modulus,0.1,0.3);$/;"	v	namespace:__anon88d438720111	typeref:typename:const LweParams *
lweparams500	src/tests/QEMU_test.cpp	/^    const LweParams* lweparams500 = new_LweParams(500, plaintext_modulus,0.1,0.3);$/;"	v	namespace:__anon4f389dc60111	typeref:typename:const LweParams *
lweparams500	src/tests/io_test.cpp	/^    const LweParams* lweparams500 = new_LweParams(500, plaintext_modulus,0.1,0.3);$/;"	v	namespace:__anon2d72c1c60111	typeref:typename:const LweParams *
lweparams500	src/tests/session_test.cpp	/^    const LweParams* lweparams500 = new_LweParams(500, plaintext_modulus,0.1,0.3);$/;"	v	namespace:__anon23f859320111	typeref:typename:const LweParams *
lwesamples.cpp.i	buildotests/libtfhe-superaic-core/Makefile	/^lwesamples.cpp.i:$/;"	t
lwesamples.cpp.o	buildotests/libtfhe-superaic-core/Makefile	/^lwesamples.cpp.o:$/;"	t
lwesamples.cpp.s	buildotests/libtfhe-superaic-core/Makefile	/^lwesamples.cpp.s:$/;"	t
lwesamples.i	buildotests/libtfhe-superaic-core/Makefile	/^lwesamples.i: lwesamples.cpp.i$/;"	t
lwesamples.o	buildotests/libtfhe-superaic-core/Makefile	/^lwesamples.o: lwesamples.cpp.o$/;"	t
lwesamples.s	buildotests/libtfhe-superaic-core/Makefile	/^lwesamples.s: lwesamples.cpp.s$/;"	t
m4/gtest.m4	src/tests/googletest/googletest/Makefile.am	/^m4data_DATA = m4\/gtest.m4$/;"	D	directory:m4data
m4data	src/tests/googletest/googletest/Makefile.am	/^m4datadir = $(datadir)\/aclocal$/;"	d
m4data_DATA	src/tests/googletest/googletest/Makefile.am	/^m4data_DATA = m4\/gtest.m4$/;"	m
m4datadir	src/tests/googletest/googletest/Makefile.am	/^m4datadir = $(datadir)\/aclocal$/;"	m
m_register_param	src/libtfhe-superaic-core/tfhe_garbage_collector.cpp	/^void TfheGarbageCollector::m_register_param(LweParams* param) { lwe_params.push_back(param); }$/;"	f	class:TfheGarbageCollector	typeref:typename:void
m_register_param	src/libtfhe-superaic-core/tfhe_garbage_collector.cpp	/^void TfheGarbageCollector::m_register_param(TFheGateBootstrappingParameterSet* param) { gb_param/;"	f	class:TfheGarbageCollector	typeref:typename:void
m_register_param	src/libtfhe-superaic-core/tfhe_garbage_collector.cpp	/^void TfheGarbageCollector::m_register_param(TGswParams* param) { tgsw_params.push_back(param); }$/;"	f	class:TfheGarbageCollector	typeref:typename:void
m_register_param	src/libtfhe-superaic-core/tfhe_garbage_collector.cpp	/^void TfheGarbageCollector::m_register_param(TLweParams* param) { tlwe_params.push_back(param); }$/;"	f	class:TfheGarbageCollector	typeref:typename:void
macros_decrypt_with_plaintext_modulus_macros	buildotests/Makefile	/^macros_decrypt_with_plaintext_modulus_macros: cmake_check_build_system$/;"	t
macros_decrypt_with_plaintext_modulus_macros	buildotests/tests/Makefile	/^macros_decrypt_with_plaintext_modulus_macros: tests\/CMakeFiles\/macros_decrypt_with_plaintext_m/;"	t
macros_decrypt_with_plaintext_modulus_macros.cpp.i	buildotests/tests/Makefile	/^macros_decrypt_with_plaintext_modulus_macros.cpp.i:$/;"	t
macros_decrypt_with_plaintext_modulus_macros.cpp.o	buildotests/tests/Makefile	/^macros_decrypt_with_plaintext_modulus_macros.cpp.o:$/;"	t
macros_decrypt_with_plaintext_modulus_macros.cpp.s	buildotests/tests/Makefile	/^macros_decrypt_with_plaintext_modulus_macros.cpp.s:$/;"	t
macros_decrypt_with_plaintext_modulus_macros.i	buildotests/tests/Makefile	/^macros_decrypt_with_plaintext_modulus_macros.i: macros_decrypt_with_plaintext_modulus_macros.cpp/;"	t
macros_decrypt_with_plaintext_modulus_macros.o	buildotests/tests/Makefile	/^macros_decrypt_with_plaintext_modulus_macros.o: macros_decrypt_with_plaintext_modulus_macros.cpp/;"	t
macros_decrypt_with_plaintext_modulus_macros.s	buildotests/tests/Makefile	/^macros_decrypt_with_plaintext_modulus_macros.s: macros_decrypt_with_plaintext_modulus_macros.cpp/;"	t
macros_decrypt_with_plaintext_modulus_macros/fast	buildotests/Makefile	/^macros_decrypt_with_plaintext_modulus_macros\/fast:$/;"	t
macros_decrypt_with_plaintext_modulus_macros/fast	buildotests/tests/Makefile	/^macros_decrypt_with_plaintext_modulus_macros\/fast:$/;"	t
main	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^int main(argc, argv) int argc; char *argv[];$/;"	f
main	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f	typeref:typename:void
main	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/examples/client_only.cpp	/^int main(){$/;"	f	typeref:typename:int
main	src/examples/comparebits.cpp	/^int main()$/;"	f	typeref:typename:int
main	src/examples/server_with_driver.cpp	/^int main(){$/;"	f	typeref:typename:int
main	src/examples/server_without_driver.cpp	/^int main(){$/;"	f	typeref:typename:int
main	src/libtfhe-superaic-core/fft_processors/nayuki/fft-test.c	/^int32_t main(int32_t argc, char **argv) {$/;"	f	typeref:typename:int32_t
main	src/muduo/contrib/hiredis/mrediscli.cc	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	src/muduo/contrib/thrift/tests/echo/EchoServer.cc	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	src/muduo/contrib/thrift/tests/echo/echoclient.py	/^def main():$/;"	f
main	src/muduo/contrib/thrift/tests/ping/PingServer.cc	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	src/muduo/contrib/thrift/tests/ping/pingclient.py	/^def main():$/;"	f
main	src/muduo/examples/ace/logging/client.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/ace/logging/server.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/ace/ttcp/main.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/asio/chat/client.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/asio/chat/loadtest.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/asio/chat/server.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/asio/chat/server_threaded.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/asio/chat/server_threaded_efficient.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/asio/chat/server_threaded_highperformance.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/asio/tutorial/timer2/timer.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/examples/asio/tutorial/timer3/timer.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/examples/asio/tutorial/timer4/timer.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/examples/asio/tutorial/timer5/timer.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/examples/asio/tutorial/timer6/timer.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/examples/cdns/dns.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/curl/download.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/curl/mcurl.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/fastcgi/fastcgi_test.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/filetransfer/download.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/filetransfer/download2.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/filetransfer/download3.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/filetransfer/loadtest/Client.java	/^    public static void main(String[] args) throws Exception {$/;"	m	class:Client
main	src/muduo/examples/hub/hub.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/hub/pub.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/hub/sub.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/idleconnection/main.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/idleconnection/sortedlist.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/maxconnection/main.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/memcached/client/bench.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/memcached/server/footprint_test.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/memcached/server/server.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/multiplexer/demux.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MultiplexerTest.java	/^    public static void main(String[] args) {$/;"	m	class:MultiplexerTest
main	src/muduo/examples/multiplexer/multiplexer.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/multiplexer/multiplexer_simple.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/netty/discard/client.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/netty/discard/server.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/netty/echo/client.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/netty/echo/server.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/netty/echo/server2.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/netty/uptime/uptime.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/pingpong/bench.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/pingpong/client.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/pingpong/server.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/procmon/dummyload.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/procmon/plot_test.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/examples/procmon/procmon.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/protobuf/codec/client.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/protobuf/codec/codec_test.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/examples/protobuf/codec/dispatcher_lite_test.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/examples/protobuf/codec/dispatcher_test.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/examples/protobuf/codec/server.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/protobuf/resolver/client.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/protobuf/resolver/server.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/examples/protobuf/rpc/client.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/protobuf/rpc/server.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/examples/protobuf/rpcbalancer/balancer.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/protobuf/rpcbench/client.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/protobuf/rpcbench/server.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/roundtrip/roundtrip.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/roundtrip/roundtrip_udp.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/shorturl/shorturl.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/simple/allinone/allinone.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/examples/simple/chargen/main.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/examples/simple/chargenclient/chargenclient.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/simple/daytime/main.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/examples/simple/discard/main.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/examples/simple/echo/main.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/examples/simple/time/main.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/examples/simple/timeclient/timeclient.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/socks4a/balancer.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/socks4a/socks4a.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/socks4a/tcprelay.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/sudoku/batch.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/sudoku/loadtest.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/sudoku/pipeline.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/sudoku/server_basic.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/sudoku/server_hybrid.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/sudoku/server_multiloop.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/sudoku/server_prod.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/sudoku/server_threadpool.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/twisted/finger/finger01.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/examples/twisted/finger/finger02.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/examples/twisted/finger/finger03.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/examples/twisted/finger/finger04.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/examples/twisted/finger/finger05.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/examples/twisted/finger/finger06.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/examples/twisted/finger/finger07.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/examples/wordcount/hasher.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/wordcount/receiver.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/zeromq/local_lat.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/examples/zeromq/remote_lat.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/muduo/base/tests/AsyncLogging_test.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/muduo/base/tests/Atomic_unittest.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/muduo/base/tests/BlockingQueue_bench.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/muduo/base/tests/BlockingQueue_bench2.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/muduo/base/tests/BlockingQueue_test.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/muduo/base/tests/BoundedBlockingQueue_test.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/muduo/base/tests/Date_unittest.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/muduo/base/tests/Exception_test.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/muduo/base/tests/FileUtil_test.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/muduo/base/tests/Fork_test.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/muduo/base/tests/GzipFile_test.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/muduo/base/tests/LogFile_test.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/muduo/base/tests/LogStream_bench.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/muduo/base/tests/Logging_test.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/muduo/base/tests/Mutex_test.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/muduo/base/tests/ProcessInfo_test.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/muduo/base/tests/SingletonThreadLocal_test.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/muduo/base/tests/Singleton_test.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/muduo/base/tests/ThreadLocalSingleton_test.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/muduo/base/tests/ThreadLocal_test.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/muduo/base/tests/ThreadPool_test.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/muduo/base/tests/Thread_bench.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/muduo/base/tests/Thread_test.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/muduo/base/tests/TimeZone_unittest.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/muduo/base/tests/TimeZone_util.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/muduo/base/tests/Timestamp_unittest.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/muduo/net/http/tests/HttpServer_test.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/muduo/net/inspect/tests/Inspector_test.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/muduo/net/protorpc/RpcCodec_test.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/muduo/net/tests/Channel_test.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/muduo/net/tests/EchoClient_unittest.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/muduo/net/tests/EchoServer_unittest.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/muduo/net/tests/EventLoopThreadPool_unittest.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/muduo/net/tests/EventLoopThread_unittest.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/muduo/net/tests/EventLoop_unittest.cc	/^int main()$/;"	f	typeref:typename:int
main	src/muduo/muduo/net/tests/TcpClient_reg1.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/muduo/net/tests/TcpClient_reg2.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/muduo/net/tests/TcpClient_reg3.cc	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	src/muduo/muduo/net/tests/TimerQueue_unittest.cc	/^int main()$/;"	f	typeref:typename:int
main	src/tests/classic_PBS_parameters.cpp	/^int main(){$/;"	f	typeref:typename:int
main	src/tests/googletest/googlemock/scripts/fuse_gmock_files.py	/^def main():$/;"	f
main	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^def main(argv):$/;"	f
main	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class.py	/^def main(argv=sys.argv):$/;"	f
main	src/tests/googletest/googlemock/scripts/generator/cpp/tokenize.py	/^    def main(argv):$/;"	f
main	src/tests/googletest/googlemock/scripts/gmock_doctor.py	/^def main():$/;"	f
main	src/tests/googletest/googlemock/scripts/upload.py	/^def main():$/;"	f
main	src/tests/googletest/googlemock/scripts/upload_gmock.py	/^def main():$/;"	f
main	src/tests/googletest/googlemock/test/gmock_output_test_.cc	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	src/tests/googletest/googlemock/test/gmock_stress_test.cc	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	src/tests/googletest/googletest/samples/sample10_unittest.cc	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	src/tests/googletest/googletest/samples/sample9_unittest.cc	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	src/tests/googletest/googletest/scripts/fuse_gtest_files.py	/^def main():$/;"	f
main	src/tests/googletest/googletest/scripts/pump.py	/^def main(argv):$/;"	f
main	src/tests/googletest/googletest/scripts/release_docs.py	/^def main():$/;"	f
main	src/tests/googletest/googletest/scripts/upload.py	/^def main():$/;"	f
main	src/tests/googletest/googletest/scripts/upload_gtest.py	/^def main():$/;"	f
main	src/tests/googletest/googletest/src/gtest_main.cc	/^GTEST_API_ int main(int argc, char **argv) {$/;"	f	typeref:typename:GTEST_API_ int
main	src/tests/googletest/googletest/test/gtest-death-test_ex_test.cc	/^int main(int argc, char** argv) {$/;"	f	typeref:typename:int
main	src/tests/googletest/googletest/test/gtest-listener_test.cc	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	src/tests/googletest/googletest/test/gtest-unittest-api_test.cc	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	src/tests/googletest/googletest/test/gtest_break_on_failure_unittest_.cc	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^int main(int argc, char** argv) {$/;"	f	typeref:typename:int
main	src/tests/googletest/googletest/test/gtest_color_test_.cc	/^int main(int argc, char** argv) {$/;"	f	typeref:typename:int
main	src/tests/googletest/googletest/test/gtest_env_var_test_.cc	/^int main(int argc, char** argv) {$/;"	f	typeref:typename:int
main	src/tests/googletest/googletest/test/gtest_environment_test.cc	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	src/tests/googletest/googletest/test/gtest_filter_unittest_.cc	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	src/tests/googletest/googletest/test/gtest_list_tests_unittest_.cc	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	src/tests/googletest/googletest/test/gtest_no_test_unittest.cc	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	src/tests/googletest/googletest/test/gtest_premature_exit_test.cc	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	src/tests/googletest/googletest/test/gtest_repeat_test.cc	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	src/tests/googletest/googletest/test/gtest_shuffle_test_.cc	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	src/tests/googletest/googletest/test/gtest_stress_test.cc	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	src/tests/googletest/googletest/test/gtest_throw_on_failure_ex_test.cc	/^int main(int argc, char** argv) {$/;"	f	typeref:typename:int
main	src/tests/googletest/googletest/test/gtest_throw_on_failure_test_.cc	/^int main(int argc, char** argv) {$/;"	f	typeref:typename:int
main	src/tests/googletest/googletest/test/gtest_uninitialized_test_.cc	/^int main() {$/;"	f	typeref:typename:int
main	src/tests/googletest/googletest/test/gtest_xml_output_unittest_.cc	/^int main(int argc, char** argv) {$/;"	f	typeref:typename:int
main	src/tests/message_encode.cpp	/^int main(){$/;"	f	typeref:typename:int
main	src/tests/test-decomp-tgsw.cpp	/^int32_t main(int32_t argc, char **argv) {$/;"	f	typeref:typename:int32_t
main	src/tests/test-lwe.cpp	/^int32_t main(int32_t argc, char **argv) {$/;"	f	typeref:typename:int32_t
maintainer-clean-local	src/tests/googletest/googlemock/Makefile.am	/^maintainer-clean-local:$/;"	t
maintainer-clean-local	src/tests/googletest/googletest/Makefile.am	/^maintainer-clean-local:$/;"	t
majflt	src/muduo/examples/procmon/procmon.cc	/^  long majflt;$/;"	m	struct:StatData	typeref:typename:long	file:
major_version	src/tests/googletest/googletest/xcode/Scripts/versiongenerate.py	/^major_version = version_values.group(1)$/;"	v
makeItem	src/muduo/examples/memcached/server/Item.h	/^  static ItemPtr makeItem(muduo::StringPiece keyArg,$/;"	f	class:Item	typeref:typename:ItemPtr
makeMessage	src/muduo/examples/hub/hub.cc	/^  string makeMessage()$/;"	f	class:pubsub::Topic	typeref:typename:string	file:
makeSpace	src/muduo/muduo/net/Buffer.h	/^  void makeSpace(size_t len)$/;"	f	class:muduo::net::Buffer	typeref:typename:void
makeWeakCallback	src/muduo/muduo/base/WeakCallback.h	/^WeakCallback<CLASS, ARGS...> makeWeakCallback(const std::shared_ptr<CLASS>& object,$/;"	f	namespace:muduo	typeref:typename:WeakCallback<CLASS,ARGS...>
make_linked_ptr	src/tests/googletest/googletest/include/gtest/internal/gtest-linked_ptr.h	/^linked_ptr<T> make_linked_ptr(T* ptr) {$/;"	f	namespace:testing::internal	typeref:typename:linked_ptr<T>
map_mtx	src/libtfhe-superaic-core/tfhe_session.cpp	/^static mutex map_mtx;$/;"	v	namespace:tfhe_superaic	typeref:typename:mutex	file:
maskMod	src/libtfhe-superaic-core/include/tgsw.h	/^    const uint32_t maskMod; \/\/\/< Bg-1$/;"	m	struct:TGswParams	typeref:typename:const uint32_t
match	src/libtfhe-superaic-acc/accs/FPGA-V0/acc_fpga_v0.cpp	/^bool FPGA_ACC_V0::match(uint32_t version) {$/;"	f	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:bool
matcher1_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  Matcher1 matcher1_;$/;"	m	class:testing::internal::BothOfMatcher	typeref:typename:Matcher1
matcher1_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  Matcher1 matcher1_;$/;"	m	class:testing::internal::EitherOfMatcher	typeref:typename:Matcher1
matcher1_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const Matcher<T> matcher1_;$/;"	m	class:testing::internal::BothOfMatcherImpl	typeref:typename:const Matcher<T>
matcher1_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const Matcher<T> matcher1_;$/;"	m	class:testing::internal::EitherOfMatcherImpl	typeref:typename:const Matcher<T>
matcher2_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  Matcher2 matcher2_;$/;"	m	class:testing::internal::BothOfMatcher	typeref:typename:Matcher2
matcher2_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  Matcher2 matcher2_;$/;"	m	class:testing::internal::EitherOfMatcher	typeref:typename:Matcher2
matcher2_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const Matcher<T> matcher2_;$/;"	m	class:testing::internal::BothOfMatcherImpl	typeref:typename:const Matcher<T>
matcher2_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const Matcher<T> matcher2_;$/;"	m	class:testing::internal::EitherOfMatcherImpl	typeref:typename:const Matcher<T>
matcher_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    const Matcher<ResultType> matcher_;$/;"	m	class:testing::internal::ResultOfMatcher::Impl	typeref:typename:const Matcher<ResultType>
matcher_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    const Matcher<const ::std::vector<LhsValue>&> matcher_;$/;"	m	class:testing::internal::WhenSortedByMatcher::Impl	typeref:typename:const Matcher<const::std::vector<LhsValue> &>
matcher_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    const Matcher<const Pointee&> matcher_;$/;"	m	class:testing::internal::PointeeMatcher::Impl	typeref:typename:const Matcher<const Pointee &>
matcher_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  InnerMatcher matcher_;$/;"	m	class:testing::internal::NotMatcher	typeref:typename:InnerMatcher
matcher_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  M matcher_;$/;"	m	class:testing::internal::MatcherAsPredicate	typeref:typename:M
matcher_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const ContainerMatcher matcher_;$/;"	m	class:testing::internal::WhenSortedByMatcher	typeref:typename:const ContainerMatcher
matcher_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const InnerMatcher matcher_;$/;"	m	class:testing::internal::PointeeMatcher	typeref:typename:const InnerMatcher
matcher_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const M matcher_;$/;"	m	class:testing::internal::PredicateFormatterFromMatcher	typeref:typename:const M
matcher_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const Matcher<RefToConstProperty> matcher_;$/;"	m	class:testing::internal::PropertyMatcher	typeref:typename:const Matcher<RefToConstProperty>
matcher_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const Matcher<ResultType> matcher_;$/;"	m	class:testing::internal::ResultOfMatcher	typeref:typename:const Matcher<ResultType>
matcher_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const Matcher<T> matcher_;$/;"	m	class:testing::internal::NotMatcherImpl	typeref:typename:const Matcher<T>
matcher_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const Matcher<To> matcher_;$/;"	m	class:testing::internal::WhenDynamicCastToMatcherBase	typeref:typename:const Matcher<To>
matcher_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const Matcher<const FieldType&> matcher_;$/;"	m	class:testing::internal::FieldMatcher	typeref:typename:const Matcher<const FieldType &>
matcher_describers	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  MatcherDescriberVec& matcher_describers() {$/;"	f	class:testing::internal::UnorderedElementsAreMatcherImplBase	typeref:typename:MatcherDescriberVec &
matcher_describers_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  MatcherDescriberVec matcher_describers_;$/;"	m	class:testing::internal::UnorderedElementsAreMatcherImplBase	typeref:typename:MatcherDescriberVec
matcher_for_key_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const M matcher_for_key_;$/;"	m	class:testing::internal::KeyMatcher	typeref:typename:const M
matcher_test	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^namespace matcher_test {$/;"	n	namespace:__anoncaf4ae130111	file:
matchers	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  const ArgumentMatcherTuple& matchers() const {$/;"	f	class:testing::internal::TypedExpectation	typeref:typename:const ArgumentMatcherTuple &
matchers_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  MatcherVec matchers_;$/;"	m	class:testing::internal::UnorderedElementsAreMatcherImpl	typeref:typename:MatcherVec
matchers_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const ::std::vector<T> matchers_;$/;"	m	class:testing::internal::ElementsAreArrayMatcher	typeref:typename:const::std::vector<T>
matchers_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const MatcherTuple matchers_;$/;"	m	class:testing::internal::ElementsAreMatcher	typeref:typename:const MatcherTuple
matchers_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const MatcherTuple matchers_;$/;"	m	class:testing::internal::UnorderedElementsAreMatcher	typeref:typename:const MatcherTuple
matchers_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const typename MatcherListType::ListType matchers_;$/;"	m	class:testing::internal::VariadicMatcher	typeref:typename:const typename MatcherListType::ListType
matchers_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  ArgumentMatcherTuple matchers_;$/;"	m	class:testing::internal::MockSpec	typeref:typename:ArgumentMatcherTuple
matchers_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  ArgumentMatcherTuple matchers_;$/;"	m	class:testing::internal::OnCallSpec	typeref:typename:ArgumentMatcherTuple
matchers_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  ArgumentMatcherTuple matchers_;$/;"	m	class:testing::internal::TypedExpectation	typeref:typename:ArgumentMatcherTuple
matches_	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  ElementMatcherPairs matches_;$/;"	m	class:testing::gmock_matchers_test::__anon745c08170311::BacktrackingMaxBPMState	typeref:typename:ElementMatcherPairs	file:
matches_filter_	src/tests/googletest/googletest/include/gtest/gtest.h	/^  bool matches_filter_;             \/\/ True if this test matches the$/;"	m	class:testing::TestInfo	typeref:typename:bool
maxLength	src/muduo/examples/filetransfer/loadtest/Handler.java	/^    private final int maxLength;$/;"	f	class:Handler	file:
maxOpenFiles	src/muduo/muduo/base/ProcessInfo.cc	/^int ProcessInfo::maxOpenFiles()$/;"	f	class:ProcessInfo	typeref:typename:int
maxQueueSize_	src/muduo/muduo/base/ThreadPool.h	/^  size_t maxQueueSize_;$/;"	m	class:muduo::ThreadPool	typeref:typename:size_t
max_	src/tests/googletest/googlemock/src/gmock-cardinalities.cc	/^  const int max_;$/;"	m	class:testing::__anon97b0a8450111::BetweenCardinalityImpl	typeref:typename:const int	file:
max_	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  const RawType max_;$/;"	m	class:testing::gmock_matchers_test::FloatingPointTest	typeref:typename:const RawType	file:
max_abs_error_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    const FloatType max_abs_error_;$/;"	m	class:testing::internal::FloatingEqMatcher::Impl	typeref:typename:const FloatType
max_abs_error_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const FloatType max_abs_error_;$/;"	m	class:testing::internal::FloatingEqMatcher	typeref:typename:const FloatType
max_precalculated_	src/tests/googletest/googletest/samples/sample8_unittest.cc	/^  int max_precalculated_;$/;"	m	class:HybridPrimeTable	typeref:typename:int	file:
max_sessions	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    int max_sessions;$/;"	m	class:tfhe_superaic::TFHE_ACC	typeref:typename:int
max_ulps_	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  const size_t max_ulps_;$/;"	m	class:testing::gmock_matchers_test::FloatingPointTest	typeref:typename:const size_t	file:
maxconnection_echo	src/muduo/examples/maxconnection/CMakeLists.txt	/^add_executable(maxconnection_echo echo.cc main.cc)$/;"	t
mcurl	src/muduo/examples/curl/CMakeLists.txt	/^add_executable(mcurl mcurl.cc)$/;"	t
md5	src/libtfhe-superaic-core/tfhe_session.cpp	/^int md5(const char *in_data , size_t in_len, unsigned char * out_data, unsigned int *max_out_len/;"	f	namespace:tfhe_superaic	typeref:typename:int
memZero	src/muduo/muduo/base/Types.h	/^inline void memZero(void* p, size_t n)$/;"	f	namespace:muduo	typeref:typename:void
member	src/tests/googletest/googletest/test/gtest-port_test.cc	/^  int member() { return member_; }$/;"	f	class:testing::internal::Base	typeref:typename:int	file:
memberFunc	src/muduo/muduo/base/tests/Thread_test.cc	/^  void memberFunc()$/;"	f	class:Foo	typeref:typename:void	file:
memberFunc2	src/muduo/muduo/base/tests/Thread_test.cc	/^  void memberFunc2(const std::string& text)$/;"	f	class:Foo	typeref:typename:void	file:
member_	src/tests/googletest/googletest/test/gtest-port_test.cc	/^  int member_;$/;"	m	class:testing::internal::Base	typeref:typename:int	file:
memcached_bench	src/muduo/examples/memcached/client/CMakeLists.txt	/^  add_executable(memcached_bench bench.cc)$/;"	t
memcached_debug	src/muduo/examples/memcached/server/CMakeLists.txt	/^  add_executable(memcached_debug Item.cc MemcacheServer.cc Session.cc server.cc)$/;"	t
memcached_footprint	src/muduo/examples/memcached/server/CMakeLists.txt	/^add_executable(memcached_footprint Item.cc MemcacheServer.cc Session.cc footprint_test.cc)$/;"	t
memdup	src/libtfhe-superaic-core/fft_processors/nayuki/fft-test.c	/^static void *memdup(const void *src, size_t n) {$/;"	f	typeref:typename:void *	file:
memhistogram	src/muduo/muduo/net/inspect/PerformanceInspector.cc	/^string PerformanceInspector::memhistogram(HttpRequest::Method, const Inspector::ArgList&)$/;"	f	class:PerformanceInspector	typeref:typename:string
meminfo	src/muduo/muduo/net/inspect/SystemInspector.cc	/^string SystemInspector::meminfo(HttpRequest::Method, const Inspector::ArgList&)$/;"	f	class:SystemInspector	typeref:typename:string
memstat	src/muduo/examples/socks4a/tcprelay.cc	/^void memstat()$/;"	f	typeref:typename:void
memstats	src/muduo/muduo/net/inspect/PerformanceInspector.cc	/^string PerformanceInspector::memstats(HttpRequest::Method, const Inspector::ArgList&)$/;"	f	class:PerformanceInspector	typeref:typename:string
message	src/muduo/examples/ace/logging/logrecord.proto	/^  required string message = 5;$/;"	f	message:logging.LogRecord	typeref:typename:string
message	src/muduo/examples/pingpong/client.cc	/^  const string& message() const$/;"	f	class:Client	typeref:typename:const string &	file:
message	src/tests/fakes/lwe.h	/^    Torus32 message;$/;"	m	struct:FakeLwe	typeref:typename:Torus32
message	src/tests/fakes/tgsw-fft.h	/^        IntPolynomial *message;$/;"	m	struct:__anonee999a9f0111::FakeTGswFFT	typeref:typename:IntPolynomial *
message	src/tests/fakes/tgsw.h	/^        IntPolynomial *message;$/;"	m	struct:__anond844f8d20111::FakeTGsw	typeref:typename:IntPolynomial *
message	src/tests/fakes/tlwe-fft.h	/^        TorusPolynomial *message;$/;"	m	struct:__anon7c76dd960111::FakeTLweFFT	typeref:typename:TorusPolynomial *
message	src/tests/fakes/tlwe.h	/^        TorusPolynomial *message;$/;"	m	struct:__anond8a158490111::FakeTLwe	typeref:typename:TorusPolynomial *
message	src/tests/googletest/googletest/include/gtest/gtest-test-part.h	/^  const char* message() const { return message_.c_str(); }$/;"	f	class:testing::TestPartResult	typeref:typename:const char *
message	src/tests/googletest/googletest/include/gtest/gtest.h	/^    std::string const message;$/;"	m	struct:testing::internal::AssertHelper::AssertHelperData	typeref:typename:std::string const
message	src/tests/googletest/googletest/include/gtest/gtest.h	/^  const char* message() const {$/;"	f	class:testing::AssertionResult	typeref:typename:const char *
message	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  std::string message;$/;"	m	struct:testing::internal::TraceInfo	typeref:typename:std::string
message	src/tests/googletest/googletest/test/gtest_output_test.py	/^      message = ($/;"	v
message encode	docs/message_encode_encrypt.md	/^# message encode$/;"	c
messageCallback	src/muduo/muduo/net/protorpc/RpcCodec_test.cc	/^void messageCallback(const TcpConnectionPtr&,$/;"	f	typeref:typename:void
messageCallback_	src/muduo/examples/asio/chat/codec.h	/^  StringMessageCallback messageCallback_;$/;"	m	class:LengthHeaderCodec	typeref:typename:StringMessageCallback
messageCallback_	src/muduo/examples/protobuf/codec/codec.h	/^  ProtobufMessageCallback messageCallback_;$/;"	m	class:ProtobufCodec	typeref:typename:ProtobufMessageCallback
messageCallback_	src/muduo/muduo/net/TcpClient.h	/^  MessageCallback messageCallback_;$/;"	m	class:muduo::net::TcpClient	typeref:typename:MessageCallback
messageCallback_	src/muduo/muduo/net/TcpConnection.h	/^  MessageCallback messageCallback_;$/;"	m	class:muduo::net::TcpConnection	typeref:typename:MessageCallback
messageCallback_	src/muduo/muduo/net/TcpServer.h	/^  MessageCallback messageCallback_;$/;"	m	class:muduo::net::TcpServer	typeref:typename:MessageCallback
messageCallback_	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^  ProtobufMessageCallback messageCallback_;$/;"	m	class:muduo::net::ProtobufCodecLite	typeref:typename:ProtobufMessageCallback
messageCallback_	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^  ProtobufMessageCallback messageCallback_;$/;"	m	class:muduo::net::ProtobufCodecLiteT	typeref:typename:ProtobufMessageCallback
messageReceived	src/muduo/examples/filetransfer/loadtest/Handler.java	/^    public void messageReceived(ChannelHandlerContext ctx, MessageEvent e) throws Exception {$/;"	m	class:Handler
messageReceived	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockBackendServer.java	/^        public void messageReceived(ChannelHandlerContext ctx, MessageEvent e)$/;"	m	class:MockBackendServer.Handler
messageReceived	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockClient.java	/^        public void messageReceived(ChannelHandlerContext ctx, MessageEvent e)$/;"	m	class:MockClient.Handler
messageToSend	src/muduo/examples/protobuf/codec/client.cc	/^google::protobuf::Message* messageToSend;$/;"	v	typeref:typename:google::protobuf::Message *
message_	src/muduo/examples/netty/discard/client.cc	/^  string message_;$/;"	m	class:DiscardClient	typeref:typename:string	file:
message_	src/muduo/examples/netty/echo/client.cc	/^  string message_;$/;"	m	class:EchoClient	typeref:typename:string	file:
message_	src/muduo/examples/pingpong/client.cc	/^  string message_;$/;"	m	class:Client	typeref:typename:string	file:
message_	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^  StringPiece message_;$/;"	m	struct:RawMessage	typeref:typename:StringPiece	file:
message_	src/muduo/examples/simple/chargen/chargen.h	/^  muduo::string message_;$/;"	m	class:ChargenServer	typeref:typename:muduo::string
message_	src/muduo/muduo/base/Exception.h	/^  string message_;$/;"	m	class:muduo::Exception	typeref:typename:string
message_	src/tests/googletest/googletest/include/gtest/gtest-test-part.h	/^  std::string message_;  \/\/ The test failure message.$/;"	m	class:testing::TestPartResult	typeref:typename:std::string
message_	src/tests/googletest/googletest/include/gtest/gtest.h	/^  internal::scoped_ptr< ::std::string> message_;$/;"	m	class:testing::AssertionResult	typeref:typename:internal::scoped_ptr<::std::string>
message_functions.cpp.i	buildotests/libtfhe-superaic-core/Makefile	/^message_functions.cpp.i:$/;"	t
message_functions.cpp.o	buildotests/libtfhe-superaic-core/Makefile	/^message_functions.cpp.o:$/;"	t
message_functions.cpp.s	buildotests/libtfhe-superaic-core/Makefile	/^message_functions.cpp.s:$/;"	t
message_functions.i	buildotests/libtfhe-superaic-core/Makefile	/^message_functions.i: message_functions.cpp.i$/;"	t
message_functions.o	buildotests/libtfhe-superaic-core/Makefile	/^message_functions.o: message_functions.cpp.o$/;"	t
message_functions.s	buildotests/libtfhe-superaic-core/Makefile	/^message_functions.s: message_functions.cpp.s$/;"	t
message_modulus	src/libtfhe-superaic-core/include/classic_PBS_parameters.h	/^    const int32_t message_modulus; \/\/\/< size of message space$/;"	m	struct:ClassicPBSParameters	typeref:typename:const int32_t
message_modulus	src/tests/classic_PBS_parameters.cpp	/^    const int32_t message_modulus; \/\/\/< size of message sapce$/;"	m	struct:ClassicPBSParameters	typeref:typename:const int32_t	file:
message_modulus	src/tests/classic_PBS_parameters.cpp	/^    int32_t message_modulus;$/;"	m	struct:ServerKey	typeref:typename:int32_t	file:
message_modulus	src/tests/decrypt_with_plaintext_modulus.cpp	/^    const int32_t message_modulus = M8_PARAM.message_modulus;$/;"	v	namespace:__anondb55d4a50111	typeref:typename:const int32_t
message_modulus	src/tests/macros_decrypt_with_plaintext_modulus_macros.cpp	/^    const int32_t message_modulus = M8_PARAM.message_modulus;$/;"	v	namespace:__anon478224cd0111	typeref:typename:const int32_t
message_modulus	src/tests/macros_modSwitch_with_plaintext_modulus_macros.cpp	/^    const int32_t message_modulus = M8_PARAM.message_modulus;$/;"	v	namespace:__anon4cdaee640111	typeref:typename:const int32_t
message_modulus	src/tests/ops_add.cpp	/^    const int32_t message_modulus = M8_PARAM.message_modulus;$/;"	v	namespace:__anonb1f413890111	typeref:typename:const int32_t
message_modulus	src/tests/ops_add_with_carry.cpp	/^    const int32_t message_modulus = M8_PARAM.message_modulus;$/;"	v	namespace:__anon662e63c40111	typeref:typename:const int32_t
messagesRead	src/muduo/examples/pingpong/client.cc	/^  int64_t messagesRead() const$/;"	f	class:Session	typeref:typename:int64_t	file:
messagesRead_	src/muduo/examples/pingpong/client.cc	/^  int64_t messagesRead_;$/;"	m	class:Session	typeref:typename:int64_t	file:
method	src/muduo/muduo/net/http/HttpRequest.h	/^  Method method() const$/;"	f	class:muduo::net::HttpRequest	typeref:typename:Method
method	src/muduo/muduo/net/protorpc/rpc.proto	/^  optional string method = 4;$/;"	f	message:muduo.net.RpcMessage	typeref:typename:string
methodString	src/muduo/muduo/net/http/HttpRequest.h	/^  const char* methodString() const$/;"	f	class:muduo::net::HttpRequest	typeref:typename:const char *
method_	src/muduo/muduo/net/http/HttpRequest.h	/^  Method method_;$/;"	m	class:muduo::net::HttpRequest	typeref:typename:Method
method_name	src/muduo/muduo/net/protorpc/rpcservice.proto	/^  repeated string method_name = 3;$/;"	f	message:muduo.net.ListRpcResponse	typeref:typename:string
method_ptr_	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  const MethodPtr method_ptr_;$/;"	m	class:testing::internal::InvokeMethodWithoutArgsAction	typeref:typename:const MethodPtr
method_ptr_	src/tests/googletest/googlemock/include/gmock/gmock-more-actions.h	/^  const MethodPtr method_ptr_;$/;"	m	class:testing::internal::InvokeMethodAction	typeref:typename:const MethodPtr
microSecondsSinceEpoch	src/muduo/muduo/base/Timestamp.h	/^  int64_t microSecondsSinceEpoch() const { return microSecondsSinceEpoch_; }$/;"	f	class:muduo::Timestamp	typeref:typename:int64_t
microSecondsSinceEpoch_	src/muduo/muduo/base/Timestamp.h	/^  int64_t microSecondsSinceEpoch_;$/;"	m	class:muduo::Timestamp	typeref:typename:int64_t
middleloop	src/libtfhe-superaic-core/fft_processors/nayuki/fft-x8664-avx-reverse.s	/^middleloop:  \/* For each block of the current size: From 0, 2*rcx, 4*rcx, 6*rcx, ..., to rdx (e/;"	l
middleloop	src/libtfhe-superaic-core/fft_processors/nayuki/fft-x8664-avx.s	/^middleloop:  \/* For each block of the current size: From 0, 2*rcx, 4*rcx, 6*rcx, ..., to rdx (e/;"	l
min_	src/tests/googletest/googlemock/src/gmock-cardinalities.cc	/^  const int min_;$/;"	m	class:testing::__anon97b0a8450111::BetweenCardinalityImpl	typeref:typename:const int	file:
minflt	src/muduo/examples/procmon/procmon.cc	/^  long minflt;$/;"	m	struct:StatData	typeref:typename:long	file:
minimum	src/examples/comparebits.cpp	/^void minimum(LweSample *result, const LweSample *a, const LweSample *b, const int bits, const TF/;"	f	typeref:typename:void
minor_version	src/tests/googletest/googletest/xcode/Scripts/versiongenerate.py	/^minor_version = version_values.group(2)$/;"	v
minute	src/muduo/muduo/base/TimeZone.h	/^  int minute = 0;   \/\/ [0, 59]$/;"	m	struct:muduo::DateTime	typeref:typename:int
mock_foo	src/tests/googletest/googlemock/test/gmock_stress_test.cc	/^  MockFoo* mock_foo;$/;"	m	struct:testing::__anonc83180760111::Helper1Param	typeref:typename:MockFoo *	file:
mock_foo_	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^  MockFoo mock_foo_;$/;"	m	class:testing::gmock_generated_function_mockers_test::FunctionMockerTest	typeref:typename:MockFoo	file:
mock_obj_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  const void* mock_obj_;  \/\/ Protected by g_gmock_mutex.$/;"	m	class:testing::internal::UntypedFunctionMockerBase	typeref:typename:const void *
modSwitchFromTorus32	src/libtfhe-superaic-core/numeric-functions.cpp	/^EXPORT int32_t modSwitchFromTorus32(Torus32 phase, int32_t plaintext_modulus){$/;"	f	typeref:typename:EXPORT int32_t
modSwitchFromTorus32_63bit	src/tests/macros_modSwitch_with_plaintext_modulus_macros.cpp	/^    int32_t modSwitchFromTorus32_63bit(Torus32 phase, int32_t plaintext_modulus){$/;"	f	namespace:__anon4cdaee640111	typeref:typename:int32_t
modSwitchFromTorus32_63bit	src/tests/zpf_for_bootstrap_detail.cpp	/^    int32_t modSwitchFromTorus32_63bit(Torus32 phase, int32_t plaintext_modulus){$/;"	f	namespace:__anonc07144f40111	typeref:typename:int32_t
modSwitchToTorus32	src/libtfhe-superaic-core/numeric-functions.cpp	/^EXPORT Torus32 modSwitchToTorus32(int32_t mu, int32_t plaintext_modulus){$/;"	f	typeref:typename:EXPORT Torus32
modSwitchToTorus32_63bit	src/tests/macros_modSwitch_with_plaintext_modulus_macros.cpp	/^    Torus32 modSwitchToTorus32_63bit(int32_t mu, int32_t plaintext_modulus){$/;"	f	namespace:__anon4cdaee640111	typeref:typename:Torus32
modSwitchToTorus32_63bit	src/tests/zpf_for_bootstrap_detail.cpp	/^    Torus32 modSwitchToTorus32_63bit(int32_t mu, int32_t plaintext_modulus){$/;"	f	namespace:__anonc07144f40111	typeref:typename:Torus32
mono_tuple2_matcher_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    const Matcher<const ArgTuple&> mono_tuple2_matcher_;$/;"	m	class:testing::internal::BoundSecondMatcher::Impl	typeref:typename:const Matcher<const ArgTuple &>
mono_tuple_matcher_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    const Matcher<InnerMatcherArg> mono_tuple_matcher_;$/;"	m	class:testing::internal::PointwiseMatcher::Impl	typeref:typename:const Matcher<InnerMatcherArg>
month	src/muduo/muduo/base/Date.h	/^    int month;  \/\/ [1..12]$/;"	m	struct:muduo::Date::YearMonthDay	typeref:typename:int
month	src/muduo/muduo/base/Date.h	/^  int month() const$/;"	f	class:muduo::Date	typeref:typename:int
month	src/muduo/muduo/base/TimeZone.h	/^  int month = 0;    \/\/ [1, 12]$/;"	m	struct:muduo::DateTime	typeref:typename:int
move	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^const T& move(const T& t) {$/;"	f	namespace:testing::internal	typeref:typename:const T &
mps	src/muduo/examples/wordcount/slowsink.py	/^	mps = 1.0$/;"	v
mps	src/muduo/examples/wordcount/slowsink.py	/^	mps = float(sys.argv[1])$/;"	v
mrediscli	src/muduo/contrib/hiredis/CMakeLists.txt	/^add_executable(mrediscli Hiredis.cc mrediscli.cc)$/;"	t
msg	src/libtfhe-superaic-core/include/tfhe_package.h	/^    string msg;$/;"	m	class:ProxyPayload_ACK_OK	typeref:typename:string
mtest	Makefile	/^mtest: buildmtests$/;"	t
muduo	src/muduo/CMakeLists.txt	/^project(muduo C CXX)$/;"	p
muduo	src/muduo/contrib/hiredis/Hiredis.h	/^namespace muduo$/;"	n
muduo	src/muduo/examples/cdns/Resolver.h	/^namespace muduo$/;"	n
muduo	src/muduo/examples/curl/Curl.h	/^namespace muduo$/;"	n
muduo	src/muduo/examples/memcached/server/Item.h	/^namespace muduo$/;"	n
muduo	src/muduo/examples/protobuf/codec/query.proto	/^package muduo;$/;"	p
muduo	src/muduo/muduo/base/AsyncLogging.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/base/Atomic.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/base/BlockingQueue.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/base/BoundedBlockingQueue.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/base/Condition.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/base/CountDownLatch.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/base/CurrentThread.cc	/^namespace muduo$/;"	n	file:
muduo	src/muduo/muduo/base/CurrentThread.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/base/Date.cc	/^namespace muduo$/;"	n	file:
muduo	src/muduo/muduo/base/Date.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/base/Exception.cc	/^namespace muduo$/;"	n	file:
muduo	src/muduo/muduo/base/Exception.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/base/FileUtil.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/base/GzipFile.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/base/LogFile.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/base/LogStream.cc	/^namespace muduo$/;"	n	file:
muduo	src/muduo/muduo/base/LogStream.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/base/Logging.cc	/^namespace muduo$/;"	n	file:
muduo	src/muduo/muduo/base/Logging.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/base/Mutex.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/base/ProcessInfo.cc	/^namespace muduo$/;"	n	file:
muduo	src/muduo/muduo/base/ProcessInfo.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/base/Singleton.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/base/StringPiece.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/base/Thread.cc	/^namespace muduo$/;"	n	file:
muduo	src/muduo/muduo/base/Thread.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/base/ThreadLocal.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/base/ThreadLocalSingleton.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/base/ThreadPool.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/base/TimeZone.cc	/^namespace muduo$/;"	n	file:
muduo	src/muduo/muduo/base/TimeZone.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/base/Timestamp.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/base/Types.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/base/WeakCallback.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/base/copyable.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/base/noncopyable.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/net/Acceptor.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/net/Buffer.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/net/Callbacks.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/net/Channel.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/net/Connector.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/net/Endian.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/net/EventLoop.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/net/EventLoopThread.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/net/EventLoopThreadPool.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/net/InetAddress.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/net/Poller.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/net/Socket.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/net/SocketsOps.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/net/TcpClient.cc	/^namespace muduo$/;"	n	file:
muduo	src/muduo/muduo/net/TcpClient.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/net/TcpConnection.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/net/TcpServer.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/net/Timer.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/net/TimerId.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/net/TimerQueue.cc	/^namespace muduo$/;"	n	file:
muduo	src/muduo/muduo/net/TimerQueue.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/net/ZlibStream.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/net/boilerplate.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/net/http/HttpContext.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/net/http/HttpRequest.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/net/http/HttpResponse.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/net/http/HttpServer.cc	/^namespace muduo$/;"	n	file:
muduo	src/muduo/muduo/net/http/HttpServer.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/net/inspect/Inspector.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/net/inspect/PerformanceInspector.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/net/inspect/ProcessInspector.cc	/^namespace muduo$/;"	n	file:
muduo	src/muduo/muduo/net/inspect/ProcessInspector.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/net/inspect/SystemInspector.cc	/^namespace muduo$/;"	n	file:
muduo	src/muduo/muduo/net/inspect/SystemInspector.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/net/poller/EPollPoller.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/net/poller/PollPoller.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/net/protobuf/BufferStream.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/net/protorpc/RpcChannel.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/net/protorpc/RpcCodec.cc	/^namespace muduo$/;"	n	file:
muduo	src/muduo/muduo/net/protorpc/RpcCodec.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/net/protorpc/RpcServer.h	/^namespace muduo$/;"	n
muduo	src/muduo/muduo/net/tests/Channel_test.cc	/^namespace muduo$/;"	n	file:
muduo.net	src/muduo/muduo/net/protorpc/rpc.proto	/^package muduo.net;$/;"	p
muduo.net	src/muduo/muduo/net/protorpc/rpcservice.proto	/^package muduo.net;$/;"	p
muduo_base	src/muduo/muduo/base/CMakeLists.txt	/^add_library(muduo_base ${base_SRCS})$/;"	t
muduo_cdns	src/muduo/examples/cdns/CMakeLists.txt	/^add_library(muduo_cdns Resolver.cc)$/;"	t
muduo_curl	src/muduo/examples/curl/CMakeLists.txt	/^add_library(muduo_curl Curl.cc)$/;"	t
muduo_http	src/muduo/muduo/net/http/CMakeLists.txt	/^add_library(muduo_http ${http_SRCS})$/;"	t
muduo_inspect	src/muduo/muduo/net/inspect/CMakeLists.txt	/^add_library(muduo_inspect ${inspect_SRCS})$/;"	t
muduo_net	src/muduo/muduo/net/CMakeLists.txt	/^add_library(muduo_net ${net_SRCS})$/;"	t
muduo_protobuf_codec	src/muduo/muduo/net/protobuf/CMakeLists.txt	/^add_library(muduo_protobuf_codec ProtobufCodecLite.cc)$/;"	t
muduo_protorpc	src/muduo/muduo/net/protorpc/CMakeLists.txt	/^add_library(muduo_protorpc RpcChannel.cc RpcServer.cc)$/;"	t
muduo_protorpc_wire	src/muduo/muduo/net/protorpc/CMakeLists.txt	/^add_library(muduo_protorpc_wire rpc.pb.cc RpcCodec.cc)$/;"	t
muduo_pubsub	src/muduo/examples/hub/CMakeLists.txt	/^add_library(muduo_pubsub pubsub.cc codec.cc)$/;"	t
muduo_thrift	src/muduo/contrib/thrift/CMakeLists.txt	/^add_library(muduo_thrift ${MUDUO_THRIFT_SRCS})$/;"	t
muduo_thrift_echo	src/muduo/contrib/thrift/tests/echo/CMakeLists.txt	/^add_executable(muduo_thrift_echo ${ECHO_SRCS} ${ECHO_THRIFT_SRCS})$/;"	t
muduo_thrift_ping	src/muduo/contrib/thrift/tests/ping/CMakeLists.txt	/^add_executable(muduo_thrift_ping ${PING_SRCS} ${PING_THRIFT_SRCS})$/;"	t
mul	docs/rustops/ops_mul.md	/^# mul$/;"	c
multiplex_demux	src/muduo/examples/multiplexer/CMakeLists.txt	/^add_executable(multiplex_demux demux.cc)$/;"	t
multiplex_server	src/muduo/examples/multiplexer/CMakeLists.txt	/^add_executable(multiplex_server multiplexer.cc)$/;"	t
multiplex_server_simple	src/muduo/examples/multiplexer/CMakeLists.txt	/^add_executable(multiplex_server_simple multiplexer_simple.cc)$/;"	t
multiplexerAddress	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MultiplexerTest.java	/^    private final InetSocketAddress multiplexerAddress;$/;"	f	class:MultiplexerTest	file:
multiplication.cpp.i	buildotests/libtfhe-superaic-core/Makefile	/^multiplication.cpp.i:$/;"	t
multiplication.cpp.o	buildotests/libtfhe-superaic-core/Makefile	/^multiplication.cpp.o:$/;"	t
multiplication.cpp.s	buildotests/libtfhe-superaic-core/Makefile	/^multiplication.cpp.s:$/;"	t
multiplication.i	buildotests/libtfhe-superaic-core/Makefile	/^multiplication.i: multiplication.cpp.i$/;"	t
multiplication.o	buildotests/libtfhe-superaic-core/Makefile	/^multiplication.o: multiplication.cpp.o$/;"	t
multiplication.s	buildotests/libtfhe-superaic-core/Makefile	/^multiplication.s: multiplication.cpp.s$/;"	t
mutable_impl	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  Impl& mutable_impl() { return impl_; }$/;"	f	class:testing::PolymorphicMatcher	typeref:typename:Impl &
mutex	src/muduo/examples/memcached/server/MemcacheServer.h	/^    mutable muduo::MutexLock mutex;$/;"	m	struct:MemcacheServer::MapWithLock	typeref:typename:muduo::MutexLock
mutex_	src/muduo/contrib/thrift/ThriftServer.h	/^  muduo::MutexLock mutex_;$/;"	m	class:ThriftServer	typeref:typename:muduo::MutexLock
mutex_	src/muduo/examples/ace/logging/client.cc	/^  MutexLock mutex_;$/;"	m	class:logging::LogClient	typeref:typename:MutexLock	file:
mutex_	src/muduo/examples/asio/chat/client.cc	/^  MutexLock mutex_;$/;"	m	class:ChatClient	typeref:typename:MutexLock	file:
mutex_	src/muduo/examples/asio/chat/server_threaded.cc	/^  MutexLock mutex_;$/;"	m	class:ChatServer	typeref:typename:MutexLock	file:
mutex_	src/muduo/examples/asio/chat/server_threaded_efficient.cc	/^  MutexLock mutex_;$/;"	m	class:ChatServer	typeref:typename:MutexLock	file:
mutex_	src/muduo/examples/asio/chat/server_threaded_highperformance.cc	/^  MutexLock mutex_;$/;"	m	class:ChatServer	typeref:typename:MutexLock	file:
mutex_	src/muduo/examples/asio/tutorial/timer5/timer.cc	/^  muduo::MutexLock mutex_;$/;"	m	class:Printer	typeref:typename:muduo::MutexLock	file:
mutex_	src/muduo/examples/asio/tutorial/timer6/timer.cc	/^  muduo::MutexLock mutex_;$/;"	m	class:Printer	typeref:typename:muduo::MutexLock	file:
mutex_	src/muduo/examples/memcached/server/MemcacheServer.h	/^  mutable muduo::MutexLock mutex_;$/;"	m	class:MemcacheServer	typeref:typename:muduo::MutexLock
mutex_	src/muduo/examples/multiplexer/multiplexer.cc	/^  MutexLock mutex_;$/;"	m	class:MultiplexServer	typeref:typename:MutexLock	file:
mutex_	src/muduo/examples/sudoku/stat.h	/^  mutable MutexLock mutex_;$/;"	m	class:SudokuStat	typeref:typename:MutexLock
mutex_	src/muduo/examples/wordcount/hasher.cc	/^  MutexLock mutex_;$/;"	m	class:SendThrottler	typeref:typename:MutexLock	file:
mutex_	src/muduo/muduo/base/AsyncLogging.h	/^  muduo::MutexLock mutex_;$/;"	m	class:muduo::AsyncLogging	typeref:typename:muduo::MutexLock
mutex_	src/muduo/muduo/base/BlockingQueue.h	/^  mutable MutexLock mutex_;$/;"	m	class:muduo::BlockingQueue	typeref:typename:MutexLock
mutex_	src/muduo/muduo/base/BoundedBlockingQueue.h	/^  mutable MutexLock          mutex_;$/;"	m	class:muduo::BoundedBlockingQueue	typeref:typename:MutexLock
mutex_	src/muduo/muduo/base/Condition.h	/^  MutexLock& mutex_;$/;"	m	class:muduo::Condition	typeref:typename:MutexLock &
mutex_	src/muduo/muduo/base/CountDownLatch.h	/^  mutable MutexLock mutex_;$/;"	m	class:muduo::CountDownLatch	typeref:typename:MutexLock
mutex_	src/muduo/muduo/base/LogFile.h	/^  std::unique_ptr<MutexLock> mutex_;$/;"	m	class:muduo::LogFile	typeref:typename:std::unique_ptr<MutexLock>
mutex_	src/muduo/muduo/base/Mutex.h	/^  MutexLock& mutex_;$/;"	m	class:muduo::MutexLockGuard	typeref:typename:MutexLock &
mutex_	src/muduo/muduo/base/Mutex.h	/^  pthread_mutex_t mutex_;$/;"	m	class:muduo::MutexLock	typeref:typename:pthread_mutex_t
mutex_	src/muduo/muduo/base/ThreadPool.h	/^  mutable MutexLock mutex_;$/;"	m	class:muduo::ThreadPool	typeref:typename:MutexLock
mutex_	src/muduo/muduo/net/EventLoop.h	/^  mutable MutexLock mutex_;$/;"	m	class:muduo::net::EventLoop	typeref:typename:MutexLock
mutex_	src/muduo/muduo/net/EventLoopThread.h	/^  MutexLock mutex_;$/;"	m	class:muduo::net::EventLoopThread	typeref:typename:MutexLock
mutex_	src/muduo/muduo/net/TcpClient.h	/^  mutable MutexLock mutex_;$/;"	m	class:muduo::net::TcpClient	typeref:typename:MutexLock
mutex_	src/muduo/muduo/net/inspect/Inspector.h	/^  MutexLock mutex_;$/;"	m	class:muduo::net::Inspector	typeref:typename:MutexLock
mutex_	src/muduo/muduo/net/protorpc/RpcChannel.h	/^  MutexLock mutex_;$/;"	m	class:muduo::net::RpcChannel	typeref:typename:MutexLock
mutex_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  mutable Mutex mutex_;  \/\/ Protects action_count_checked_.$/;"	m	class:testing::internal::ExpectationBase	typeref:typename:Mutex
mutex_	src/tests/googletest/googletest/include/gtest/gtest.h	/^  mutable internal::Mutex mutex_;$/;"	m	class:testing::UnitTest	typeref:typename:internal::Mutex
mutex_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  Mutex* const mutex_;$/;"	m	class:testing::internal::GTestMutexLock	typeref:typename:Mutex * const
mutex_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  MutexBase* const mutex_;$/;"	m	class:testing::internal::GTestMutexLock	typeref:typename:MutexBase * const
mutex_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  pthread_mutex_t mutex_;  \/\/ The underlying pthread mutex.$/;"	m	class:testing::internal::MutexBase	typeref:typename:pthread_mutex_t
mutex_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  pthread_mutex_t mutex_;$/;"	m	class:testing::internal::Notification	typeref:typename:pthread_mutex_t
mutex_	src/tests/googletest/googletest/src/gtest-port.cc	/^  static Mutex mutex_;$/;"	m	class:testing::internal::ThreadLocalRegistryImpl	typeref:typename:Mutex	file:
mutex_	src/tests/googletest/googletest/test/gtest-port_test.cc	/^  Mutex* const mutex_;  \/\/ Protects value_.$/;"	m	class:testing::internal::AtomicCounterWithMutex	typeref:typename:Mutex * const	file:
mutex_test	src/muduo/muduo/base/tests/CMakeLists.txt	/^add_executable(mutex_test Mutex_test.cc)$/;"	t
my_namespace	src/tests/googletest/googletest/test/gtest_unittest.cc	/^namespace my_namespace {$/;"	n	file:
mynum	src/tests/googletest/googletest/test/gtest-linked_ptr_test.cc	/^  int mynum;$/;"	m	class:__anonf616d1f80111::A	typeref:typename:int	file:
mysleep	src/muduo/muduo/base/tests/Thread_test.cc	/^void mysleep(int seconds)$/;"	f	typeref:typename:void
n	src/libtfhe-superaic-core/fft_processors/nayuki/fft-model-of-x8664-avx.c	/^	uint64_t n;$/;"	m	struct:FftTables	typeref:typename:uint64_t	file:
n	src/libtfhe-superaic-core/fft_processors/nayuki/fft-portable.c	/^	size_t n;$/;"	m	struct:FftTables	typeref:typename:size_t	file:
n	src/libtfhe-superaic-core/fft_processors/nayuki/fft-x8664-avx-aux.c	/^	uint64_t n;$/;"	m	struct:FftTables	typeref:typename:uint64_t	file:
n	src/libtfhe-superaic-core/include/lwekeyswitch.h	/^    int32_t n; \/\/\/< length of the input key: s'$/;"	m	struct:LweKeySwitchKey	typeref:typename:int32_t
n	src/libtfhe-superaic-core/include/lweparams.h	/^	const int32_t n;$/;"	m	struct:LweParams	typeref:typename:const int32_t
n	src/libtfhe-superaic-core/include/lwesamples.h	/^    int32_t n;$/;"	m	struct:LweSample	typeref:typename:int32_t
n	src/libtfhe-superaic-core/tfhe_io.cpp	/^    int32_t n;$/;"	m	struct:LweKeySwitchParameters	typeref:typename:int32_t	file:
n	src/tests/bootstrapping_classic_PBS_parameters_test.cpp	/^    const int32_t n = M8_PARAM.lwe_dimension;$/;"	v	namespace:__anon8153b4f20111	typeref:typename:const int32_t
n	src/tests/bootstrapping_direct_test.cpp	/^    const int32_t n = 500;$/;"	v	namespace:__anon560166140111	typeref:typename:const int32_t
n	src/tests/bootstrapping_test.cpp	/^    const int32_t n = 500;$/;"	v	namespace:__anonf36cd29a0111	typeref:typename:const int32_t
n	src/tests/decrypt_with_plaintext_modulus.cpp	/^    const int32_t n = M8_PARAM.lwe_dimension;$/;"	v	namespace:__anondb55d4a50111	typeref:typename:const int32_t
n	src/tests/fakes/lwe-keyswitch.h	/^        const int32_t n;$/;"	m	struct:__anonbf4a421d0111::FakeLweKeySwitchKey	typeref:typename:const int32_t
n	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  int n() const { return n_; }$/;"	f	class:testing::gmock_matchers_test::AClass	typeref:typename:int	file:
n	src/tests/macros_decrypt_with_plaintext_modulus_macros.cpp	/^    const int32_t n = M8_PARAM.lwe_dimension;$/;"	v	namespace:__anon478224cd0111	typeref:typename:const int32_t
n	src/tests/macros_modSwitch_with_plaintext_modulus_macros.cpp	/^    const int32_t n = M8_PARAM.lwe_dimension;$/;"	v	namespace:__anon4cdaee640111	typeref:typename:const int32_t
n	src/tests/ops_add.cpp	/^    const int32_t n = M8_PARAM.lwe_dimension;$/;"	v	namespace:__anonb1f413890111	typeref:typename:const int32_t
n	src/tests/ops_add_with_carry.cpp	/^    const int32_t n = M8_PARAM.lwe_dimension;$/;"	v	namespace:__anon662e63c40111	typeref:typename:const int32_t
n	src/tests/small_size_test.cpp	/^    const int32_t n = 4;$/;"	v	namespace:__anon9baab4410111	typeref:typename:const int32_t
n	src/tests/zpf_for_bootstrap_detail.cpp	/^    const int32_t n = M8_PARAM.lwe_dimension;$/;"	v	namespace:__anonc07144f40111	typeref:typename:const int32_t
n1	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^  Notification n1;$/;"	m	struct:CheckPoints	typeref:typename:Notification	file:
n1_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  static int n1_;$/;"	m	class:Predicate1Test	typeref:typename:int	file:
n1_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  static int n1_;$/;"	m	class:Predicate2Test	typeref:typename:int	file:
n1_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  static int n1_;$/;"	m	class:Predicate3Test	typeref:typename:int	file:
n1_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  static int n1_;$/;"	m	class:Predicate4Test	typeref:typename:int	file:
n1_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  static int n1_;$/;"	m	class:Predicate5Test	typeref:typename:int	file:
n1_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^int Predicate1Test::n1_;$/;"	m	class:Predicate1Test	typeref:typename:int
n1_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^int Predicate2Test::n1_;$/;"	m	class:Predicate2Test	typeref:typename:int
n1_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^int Predicate3Test::n1_;$/;"	m	class:Predicate3Test	typeref:typename:int
n1_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^int Predicate4Test::n1_;$/;"	m	class:Predicate4Test	typeref:typename:int
n1_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^int Predicate5Test::n1_;$/;"	m	class:Predicate5Test	typeref:typename:int
n2	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^  Notification n2;$/;"	m	struct:CheckPoints	typeref:typename:Notification	file:
n2_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  static int n2_;$/;"	m	class:Predicate2Test	typeref:typename:int	file:
n2_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  static int n2_;$/;"	m	class:Predicate3Test	typeref:typename:int	file:
n2_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  static int n2_;$/;"	m	class:Predicate4Test	typeref:typename:int	file:
n2_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  static int n2_;$/;"	m	class:Predicate5Test	typeref:typename:int	file:
n2_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^int Predicate2Test::n2_;$/;"	m	class:Predicate2Test	typeref:typename:int
n2_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^int Predicate3Test::n2_;$/;"	m	class:Predicate3Test	typeref:typename:int
n2_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^int Predicate4Test::n2_;$/;"	m	class:Predicate4Test	typeref:typename:int
n2_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^int Predicate5Test::n2_;$/;"	m	class:Predicate5Test	typeref:typename:int
n3	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^  Notification n3;$/;"	m	struct:CheckPoints	typeref:typename:Notification	file:
n3_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  static int n3_;$/;"	m	class:Predicate3Test	typeref:typename:int	file:
n3_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  static int n3_;$/;"	m	class:Predicate4Test	typeref:typename:int	file:
n3_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  static int n3_;$/;"	m	class:Predicate5Test	typeref:typename:int	file:
n3_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^int Predicate3Test::n3_;$/;"	m	class:Predicate3Test	typeref:typename:int
n3_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^int Predicate4Test::n3_;$/;"	m	class:Predicate4Test	typeref:typename:int
n3_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^int Predicate5Test::n3_;$/;"	m	class:Predicate5Test	typeref:typename:int
n4_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  static int n4_;$/;"	m	class:Predicate4Test	typeref:typename:int	file:
n4_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  static int n4_;$/;"	m	class:Predicate5Test	typeref:typename:int	file:
n4_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^int Predicate4Test::n4_;$/;"	m	class:Predicate4Test	typeref:typename:int
n4_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^int Predicate5Test::n4_;$/;"	m	class:Predicate5Test	typeref:typename:int
n5_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  static int n5_;$/;"	m	class:Predicate5Test	typeref:typename:int	file:
n5_	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^int Predicate5Test::n5_;$/;"	m	class:Predicate5Test	typeref:typename:int
n_	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  int n_;$/;"	m	class:testing::gmock_matchers_test::AClass	typeref:typename:int	file:
n_	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  int n_;$/;"	m	class:NonParameterizedBaseTest	typeref:typename:int	file:
naive_dft	src/libtfhe-superaic-core/fft_processors/nayuki/fft-test.c	/^static void naive_dft(const double *inreal, const double *inimag, double *outreal, double *outim/;"	f	typeref:typename:void	file:
name	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    const string name;$/;"	m	class:tfhe_superaic::Executor	typeref:typename:const string
name	src/muduo/examples/sudoku/sudoku.cc	/^    int name;$/;"	m	struct:Node	typeref:typename:int	file:
name	src/muduo/muduo/base/CurrentThread.h	/^  inline const char* name()$/;"	f	namespace:muduo::CurrentThread	typeref:typename:const char *
name	src/muduo/muduo/base/Thread.h	/^  const string& name() const { return name_; }$/;"	f	class:muduo::Thread	typeref:typename:const string &
name	src/muduo/muduo/base/ThreadPool.h	/^  const string& name() const$/;"	f	class:muduo::ThreadPool	typeref:typename:const string &
name	src/muduo/muduo/base/tests/SingletonThreadLocal_test.cc	/^  const muduo::string& name() const { return name_; }$/;"	f	class:Test	typeref:typename:const muduo::string &	file:
name	src/muduo/muduo/base/tests/Singleton_test.cc	/^  const muduo::string& name() const { return name_; }$/;"	f	class:Test	typeref:typename:const muduo::string &	file:
name	src/muduo/muduo/base/tests/ThreadLocalSingleton_test.cc	/^  const muduo::string& name() const { return name_; }$/;"	f	class:Test	typeref:typename:const muduo::string &	file:
name	src/muduo/muduo/base/tests/ThreadLocal_test.cc	/^  const muduo::string& name() const { return name_; }$/;"	f	class:Test	typeref:typename:const muduo::string &	file:
name	src/muduo/muduo/net/EventLoopThreadPool.h	/^  const string& name() const$/;"	f	class:muduo::net::EventLoopThreadPool	typeref:typename:const string &
name	src/muduo/muduo/net/TcpClient.h	/^  const string& name() const$/;"	f	class:muduo::net::TcpClient	typeref:typename:const string &
name	src/muduo/muduo/net/TcpConnection.h	/^  const string& name() const { return name_; }$/;"	f	class:muduo::net::TcpConnection	typeref:typename:const string &
name	src/muduo/muduo/net/TcpServer.h	/^  const string& name() const { return name_; }$/;"	f	class:muduo::net::TcpServer	typeref:typename:const string &
name	src/tests/googletest/googletest/include/gtest/gtest.h	/^  const char* name() const { return name_.c_str(); }$/;"	f	class:testing::TestCase	typeref:typename:const char *
name	src/tests/googletest/googletest/include/gtest/gtest.h	/^  const char* name() const { return name_.c_str(); }$/;"	f	class:testing::TestInfo	typeref:typename:const char *
name	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^      std::string name;$/;"	m	struct:testing::internal::ParameterizedTestCaseInfo::InstantiationInfo	typeref:typename:std::string
name_	src/muduo/examples/memcached/client/bench.cc	/^  string name_;$/;"	m	class:Client	typeref:typename:string	file:
name_	src/muduo/examples/sudoku/batch.cc	/^  string name_;$/;"	m	class:SudokuClient	typeref:typename:string	file:
name_	src/muduo/examples/sudoku/loadtest.cc	/^  const string name_;$/;"	m	class:SudokuClient	typeref:typename:const string	file:
name_	src/muduo/examples/sudoku/pipeline.cc	/^  const string name_;$/;"	m	class:SudokuClient	typeref:typename:const string	file:
name_	src/muduo/muduo/base/Thread.cc	/^  string name_;$/;"	m	struct:muduo::detail::ThreadData	typeref:typename:string	file:
name_	src/muduo/muduo/base/Thread.h	/^  string     name_;$/;"	m	class:muduo::Thread	typeref:typename:string
name_	src/muduo/muduo/base/ThreadPool.h	/^  string name_;$/;"	m	class:muduo::ThreadPool	typeref:typename:string
name_	src/muduo/muduo/base/tests/SingletonThreadLocal_test.cc	/^  muduo::string name_;$/;"	m	class:Test	typeref:typename:muduo::string	file:
name_	src/muduo/muduo/base/tests/Singleton_test.cc	/^  muduo::string name_;$/;"	m	class:Test	typeref:typename:muduo::string	file:
name_	src/muduo/muduo/base/tests/ThreadLocalSingleton_test.cc	/^  muduo::string name_;$/;"	m	class:Test	typeref:typename:muduo::string	file:
name_	src/muduo/muduo/base/tests/ThreadLocal_test.cc	/^  muduo::string name_;$/;"	m	class:Test	typeref:typename:muduo::string	file:
name_	src/muduo/muduo/net/EventLoopThreadPool.h	/^  string name_;$/;"	m	class:muduo::net::EventLoopThreadPool	typeref:typename:string
name_	src/muduo/muduo/net/TcpClient.h	/^  const string name_;$/;"	m	class:muduo::net::TcpClient	typeref:typename:const string
name_	src/muduo/muduo/net/TcpConnection.h	/^  const string name_;$/;"	m	class:muduo::net::TcpConnection	typeref:typename:const string
name_	src/muduo/muduo/net/TcpServer.h	/^  const string name_;$/;"	m	class:muduo::net::TcpServer	typeref:typename:const string
name_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  const char* name_;  \/\/ Protected by g_gmock_mutex.$/;"	m	class:testing::internal::UntypedFunctionMockerBase	typeref:typename:const char *
name_	src/tests/googletest/googletest/include/gtest/gtest.h	/^  const std::string name_;               \/\/ Test name$/;"	m	class:testing::TestInfo	typeref:typename:const std::string
name_	src/tests/googletest/googletest/include/gtest/gtest.h	/^  std::string name_;$/;"	m	class:testing::TestCase	typeref:typename:std::string
name_	src/tests/googletest/googletest/src/gtest.cc	/^  std::string name_;$/;"	m	class:testing::__anon3f29b7680611::TestNameIs	typeref:typename:std::string	file:
name_	src/tests/googletest/googletest/src/gtest.cc	/^  std::string name_;$/;"	m	class:testing::internal::TestCaseNameIs	typeref:typename:std::string	file:
name_	src/tests/googletest/googletest/test/gtest-listener_test.cc	/^  std::string name_;$/;"	m	class:testing::internal::EventRecordingListener	typeref:typename:std::string	file:
name_func	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^      ParamNameGeneratorFunc* name_func;$/;"	m	struct:testing::internal::ParameterizedTestCaseInfo::InstantiationInfo	typeref:typename:ParamNameGeneratorFunc *
namespace1	src/tests/googletest/googletest/test/gtest_unittest.cc	/^namespace namespace1 {$/;"	n	file:
namespace2	src/tests/googletest/googletest/test/gtest_unittest.cc	/^namespace namespace2 {$/;"	n	file:
nan1	src/tests/googletest/googletest/test/gtest_unittest.cc	/^    RawType nan1;$/;"	m	struct:__anonf780395f0111::FloatingPointTest::TestValues	typeref:typename:RawType	file:
nan1_	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  const RawType nan1_;$/;"	m	class:testing::gmock_matchers_test::FloatingPointTest	typeref:typename:const RawType	file:
nan2	src/tests/googletest/googletest/test/gtest_unittest.cc	/^    RawType nan2;$/;"	m	struct:__anonf780395f0111::FloatingPointTest::TestValues	typeref:typename:RawType	file:
nan2_	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  const RawType nan2_;$/;"	m	class:testing::gmock_matchers_test::FloatingPointTest	typeref:typename:const RawType	file:
nan_eq_nan_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    const bool nan_eq_nan_;$/;"	m	class:testing::internal::FloatingEqMatcher::Impl	typeref:typename:const bool
nan_eq_nan_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const bool nan_eq_nan_;$/;"	m	class:testing::internal::FloatingEqMatcher	typeref:typename:const bool
neededBytes	src/muduo/examples/memcached/server/Item.h	/^  size_t neededBytes() const$/;"	f	class:Item	typeref:typename:size_t
needle_	src/muduo/examples/memcached/server/Session.h	/^  ItemPtr needle_;$/;"	m	class:Session	typeref:typename:ItemPtr
net	src/muduo/contrib/hiredis/Hiredis.h	/^namespace net$/;"	n	namespace:muduo
net	src/muduo/examples/cdns/Resolver.h	/^namespace net$/;"	n	namespace:muduo
net	src/muduo/examples/curl/Curl.h	/^namespace net$/;"	n	namespace:muduo
net	src/muduo/examples/memcached/server/Item.h	/^namespace net$/;"	n	namespace:muduo
net	src/muduo/muduo/net/Acceptor.h	/^namespace net$/;"	n	namespace:muduo
net	src/muduo/muduo/net/Buffer.h	/^namespace net$/;"	n	namespace:muduo
net	src/muduo/muduo/net/Callbacks.h	/^namespace net$/;"	n	namespace:muduo
net	src/muduo/muduo/net/Channel.h	/^namespace net$/;"	n	namespace:muduo
net	src/muduo/muduo/net/Connector.h	/^namespace net$/;"	n	namespace:muduo
net	src/muduo/muduo/net/Endian.h	/^namespace net$/;"	n	namespace:muduo
net	src/muduo/muduo/net/EventLoop.h	/^namespace net$/;"	n	namespace:muduo
net	src/muduo/muduo/net/EventLoopThread.h	/^namespace net$/;"	n	namespace:muduo
net	src/muduo/muduo/net/EventLoopThreadPool.h	/^namespace net$/;"	n	namespace:muduo
net	src/muduo/muduo/net/InetAddress.h	/^namespace net$/;"	n	namespace:muduo
net	src/muduo/muduo/net/Poller.h	/^namespace net$/;"	n	namespace:muduo
net	src/muduo/muduo/net/Socket.h	/^namespace net$/;"	n	namespace:muduo
net	src/muduo/muduo/net/SocketsOps.h	/^namespace net$/;"	n	namespace:muduo
net	src/muduo/muduo/net/TcpClient.cc	/^namespace net$/;"	n	namespace:muduo	file:
net	src/muduo/muduo/net/TcpClient.h	/^namespace net$/;"	n	namespace:muduo
net	src/muduo/muduo/net/TcpConnection.h	/^namespace net$/;"	n	namespace:muduo
net	src/muduo/muduo/net/TcpServer.h	/^namespace net$/;"	n	namespace:muduo
net	src/muduo/muduo/net/Timer.h	/^namespace net$/;"	n	namespace:muduo
net	src/muduo/muduo/net/TimerId.h	/^namespace net$/;"	n	namespace:muduo
net	src/muduo/muduo/net/TimerQueue.cc	/^namespace net$/;"	n	namespace:muduo	file:
net	src/muduo/muduo/net/TimerQueue.h	/^namespace net$/;"	n	namespace:muduo
net	src/muduo/muduo/net/ZlibStream.h	/^namespace net$/;"	n	namespace:muduo
net	src/muduo/muduo/net/boilerplate.h	/^namespace net$/;"	n	namespace:muduo
net	src/muduo/muduo/net/http/HttpContext.h	/^namespace net$/;"	n	namespace:muduo
net	src/muduo/muduo/net/http/HttpRequest.h	/^namespace net$/;"	n	namespace:muduo
net	src/muduo/muduo/net/http/HttpResponse.h	/^namespace net$/;"	n	namespace:muduo
net	src/muduo/muduo/net/http/HttpServer.cc	/^namespace net$/;"	n	namespace:muduo	file:
net	src/muduo/muduo/net/http/HttpServer.h	/^namespace net$/;"	n	namespace:muduo
net	src/muduo/muduo/net/inspect/Inspector.h	/^namespace net$/;"	n	namespace:muduo
net	src/muduo/muduo/net/inspect/PerformanceInspector.h	/^namespace net$/;"	n	namespace:muduo
net	src/muduo/muduo/net/inspect/ProcessInspector.h	/^namespace net$/;"	n	namespace:muduo
net	src/muduo/muduo/net/inspect/SystemInspector.h	/^namespace net$/;"	n	namespace:muduo
net	src/muduo/muduo/net/poller/EPollPoller.h	/^namespace net$/;"	n	namespace:muduo
net	src/muduo/muduo/net/poller/PollPoller.h	/^namespace net$/;"	n	namespace:muduo
net	src/muduo/muduo/net/protobuf/BufferStream.h	/^namespace net$/;"	n	namespace:muduo
net	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^namespace net$/;"	n	namespace:muduo
net	src/muduo/muduo/net/protorpc/RpcChannel.h	/^namespace net$/;"	n	namespace:muduo
net	src/muduo/muduo/net/protorpc/RpcCodec.cc	/^namespace net$/;"	n	namespace:muduo	file:
net	src/muduo/muduo/net/protorpc/RpcCodec.h	/^namespace net$/;"	n	namespace:muduo
net	src/muduo/muduo/net/protorpc/RpcServer.h	/^namespace net$/;"	n	namespace:muduo
net	src/muduo/muduo/net/tests/Channel_test.cc	/^namespace net$/;"	n	namespace:muduo	file:
net_SRCS	src/muduo/muduo/net/CMakeLists.txt	/^set(net_SRCS$/;"	v
netty_discard_client	src/muduo/examples/netty/discard/CMakeLists.txt	/^add_executable(netty_discard_client client.cc)$/;"	t
netty_discard_server	src/muduo/examples/netty/discard/CMakeLists.txt	/^add_executable(netty_discard_server server.cc)$/;"	t
netty_echo_client	src/muduo/examples/netty/echo/CMakeLists.txt	/^add_executable(netty_echo_client client.cc)$/;"	t
netty_echo_server	src/muduo/examples/netty/echo/CMakeLists.txt	/^add_executable(netty_echo_server server.cc)$/;"	t
netty_echo_server2	src/muduo/examples/netty/echo/CMakeLists.txt	/^add_executable(netty_echo_server2 server2.cc)$/;"	t
netty_uptime	src/muduo/examples/netty/uptime/CMakeLists.txt	/^add_executable(netty_uptime uptime.cc)$/;"	t
networkToHost16	src/muduo/muduo/net/Endian.h	/^inline uint16_t networkToHost16(uint16_t net16)$/;"	f	namespace:muduo::net::sockets	typeref:typename:uint16_t
networkToHost32	src/muduo/muduo/net/Endian.h	/^inline uint32_t networkToHost32(uint32_t net32)$/;"	f	namespace:muduo::net::sockets	typeref:typename:uint32_t
networkToHost64	src/muduo/muduo/net/Endian.h	/^inline uint64_t networkToHost64(uint64_t net64)$/;"	f	namespace:muduo::net::sockets	typeref:typename:uint64_t
newClient	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MultiplexerTest.java	/^    public MockClient newClient() {$/;"	m	class:MultiplexerTest
newConnection	src/muduo/muduo/net/TcpClient.cc	/^void TcpClient::newConnection(int sockfd)$/;"	f	class:TcpClient	typeref:typename:void
newConnection	src/muduo/muduo/net/TcpServer.cc	/^void TcpServer::newConnection(int sockfd, const InetAddress& peerAddr)$/;"	f	class:TcpServer	typeref:typename:void
newConnectionCallback_	src/muduo/muduo/net/Acceptor.h	/^  NewConnectionCallback newConnectionCallback_;$/;"	m	class:muduo::net::Acceptor	typeref:typename:NewConnectionCallback
newConnectionCallback_	src/muduo/muduo/net/Connector.h	/^  NewConnectionCallback newConnectionCallback_;$/;"	m	class:muduo::net::Connector	typeref:typename:NewConnectionCallback
newDefaultPoller	src/muduo/muduo/net/poller/DefaultPoller.cc	/^Poller* Poller::newDefaultPoller(EventLoop* loop)$/;"	f	class:Poller	typeref:typename:Poller *
new_IntPolynomial	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT IntPolynomial* new_IntPolynomial(const int32_t N) {$/;"	f	typeref:typename:EXPORT IntPolynomial *
new_IntPolynomial_array	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT IntPolynomial* new_IntPolynomial_array(int32_t nbelts, const int32_t N) {$/;"	f	typeref:typename:EXPORT IntPolynomial *
new_LagrangeHalfCPolynomial	src/libtfhe-superaic-core/polynomials.cpp	/^EXPORT LagrangeHalfCPolynomial* new_LagrangeHalfCPolynomial(const int32_t N) {$/;"	f	typeref:typename:EXPORT LagrangeHalfCPolynomial *
new_LagrangeHalfCPolynomial_array	src/libtfhe-superaic-core/polynomials.cpp	/^EXPORT LagrangeHalfCPolynomial* new_LagrangeHalfCPolynomial_array(int32_t nbelts, const int32_t /;"	f	typeref:typename:EXPORT LagrangeHalfCPolynomial *
new_LweBootstrappingKey	src/libtfhe-superaic-core/lwe-bootstrapping-functions.cpp	/^new_LweBootstrappingKey(const int32_t ks_t, const int32_t ks_basebit, const LweParams *in_out_pa/;"	f	typeref:typename:EXPORT LweBootstrappingKey *
new_LweBootstrappingKeyFFT	src/libtfhe-superaic-core/lwe-bootstrapping-functions-fft.cpp	/^EXPORT LweBootstrappingKeyFFT *new_LweBootstrappingKeyFFT(const LweBootstrappingKey *bk) {$/;"	f	typeref:typename:EXPORT LweBootstrappingKeyFFT *
new_LweBootstrappingKeyFFT	src/tests/io_test.cpp	/^           LweBootstrappingKeyFFT* new_LweBootstrappingKeyFFT(const LweBootstrappingKey*) { retu/;"	f	class:__anon2d72c1c60111::IOTest2	typeref:typename:LweBootstrappingKeyFFT *	file:
new_LweBootstrappingKeyFFT_array	src/libtfhe-superaic-core/lwe-bootstrapping-functions-fft.cpp	/^EXPORT LweBootstrappingKeyFFT *new_LweBootstrappingKeyFFT_array(int32_t nbelts, const LweBootstr/;"	f	typeref:typename:EXPORT LweBootstrappingKeyFFT *
new_LweBootstrappingKey_array	src/libtfhe-superaic-core/lwe-bootstrapping-functions.cpp	/^new_LweBootstrappingKey_array(int32_t nbelts, const int32_t ks_t, const int32_t ks_basebit, cons/;"	f	typeref:typename:EXPORT LweBootstrappingKey *
new_LweKeySwitchKey	src/libtfhe-superaic-core/lwe-keyswitch-functions.cpp	/^EXPORT LweKeySwitchKey* new_LweKeySwitchKey(int32_t n, int32_t t, int32_t basebit, const LwePara/;"	f	typeref:typename:EXPORT LweKeySwitchKey *
new_LweKeySwitchKey_array	src/libtfhe-superaic-core/lwe-keyswitch-functions.cpp	/^EXPORT LweKeySwitchKey* new_LweKeySwitchKey_array(int32_t nbelts, int32_t n, int32_t t, int32_t /;"	f	typeref:typename:EXPORT LweKeySwitchKey *
new_LweParams	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT LweParams* new_LweParams(int32_t n, int32_t plaintext_modulus, double alpha_min, double a/;"	f	typeref:typename:EXPORT LweParams *
new_LweParams_array	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT LweParams* new_LweParams_array(int32_t nbelts, int32_t n, int32_t plaintext_modulus, doub/;"	f	typeref:typename:EXPORT LweParams *
new_TGswKey	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT TGswKey* new_TGswKey(const TGswParams* params) {$/;"	f	typeref:typename:EXPORT TGswKey *
new_TGswKey_array	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT TGswKey* new_TGswKey_array(int32_t nbelts, const TGswParams* params) {$/;"	f	typeref:typename:EXPORT TGswKey *
new_TGswParams	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT TGswParams* new_TGswParams(int32_t l, int32_t Bgbit, const TLweParams* tlwe_params) {$/;"	f	typeref:typename:EXPORT TGswParams *
new_TGswParams_array	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT TGswParams* new_TGswParams_array(int32_t nbelts, int32_t l, int32_t Bgbit, const TLwePara/;"	f	typeref:typename:EXPORT TGswParams *
new_TLweParams	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT TLweParams* new_TLweParams(int32_t N, int32_t k, int32_t plaintext_modulus, double alpha_/;"	f	typeref:typename:EXPORT TLweParams *
new_TLweParams_array	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT TLweParams* new_TLweParams_array(int32_t nbelts, int32_t N, int32_t k, int32_t plaintext_/;"	f	typeref:typename:EXPORT TLweParams *
new_TextModeProperties_blank	src/libtfhe-superaic-core/tfhe_generic_streams.cpp	/^TextModeProperties *new_TextModeProperties_blank() {$/;"	f	typeref:typename:TextModeProperties *
new_TextModeProperties_fromIstream	src/libtfhe-superaic-core/tfhe_generic_streams.cpp	/^TextModeProperties *new_TextModeProperties_fromIstream(const Istream &F) {$/;"	f	typeref:typename:TextModeProperties *
new_TorusPolynomial	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT TorusPolynomial* new_TorusPolynomial(const int32_t N) {$/;"	f	typeref:typename:EXPORT TorusPolynomial *
new_TorusPolynomial_array	src/libtfhe-superaic-core/autogenerated.cpp	/^EXPORT TorusPolynomial* new_TorusPolynomial_array(int32_t nbelts, const int32_t N) {$/;"	f	typeref:typename:EXPORT TorusPolynomial *
new_column	src/muduo/examples/sudoku/sudoku.cc	/^    Column* new_column(int n = 0)$/;"	f	class:SudokuSolver	typeref:typename:Column *	file:
new_default_gate_bootstrapping_parameters	src/libtfhe-superaic-core/tfhe_gate_bootstrapping.cpp	/^EXPORT TFheGateBootstrappingParameterSet *new_default_gate_bootstrapping_parameters(int32_t mini/;"	f	typeref:typename:EXPORT TFheGateBootstrappingParameterSet *
new_gate_bootstrapping_ciphertext	src/libtfhe-superaic-core/tfhe_gate_bootstrapping.cpp	/^EXPORT LweSample *new_gate_bootstrapping_ciphertext(const TFheGateBootstrappingParameterSet *par/;"	f	typeref:typename:EXPORT LweSample *
new_gate_bootstrapping_ciphertext_array	src/libtfhe-superaic-core/tfhe_gate_bootstrapping.cpp	/^new_gate_bootstrapping_ciphertext_array(int32_t nbelems, const TFheGateBootstrappingParameterSet/;"	f	typeref:typename:EXPORT LweSample *
new_lweBootstrappingKey_fromFile	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT LweBootstrappingKey *new_lweBootstrappingKey_fromFile(FILE *F) {$/;"	f	typeref:typename:EXPORT LweBootstrappingKey *
new_lweBootstrappingKey_fromStream	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT LweBootstrappingKey *new_lweBootstrappingKey_fromStream(std::istream &F) {$/;"	f	typeref:typename:EXPORT LweBootstrappingKey *
new_lweKeySwitchKey_fromFile	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT LweKeySwitchKey *new_lweKeySwitchKey_fromFile(FILE *F) { return read_new_lweKeySwitchKey(/;"	f	typeref:typename:EXPORT LweKeySwitchKey *
new_lweKeySwitchKey_fromStream	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT LweKeySwitchKey *new_lweKeySwitchKey_fromStream(std::istream &F) {$/;"	f	typeref:typename:EXPORT LweKeySwitchKey *
new_lweKey_fromFile	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT LweKey *new_lweKey_fromFile(FILE *F) { return read_new_lweKey(to_Istream(F)); }$/;"	f	typeref:typename:EXPORT LweKey *
new_lweKey_fromStream	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT LweKey *new_lweKey_fromStream(std::istream &in) { return read_new_lweKey(to_Istream(in));/;"	f	typeref:typename:EXPORT LweKey *
new_lweParams_fromFile	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT LweParams *new_lweParams_fromFile(FILE *F) { return read_new_lweParams(to_Istream(F)); }$/;"	f	typeref:typename:EXPORT LweParams *
new_lweParams_fromStream	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT LweParams *new_lweParams_fromStream(std::istream &in) { return read_new_lweParams(to_Istr/;"	f	typeref:typename:EXPORT LweParams *
new_random_IntPolynomial	src/tests/tgsw_direct_test.cpp	/^    IntPolynomial *new_random_IntPolynomial(const int32_t N) {$/;"	f	namespace:__anon2d2168ad0111	typeref:typename:IntPolynomial *
new_random_IntPolynomial	src/tests/tgsw_test.cpp	/^    IntPolynomial *new_random_IntPolynomial(const int32_t N) {$/;"	f	namespace:__anonfeb37f530111	typeref:typename:IntPolynomial *
new_random_LweKey	src/tests/lwe_test.cpp	/^    const LweKey *new_random_LweKey(const LweParams *params) {$/;"	f	namespace:__anonc84148b60111	typeref:typename:const LweKey *
new_random_LweKey	src/tests/small_size_test.cpp	/^    LweKey *new_random_LweKey(const LweParams *params) {$/;"	f	namespace:__anon9baab4410111	typeref:typename:LweKey *
new_random_bk_key	src/tests/ACC_test.cpp	/^    LweBootstrappingKey* new_random_bk_key(int32_t ks_t, int32_t ks_basebit, const LweParams* in/;"	f	namespace:__anonef2481d50111	typeref:typename:LweBootstrappingKey *
new_random_bk_key	src/tests/FPGA_ACC_test.cpp	/^    LweBootstrappingKey* new_random_bk_key(int32_t ks_t, int32_t ks_basebit, const LweParams* in/;"	f	namespace:__anon88d438720111	typeref:typename:LweBootstrappingKey *
new_random_bk_key	src/tests/QEMU_test.cpp	/^    LweBootstrappingKey* new_random_bk_key(int32_t ks_t, int32_t ks_basebit, const LweParams* in/;"	f	namespace:__anon4f389dc60111	typeref:typename:LweBootstrappingKey *
new_random_bk_key	src/tests/io_test.cpp	/^    LweBootstrappingKey* new_random_bk_key(int32_t ks_t, int32_t ks_basebit, const LweParams* in/;"	f	namespace:__anon2d72c1c60111	typeref:typename:LweBootstrappingKey *
new_random_bk_key	src/tests/session_test.cpp	/^    LweBootstrappingKey* new_random_bk_key(int32_t ks_t, int32_t ks_basebit, const LweParams* in/;"	f	namespace:__anon23f859320111	typeref:typename:LweBootstrappingKey *
new_random_gate_bootstrapping_secret_keyset	src/libtfhe-superaic-core/tfhe_gate_bootstrapping.cpp	/^new_random_gate_bootstrapping_secret_keyset(const TFheGateBootstrappingParameterSet *params) {$/;"	f	typeref:typename:EXPORT TFheGateBootstrappingSecretKeySet *
new_random_key	src/tests/tgsw_direct_test.cpp	/^    const TGswKey *new_random_key(const TGswParams *params) {$/;"	f	namespace:__anon2d2168ad0111	typeref:typename:const TGswKey *
new_random_key	src/tests/tgsw_test.cpp	/^    const TGswKey *new_random_key(const TGswParams *params) {$/;"	f	namespace:__anonfeb37f530111	typeref:typename:const TGswKey *
new_random_key	src/tests/tlwe_test.cpp	/^    const TLweKey *new_random_key(const TLweParams *params) {$/;"	f	namespace:__anonc028f2ea0111	typeref:typename:const TLweKey *
new_random_ks_key	src/tests/io_test.cpp	/^    LweKeySwitchKey* new_random_ks_key(int32_t N, int32_t t, int32_t basebit, const LweParams* o/;"	f	namespace:__anon2d72c1c60111	typeref:typename:LweKeySwitchKey *
new_random_lwe_key	src/tests/ACC_test.cpp	/^    LweKey* new_random_lwe_key(const LweParams* params) {$/;"	f	namespace:__anonef2481d50111	typeref:typename:LweKey *
new_random_lwe_key	src/tests/FPGA_ACC_test.cpp	/^    LweKey* new_random_lwe_key(const LweParams* params) {$/;"	f	namespace:__anon88d438720111	typeref:typename:LweKey *
new_random_lwe_key	src/tests/QEMU_test.cpp	/^    LweKey* new_random_lwe_key(const LweParams* params) {$/;"	f	namespace:__anon4f389dc60111	typeref:typename:LweKey *
new_random_lwe_key	src/tests/io_test.cpp	/^    LweKey* new_random_lwe_key(const LweParams* params) {$/;"	f	namespace:__anon2d72c1c60111	typeref:typename:LweKey *
new_random_lwe_key	src/tests/session_test.cpp	/^    LweKey* new_random_lwe_key(const LweParams* params) {$/;"	f	namespace:__anon23f859320111	typeref:typename:LweKey *
new_random_lwe_key	src/tests/small_size_test.cpp	/^    const TLweKey *new_random_lwe_key(const TLweParams *params) {$/;"	f	namespace:__anon9baab4410111	typeref:typename:const TLweKey *
new_random_tgsw_key	src/tests/ACC_test.cpp	/^    TGswKey* new_random_tgsw_key(const TGswParams* params) {$/;"	f	namespace:__anonef2481d50111	typeref:typename:TGswKey *
new_random_tgsw_key	src/tests/FPGA_ACC_test.cpp	/^    TGswKey* new_random_tgsw_key(const TGswParams* params) {$/;"	f	namespace:__anon88d438720111	typeref:typename:TGswKey *
new_random_tgsw_key	src/tests/QEMU_test.cpp	/^    TGswKey* new_random_tgsw_key(const TGswParams* params) {$/;"	f	namespace:__anon4f389dc60111	typeref:typename:TGswKey *
new_random_tgsw_key	src/tests/io_test.cpp	/^    TGswKey* new_random_tgsw_key(const TGswParams* params) {$/;"	f	namespace:__anon2d72c1c60111	typeref:typename:TGswKey *
new_random_tgsw_key	src/tests/session_test.cpp	/^    TGswKey* new_random_tgsw_key(const TGswParams* params) {$/;"	f	namespace:__anon23f859320111	typeref:typename:TGswKey *
new_random_tlwe_key	src/tests/ACC_test.cpp	/^    TLweKey* new_random_tlwe_key(const TLweParams* params) {$/;"	f	namespace:__anonef2481d50111	typeref:typename:TLweKey *
new_random_tlwe_key	src/tests/FPGA_ACC_test.cpp	/^    TLweKey* new_random_tlwe_key(const TLweParams* params) {$/;"	f	namespace:__anon88d438720111	typeref:typename:TLweKey *
new_random_tlwe_key	src/tests/QEMU_test.cpp	/^    TLweKey* new_random_tlwe_key(const TLweParams* params) {$/;"	f	namespace:__anon4f389dc60111	typeref:typename:TLweKey *
new_random_tlwe_key	src/tests/io_test.cpp	/^    TLweKey* new_random_tlwe_key(const TLweParams* params) {$/;"	f	namespace:__anon2d72c1c60111	typeref:typename:TLweKey *
new_random_tlwe_key	src/tests/session_test.cpp	/^    TLweKey* new_random_tlwe_key(const TLweParams* params) {$/;"	f	namespace:__anon23f859320111	typeref:typename:TLweKey *
new_row	src/muduo/examples/sudoku/sudoku.cc	/^    Node* new_row(int col)$/;"	f	class:SudokuSolver	typeref:typename:Node *	file:
new_tGswParams_fromFile	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT TGswParams *new_tGswParams_fromFile(FILE *F) { return read_new_tGswParams(to_Istream(F));/;"	f	typeref:typename:EXPORT TGswParams *
new_tGswParams_fromStream	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT TGswParams *new_tGswParams_fromStream(std::istream &in) { return read_new_tGswParams(to_I/;"	f	typeref:typename:EXPORT TGswParams *
new_tLweParams_fromFile	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT TLweParams *new_tLweParams_fromFile(FILE *F) { return read_new_tLweParams(to_Istream(F));/;"	f	typeref:typename:EXPORT TLweParams *
new_tLweParams_fromStream	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT TLweParams *new_tLweParams_fromStream(std::istream &in) { return read_new_tLweParams(to_I/;"	f	typeref:typename:EXPORT TLweParams *
new_tfheGateBootstrappingCloudKeySet_fromFile	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT TFheGateBootstrappingCloudKeySet *new_tfheGateBootstrappingCloudKeySet_fromFile(FILE *F) /;"	f	typeref:typename:EXPORT TFheGateBootstrappingCloudKeySet *
new_tfheGateBootstrappingCloudKeySet_fromStream	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT TFheGateBootstrappingCloudKeySet *new_tfheGateBootstrappingCloudKeySet_fromStream(std::is/;"	f	typeref:typename:EXPORT TFheGateBootstrappingCloudKeySet *
new_tfheGateBootstrappingParameterSet_fromFile	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT TFheGateBootstrappingParameterSet *new_tfheGateBootstrappingParameterSet_fromFile(FILE *F/;"	f	typeref:typename:EXPORT TFheGateBootstrappingParameterSet *
new_tfheGateBootstrappingParameterSet_fromStream	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT TFheGateBootstrappingParameterSet *new_tfheGateBootstrappingParameterSet_fromStream(std::/;"	f	typeref:typename:EXPORT TFheGateBootstrappingParameterSet *
new_tfheGateBootstrappingSecretKeySet_fromFile	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT TFheGateBootstrappingSecretKeySet *new_tfheGateBootstrappingSecretKeySet_fromFile(FILE *F/;"	f	typeref:typename:EXPORT TFheGateBootstrappingSecretKeySet *
new_tfheGateBootstrappingSecretKeySet_fromStream	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT TFheGateBootstrappingSecretKeySet *new_tfheGateBootstrappingSecretKeySet_fromStream(std::/;"	f	typeref:typename:EXPORT TFheGateBootstrappingSecretKeySet *
new_tgswKey_fromFile	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT TGswKey *new_tgswKey_fromFile(FILE *F) { return read_new_tGswKey(to_Istream(F)); }$/;"	f	typeref:typename:EXPORT TGswKey *
new_tgswKey_fromStream	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT TGswKey *new_tgswKey_fromStream(std::istream &F) { return read_new_tGswKey(to_Istream(F))/;"	f	typeref:typename:EXPORT TGswKey *
new_tgsw_one_key	src/tests/small_size_test.cpp	/^        static TGswKey *new_tgsw_one_key(const TGswParams *params) {$/;"	f	class:__anon9baab4410111::TGswTest	typeref:typename:TGswKey *	file:
new_tgsw_zero_key	src/tests/small_size_test.cpp	/^        static TGswKey *new_tgsw_zero_key(const TGswParams *params) {$/;"	f	class:__anon9baab4410111::TGswTest	typeref:typename:TGswKey *	file:
new_tgsw_zero_key	src/tests/small_size_test.cpp	/^    TGswKey *new_tgsw_zero_key(const TGswParams *params) {$/;"	f	namespace:__anon9baab4410111	typeref:typename:TGswKey *
new_tlweKey_fromFile	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT TLweKey *new_tlweKey_fromFile(FILE *F) { return read_new_tLweKey(to_Istream(F)); }$/;"	f	typeref:typename:EXPORT TLweKey *
new_tlweKey_fromStream	src/libtfhe-superaic-core/tfhe_io.cpp	/^EXPORT TLweKey *new_tlweKey_fromStream(std::istream &F) { return read_new_tLweKey(to_Istream(F))/;"	f	typeref:typename:EXPORT TLweKey *
new_zero_tlwe_key	src/tests/small_size_test.cpp	/^    TLweKey *new_zero_tlwe_key(const TLweParams *params) {$/;"	f	namespace:__anon9baab4410111	typeref:typename:TLweKey *
next	src/muduo/muduo/net/inspect/ProcessInspector.cc	/^StringPiece next(StringPiece data)$/;"	f	namespace:muduo::inspect	typeref:typename:StringPiece
next	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def next(obj):$/;"	f
next	src/tests/googletest/googletest/samples/sample3-inl.h	/^  QueueNode* next() { return next_; }$/;"	f	class:QueueNode	typeref:typename:QueueNode *
next	src/tests/googletest/googletest/samples/sample3-inl.h	/^  const QueueNode* next() const { return next_; }$/;"	f	class:QueueNode	typeref:typename:const QueueNode *
nextConnId_	src/muduo/muduo/net/TcpClient.h	/^  int nextConnId_;$/;"	m	class:muduo::net::TcpClient	typeref:typename:int
nextConnId_	src/muduo/muduo/net/TcpServer.h	/^  int nextConnId_;$/;"	m	class:muduo::net::TcpServer	typeref:typename:int
nextId_	src/muduo/examples/protobuf/rpcbalancer/balancer.cc	/^  uint64_t nextId_;$/;"	m	class:BackendSession	typeref:typename:uint64_t	file:
nextId_	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^  uint64_t nextId_;$/;"	m	class:BackendSession	typeref:typename:uint64_t	file:
next_	src/muduo/muduo/net/EventLoopThreadPool.h	/^  int next_;$/;"	m	class:muduo::net::EventLoopThreadPool	typeref:typename:int
next_	src/tests/googletest/googletest/include/gtest/internal/gtest-linked_ptr.h	/^  mutable linked_ptr_internal const* next_;$/;"	m	class:testing::internal::linked_ptr_internal	typeref:typename:linked_ptr_internal const *
next_	src/tests/googletest/googletest/samples/sample3-inl.h	/^  QueueNode* next_;$/;"	m	class:QueueNode	typeref:typename:QueueNode *
nice	src/muduo/examples/procmon/procmon.cc	/^  long nice;$/;"	m	struct:StatData	typeref:typename:long	file:
nodelay	src/muduo/examples/ace/ttcp/common.h	/^  bool transmit, receive, nodelay;$/;"	m	struct:Options	typeref:typename:bool
nodes_	src/muduo/examples/sudoku/sudoku.cc	/^    Node    nodes_[kMaxNodes];$/;"	m	class:SudokuSolver	typeref:typename:Node[]	file:
noinst_LTLIBRARIES	src/tests/googletest/googletest/Makefile.am	/^noinst_LTLIBRARIES = samples\/libsamples.la$/;"	m
noncopyable	src/muduo/muduo/base/noncopyable.h	/^class noncopyable$/;"	c	namespace:muduo
nonfatally_failed	src/tests/googletest/googletest/include/gtest/gtest-test-part.h	/^  bool nonfatally_failed() const { return type_ == kNonFatalFailure; }$/;"	f	class:testing::TestPartResult	typeref:typename:bool
noreply_	src/muduo/examples/memcached/server/Session.h	/^  bool noreply_;$/;"	m	class:Session	typeref:typename:bool
notifications_	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^  SpawnThreadNotifications notifications_;$/;"	m	class:DeathTestAndMultiThreadsTest	typeref:typename:SpawnThreadNotifications	file:
notified_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  bool notified_;$/;"	m	class:testing::internal::Notification	typeref:typename:bool
notify	src/muduo/muduo/base/Condition.h	/^  void notify()$/;"	f	class:muduo::Condition	typeref:typename:void
notifyAll	src/muduo/muduo/base/Condition.h	/^  void notifyAll()$/;"	f	class:muduo::Condition	typeref:typename:void
now	src/muduo/muduo/base/Timestamp.cc	/^Timestamp Timestamp::now()$/;"	f	class:Timestamp	typeref:typename:Timestamp
nullTransport_	src/muduo/contrib/thrift/ThriftConnection.h	/^  boost::shared_ptr<TNullTransport> nullTransport_;$/;"	m	class:ThriftConnection	typeref:typename:boost::shared_ptr<TNullTransport>
num	src/tests/googletest/googletest/test/gtest-linked_ptr_test.cc	/^int num;$/;"	v	namespace:__anonf616d1f80111	typeref:typename:int
numActive	src/muduo/examples/pingpong/bench.cc	/^int numActive;$/;"	v	typeref:typename:int
numConnected_	src/muduo/examples/maxconnection/echo.h	/^  int numConnected_; \/\/ should be atomic_int$/;"	m	class:EchoServer	typeref:typename:int
numConnected_	src/muduo/examples/pingpong/client.cc	/^  AtomicInt32 numConnected_;$/;"	m	class:Client	typeref:typename:AtomicInt32	file:
numCreated	src/muduo/muduo/base/Thread.h	/^  static int numCreated() { return numCreated_.get(); }$/;"	f	class:muduo::Thread	typeref:typename:int
numCreated	src/muduo/muduo/net/Timer.h	/^  static int64_t numCreated() { return s_numCreated_.get(); }$/;"	f	class:muduo::net::Timer	typeref:typename:int64_t
numCreated_	src/muduo/muduo/base/Thread.cc	/^AtomicInt32 Thread::numCreated_;$/;"	m	class:muduo::Thread	typeref:typename:AtomicInt32
numCreated_	src/muduo/muduo/base/Thread.h	/^  static AtomicInt32 numCreated_;$/;"	m	class:muduo::Thread	typeref:typename:AtomicInt32
numPipes	src/muduo/examples/pingpong/bench.cc	/^int numPipes;$/;"	v	typeref:typename:int
numThreads	src/muduo/examples/netty/discard/server.cc	/^int numThreads = 0;$/;"	v	typeref:typename:int
numThreads	src/muduo/examples/netty/echo/server.cc	/^int numThreads = 0;$/;"	v	typeref:typename:int
numThreads	src/muduo/examples/netty/echo/server2.cc	/^int numThreads = 0;$/;"	v	typeref:typename:int
numThreads	src/muduo/muduo/base/ProcessInfo.cc	/^int ProcessInfo::numThreads()$/;"	f	class:ProcessInfo	typeref:typename:int
numThreads	src/muduo/muduo/net/tests/EchoClient_unittest.cc	/^int numThreads = 0;$/;"	v	typeref:typename:int
numThreads	src/muduo/muduo/net/tests/EchoServer_unittest.cc	/^int numThreads = 0;$/;"	v	typeref:typename:int
numThreads_	src/muduo/examples/multiplexer/multiplexer.cc	/^  int numThreads_;$/;"	m	class:MultiplexServer	typeref:typename:int	file:
numThreads_	src/muduo/examples/sudoku/server_hybrid.cc	/^  const int numThreads_;$/;"	m	class:SudokuServer	typeref:typename:const int	file:
numThreads_	src/muduo/examples/sudoku/server_multiloop.cc	/^  int numThreads_;$/;"	m	class:SudokuServer	typeref:typename:int	file:
numThreads_	src/muduo/examples/sudoku/server_prod.cc	/^  const int numThreads_;$/;"	m	class:SudokuServer	typeref:typename:const int	file:
numThreads_	src/muduo/examples/sudoku/server_threadpool.cc	/^  int numThreads_;$/;"	m	class:SudokuServer	typeref:typename:int	file:
numThreads_	src/muduo/muduo/net/EventLoopThreadPool.h	/^  int numThreads_;$/;"	m	class:muduo::net::EventLoopThreadPool	typeref:typename:int
numWorkerThreads_	src/muduo/contrib/thrift/ThriftServer.h	/^  int numWorkerThreads_;$/;"	m	class:ThriftServer	typeref:typename:int
numWrites	src/muduo/examples/pingpong/bench.cc	/^int numWrites;$/;"	v	typeref:typename:int
num_elements_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  size_t num_elements_;$/;"	m	class:testing::internal::MatchMatrix	typeref:typename:size_t
num_matchers_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  size_t num_matchers_;$/;"	m	class:testing::internal::MatchMatrix	typeref:typename:size_t
num_threads	src/muduo/examples/procmon/procmon.cc	/^  long num_threads;$/;"	m	struct:StatData	typeref:typename:long	file:
number	src/muduo/examples/ace/ttcp/common.h	/^  int number;$/;"	m	struct:Options	typeref:typename:int
number	src/muduo/examples/ace/ttcp/common.h	/^  int32_t number;$/;"	m	struct:SessionMessage	typeref:typename:int32_t
number_	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  int number_;$/;"	m	class:testing::gmock_matchers_test::ConvertibleToBool	typeref:typename:int	file:
numeric-functions.cpp.i	buildotests/libtfhe-superaic-core/Makefile	/^numeric-functions.cpp.i:$/;"	t
numeric-functions.cpp.o	buildotests/libtfhe-superaic-core/Makefile	/^numeric-functions.cpp.o:$/;"	t
numeric-functions.cpp.s	buildotests/libtfhe-superaic-core/Makefile	/^numeric-functions.cpp.s:$/;"	t
numeric-functions.i	buildotests/libtfhe-superaic-core/Makefile	/^numeric-functions.i: numeric-functions.cpp.i$/;"	t
numeric-functions.o	buildotests/libtfhe-superaic-core/Makefile	/^numeric-functions.o: numeric-functions.cpp.o$/;"	t
numeric-functions.s	buildotests/libtfhe-superaic-core/Makefile	/^numeric-functions.s: numeric-functions.cpp.s$/;"	t
obj_ptr_	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  Class* const obj_ptr_;$/;"	m	class:testing::internal::InvokeMethodWithoutArgsAction	typeref:typename:Class * const
obj_ptr_	src/tests/googletest/googlemock/include/gmock/gmock-more-actions.h	/^  Class* const obj_ptr_;$/;"	m	class:testing::internal::InvokeMethodAction	typeref:typename:Class * const
object_	src/muduo/muduo/base/WeakCallback.h	/^  std::weak_ptr<CLASS> object_;$/;"	m	class:muduo::WeakCallback	typeref:typename:std::weak_ptr<CLASS>
object_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    const Super& object_;$/;"	m	class:testing::internal::RefMatcher::Impl	typeref:typename:const Super &
object_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  T& object_;$/;"	m	class:testing::internal::RefMatcher	typeref:typename:T &
offset	src/libtfhe-superaic-core/include/tgsw.h	/^    uint32_t offset; \/\/\/< offset = Bg\/2 * (2^(32-Bgbit) + 2^(32-2*Bgbit) + ... + 2^(32-l*Bgb/;"	m	struct:TGswParams	typeref:typename:uint32_t
offset	src/muduo/muduo/base/GzipFile.h	/^  off_t offset() const { return ::gzoffset(file_); }$/;"	f	class:muduo::GzipFile	typeref:typename:off_t
oldCounter_	src/muduo/examples/multiplexer/multiplexer.cc	/^  int64_t oldCounter_;$/;"	m	class:MultiplexServer	typeref:typename:int64_t	file:
oldCounter_	src/muduo/examples/netty/discard/server.cc	/^  int64_t oldCounter_;$/;"	m	class:DiscardServer	typeref:typename:int64_t	file:
oldCounter_	src/muduo/examples/netty/echo/server.cc	/^  int64_t oldCounter_;$/;"	m	class:EchoServer	typeref:typename:int64_t	file:
old_factory_	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  DeathTestFactory* old_factory_;$/;"	m	class:testing::internal::ReplaceDeathTestFactory	typeref:typename:DeathTestFactory *	file:
old_fake_tfhe_bootstrap	src/tests/fakes/lwe-bootstrapping.h	/^    inline void old_fake_tfhe_bootstrap(LweSample *result,$/;"	f	namespace:__anon027fcd4e0111	typeref:typename:void
old_fake_tfhe_bootstrap_FFT	src/tests/fakes/lwe-bootstrapping-fft.h	/^    inline void old_fake_tfhe_bootstrap_FFT(LweSample *result,$/;"	f	namespace:__anonaae24d1b0111	typeref:typename:void
old_reporter_	src/tests/googletest/googletest/include/gtest/gtest-spi.h	/^  TestPartResultReporterInterface* old_reporter_;$/;"	m	class:testing::ScopedFakeTestPartResultReporter	typeref:typename:TestPartResultReporterInterface *
omegaxminus1	src/libtfhe-superaic-core/fft_processors/nayuki/lagrangehalfc_impl.h	/^    cplx* omegaxminus1;$/;"	m	class:FFT_Processor_nayuki	typeref:typename:cplx *
onAnswer	src/muduo/examples/protobuf/codec/client.cc	/^  void onAnswer(const muduo::net::TcpConnectionPtr&,$/;"	f	class:QueryClient	typeref:typename:void	file:
onAnswer	src/muduo/examples/protobuf/codec/dispatcher_lite_test.cc	/^void onAnswer(const muduo::net::TcpConnectionPtr&,$/;"	f	typeref:typename:void
onAnswer	src/muduo/examples/protobuf/codec/dispatcher_test.cc	/^void onAnswer(const muduo::net::TcpConnectionPtr&,$/;"	f	typeref:typename:void
onAnswer	src/muduo/examples/protobuf/codec/server.cc	/^  void onAnswer(const muduo::net::TcpConnectionPtr& conn,$/;"	f	class:QueryServer	typeref:typename:void	file:
onBackendConnection	src/muduo/examples/multiplexer/multiplexer.cc	/^  void onBackendConnection(const TcpConnectionPtr& conn)$/;"	f	class:MultiplexServer	typeref:typename:void	file:
onBackendConnection	src/muduo/examples/multiplexer/multiplexer_simple.cc	/^  void onBackendConnection(const TcpConnectionPtr& conn)$/;"	f	class:MultiplexServer	typeref:typename:void	file:
onBackendMessage	src/muduo/examples/multiplexer/multiplexer.cc	/^  void onBackendMessage(const TcpConnectionPtr& conn, Buffer* buf, Timestamp)$/;"	f	class:MultiplexServer	typeref:typename:void	file:
onBackendMessage	src/muduo/examples/multiplexer/multiplexer_simple.cc	/^  void onBackendMessage(const TcpConnectionPtr& conn, Buffer* buf, Timestamp)$/;"	f	class:MultiplexServer	typeref:typename:void	file:
onBeginRequest	src/muduo/examples/fastcgi/fastcgi.cc	/^bool FastCgiCodec::onBeginRequest(const RecordHeader& header, const Buffer* buf)$/;"	f	class:FastCgiCodec	typeref:typename:bool
onClientConnection	src/muduo/examples/multiplexer/multiplexer.cc	/^  void onClientConnection(const TcpConnectionPtr& conn)$/;"	f	class:MultiplexServer	typeref:typename:void	file:
onClientConnection	src/muduo/examples/multiplexer/multiplexer_simple.cc	/^  void onClientConnection(const TcpConnectionPtr& conn)$/;"	f	class:MultiplexServer	typeref:typename:void	file:
onClientConnection	src/muduo/examples/socks4a/tunnel.h	/^  void onClientConnection(const muduo::net::TcpConnectionPtr& conn)$/;"	f	class:Tunnel	typeref:typename:void
onClientMessage	src/muduo/examples/multiplexer/multiplexer.cc	/^  void onClientMessage(const TcpConnectionPtr& conn, Buffer* buf, Timestamp)$/;"	f	class:MultiplexServer	typeref:typename:void	file:
onClientMessage	src/muduo/examples/multiplexer/multiplexer_simple.cc	/^  void onClientMessage(const TcpConnectionPtr& conn, Buffer* buf, Timestamp)$/;"	f	class:MultiplexServer	typeref:typename:void	file:
onClientMessage	src/muduo/examples/socks4a/tunnel.h	/^  void onClientMessage(const muduo::net::TcpConnectionPtr& conn,$/;"	f	class:Tunnel	typeref:typename:void
onConnect	src/muduo/examples/pingpong/client.cc	/^  void onConnect()$/;"	f	class:Client	typeref:typename:void	file:
onConnection	src/muduo/contrib/thrift/ThriftServer.cc	/^void ThriftServer::onConnection(const TcpConnectionPtr& conn)$/;"	f	class:ThriftServer	typeref:typename:void
onConnection	src/muduo/examples/ace/logging/client.cc	/^  void onConnection(const TcpConnectionPtr& conn)$/;"	f	class:logging::LogClient	typeref:typename:void	file:
onConnection	src/muduo/examples/ace/logging/server.cc	/^  void onConnection(const TcpConnectionPtr& conn)$/;"	f	class:logging::LogServer	typeref:typename:void	file:
onConnection	src/muduo/examples/ace/ttcp/ttcp.cc	/^void onConnection(const Options& opt, const TcpConnectionPtr& conn)$/;"	f	namespace:trans	typeref:typename:void
onConnection	src/muduo/examples/ace/ttcp/ttcp.cc	/^void onConnection(const TcpConnectionPtr& conn)$/;"	f	namespace:receiving	typeref:typename:void
onConnection	src/muduo/examples/asio/chat/client.cc	/^  void onConnection(const TcpConnectionPtr& conn)$/;"	f	class:ChatClient	typeref:typename:void	file:
onConnection	src/muduo/examples/asio/chat/loadtest.cc	/^  void onConnection(const TcpConnectionPtr& conn)$/;"	f	class:ChatClient	typeref:typename:void	file:
onConnection	src/muduo/examples/asio/chat/server.cc	/^  void onConnection(const TcpConnectionPtr& conn)$/;"	f	class:ChatServer	typeref:typename:void	file:
onConnection	src/muduo/examples/asio/chat/server_threaded.cc	/^  void onConnection(const TcpConnectionPtr& conn)$/;"	f	class:ChatServer	typeref:typename:void	file:
onConnection	src/muduo/examples/asio/chat/server_threaded_efficient.cc	/^  void onConnection(const TcpConnectionPtr& conn)$/;"	f	class:ChatServer	typeref:typename:void	file:
onConnection	src/muduo/examples/asio/chat/server_threaded_highperformance.cc	/^  void onConnection(const TcpConnectionPtr& conn)$/;"	f	class:ChatServer	typeref:typename:void	file:
onConnection	src/muduo/examples/fastcgi/fastcgi_test.cc	/^void onConnection(const TcpConnectionPtr& conn)$/;"	f	typeref:typename:void
onConnection	src/muduo/examples/filetransfer/download.cc	/^void onConnection(const TcpConnectionPtr& conn)$/;"	f	typeref:typename:void
onConnection	src/muduo/examples/filetransfer/download2.cc	/^void onConnection(const TcpConnectionPtr& conn)$/;"	f	typeref:typename:void
onConnection	src/muduo/examples/filetransfer/download3.cc	/^void onConnection(const TcpConnectionPtr& conn)$/;"	f	typeref:typename:void
onConnection	src/muduo/examples/hub/hub.cc	/^  void onConnection(const TcpConnectionPtr& conn)$/;"	f	class:pubsub::PubSubServer	typeref:typename:void	file:
onConnection	src/muduo/examples/hub/pubsub.cc	/^void PubSubClient::onConnection(const TcpConnectionPtr& conn)$/;"	f	class:PubSubClient	typeref:typename:void
onConnection	src/muduo/examples/idleconnection/echo.cc	/^void EchoServer::onConnection(const TcpConnectionPtr& conn)$/;"	f	class:EchoServer	typeref:typename:void
onConnection	src/muduo/examples/idleconnection/sortedlist.cc	/^void EchoServer::onConnection(const TcpConnectionPtr& conn)$/;"	f	class:EchoServer	typeref:typename:void
onConnection	src/muduo/examples/maxconnection/echo.cc	/^void EchoServer::onConnection(const TcpConnectionPtr& conn)$/;"	f	class:EchoServer	typeref:typename:void
onConnection	src/muduo/examples/memcached/client/bench.cc	/^  void onConnection(const TcpConnectionPtr& conn)$/;"	f	class:Client	typeref:typename:void	file:
onConnection	src/muduo/examples/memcached/server/MemcacheServer.cc	/^void MemcacheServer::onConnection(const TcpConnectionPtr& conn)$/;"	f	class:MemcacheServer	typeref:typename:void
onConnection	src/muduo/examples/netty/discard/client.cc	/^  void onConnection(const TcpConnectionPtr& conn)$/;"	f	class:DiscardClient	typeref:typename:void	file:
onConnection	src/muduo/examples/netty/discard/server.cc	/^  void onConnection(const TcpConnectionPtr& conn)$/;"	f	class:DiscardServer	typeref:typename:void	file:
onConnection	src/muduo/examples/netty/echo/client.cc	/^  void onConnection(const TcpConnectionPtr& conn)$/;"	f	class:EchoClient	typeref:typename:void	file:
onConnection	src/muduo/examples/netty/echo/server.cc	/^  void onConnection(const TcpConnectionPtr& conn)$/;"	f	class:EchoServer	typeref:typename:void	file:
onConnection	src/muduo/examples/netty/echo/server2.cc	/^  void onConnection(const TcpConnectionPtr& conn)$/;"	f	class:EchoServer	typeref:typename:void	file:
onConnection	src/muduo/examples/netty/uptime/uptime.cc	/^  void onConnection(const TcpConnectionPtr& conn)$/;"	f	class:UptimeClient	typeref:typename:void	file:
onConnection	src/muduo/examples/pingpong/client.cc	/^void Session::onConnection(const TcpConnectionPtr& conn)$/;"	f	class:Session	typeref:typename:void
onConnection	src/muduo/examples/pingpong/server.cc	/^void onConnection(const TcpConnectionPtr& conn)$/;"	f	typeref:typename:void
onConnection	src/muduo/examples/protobuf/codec/client.cc	/^  void onConnection(const TcpConnectionPtr& conn)$/;"	f	class:QueryClient	typeref:typename:void	file:
onConnection	src/muduo/examples/protobuf/codec/server.cc	/^  void onConnection(const TcpConnectionPtr& conn)$/;"	f	class:QueryServer	typeref:typename:void	file:
onConnection	src/muduo/examples/protobuf/resolver/client.cc	/^  void onConnection(const TcpConnectionPtr& conn)$/;"	f	class:RpcClient	typeref:typename:void	file:
onConnection	src/muduo/examples/protobuf/rpc/client.cc	/^  void onConnection(const TcpConnectionPtr& conn)$/;"	f	class:RpcClient	typeref:typename:void	file:
onConnection	src/muduo/examples/protobuf/rpcbalancer/balancer.cc	/^  void onConnection(const TcpConnectionPtr& conn)$/;"	f	class:BackendSession	typeref:typename:void	file:
onConnection	src/muduo/examples/protobuf/rpcbalancer/balancer.cc	/^  void onConnection(const TcpConnectionPtr& conn)$/;"	f	class:Balancer	typeref:typename:void	file:
onConnection	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^  void onConnection(const TcpConnectionPtr& conn)$/;"	f	class:BackendSession	typeref:typename:void	file:
onConnection	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^  void onConnection(const TcpConnectionPtr& conn)$/;"	f	class:Balancer	typeref:typename:void	file:
onConnection	src/muduo/examples/protobuf/rpcbench/client.cc	/^  void onConnection(const TcpConnectionPtr& conn)$/;"	f	class:RpcClient	typeref:typename:void	file:
onConnection	src/muduo/examples/simple/chargen/chargen.cc	/^void ChargenServer::onConnection(const TcpConnectionPtr& conn)$/;"	f	class:ChargenServer	typeref:typename:void
onConnection	src/muduo/examples/simple/chargenclient/chargenclient.cc	/^  void onConnection(const TcpConnectionPtr& conn)$/;"	f	class:ChargenClient	typeref:typename:void	file:
onConnection	src/muduo/examples/simple/daytime/daytime.cc	/^void DaytimeServer::onConnection(const TcpConnectionPtr& conn)$/;"	f	class:DaytimeServer	typeref:typename:void
onConnection	src/muduo/examples/simple/discard/discard.cc	/^void DiscardServer::onConnection(const TcpConnectionPtr& conn)$/;"	f	class:DiscardServer	typeref:typename:void
onConnection	src/muduo/examples/simple/echo/echo.cc	/^void EchoServer::onConnection(const muduo::net::TcpConnectionPtr& conn)$/;"	f	class:EchoServer	typeref:typename:void
onConnection	src/muduo/examples/simple/time/time.cc	/^void TimeServer::onConnection(const muduo::net::TcpConnectionPtr& conn)$/;"	f	class:TimeServer	typeref:typename:void
onConnection	src/muduo/examples/simple/timeclient/timeclient.cc	/^  void onConnection(const TcpConnectionPtr& conn)$/;"	f	class:TimeClient	typeref:typename:void	file:
onConnection	src/muduo/examples/sudoku/batch.cc	/^  void onConnection(const TcpConnectionPtr& conn)$/;"	f	class:SudokuClient	typeref:typename:void	file:
onConnection	src/muduo/examples/sudoku/loadtest.cc	/^  void onConnection(const TcpConnectionPtr& conn)$/;"	f	class:SudokuClient	typeref:typename:void	file:
onConnection	src/muduo/examples/sudoku/pipeline.cc	/^  void onConnection(const TcpConnectionPtr& conn)$/;"	f	class:SudokuClient	typeref:typename:void	file:
onConnection	src/muduo/examples/sudoku/server_basic.cc	/^  void onConnection(const TcpConnectionPtr& conn)$/;"	f	class:SudokuServer	typeref:typename:void	file:
onConnection	src/muduo/examples/sudoku/server_hybrid.cc	/^  void onConnection(const TcpConnectionPtr& conn)$/;"	f	class:SudokuServer	typeref:typename:void	file:
onConnection	src/muduo/examples/sudoku/server_multiloop.cc	/^  void onConnection(const TcpConnectionPtr& conn)$/;"	f	class:SudokuServer	typeref:typename:void	file:
onConnection	src/muduo/examples/sudoku/server_prod.cc	/^  void onConnection(const TcpConnectionPtr& conn)$/;"	f	class:SudokuServer	typeref:typename:void	file:
onConnection	src/muduo/examples/sudoku/server_threadpool.cc	/^  void onConnection(const TcpConnectionPtr& conn)$/;"	f	class:SudokuServer	typeref:typename:void	file:
onConnection	src/muduo/examples/twisted/finger/finger03.cc	/^void onConnection(const TcpConnectionPtr& conn)$/;"	f	typeref:typename:void
onConnection	src/muduo/examples/wordcount/hasher.cc	/^  void onConnection(const TcpConnectionPtr& conn)$/;"	f	class:SendThrottler	typeref:typename:void	file:
onConnection	src/muduo/examples/wordcount/receiver.cc	/^  void onConnection(const TcpConnectionPtr& conn)$/;"	f	class:WordCountReceiver	typeref:typename:void	file:
onConnection	src/muduo/examples/zeromq/local_lat.cc	/^void onConnection(const muduo::net::TcpConnectionPtr& conn)$/;"	f	typeref:typename:void
onConnection	src/muduo/examples/zeromq/remote_lat.cc	/^void onConnection(LengthHeaderCodec* codec, const muduo::net::TcpConnectionPtr& conn)$/;"	f	typeref:typename:void
onConnection	src/muduo/muduo/net/http/HttpServer.cc	/^void HttpServer::onConnection(const TcpConnectionPtr& conn)$/;"	f	class:HttpServer	typeref:typename:void
onConnection	src/muduo/muduo/net/protorpc/RpcServer.cc	/^void RpcServer::onConnection(const TcpConnectionPtr& conn)$/;"	f	class:RpcServer	typeref:typename:void
onConnection	src/muduo/muduo/net/tests/EchoClient_unittest.cc	/^  void onConnection(const TcpConnectionPtr& conn)$/;"	f	class:EchoClient	typeref:typename:void	file:
onConnection	src/muduo/muduo/net/tests/EchoServer_unittest.cc	/^  void onConnection(const TcpConnectionPtr& conn)$/;"	f	class:EchoServer	typeref:typename:void	file:
onData	src/muduo/examples/curl/download.cc	/^  void onData(const char* data, int len)$/;"	f	class:Downloader	typeref:typename:void	file:
onData	src/muduo/examples/curl/download.cc	/^  void onData(const char* data, int len)$/;"	f	class:Piece	typeref:typename:void	file:
onData	src/muduo/examples/curl/mcurl.cc	/^void onData(const char* data, int len)$/;"	f	typeref:typename:void
onDisconnect	src/muduo/examples/pingpong/client.cc	/^  void onDisconnect(const TcpConnectionPtr& conn)$/;"	f	class:Client	typeref:typename:void	file:
onDone	src/muduo/examples/curl/download.cc	/^  void onDone(curl::Request* c, int code)$/;"	f	class:Piece	typeref:typename:void	file:
onDownloadDone	src/muduo/examples/curl/download.cc	/^  void onDownloadDone()$/;"	f	class:Downloader	typeref:typename:void	file:
onEmpty	src/muduo/examples/protobuf/codec/client.cc	/^  void onEmpty(const muduo::net::TcpConnectionPtr&,$/;"	f	class:QueryClient	typeref:typename:void	file:
onHeader	src/muduo/examples/curl/download.cc	/^  void onHeader(const char* data, int len)$/;"	f	class:Downloader	typeref:typename:void	file:
onHeaderDone	src/muduo/examples/curl/download.cc	/^  void onHeaderDone(curl::Request* c, int code)$/;"	f	class:Downloader	typeref:typename:void	file:
onHighWaterMark	src/muduo/examples/filetransfer/download.cc	/^void onHighWaterMark(const TcpConnectionPtr& conn, size_t len)$/;"	f	typeref:typename:void
onHighWaterMark	src/muduo/examples/filetransfer/download2.cc	/^void onHighWaterMark(const TcpConnectionPtr& conn, size_t len)$/;"	f	typeref:typename:void
onHighWaterMark	src/muduo/examples/filetransfer/download3.cc	/^void onHighWaterMark(const TcpConnectionPtr& conn, size_t len)$/;"	f	typeref:typename:void
onHighWaterMark	src/muduo/examples/socks4a/tunnel.h	/^  void onHighWaterMark(ServerClient which,$/;"	f	class:Tunnel	typeref:typename:void
onHighWaterMark	src/muduo/examples/wordcount/hasher.cc	/^  void onHighWaterMark()$/;"	f	class:SendThrottler	typeref:typename:void	file:
onHighWaterMarkWeak	src/muduo/examples/socks4a/tunnel.h	/^  static void onHighWaterMarkWeak(const std::weak_ptr<Tunnel>& wkTunnel,$/;"	f	class:Tunnel	typeref:typename:void
onMessage	src/muduo/contrib/thrift/ThriftConnection.cc	/^void ThriftConnection::onMessage(const TcpConnectionPtr& conn,$/;"	f	class:ThriftConnection	typeref:typename:void
onMessage	src/muduo/examples/ace/logging/client.cc	/^  void onMessage(const TcpConnectionPtr&,$/;"	f	class:logging::LogClient	typeref:typename:void	file:
onMessage	src/muduo/examples/ace/logging/server.cc	/^  void onMessage(const TcpConnectionPtr& conn,$/;"	f	class:logging::Session	typeref:typename:void	file:
onMessage	src/muduo/examples/ace/ttcp/ttcp.cc	/^void onMessage(const TcpConnectionPtr& conn, Buffer* buf, Timestamp time)$/;"	f	namespace:receiving	typeref:typename:void
onMessage	src/muduo/examples/ace/ttcp/ttcp.cc	/^void onMessage(const TcpConnectionPtr& conn, Buffer* buf, Timestamp time)$/;"	f	namespace:trans	typeref:typename:void
onMessage	src/muduo/examples/asio/chat/codec.h	/^  void onMessage(const muduo::net::TcpConnectionPtr& conn,$/;"	f	class:LengthHeaderCodec	typeref:typename:void
onMessage	src/muduo/examples/fastcgi/fastcgi.h	/^  void onMessage(const muduo::net::TcpConnectionPtr& conn,$/;"	f	class:FastCgiCodec	typeref:typename:void
onMessage	src/muduo/examples/hub/hub.cc	/^  void onMessage(const TcpConnectionPtr& conn,$/;"	f	class:pubsub::PubSubServer	typeref:typename:void	file:
onMessage	src/muduo/examples/hub/pubsub.cc	/^void PubSubClient::onMessage(const TcpConnectionPtr& conn,$/;"	f	class:PubSubClient	typeref:typename:void
onMessage	src/muduo/examples/idleconnection/echo.cc	/^void EchoServer::onMessage(const TcpConnectionPtr& conn,$/;"	f	class:EchoServer	typeref:typename:void
onMessage	src/muduo/examples/idleconnection/sortedlist.cc	/^void EchoServer::onMessage(const TcpConnectionPtr& conn,$/;"	f	class:EchoServer	typeref:typename:void
onMessage	src/muduo/examples/maxconnection/echo.cc	/^void EchoServer::onMessage(const TcpConnectionPtr& conn,$/;"	f	class:EchoServer	typeref:typename:void
onMessage	src/muduo/examples/memcached/client/bench.cc	/^  void onMessage(const TcpConnectionPtr& conn,$/;"	f	class:Client	typeref:typename:void	file:
onMessage	src/muduo/examples/memcached/server/Session.cc	/^void Session::onMessage(const muduo::net::TcpConnectionPtr& conn,$/;"	f	class:Session	typeref:typename:void
onMessage	src/muduo/examples/netty/discard/client.cc	/^  void onMessage(const TcpConnectionPtr& conn, Buffer* buf, Timestamp time)$/;"	f	class:DiscardClient	typeref:typename:void	file:
onMessage	src/muduo/examples/netty/discard/server.cc	/^  void onMessage(const TcpConnectionPtr& conn, Buffer* buf, Timestamp)$/;"	f	class:DiscardServer	typeref:typename:void	file:
onMessage	src/muduo/examples/netty/echo/client.cc	/^  void onMessage(const TcpConnectionPtr& conn, Buffer* buf, Timestamp time)$/;"	f	class:EchoClient	typeref:typename:void	file:
onMessage	src/muduo/examples/netty/echo/server.cc	/^  void onMessage(const TcpConnectionPtr& conn, Buffer* buf, Timestamp)$/;"	f	class:EchoServer	typeref:typename:void	file:
onMessage	src/muduo/examples/netty/echo/server2.cc	/^  void onMessage(const TcpConnectionPtr& conn, Buffer* buf, Timestamp)$/;"	f	class:EchoServer	typeref:typename:void	file:
onMessage	src/muduo/examples/netty/uptime/uptime.cc	/^  void onMessage(const TcpConnectionPtr& conn, Buffer* buf, Timestamp time)$/;"	f	class:UptimeClient	typeref:typename:void	file:
onMessage	src/muduo/examples/pingpong/client.cc	/^  void onMessage(const TcpConnectionPtr& conn, Buffer* buf, Timestamp)$/;"	f	class:Session	typeref:typename:void	file:
onMessage	src/muduo/examples/pingpong/server.cc	/^void onMessage(const TcpConnectionPtr& conn, Buffer* buf, Timestamp)$/;"	f	typeref:typename:void
onMessage	src/muduo/examples/protobuf/codec/codec.cc	/^void ProtobufCodec::onMessage(const TcpConnectionPtr& conn,$/;"	f	class:ProtobufCodec	typeref:typename:void
onMessage	src/muduo/examples/protobuf/codec/codec_test.cc	/^void onMessage(const muduo::net::TcpConnectionPtr& conn,$/;"	f	typeref:typename:void
onMessage	src/muduo/examples/protobuf/codec/dispatcher.h	/^  void onMessage(const muduo::net::TcpConnectionPtr& conn,$/;"	f	class:CallbackT	typeref:typename:void
onMessage	src/muduo/examples/simple/chargen/chargen.cc	/^void ChargenServer::onMessage(const TcpConnectionPtr& conn,$/;"	f	class:ChargenServer	typeref:typename:void
onMessage	src/muduo/examples/simple/chargenclient/chargenclient.cc	/^  void onMessage(const TcpConnectionPtr& conn, Buffer* buf, Timestamp receiveTime)$/;"	f	class:ChargenClient	typeref:typename:void	file:
onMessage	src/muduo/examples/simple/daytime/daytime.cc	/^void DaytimeServer::onMessage(const TcpConnectionPtr& conn,$/;"	f	class:DaytimeServer	typeref:typename:void
onMessage	src/muduo/examples/simple/discard/discard.cc	/^void DiscardServer::onMessage(const TcpConnectionPtr& conn,$/;"	f	class:DiscardServer	typeref:typename:void
onMessage	src/muduo/examples/simple/echo/echo.cc	/^void EchoServer::onMessage(const muduo::net::TcpConnectionPtr& conn,$/;"	f	class:EchoServer	typeref:typename:void
onMessage	src/muduo/examples/simple/time/time.cc	/^void TimeServer::onMessage(const muduo::net::TcpConnectionPtr& conn,$/;"	f	class:TimeServer	typeref:typename:void
onMessage	src/muduo/examples/simple/timeclient/timeclient.cc	/^  void onMessage(const TcpConnectionPtr& conn, Buffer* buf, Timestamp receiveTime)$/;"	f	class:TimeClient	typeref:typename:void	file:
onMessage	src/muduo/examples/sudoku/batch.cc	/^  void onMessage(const TcpConnectionPtr& conn, Buffer* buf, Timestamp)$/;"	f	class:SudokuClient	typeref:typename:void	file:
onMessage	src/muduo/examples/sudoku/loadtest.cc	/^  void onMessage(const TcpConnectionPtr& conn, Buffer* buf, Timestamp recvTime)$/;"	f	class:SudokuClient	typeref:typename:void	file:
onMessage	src/muduo/examples/sudoku/pipeline.cc	/^  void onMessage(const TcpConnectionPtr& conn, Buffer* buf, Timestamp recvTime)$/;"	f	class:SudokuClient	typeref:typename:void	file:
onMessage	src/muduo/examples/sudoku/server_basic.cc	/^  void onMessage(const TcpConnectionPtr& conn, Buffer* buf, Timestamp)$/;"	f	class:SudokuServer	typeref:typename:void	file:
onMessage	src/muduo/examples/sudoku/server_hybrid.cc	/^  void onMessage(const TcpConnectionPtr& conn, Buffer* buf, Timestamp receiveTime)$/;"	f	class:SudokuServer	typeref:typename:void	file:
onMessage	src/muduo/examples/sudoku/server_multiloop.cc	/^  void onMessage(const TcpConnectionPtr& conn, Buffer* buf, Timestamp)$/;"	f	class:SudokuServer	typeref:typename:void	file:
onMessage	src/muduo/examples/sudoku/server_prod.cc	/^  void onMessage(const TcpConnectionPtr& conn, Buffer* buf, Timestamp receiveTime)$/;"	f	class:SudokuServer	typeref:typename:void	file:
onMessage	src/muduo/examples/sudoku/server_threadpool.cc	/^  void onMessage(const TcpConnectionPtr& conn, Buffer* buf, Timestamp)$/;"	f	class:SudokuServer	typeref:typename:void	file:
onMessage	src/muduo/examples/twisted/finger/finger04.cc	/^void onMessage(const TcpConnectionPtr& conn,$/;"	f	typeref:typename:void
onMessage	src/muduo/examples/twisted/finger/finger05.cc	/^void onMessage(const TcpConnectionPtr& conn,$/;"	f	typeref:typename:void
onMessage	src/muduo/examples/twisted/finger/finger06.cc	/^void onMessage(const TcpConnectionPtr& conn,$/;"	f	typeref:typename:void
onMessage	src/muduo/examples/twisted/finger/finger07.cc	/^void onMessage(const TcpConnectionPtr& conn,$/;"	f	typeref:typename:void
onMessage	src/muduo/examples/wordcount/receiver.cc	/^  void onMessage(const TcpConnectionPtr& conn, Buffer* buf, Timestamp)$/;"	f	class:WordCountReceiver	typeref:typename:void	file:
onMessage	src/muduo/muduo/net/http/HttpServer.cc	/^void HttpServer::onMessage(const TcpConnectionPtr& conn,$/;"	f	class:HttpServer	typeref:typename:void
onMessage	src/muduo/muduo/net/protobuf/ProtobufCodecLite.cc	/^void ProtobufCodecLite::onMessage(const TcpConnectionPtr& conn,$/;"	f	class:ProtobufCodecLite	typeref:typename:void
onMessage	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^  void onMessage(const TcpConnectionPtr& conn,$/;"	f	class:muduo::net::ProtobufCodecLiteT	typeref:typename:void
onMessage	src/muduo/muduo/net/protorpc/RpcChannel.cc	/^void RpcChannel::onMessage(const TcpConnectionPtr& conn,$/;"	f	class:RpcChannel	typeref:typename:void
onMessage	src/muduo/muduo/net/tests/EchoClient_unittest.cc	/^  void onMessage(const TcpConnectionPtr& conn, Buffer* buf, Timestamp time)$/;"	f	class:EchoClient	typeref:typename:void	file:
onMessage	src/muduo/muduo/net/tests/EchoServer_unittest.cc	/^  void onMessage(const TcpConnectionPtr& conn, Buffer* buf, Timestamp time)$/;"	f	class:EchoServer	typeref:typename:void	file:
onMessageT	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^  bool onMessageT(const TcpConnectionPtr& conn, MSG& msg)$/;"	f	class:Balancer	typeref:typename:bool	file:
onMessageT	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^  void onMessageT(MSG& msg)$/;"	f	class:BackendSession	typeref:typename:void	file:
onParams	src/muduo/examples/fastcgi/fastcgi.cc	/^bool FastCgiCodec::onParams(const char* content, uint16_t length)$/;"	f	class:FastCgiCodec	typeref:typename:bool
onProtobufMessage	src/muduo/examples/protobuf/codec/dispatcher.h	/^  void onProtobufMessage(const muduo::net::TcpConnectionPtr& conn,$/;"	f	class:ProtobufDispatcher	typeref:typename:void
onProtobufMessage	src/muduo/examples/protobuf/codec/dispatcher_lite.h	/^  void onProtobufMessage(const muduo::net::TcpConnectionPtr& conn,$/;"	f	class:ProtobufDispatcherLite	typeref:typename:void
onQuery	src/muduo/examples/protobuf/codec/dispatcher_lite_test.cc	/^void onQuery(const muduo::net::TcpConnectionPtr&,$/;"	f	typeref:typename:void
onQuery	src/muduo/examples/protobuf/codec/dispatcher_test.cc	/^void onQuery(const muduo::net::TcpConnectionPtr&,$/;"	f	typeref:typename:void
onQuery	src/muduo/examples/protobuf/codec/server.cc	/^  void onQuery(const muduo::net::TcpConnectionPtr& conn,$/;"	f	class:QueryServer	typeref:typename:void	file:
onQueryResult	src/muduo/examples/cdns/Resolver.cc	/^void Resolver::onQueryResult(int status, struct hostent* result, const Callback& callback)$/;"	f	class:Resolver	typeref:typename:void
onRawMessage	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^  bool onRawMessage(const TcpConnectionPtr& conn,$/;"	f	class:Balancer	typeref:typename:bool	file:
onRawMessage	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^  bool onRawMessage(const TcpConnectionPtr&,$/;"	f	class:BackendSession	typeref:typename:bool	file:
onRead	src/muduo/examples/cdns/Resolver.cc	/^void Resolver::onRead(int sockfd, Timestamp t)$/;"	f	class:Resolver	typeref:typename:void
onRead	src/muduo/examples/curl/Curl.cc	/^void Curl::onRead(int fd)$/;"	f	class:Curl	typeref:typename:void
onRequest	src/muduo/examples/fastcgi/fastcgi_test.cc	/^void onRequest(const TcpConnectionPtr& conn,$/;"	f	typeref:typename:void
onRequest	src/muduo/examples/procmon/procmon.cc	/^  void onRequest(const HttpRequest& req, HttpResponse* resp)$/;"	f	class:Procmon	typeref:typename:void	file:
onRequest	src/muduo/examples/shorturl/shorturl.cc	/^void onRequest(const HttpRequest& req, HttpResponse* resp)$/;"	f	typeref:typename:void
onRequest	src/muduo/muduo/net/http/HttpServer.cc	/^void HttpServer::onRequest(const TcpConnectionPtr& conn, const HttpRequest& req)$/;"	f	class:HttpServer	typeref:typename:void
onRequest	src/muduo/muduo/net/http/tests/HttpServer_test.cc	/^void onRequest(const HttpRequest& req, HttpResponse* resp)$/;"	f	typeref:typename:void
onRequest	src/muduo/muduo/net/inspect/Inspector.cc	/^void Inspector::onRequest(const HttpRequest& req, HttpResponse* resp)$/;"	f	class:Inspector	typeref:typename:void
onRpcMessage	src/muduo/examples/protobuf/rpcbalancer/balancer.cc	/^  void onRpcMessage(const TcpConnectionPtr& conn,$/;"	f	class:Balancer	typeref:typename:void	file:
onRpcMessage	src/muduo/examples/protobuf/rpcbalancer/balancer.cc	/^  void onRpcMessage(const TcpConnectionPtr&,$/;"	f	class:BackendSession	typeref:typename:void	file:
onRpcMessage	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^  void onRpcMessage(const TcpConnectionPtr& conn,$/;"	f	class:Balancer	typeref:typename:void	file:
onRpcMessage	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^  void onRpcMessage(const TcpConnectionPtr&,$/;"	f	class:BackendSession	typeref:typename:void	file:
onRpcMessage	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^  void onRpcMessage(const TcpConnectionPtr& conn,$/;"	f	class:muduo::net::ProtobufCodecLiteT	typeref:typename:void
onRpcMessage	src/muduo/muduo/net/protorpc/RpcChannel.cc	/^void RpcChannel::onRpcMessage(const TcpConnectionPtr& conn,$/;"	f	class:RpcChannel	typeref:typename:void
onServerConnection	src/muduo/examples/multiplexer/demux.cc	/^  void onServerConnection(const TcpConnectionPtr& conn)$/;"	f	class:DemuxServer	typeref:typename:void	file:
onServerConnection	src/muduo/examples/socks4a/balancer.cc	/^void onServerConnection(const TcpConnectionPtr& conn)$/;"	f	typeref:typename:void
onServerConnection	src/muduo/examples/socks4a/socks4a.cc	/^void onServerConnection(const TcpConnectionPtr& conn)$/;"	f	typeref:typename:void
onServerConnection	src/muduo/examples/socks4a/tcprelay.cc	/^void onServerConnection(const TcpConnectionPtr& conn)$/;"	f	typeref:typename:void
onServerMessage	src/muduo/examples/multiplexer/demux.cc	/^  void onServerMessage(const TcpConnectionPtr& conn, Buffer* buf, Timestamp)$/;"	f	class:DemuxServer	typeref:typename:void	file:
onServerMessage	src/muduo/examples/socks4a/balancer.cc	/^void onServerMessage(const TcpConnectionPtr& conn, Buffer* buf, Timestamp)$/;"	f	typeref:typename:void
onServerMessage	src/muduo/examples/socks4a/socks4a.cc	/^void onServerMessage(const TcpConnectionPtr& conn, Buffer* buf, Timestamp)$/;"	f	typeref:typename:void
onServerMessage	src/muduo/examples/socks4a/tcprelay.cc	/^void onServerMessage(const TcpConnectionPtr& conn, Buffer* buf, Timestamp)$/;"	f	typeref:typename:void
onSockCreate	src/muduo/examples/cdns/Resolver.cc	/^void Resolver::onSockCreate(int sockfd, int type)$/;"	f	class:Resolver	typeref:typename:void
onSockStateChange	src/muduo/examples/cdns/Resolver.cc	/^void Resolver::onSockStateChange(int sockfd, bool read, bool write)$/;"	f	class:Resolver	typeref:typename:void
onSocksConnection	src/muduo/examples/multiplexer/demux.cc	/^  void onSocksConnection(int connId, const TcpConnectionPtr& conn)$/;"	f	class:DemuxServer	typeref:typename:void	file:
onSocksMessage	src/muduo/examples/multiplexer/demux.cc	/^  void onSocksMessage(int connId, const TcpConnectionPtr& conn, Buffer* buf, Timestamp)$/;"	f	class:DemuxServer	typeref:typename:void	file:
onStdin	src/muduo/examples/fastcgi/fastcgi.cc	/^void FastCgiCodec::onStdin(const char* content, uint16_t length)$/;"	f	class:FastCgiCodec	typeref:typename:void
onStringMessage	src/muduo/examples/asio/chat/client.cc	/^  void onStringMessage(const TcpConnectionPtr&,$/;"	f	class:ChatClient	typeref:typename:void	file:
onStringMessage	src/muduo/examples/asio/chat/loadtest.cc	/^  void onStringMessage(const TcpConnectionPtr&,$/;"	f	class:ChatClient	typeref:typename:void	file:
onStringMessage	src/muduo/examples/asio/chat/server.cc	/^  void onStringMessage(const TcpConnectionPtr&,$/;"	f	class:ChatServer	typeref:typename:void	file:
onStringMessage	src/muduo/examples/asio/chat/server_threaded.cc	/^  void onStringMessage(const TcpConnectionPtr&,$/;"	f	class:ChatServer	typeref:typename:void	file:
onStringMessage	src/muduo/examples/asio/chat/server_threaded_efficient.cc	/^  void onStringMessage(const TcpConnectionPtr&,$/;"	f	class:ChatServer	typeref:typename:void	file:
onStringMessage	src/muduo/examples/asio/chat/server_threaded_highperformance.cc	/^  void onStringMessage(const TcpConnectionPtr&,$/;"	f	class:ChatServer	typeref:typename:void	file:
onStringMessage	src/muduo/examples/zeromq/local_lat.cc	/^void onStringMessage(LengthHeaderCodec* codec,$/;"	f	typeref:typename:void
onStringMessage	src/muduo/examples/zeromq/remote_lat.cc	/^void onStringMessage(LengthHeaderCodec* codec,$/;"	f	typeref:typename:void
onTimer	src/muduo/examples/cdns/Resolver.cc	/^void Resolver::onTimer()$/;"	f	class:Resolver	typeref:typename:void
onTimer	src/muduo/examples/curl/Curl.cc	/^void Curl::onTimer()$/;"	f	class:Curl	typeref:typename:void
onTimer	src/muduo/examples/idleconnection/echo.cc	/^void EchoServer::onTimer()$/;"	f	class:EchoServer	typeref:typename:void
onTimer	src/muduo/examples/idleconnection/sortedlist.cc	/^void EchoServer::onTimer()$/;"	f	class:EchoServer	typeref:typename:void
onUnknownMessage	src/muduo/examples/protobuf/codec/client.cc	/^  void onUnknownMessage(const TcpConnectionPtr&,$/;"	f	class:QueryClient	typeref:typename:void	file:
onUnknownMessage	src/muduo/examples/protobuf/codec/server.cc	/^  void onUnknownMessage(const TcpConnectionPtr& conn,$/;"	f	class:QueryServer	typeref:typename:void	file:
onUnknownMessageType	src/muduo/examples/protobuf/codec/dispatcher_lite_test.cc	/^void onUnknownMessageType(const muduo::net::TcpConnectionPtr&,$/;"	f	typeref:typename:void
onUnknownMessageType	src/muduo/examples/protobuf/codec/dispatcher_test.cc	/^void onUnknownMessageType(const muduo::net::TcpConnectionPtr&,$/;"	f	typeref:typename:void
onWrite	src/muduo/examples/curl/Curl.cc	/^void Curl::onWrite(int fd)$/;"	f	class:Curl	typeref:typename:void
onWriteComplete	src/muduo/examples/filetransfer/download2.cc	/^void onWriteComplete(const TcpConnectionPtr& conn)$/;"	f	typeref:typename:void
onWriteComplete	src/muduo/examples/filetransfer/download3.cc	/^void onWriteComplete(const TcpConnectionPtr& conn)$/;"	f	typeref:typename:void
onWriteComplete	src/muduo/examples/netty/discard/client.cc	/^  void onWriteComplete(const TcpConnectionPtr& conn)$/;"	f	class:DiscardClient	typeref:typename:void	file:
onWriteComplete	src/muduo/examples/simple/chargen/chargen.cc	/^void ChargenServer::onWriteComplete(const TcpConnectionPtr& conn)$/;"	f	class:ChargenServer	typeref:typename:void
onWriteComplete	src/muduo/examples/socks4a/tunnel.h	/^  void onWriteComplete(ServerClient which, const muduo::net::TcpConnectionPtr& conn)$/;"	f	class:Tunnel	typeref:typename:void
onWriteComplete	src/muduo/examples/wordcount/hasher.cc	/^  void onWriteComplete()$/;"	f	class:SendThrottler	typeref:typename:void	file:
onWriteCompleteWeak	src/muduo/examples/socks4a/tunnel.h	/^  static void onWriteCompleteWeak(const std::weak_ptr<Tunnel>& wkTunnel,$/;"	f	class:Tunnel	typeref:typename:void
on_start_counter_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  int* on_start_counter_;$/;"	m	class:TestListener	typeref:typename:int *	file:
on_the_fly_impl_	src/tests/googletest/googletest/samples/sample8_unittest.cc	/^  OnTheFlyPrimeTable* on_the_fly_impl_;$/;"	m	class:HybridPrimeTable	typeref:typename:OnTheFlyPrimeTable *	file:
one_bits_	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  const Bits one_bits_;  \/\/ The bits that represent 1.0.$/;"	m	class:testing::gmock_matchers_test::FloatingPointTest	typeref:typename:const Bits	file:
op_	src/muduo/examples/memcached/client/bench.cc	/^  const Operation op_;$/;"	m	class:Client	typeref:typename:const Operation	file:
openForAppend	src/muduo/muduo/base/GzipFile.h	/^  static GzipFile openForAppend(StringArg filename)$/;"	f	class:muduo::GzipFile	typeref:typename:GzipFile
openForRead	src/muduo/muduo/base/GzipFile.h	/^  static GzipFile openForRead(StringArg filename)$/;"	f	class:muduo::GzipFile	typeref:typename:GzipFile
openForWriteExclusive	src/muduo/muduo/base/GzipFile.h	/^  static GzipFile openForWriteExclusive(StringArg filename)$/;"	f	class:muduo::GzipFile	typeref:typename:GzipFile
openForWriteTruncate	src/muduo/muduo/base/GzipFile.h	/^  static GzipFile openForWriteTruncate(StringArg filename)$/;"	f	class:muduo::GzipFile	typeref:typename:GzipFile
openedFiles	src/muduo/muduo/base/ProcessInfo.cc	/^int ProcessInfo::openedFiles()$/;"	f	class:ProcessInfo	typeref:typename:int
openedFiles	src/muduo/muduo/net/inspect/ProcessInspector.cc	/^string ProcessInspector::openedFiles(HttpRequest::Method, const Inspector::ArgList&)$/;"	f	class:ProcessInspector	typeref:typename:string
opening_string	src/tests/googletest/googletest/xcode/Scripts/versiongenerate.py	/^opening_string = config_file.read(buffer_size)$/;"	v
operationToString	src/muduo/muduo/net/poller/EPollPoller.cc	/^const char* EPollPoller::operationToString(int op)$/;"	f	class:EPollPoller	typeref:typename:const char *
operator !	src/tests/googletest/googletest/src/gtest.cc	/^AssertionResult AssertionResult::operator!() const {$/;"	f	class:testing::AssertionResult	typeref:typename:AssertionResult
operator !=	src/muduo/muduo/base/StringPiece.h	/^  bool operator!=(const StringPiece& x) const {$/;"	f	class:muduo::StringPiece	typeref:typename:bool
operator !=	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  bool operator!=(const Expectation& rhs) const { return !(*this == rhs); }$/;"	f	class:testing::Expectation	typeref:typename:bool
operator !=	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  bool operator!=(const ExpectationSet& rhs) const { return !(*this == rhs); }$/;"	f	class:testing::ExpectationSet	typeref:typename:bool
operator !=	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^    friend bool operator!=(const ConstIter& a, const ConstIter& b) {$/;"	f	class:testing::gmock_matchers_test::Streamlike	typeref:typename:bool	file:
operator !=	src/tests/googletest/googletest/include/gtest/internal/gtest-linked_ptr.h	/^  bool operator!=(T* p) const { return value_ != p; }$/;"	f	class:testing::internal::linked_ptr	typeref:typename:bool
operator !=	src/tests/googletest/googletest/include/gtest/internal/gtest-linked_ptr.h	/^  bool operator!=(linked_ptr<U> const& ptr) const {$/;"	f	class:testing::internal::linked_ptr	typeref:typename:bool
operator !=	src/tests/googletest/googletest/include/gtest/internal/gtest-linked_ptr.h	/^bool operator!=(T* ptr, const linked_ptr<T>& x) {$/;"	f	namespace:testing::internal	typeref:typename:bool
operator !=	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  bool operator!=(const ParamIterator& other) const {$/;"	f	class:testing::internal::ParamIterator	typeref:typename:bool
operator !=	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  bool operator!=(const UnprintableChar& rhs) const {$/;"	f	class:__anonf780395f0311::UnprintableChar	typeref:typename:bool	file:
operator ()	src/muduo/examples/memcached/server/MemcacheServer.h	/^    bool operator()(const ConstItemPtr& x, const ConstItemPtr& y) const$/;"	f	struct:MemcacheServer::Equal	typeref:typename:bool
operator ()	src/muduo/examples/memcached/server/MemcacheServer.h	/^    size_t operator()(const ConstItemPtr& x) const$/;"	f	struct:MemcacheServer::Hash	typeref:typename:size_t
operator ()	src/muduo/examples/memcached/server/Session.cc	/^bool Session::SpaceSeparator::operator()(InputIterator& next, InputIterator end, Token& tok)$/;"	f	class:Session::SpaceSeparator	typeref:typename:bool
operator ()	src/muduo/muduo/base/TimeZone.cc	/^    bool operator()(const Transition& lhs, const Transition& rhs) const$/;"	f	struct:TimeZone::Data::CompareLocalTime	typeref:typename:bool	file:
operator ()	src/muduo/muduo/base/TimeZone.cc	/^    bool operator()(const Transition& lhs, const Transition& rhs) const$/;"	f	struct:TimeZone::Data::CompareUtcTime	typeref:typename:bool	file:
operator ()	src/muduo/muduo/base/WeakCallback.h	/^  void operator()(ARGS&&... args) const$/;"	f	class:muduo::WeakCallback	typeref:typename:void
operator ()	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  AssertionResult operator()(const char* value_text, const T& x) const {$/;"	f	class:testing::internal::PredicateFormatterFromMatcher	typeref:typename:AssertionResult
operator ()	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  Matcher<Target> operator()(const Arg& a) const {$/;"	f	struct:testing::internal::CastAndAppendTransform	typeref:typename:Matcher<Target>
operator ()	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  bool operator()(const A& a, const B& b) const { return a != b; }$/;"	f	struct:testing::internal::AnyNe	typeref:typename:bool
operator ()	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  bool operator()(const A& a, const B& b) const { return a < b; }$/;"	f	struct:testing::internal::AnyLt	typeref:typename:bool
operator ()	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  bool operator()(const A& a, const B& b) const { return a <= b; }$/;"	f	struct:testing::internal::AnyLe	typeref:typename:bool
operator ()	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  bool operator()(const A& a, const B& b) const { return a == b; }$/;"	f	struct:testing::internal::AnyEq	typeref:typename:bool
operator ()	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  bool operator()(const A& a, const B& b) const { return a > b; }$/;"	f	struct:testing::internal::AnyGt	typeref:typename:bool
operator ()	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  bool operator()(const A& a, const B& b) const { return a >= b; }$/;"	f	struct:testing::internal::AnyGe	typeref:typename:bool
operator ()	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  bool operator()(const T& lhs, const U& rhs) const { return lhs < rhs; }$/;"	f	struct:testing::internal::LessComparator	typeref:typename:bool
operator ()	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  bool operator()(const T& x) const {$/;"	f	class:testing::internal::MatcherAsPredicate	typeref:typename:bool
operator ()	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^    bool operator()(const Expectation& lhs, const Expectation& rhs) const {$/;"	f	class:testing::Expectation::Less	typeref:typename:bool
operator ()	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^  bool operator()(const ::testing::internal::linked_ptr<T>& lhs,$/;"	f	struct:testing::internal::LinkedPtrLessThan	typeref:typename:bool
operator ()	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^  int operator()() { return 2; }$/;"	f	class:__anon550198f10111::NullaryFunctor	typeref:typename:int	file:
operator ()	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^  void operator()() { g_done = true; }$/;"	f	class:__anon550198f10111::VoidNullaryFunctor	typeref:typename:void	file:
operator ()	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^  int operator()() { return 2; }$/;"	f	class:testing::gmock_generated_actions_test::NullaryFunctor	typeref:typename:int	file:
operator ()	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^  int operator()(bool x) { return x ? 1 : -1; }$/;"	f	struct:testing::gmock_generated_actions_test::UnaryFunctor	typeref:typename:int	file:
operator ()	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^  int operator()(int a, int b, int c, int d, int e) {$/;"	f	struct:testing::gmock_generated_actions_test::SumOf5Functor	typeref:typename:int	file:
operator ()	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^  int operator()(int a, int b, int c, int d, int e, int f) {$/;"	f	struct:testing::gmock_generated_actions_test::SumOf6Functor	typeref:typename:int	file:
operator ()	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  bool operator()(int n) const { return n > threshold_; }$/;"	f	class:testing::gmock_matchers_test::IsGreaterThan	typeref:typename:bool	file:
operator ()	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  int operator()(const char* s) { return static_cast<int>(strlen(s)); }$/;"	f	struct:testing::gmock_matchers_test::PolymorphicFunctor	typeref:typename:int	file:
operator ()	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  int operator()(int n) { return n; }$/;"	f	struct:testing::gmock_matchers_test::PolymorphicFunctor	typeref:typename:int	file:
operator ()	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  result_type operator()(argument_type input) const {$/;"	f	struct:testing::gmock_matchers_test::Functor	typeref:typename:result_type	file:
operator ()	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  result_type operator()(const int& n) { return &n; }$/;"	f	struct:testing::gmock_matchers_test::ReferencingFunctor	typeref:typename:result_type	file:
operator ()	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^  int operator()() { return 2; }$/;"	f	class:testing::gmock_more_actions_test::NullaryFunctor	typeref:typename:int	file:
operator ()	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^  int operator()(bool x) { return x ? 1 : -1; }$/;"	f	struct:testing::gmock_more_actions_test::UnaryFunctor	typeref:typename:int	file:
operator ()	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^  int operator()(int a, int b, int c, int d, int e) {$/;"	f	struct:testing::gmock_more_actions_test::SumOf5Functor	typeref:typename:int	file:
operator ()	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^  int operator()(int a, int b, int c, int d, int e, int f) {$/;"	f	struct:testing::gmock_more_actions_test::SumOf6Functor	typeref:typename:int	file:
operator ()	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^  void operator()() { g_done = true; }$/;"	f	class:testing::gmock_more_actions_test::VoidNullaryFunctor	typeref:typename:void	file:
operator ()	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  std::string operator()(const TestParamInfo<ParamType>& info) const {$/;"	f	struct:testing::PrintToStringParamName	typeref:typename:std::string
operator ()	src/tests/googletest/googletest/src/gtest-death-test.cc	/^bool ExitedWithCode::operator()(int exit_status) const {$/;"	f	class:testing::ExitedWithCode	typeref:typename:bool
operator ()	src/tests/googletest/googletest/src/gtest-death-test.cc	/^bool KilledBySignal::operator()(int exit_status) const {$/;"	f	class:testing::KilledBySignal	typeref:typename:bool
operator ()	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  bool operator()(const TestProperty& test_property) const {$/;"	f	class:testing::internal::TestPropertyKeyIs	typeref:typename:bool
operator ()	src/tests/googletest/googletest/src/gtest.cc	/^  bool operator()(const TestCase* test_case) const {$/;"	f	class:testing::internal::TestCaseNameIs	typeref:typename:bool	file:
operator ()	src/tests/googletest/googletest/src/gtest.cc	/^  bool operator()(const TestInfo * test_info) const {$/;"	f	class:testing::__anon3f29b7680611::TestNameIs	typeref:typename:bool	file:
operator ()	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  std::string operator()(const ::testing::TestParamInfo<int>& info) {$/;"	f	struct:StatefulNamingFunctor	typeref:typename:std::string	file:
operator ()	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  std::string operator()(const ::testing::TestParamInfo<std::string>& info) {$/;"	f	struct:CustomParamNameFunctor	typeref:typename:std::string	file:
operator ()	src/tests/googletest/googletest/test/gtest-unittest-api_test.cc	/^  bool operator()(const T* a, const T* b) {$/;"	f	struct:testing::internal::LessByName	typeref:typename:bool	file:
operator ()	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  bool operator()(const T1& v1) {$/;"	f	struct:PredFunctor1	typeref:typename:bool	file:
operator ()	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  bool operator()(const T1& v1,$/;"	f	struct:PredFunctor2	typeref:typename:bool	file:
operator ()	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  bool operator()(const T1& v1,$/;"	f	struct:PredFunctor3	typeref:typename:bool	file:
operator ()	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  bool operator()(const T1& v1,$/;"	f	struct:PredFunctor4	typeref:typename:bool	file:
operator ()	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  bool operator()(const T1& v1,$/;"	f	struct:PredFunctor5	typeref:typename:bool	file:
operator ()	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  testing::AssertionResult operator()(const char* e1,$/;"	f	struct:PredFormatFunctor1	typeref:typename:testing::AssertionResult	file:
operator ()	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  testing::AssertionResult operator()(const char* e1,$/;"	f	struct:PredFormatFunctor2	typeref:typename:testing::AssertionResult	file:
operator ()	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  testing::AssertionResult operator()(const char* e1,$/;"	f	struct:PredFormatFunctor3	typeref:typename:testing::AssertionResult	file:
operator ()	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  testing::AssertionResult operator()(const char* e1,$/;"	f	struct:PredFormatFunctor4	typeref:typename:testing::AssertionResult	file:
operator ()	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  testing::AssertionResult operator()(const char* e1,$/;"	f	struct:PredFormatFunctor5	typeref:typename:testing::AssertionResult	file:
operator ()	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  AssertionResult operator()($/;"	f	struct:__anonf780395f0111::AssertSumIsEven5Functor	typeref:typename:AssertionResult	file:
operator ()	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  AssertionResult operator()(const char* expr, int n) {$/;"	f	struct:__anonf780395f0111::AssertIsEvenFunctor	typeref:typename:AssertionResult	file:
operator ()	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  bool operator()(int n) { return IsEven(n); }$/;"	f	struct:__anonf780395f0111::IsEvenFunctor	typeref:typename:bool	file:
operator ()	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  bool operator()(int n1, int n2, int n3) {$/;"	f	struct:__anonf780395f0111::SumIsEven3Functor	typeref:typename:bool	file:
operator () 	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    OutIter operator() (Func \/* f *\/, const Tup& \/* t *\/, OutIter out) const {$/;"	f	struct:testing::internal::TransformTupleValuesHelper::IterateOverTuple	typeref:typename:OutIter
operator () 	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    OutIter operator() (Func f, const Tup& t, OutIter out) const {$/;"	f	struct:testing::internal::TransformTupleValuesHelper::IterateOverTuple	typeref:typename:OutIter
operator *	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^      value_type operator*() const { return value_; }$/;"	f	class:testing::gmock_matchers_test::Streamlike::ConstIter::PostIncrProxy	typeref:typename:value_type	file:
operator *	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^    const value_type& operator*() const { return *pos_; }$/;"	f	class:testing::gmock_matchers_test::Streamlike::ConstIter	typeref:typename:const value_type &	file:
operator *	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  T& operator*() { return *val_; }$/;"	f	class:testing::gmock_matchers_test::ConstPropagatingPtr	typeref:typename:T &	file:
operator *	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  const T& operator*() const { return *val_; }$/;"	f	class:testing::gmock_matchers_test::ConstPropagatingPtr	typeref:typename:const T &	file:
operator *	src/tests/googletest/googletest/include/gtest/internal/gtest-linked_ptr.h	/^  T& operator*() const { return *value_; }$/;"	f	class:testing::internal::linked_ptr	typeref:typename:T &
operator *	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  const T& operator*() const { return *impl_->Current(); }$/;"	f	class:testing::internal::ParamIterator	typeref:typename:const T &
operator *	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  T& operator*() const { return *ptr_; }$/;"	f	class:testing::internal::scoped_ptr	typeref:typename:T &
operator +	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  DogAdder operator+(const DogAdder& other) const {$/;"	f	class:DogAdder	typeref:typename:DogAdder	file:
operator +	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  IntWrapper operator+(int other) const { return IntWrapper(value_ + other); }$/;"	f	class:IntWrapper	typeref:typename:IntWrapper	file:
operator +	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  Bool operator+(const Bool& rhs) const { return Bool(value + rhs.value); }$/;"	f	struct:Bool	typeref:typename:Bool	file:
operator ++	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^    ConstIter& operator++() {$/;"	f	class:testing::gmock_matchers_test::Streamlike::ConstIter	typeref:typename:ConstIter &	file:
operator ++	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^    PostIncrProxy operator++(int) {$/;"	f	class:testing::gmock_matchers_test::Streamlike::ConstIter	typeref:typename:PostIncrProxy	file:
operator ++	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  ParamIterator operator++(int \/*unused*\/) {$/;"	f	class:testing::internal::ParamIterator	typeref:typename:ParamIterator
operator ++	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  ParamIterator& operator++() {$/;"	f	class:testing::internal::ParamIterator	typeref:typename:ParamIterator &
operator +=	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  ExpectationSet& operator+=(const Expectation& e) {$/;"	f	class:testing::ExpectationSet	typeref:typename:ExpectationSet &
operator ->	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^    const value_type* operator->() const { return &*pos_; }$/;"	f	class:testing::gmock_matchers_test::Streamlike::ConstIter	typeref:typename:const value_type *	file:
operator ->	src/tests/googletest/googletest/include/gtest/internal/gtest-linked_ptr.h	/^  T* operator->() const { return value_; }$/;"	f	class:testing::internal::linked_ptr	typeref:typename:T *
operator ->	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  const T* operator->() const { return impl_->Current(); }$/;"	f	class:testing::internal::ParamIterator	typeref:typename:const T *
operator ->	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  T* operator->() const { return ptr_; }$/;"	f	class:testing::internal::scoped_ptr	typeref:typename:T *
operator ::testing::internal::BiggestInt	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^  operator ::testing::internal::BiggestInt() const { return 42; }$/;"	f	class:BiggestIntConvertible	file:
operator <	src/muduo/muduo/base/Date.h	/^inline bool operator<(Date x, Date y)$/;"	f	namespace:muduo	typeref:typename:bool
operator <	src/muduo/muduo/base/Timestamp.h	/^inline bool operator<(Timestamp lhs, Timestamp rhs)$/;"	f	namespace:muduo	typeref:typename:bool
operator <	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  bool operator<(const DogAdder& other) const {$/;"	f	class:DogAdder	typeref:typename:bool	file:
operator <	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  bool operator<(const IntWrapper& other) const {$/;"	f	class:IntWrapper	typeref:typename:bool	file:
operator <	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  bool operator<(const UnprintableChar& rhs) const {$/;"	f	class:__anonf780395f0311::UnprintableChar	typeref:typename:bool	file:
operator <<	src/muduo/muduo/base/LogStream.cc	/^LogStream& LogStream::operator<<(const void* p)$/;"	f	class:LogStream	typeref:typename:LogStream &
operator <<	src/muduo/muduo/base/LogStream.cc	/^LogStream& LogStream::operator<<(double v)$/;"	f	class:LogStream	typeref:typename:LogStream &
operator <<	src/muduo/muduo/base/LogStream.cc	/^LogStream& LogStream::operator<<(int v)$/;"	f	class:LogStream	typeref:typename:LogStream &
operator <<	src/muduo/muduo/base/LogStream.cc	/^LogStream& LogStream::operator<<(long long v)$/;"	f	class:LogStream	typeref:typename:LogStream &
operator <<	src/muduo/muduo/base/LogStream.cc	/^LogStream& LogStream::operator<<(long v)$/;"	f	class:LogStream	typeref:typename:LogStream &
operator <<	src/muduo/muduo/base/LogStream.cc	/^LogStream& LogStream::operator<<(short v)$/;"	f	class:LogStream	typeref:typename:LogStream &
operator <<	src/muduo/muduo/base/LogStream.cc	/^LogStream& LogStream::operator<<(unsigned int v)$/;"	f	class:LogStream	typeref:typename:LogStream &
operator <<	src/muduo/muduo/base/LogStream.cc	/^LogStream& LogStream::operator<<(unsigned long long v)$/;"	f	class:LogStream	typeref:typename:LogStream &
operator <<	src/muduo/muduo/base/LogStream.cc	/^LogStream& LogStream::operator<<(unsigned long v)$/;"	f	class:LogStream	typeref:typename:LogStream &
operator <<	src/muduo/muduo/base/LogStream.cc	/^LogStream& LogStream::operator<<(unsigned short v)$/;"	f	class:LogStream	typeref:typename:LogStream &
operator <<	src/muduo/muduo/base/LogStream.h	/^  self& operator<<(bool v)$/;"	f	class:muduo::LogStream	typeref:typename:self &
operator <<	src/muduo/muduo/base/LogStream.h	/^  self& operator<<(char v)$/;"	f	class:muduo::LogStream	typeref:typename:self &
operator <<	src/muduo/muduo/base/LogStream.h	/^  self& operator<<(const Buffer& v)$/;"	f	class:muduo::LogStream	typeref:typename:self &
operator <<	src/muduo/muduo/base/LogStream.h	/^  self& operator<<(const StringPiece& v)$/;"	f	class:muduo::LogStream	typeref:typename:self &
operator <<	src/muduo/muduo/base/LogStream.h	/^  self& operator<<(const char* str)$/;"	f	class:muduo::LogStream	typeref:typename:self &
operator <<	src/muduo/muduo/base/LogStream.h	/^  self& operator<<(const string& v)$/;"	f	class:muduo::LogStream	typeref:typename:self &
operator <<	src/muduo/muduo/base/LogStream.h	/^  self& operator<<(const unsigned char* str)$/;"	f	class:muduo::LogStream	typeref:typename:self &
operator <<	src/muduo/muduo/base/LogStream.h	/^  self& operator<<(float v)$/;"	f	class:muduo::LogStream	typeref:typename:self &
operator <<	src/muduo/muduo/base/LogStream.h	/^inline LogStream& operator<<(LogStream& s, const Fmt& fmt)$/;"	f	namespace:muduo	typeref:typename:LogStream &
operator <<	src/muduo/muduo/base/Logging.cc	/^inline LogStream& operator<<(LogStream& s, T v)$/;"	f	namespace:muduo	typeref:typename:LogStream &
operator <<	src/muduo/muduo/base/Logging.cc	/^inline LogStream& operator<<(LogStream& s, const Logger::SourceFile& v)$/;"	f	namespace:muduo	typeref:typename:LogStream &
operator <<	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  MatchResultListener& operator<<(const T& x) {$/;"	f	class:testing::MatchResultListener	typeref:typename:MatchResultListener &
operator <<	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  friend std::ostream& operator<<(std::ostream& os, const Streamlike& s) {$/;"	f	namespace:testing::gmock_matchers_test	typeref:typename:std::ostream &	file:
operator <<	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^ostream& operator<<(ostream& os, const ConvertibleFromAny& a) {$/;"	f	namespace:testing::gmock_matchers_test	typeref:typename:ostream &
operator <<	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^inline void operator<<(::std::ostream& os, const Printable&) {$/;"	f	namespace:__anon6b6cf3b20111	typeref:typename:void
operator <<	src/tests/googletest/googletest/include/gtest/gtest-message.h	/^  Message& operator <<(BasicNarrowIoManip val) {$/;"	f	class:testing::Message	typeref:typename:Message &
operator <<	src/tests/googletest/googletest/include/gtest/gtest-message.h	/^  Message& operator <<(bool b) {$/;"	f	class:testing::Message	typeref:typename:Message &
operator <<	src/tests/googletest/googletest/include/gtest/gtest-message.h	/^  inline Message& operator <<(T* const& pointer) {  \/\/ NOLINT$/;"	f	class:testing::Message	typeref:typename:Message &
operator <<	src/tests/googletest/googletest/include/gtest/gtest-message.h	/^  inline Message& operator <<(const T& val) {$/;"	f	class:testing::Message	typeref:typename:Message &
operator <<	src/tests/googletest/googletest/include/gtest/gtest-message.h	/^  inline Message& operator <<(const T& value) {$/;"	f	class:testing::Message	typeref:typename:Message &
operator <<	src/tests/googletest/googletest/include/gtest/gtest-message.h	/^inline std::ostream& operator <<(std::ostream& os, const Message& sb) {$/;"	f	namespace:testing	typeref:typename:std::ostream &
operator <<	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^::std::basic_ostream<Char, CharTraits>& operator<<($/;"	f	namespace:testing::internal2	typeref:typename:::std::basic_ostream<Char,CharTraits> &
operator <<	src/tests/googletest/googletest/include/gtest/gtest.h	/^  AssertionResult& operator<<($/;"	f	class:testing::AssertionResult	typeref:typename:AssertionResult &
operator <<	src/tests/googletest/googletest/include/gtest/gtest.h	/^  template <typename T> AssertionResult& operator<<(const T& value) {$/;"	f	class:testing::AssertionResult	typeref:typename:AssertionResult &
operator <<	src/tests/googletest/googletest/src/gtest-test-part.cc	/^std::ostream& operator<<(std::ostream& os, const TestPartResult& result) {$/;"	f	namespace:testing	typeref:typename:std::ostream &
operator <<	src/tests/googletest/googletest/src/gtest.cc	/^Message& Message::operator <<(const ::std::wstring& wstr) {$/;"	f	class:testing::Message	typeref:typename:Message &
operator <<	src/tests/googletest/googletest/src/gtest.cc	/^Message& Message::operator <<(const ::wstring& wstr) {$/;"	f	class:testing::Message	typeref:typename:Message &
operator <<	src/tests/googletest/googletest/src/gtest.cc	/^Message& Message::operator <<(const wchar_t* wide_c_str) {$/;"	f	class:testing::Message	typeref:typename:Message &
operator <<	src/tests/googletest/googletest/src/gtest.cc	/^Message& Message::operator <<(wchar_t* wide_c_str) {$/;"	f	class:testing::Message	typeref:typename:Message &
operator <<	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^std::ostream& operator<<(std::ostream& stream, const CustomStruct& val) {$/;"	f	typeref:typename:std::ostream &
operator <<	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^::std::ostream& operator<<(::std::ostream& os,$/;"	f	namespace:foo	typeref:typename:::std::ostream &
operator <<	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^inline ::std::ostream& operator<<(::std::ostream& os,$/;"	f	namespace:foo	typeref:typename:::std::ostream &
operator <<	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^inline void operator<<(::std::ostream& os, const StreamableInGlobal& \/* x *\/) {$/;"	f	typeref:typename:void
operator <<	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^std::basic_ostream<Char, CharTraits>& operator<<($/;"	f	namespace:testing::gtest_printers_test	typeref:typename:std::basic_ostream<Char,CharTraits> &
operator <<	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^std::ostream& operator<<(std::ostream& os, EnumWithStreaming e) {$/;"	f	typeref:typename:std::ostream &
operator <<	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^void operator<<(::std::ostream& os, const StreamableInGlobal* \/* x *\/) {$/;"	f	typeref:typename:void
operator <<	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^std::ostream& operator<<(std::ostream& os, const Bool& x) {$/;"	f	typeref:typename:std::ostream &
operator <<	src/tests/googletest/googletest/test/gtest_unittest.cc	/^::std::ostream& operator<<(::std::ostream& os, const Uncopyable& value) {$/;"	f	namespace:__anonf780395f0111	typeref:typename:::std::ostream &
operator <<	src/tests/googletest/googletest/test/gtest_unittest.cc	/^::std::ostream& operator<<(::std::ostream& os,$/;"	f	typeref:typename:::std::ostream &
operator <<	src/tests/googletest/googletest/test/gtest_unittest.cc	/^std::ostream& operator<<(std::ostream& os,$/;"	f	namespace:__anonf780395f0411	typeref:typename:std::ostream &
operator <<	src/tests/googletest/googletest/test/gtest_unittest.cc	/^std::ostream& operator<<(std::ostream& os,$/;"	f	namespace:namespace1	typeref:typename:std::ostream &
operator <<	src/tests/googletest/googletest/test/gtest_unittest.cc	/^std::ostream& operator<<(std::ostream& os,$/;"	f	typeref:typename:std::ostream &
operator <=	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  bool operator<=(const UnprintableChar& rhs) const {$/;"	f	class:__anonf780395f0311::UnprintableChar	typeref:typename:bool	file:
operator =	src/muduo/muduo/base/GzipFile.h	/^  GzipFile& operator=(GzipFile&& rhs) noexcept$/;"	f	class:muduo::GzipFile	typeref:typename:GzipFile &
operator =	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  void operator=(const BoundSecondMatcher& \/*rhs*\/) {$/;"	f	class:testing::internal::BoundSecondMatcher	typeref:typename:void
operator =	src/tests/googletest/googletest/include/gtest/internal/gtest-filepath.h	/^  FilePath& operator=(const FilePath& rhs) {$/;"	f	class:testing::internal::FilePath	typeref:typename:FilePath &
operator =	src/tests/googletest/googletest/include/gtest/internal/gtest-linked_ptr.h	/^  linked_ptr& operator=(linked_ptr const& ptr) {$/;"	f	class:testing::internal::linked_ptr	typeref:typename:linked_ptr &
operator =	src/tests/googletest/googletest/include/gtest/internal/gtest-linked_ptr.h	/^  template <typename U> linked_ptr& operator=(linked_ptr<U> const& ptr) {$/;"	f	class:testing::internal::linked_ptr	typeref:typename:linked_ptr &
operator =	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  ParamGenerator& operator=(const ParamGenerator& other) {$/;"	f	class:testing::internal::ParamGenerator	typeref:typename:ParamGenerator &
operator =	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  ParamIterator& operator=(const ParamIterator& other) {$/;"	f	class:testing::internal::ParamIterator	typeref:typename:ParamIterator &
operator =	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^  tuple& operator=(const tuple& \/* t *\/) { return *this; }$/;"	f	class:std::tr1::tuple	typeref:typename:tuple &
operator =	src/tests/googletest/googletest/src/gtest.cc	/^void AssertHelper::operator=(const Message& message) const {$/;"	f	class:testing::internal::AssertHelper	typeref:typename:void
operator =	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  DogAdder operator=(const DogAdder& other) {$/;"	f	class:DogAdder	typeref:typename:DogAdder	file:
operator =	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  IntWrapper operator=(const IntWrapper& other) {$/;"	f	class:IntWrapper	typeref:typename:IntWrapper	file:
operator ==	src/muduo/muduo/base/Date.h	/^inline bool operator==(Date x, Date y)$/;"	f	namespace:muduo	typeref:typename:bool
operator ==	src/muduo/muduo/base/StringPiece.h	/^  bool operator==(const StringPiece& x) const {$/;"	f	class:muduo::StringPiece	typeref:typename:bool
operator ==	src/muduo/muduo/base/Timestamp.h	/^inline bool operator==(Timestamp lhs, Timestamp rhs)$/;"	f	namespace:muduo	typeref:typename:bool
operator ==	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  bool operator==(const Expectation& rhs) const {$/;"	f	class:testing::Expectation	typeref:typename:bool
operator ==	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  bool operator==(const ExpectationSet& rhs) const {$/;"	f	class:testing::ExpectationSet	typeref:typename:bool
operator ==	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^  bool operator==(const Base&) { return true; }$/;"	f	struct:__anon550198f10111::Base	typeref:typename:bool	file:
operator ==	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^  bool operator==(const Derived&) { return true; }$/;"	f	struct:__anon550198f10111::Derived	typeref:typename:bool	file:
operator ==	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^    friend bool operator==(const ConstIter& a, const ConstIter& b) {$/;"	f	class:testing::gmock_matchers_test::Streamlike	typeref:typename:bool	file:
operator ==	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  bool operator==(const NotCopyable& rhs) const {$/;"	f	class:testing::gmock_matchers_test::NotCopyable	typeref:typename:bool	file:
operator ==	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^bool operator==(const ConvertibleFromAny& a, const ConvertibleFromAny& b) {$/;"	f	namespace:testing::gmock_matchers_test	typeref:typename:bool
operator ==	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^bool operator==(const IntReferenceWrapper& a, const IntReferenceWrapper& b) {$/;"	f	namespace:testing::gmock_matchers_test	typeref:typename:bool
operator ==	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^inline bool operator==(const Unprintable& \/* lhs *\/, $/;"	f	namespace:testing::gmock_matchers_test	typeref:typename:bool
operator ==	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  bool operator==(const NativeArray& rhs) const {$/;"	f	class:testing::internal::NativeArray	typeref:typename:bool
operator ==	src/tests/googletest/googletest/include/gtest/internal/gtest-linked_ptr.h	/^  bool operator==(T* p) const { return value_ == p; }$/;"	f	class:testing::internal::linked_ptr	typeref:typename:bool
operator ==	src/tests/googletest/googletest/include/gtest/internal/gtest-linked_ptr.h	/^  bool operator==(linked_ptr<U> const& ptr) const {$/;"	f	class:testing::internal::linked_ptr	typeref:typename:bool
operator ==	src/tests/googletest/googletest/include/gtest/internal/gtest-linked_ptr.h	/^bool operator==(T* ptr, const linked_ptr<T>& x) {$/;"	f	namespace:testing::internal	typeref:typename:bool
operator ==	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  bool operator==(const ParamIterator& other) const {$/;"	f	class:testing::internal::ParamIterator	typeref:typename:bool
operator ==	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  bool operator==(const Bool& rhs) const { return value == rhs.value; }$/;"	f	struct:Bool	typeref:typename:bool	file:
operator ==	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  bool operator==(const Uncopyable& rhs) const {$/;"	f	class:__anonf780395f0111::Uncopyable	typeref:typename:bool	file:
operator ==	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  bool operator==(const UnprintableChar& rhs) const {$/;"	f	class:__anonf780395f0311::UnprintableChar	typeref:typename:bool	file:
operator >	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  bool operator>(int n) const { return value > Bool(n).value; }$/;"	f	struct:Bool	typeref:typename:bool	file:
operator >	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  bool operator>(const UnprintableChar& rhs) const {$/;"	f	class:__anonf780395f0311::UnprintableChar	typeref:typename:bool	file:
operator >=	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  bool operator>=(const NotCopyable& rhs) const {$/;"	f	class:testing::gmock_matchers_test::NotCopyable	typeref:typename:bool	file:
operator >=	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  bool operator>=(const UnprintableChar& rhs) const {$/;"	f	class:__anonf780395f0311::UnprintableChar	typeref:typename:bool	file:
operator Action<F>	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  operator Action<F>() const { return Action<F>(NULL); }$/;"	f	class:testing::internal::DoDefaultAction
operator Action<F>	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  operator Action<F>() const {$/;"	f	class:testing::PolymorphicAction
operator Action<F>	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  operator Action<F>() const {$/;"	f	class:testing::internal::DoBothAction
operator Action<F>	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  operator Action<F>() const {$/;"	f	class:testing::internal::IgnoreResultAction
operator Action<F>	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  operator Action<F>() const {$/;"	f	class:testing::internal::ReturnAction
operator Action<F>	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  operator Action<F>() const {$/;"	f	class:testing::internal::ReturnRefAction
operator Action<F>	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  operator Action<F>() const {$/;"	f	class:testing::internal::ReturnRefOfCopyAction
operator Action<F>	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^  operator Action<F>() const { return MakeAction(new Impl<F>(action_)); }$/;"	f	class:testing::internal::WithArgsAction
operator AssertionResult	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  operator AssertionResult() const { return AssertionResult(true); }$/;"	f	struct:ConvertibleToAssertionResult	file:
operator Base	src/tests/googletest/googletest/test/gtest-port_test.cc	/^  operator Base() const {$/;"	f	class:testing::internal::ConstAndNonConstCastable	file:
operator Base	src/tests/googletest/googletest/test/gtest-port_test.cc	/^  operator Base() const {$/;"	f	class:testing::internal::ConstCastable	file:
operator Base	src/tests/googletest/googletest/test/gtest-port_test.cc	/^  operator Base() {$/;"	f	class:testing::internal::Castable	file:
operator Base	src/tests/googletest/googletest/test/gtest-port_test.cc	/^  operator Base() {$/;"	f	class:testing::internal::ConstAndNonConstCastable	file:
operator DestinationType	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^  operator DestinationType() { return DestinationType(); }$/;"	f	class:__anon550198f10111::SourceType	file:
operator Matcher<::testing::tuple<T1,T2>>	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  operator Matcher< ::testing::tuple<T1, T2> >() const {$/;"	f	class:testing::internal::PairMatchBase
operator Matcher<ArgsTuple>	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^  operator Matcher<ArgsTuple>() const {$/;"	f	class:testing::internal::ArgsMatcher
operator Matcher<Container>	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  operator Matcher<Container>() const {$/;"	f	class:testing::internal::BeginEndDistanceIsMatcher
operator Matcher<Container>	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  operator Matcher<Container>() const {$/;"	f	class:testing::internal::ContainsMatcher
operator Matcher<Container>	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  operator Matcher<Container>() const {$/;"	f	class:testing::internal::EachMatcher
operator Matcher<Container>	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  operator Matcher<Container>() const {$/;"	f	class:testing::internal::ElementsAreArrayMatcher
operator Matcher<Container>	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  operator Matcher<Container>() const {$/;"	f	class:testing::internal::ElementsAreMatcher
operator Matcher<Container>	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  operator Matcher<Container>() const {$/;"	f	class:testing::internal::SizeIsMatcher
operator Matcher<Container>	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  operator Matcher<Container>() const {$/;"	f	class:testing::internal::UnorderedElementsAreArrayMatcher
operator Matcher<Container>	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  operator Matcher<Container>() const {$/;"	f	class:testing::internal::UnorderedElementsAreMatcher
operator Matcher<FloatType&>	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  operator Matcher<FloatType&>() const {$/;"	f	class:testing::internal::FloatingEqMatcher
operator Matcher<FloatType>	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  operator Matcher<FloatType>() const {$/;"	f	class:testing::internal::FloatingEqMatcher
operator Matcher<Lhs>	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  operator Matcher<Lhs>() const {$/;"	f	class:testing::internal::ComparisonBase
operator Matcher<LhsContainer>	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  operator Matcher<LhsContainer>() const {$/;"	f	class:testing::internal::PointwiseMatcher
operator Matcher<LhsContainer>	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  operator Matcher<LhsContainer>() const {$/;"	f	class:testing::internal::WhenSortedByMatcher
operator Matcher<PairType>	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  operator Matcher<PairType> () const {$/;"	f	class:testing::internal::PairMatcher
operator Matcher<PairType>	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  operator Matcher<PairType>() const {$/;"	f	class:testing::internal::KeyMatcher
operator Matcher<Pointer>	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  operator Matcher<Pointer>() const {$/;"	f	class:testing::internal::PointeeMatcher
operator Matcher<Super&>	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  operator Matcher<Super&>() const {$/;"	f	class:testing::internal::RefMatcher
operator Matcher<T>	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  operator Matcher<T>() const { return A<T>(); }$/;"	f	class:testing::internal::AnythingMatcher
operator Matcher<T>	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  operator Matcher<T>() const {$/;"	f	class:testing::PolymorphicMatcher
operator Matcher<T>	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  operator Matcher<T>() const {$/;"	f	class:testing::internal::BothOfMatcher
operator Matcher<T>	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  operator Matcher<T>() const {$/;"	f	class:testing::internal::BoundSecondMatcher
operator Matcher<T>	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  operator Matcher<T>() const {$/;"	f	class:testing::internal::EitherOfMatcher
operator Matcher<T>	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  operator Matcher<T>() const {$/;"	f	class:testing::internal::NotMatcher
operator Matcher<T>	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  operator Matcher<T>() const {$/;"	f	class:testing::internal::ResultOfMatcher
operator Matcher<T>	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  operator Matcher<T>() const {$/;"	f	class:testing::internal::VariadicMatcher
operator Matcher<const FloatType&>	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  operator Matcher<const FloatType&>() const {$/;"	f	class:testing::internal::FloatingEqMatcher
operator Matcher<const::testing::tuple<T1,T2>&>	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  operator Matcher<const ::testing::tuple<T1, T2>&>() const {$/;"	f	class:testing::internal::PairMatchBase
operator ParamGenerator<::testing::tuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10>>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator< ::testing::tuple<T1, T2, T3, T4, T5, T6, T7, T8, T9,$/;"	f	class:testing::internal::CartesianProductHolder10
operator ParamGenerator<::testing::tuple<T1,T2,T3,T4,T5,T6,T7,T8,T9>>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator< ::testing::tuple<T1, T2, T3, T4, T5, T6, T7, T8,$/;"	f	class:testing::internal::CartesianProductHolder9
operator ParamGenerator<::testing::tuple<T1,T2,T3,T4,T5,T6,T7,T8>>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator< ::testing::tuple<T1, T2, T3, T4, T5, T6, T7,$/;"	f	class:testing::internal::CartesianProductHolder8
operator ParamGenerator<::testing::tuple<T1,T2,T3,T4,T5,T6,T7>>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator< ::testing::tuple<T1, T2, T3, T4, T5, T6,$/;"	f	class:testing::internal::CartesianProductHolder7
operator ParamGenerator<::testing::tuple<T1,T2,T3,T4,T5,T6>>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator< ::testing::tuple<T1, T2, T3, T4, T5, T6> >() const {$/;"	f	class:testing::internal::CartesianProductHolder6
operator ParamGenerator<::testing::tuple<T1,T2,T3,T4,T5>>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator< ::testing::tuple<T1, T2, T3, T4, T5> >() const {$/;"	f	class:testing::internal::CartesianProductHolder5
operator ParamGenerator<::testing::tuple<T1,T2,T3,T4>>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator< ::testing::tuple<T1, T2, T3, T4> >() const {$/;"	f	class:testing::internal::CartesianProductHolder4
operator ParamGenerator<::testing::tuple<T1,T2,T3>>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator< ::testing::tuple<T1, T2, T3> >() const {$/;"	f	class:testing::internal::CartesianProductHolder3
operator ParamGenerator<::testing::tuple<T1,T2>>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator< ::testing::tuple<T1, T2> >() const {$/;"	f	class:testing::internal::CartesianProductHolder2
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray1
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray10
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray11
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray12
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray13
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray14
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray15
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray16
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray17
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray18
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray19
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray2
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray20
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray21
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray22
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray23
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray24
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray25
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray26
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray27
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray28
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray29
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray3
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray30
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray31
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray32
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray33
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray34
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray35
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray36
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray37
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray38
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray39
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray4
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray40
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray41
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray42
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray43
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray44
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray45
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray46
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray47
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray48
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray49
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray5
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray50
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray6
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray7
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray8
operator ParamGenerator<T>	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray9
operator T&	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  operator T&() const { return *pointer_; }$/;"	f	class:testing::internal::ReferenceWrapper
operator []	src/muduo/muduo/base/StringPiece.h	/^  char operator[](int i) const { return ptr_[i]; }$/;"	f	class:muduo::StringPiece	typeref:typename:char
operator bool	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  operator bool() const { return number_ != 0; }$/;"	f	class:testing::gmock_matchers_test::ConvertibleToBool	file:
operator bool	src/tests/googletest/googletest/include/gtest/gtest.h	/^  operator bool() const { return success_; }  \/\/ NOLINT$/;"	f	class:testing::AssertionResult
operator bool	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  operator bool() const { return true; }$/;"	f	struct:testing::internal::ConstCharPtr
operator bool	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^  operator bool() const { return false; }$/;"	f	class:testing::gtest_printers_test::AllowsGenericStreamingAndImplicitConversionTemplate	file:
operator bool	src/tests/googletest/googletest/test/gtest_unittest.cc	/^    explicit operator bool() const { return value; }$/;"	f	struct:TEST::ExplicitlyConvertibleToBool	file:
operator delete	src/tests/googletest/googletest/samples/sample10_unittest.cc	/^  void operator delete(void* block, size_t \/* allocation_size *\/) {$/;"	f	class:__anona6935d300111::Water	typeref:typename:void	file:
operator new	src/tests/googletest/googletest/samples/sample10_unittest.cc	/^  void* operator new(size_t allocation_size) {$/;"	f	class:__anona6935d300111::Water	typeref:typename:void *	file:
options_	src/muduo/examples/memcached/server/MemcacheServer.h	/^  Options options_;$/;"	m	class:MemcacheServer	typeref:typename:Options
origId	src/muduo/examples/protobuf/rpcbalancer/balancer.cc	/^    uint64_t origId;$/;"	m	struct:BackendSession::Request	typeref:typename:uint64_t	file:
origId	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^    uint64_t origId;$/;"	m	struct:BackendSession::Request	typeref:typename:uint64_t	file:
originalSize_	src/muduo/muduo/net/protobuf/BufferStream.h	/^  size_t originalSize_;$/;"	m	class:muduo::net::BufferOutputStream	typeref:typename:size_t
original_dir_	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  const FilePath original_dir_;$/;"	m	class:TestForDeathTest	typeref:typename:const FilePath	file:
original_reporter_	src/tests/googletest/googletest/include/gtest/gtest-test-part.h	/^  TestPartResultReporterInterface* original_reporter_;$/;"	m	class:testing::internal::HasNewFatalFailureHelper	typeref:typename:TestPartResultReporterInterface *
original_verbose_	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^  std::string original_verbose_;$/;"	m	class:testing::internal::__anonf4b2defb0111::LogIsVisibleTest	typeref:typename:std::string	file:
original_working_dir	src/tests/googletest/googletest/src/gtest.cc	/^const char* UnitTest::original_working_dir() const {$/;"	f	class:testing::UnitTest	typeref:typename:const char *
original_working_dir_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  internal::FilePath original_working_dir_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:internal::FilePath
original_working_dir_	src/tests/googletest/googletest/test/gtest-options_test.cc	/^  FilePath original_working_dir_;$/;"	m	class:testing::internal::__anon8f60ad580111::XmlOutputChangeDirTest	typeref:typename:FilePath	file:
os_stack_trace_getter	src/tests/googletest/googletest/src/gtest.cc	/^OsStackTraceGetterInterface* UnitTestImpl::os_stack_trace_getter() {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:OsStackTraceGetterInterface *
os_stack_trace_getter_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  OsStackTraceGetterInterface* os_stack_trace_getter_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:OsStackTraceGetterInterface *
otest	Makefile	/^otest: buildotests$/;"	t
out	src/libtfhe-superaic-core/include/tfhe_generic_streams.h	/^    std::ostream &out;$/;"	m	class:StdOstream	typeref:typename:std::ostream &
out_	src/muduo/examples/curl/download.cc	/^  FilePtr out_;$/;"	m	class:Downloader	typeref:typename:FilePtr	file:
out_	src/muduo/examples/curl/download.cc	/^  FilePtr out_;$/;"	m	class:Piece	typeref:typename:FilePtr	file:
out_params	src/libtfhe-superaic-core/include/lwekeyswitch.h	/^    const LweParams* out_params; \/\/\/< params of the output key s $/;"	m	struct:LweKeySwitchKey	typeref:typename:const LweParams *
outcome	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  DeathTestOutcome outcome() const { return outcome_; }$/;"	f	class:testing::internal::DeathTestImpl	typeref:typename:DeathTestOutcome	file:
outcome_	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  DeathTestOutcome outcome_;$/;"	m	class:testing::internal::DeathTestImpl	typeref:typename:DeathTestOutcome	file:
outerloop	src/libtfhe-superaic-core/fft_processors/nayuki/fft-x8664-avx-reverse.s	/^outerloop:   \/* For each merge size: From 8, 16, 32, ..., to rdx (inclusive). rcx is half the m/;"	l
outerloop	src/libtfhe-superaic-core/fft_processors/nayuki/fft-x8664-avx.s	/^outerloop:   \/* For each merge size: From 8, 16, 32, ..., to rdx (inclusive). rcx is half the m/;"	l
output	src/muduo/examples/ace/ttcp/ttcp.cc	/^  Buffer output;$/;"	m	struct:Context	typeref:typename:Buffer	file:
output	src/muduo/examples/memcached/server/Item.cc	/^void Item::output(Buffer* out, bool needCas) const$/;"	f	class:Item	typeref:typename:void
output	src/muduo/examples/wordcount/gen.py	/^output = open('random_words', 'w')$/;"	v
output	src/muduo/examples/wordcount/receiver.cc	/^  void output()$/;"	f	class:WordCountReceiver	typeref:typename:void	file:
output	src/muduo/muduo/net/tests/Buffer_unittest.cc	/^void output(Buffer&& buf, const void* inner)$/;"	f	typeref:typename:void
output	src/tests/googletest/googletest/test/gtest_output_test.py	/^      output = GetOutputOfAllCommands()$/;"	v
output	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  const char* output;$/;"	m	struct:testing::Flags	typeref:typename:const char *	file:
output	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  std::string* output() { return &(fake_sock_writer_->output_); }$/;"	f	class:testing::internal::StreamingListenerTest	typeref:typename:std::string *	file:
outputBuf_	src/muduo/examples/memcached/server/Session.h	/^  muduo::net::Buffer outputBuf_;$/;"	m	class:Session	typeref:typename:muduo::net::Buffer
outputBuffer	src/muduo/muduo/net/TcpConnection.h	/^  Buffer* outputBuffer()$/;"	f	class:muduo::net::TcpConnection	typeref:typename:Buffer *
outputBuffer_	src/muduo/muduo/net/TcpConnection.h	/^  Buffer outputBuffer_; \/\/ FIXME: use list<Buffer> as output buffer.$/;"	m	class:muduo::net::TcpConnection	typeref:typename:Buffer
outputBytes	src/muduo/muduo/net/ZlibStream.h	/^  int64_t outputBytes() const { return zstream_.total_out; }$/;"	f	class:muduo::net::ZlibOutputStream	typeref:typename:int64_t
outputFunc	src/muduo/muduo/base/tests/LogFile_test.cc	/^void outputFunc(const char* msg, int len)$/;"	f	typeref:typename:void
outputProtocol_	src/muduo/contrib/thrift/ThriftConnection.h	/^  boost::shared_ptr<TProtocol> outputProtocol_;$/;"	m	class:ThriftConnection	typeref:typename:boost::shared_ptr<TProtocol>
outputTransport_	src/muduo/contrib/thrift/ThriftConnection.h	/^  boost::shared_ptr<TMemoryBuffer> outputTransport_;$/;"	m	class:ThriftConnection	typeref:typename:boost::shared_ptr<TMemoryBuffer>
output_	src/muduo/muduo/net/ZlibStream.h	/^  Buffer* output_;$/;"	m	class:muduo::net::ZlibInputStream	typeref:typename:Buffer *
output_	src/muduo/muduo/net/ZlibStream.h	/^  Buffer* output_;$/;"	m	class:muduo::net::ZlibOutputStream	typeref:typename:Buffer *
output_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  std::string output_;$/;"	m	class:testing::internal::GTestFlagSaver	typeref:typename:std::string
output_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^    std::string output_;$/;"	m	class:testing::internal::StreamingListenerTest::FakeSocketWriter	typeref:typename:std::string	file:
output_dir	src/tests/googletest/googletest/xcode/Scripts/versiongenerate.py	/^  output_dir = sys.argv[2]$/;"	v
output_file_	src/tests/googletest/googletest/src/gtest.cc	/^  const std::string output_file_;$/;"	m	class:testing::internal::XmlUnitTestResultPrinter	typeref:typename:const std::string	file:
outstandings_	src/muduo/examples/protobuf/rpcbalancer/balancer.cc	/^  std::map<uint64_t, Request> outstandings_;$/;"	m	class:BackendSession	typeref:typename:std::map<uint64_t,Request>	file:
outstandings_	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^  std::map<uint64_t, Request> outstandings_;$/;"	m	class:BackendSession	typeref:typename:std::map<uint64_t,Request>	file:
overview	src/muduo/muduo/net/inspect/ProcessInspector.cc	/^string ProcessInspector::overview(HttpRequest::Method, const Inspector::ArgList&)$/;"	f	class:ProcessInspector	typeref:typename:string
overview	src/muduo/muduo/net/inspect/SystemInspector.cc	/^string SystemInspector::overview(HttpRequest::Method, const Inspector::ArgList&)$/;"	f	class:SystemInspector	typeref:typename:string
owner	src/muduo/examples/cdns/Resolver.h	/^    Resolver* owner;$/;"	m	struct:cdns::Resolver::QueryData	typeref:typename:Resolver *
ownerLoop	src/muduo/muduo/net/Channel.h	/^  EventLoop* ownerLoop() { return loop_; }$/;"	f	class:muduo::net::Channel	typeref:typename:EventLoop *
ownerLoop_	src/muduo/muduo/net/Poller.h	/^  EventLoop* ownerLoop_;$/;"	m	class:muduo::net::Poller	typeref:typename:EventLoop *
owner_	src/muduo/examples/curl/Curl.h	/^  class Curl* owner_;$/;"	m	class:curl::Request	typeref:class:Curl *
owner_	src/muduo/examples/memcached/server/Session.h	/^  MemcacheServer* owner_;$/;"	m	class:Session	typeref:typename:MemcacheServer *
owner_	src/muduo/examples/pingpong/client.cc	/^  Client* owner_;$/;"	m	class:Session	typeref:typename:Client *	file:
owner_	src/muduo/muduo/base/Mutex.h	/^    MutexLock& owner_;$/;"	m	class:muduo::MutexLock::UnassignGuard	typeref:typename:MutexLock &
owner_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  FunctionMockerBase<F>* const owner_;$/;"	m	class:testing::internal::TypedExpectation	typeref:typename:FunctionMockerBase<F> * const
owner_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  pthread_t owner_;  \/\/ The thread holding the mutex.$/;"	m	class:testing::internal::MutexBase	typeref:typename:pthread_t
owner_thread_id_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  unsigned int owner_thread_id_;$/;"	m	class:testing::internal::Mutex	typeref:typename:unsigned int
p	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  const char* p;   \/\/ A pointer field.$/;"	m	struct:testing::gmock_matchers_test::AStruct	typeref:typename:const char *	file:
p0	src/tests/googletest/googlemock/test/gmock_stress_test.cc	/^const linked_ptr<Derived1> p0(new Derived1(1, 2));$/;"	v	namespace:testing::__anonc83180760111	typeref:typename:const linked_ptr<Derived1>
p1_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static const char* p1_;$/;"	m	class:__anonf780395f0111::SingleEvaluationTest	typeref:typename:const char *	file:
p1_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^const char* SingleEvaluationTest::p1_;$/;"	m	class:__anonf780395f0111::SingleEvaluationTest	typeref:typename:const char *
p2_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static const char* p2_;$/;"	m	class:__anonf780395f0111::SingleEvaluationTest	typeref:typename:const char *	file:
p2_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^const char* SingleEvaluationTest::p2_;$/;"	m	class:__anonf780395f0111::SingleEvaluationTest	typeref:typename:const char *
padding	src/muduo/examples/fastcgi/fastcgi.cc	/^  uint8_t padding;$/;"	m	struct:FastCgiCodec::RecordHeader	typeref:typename:uint8_t	file:
pageSize	src/muduo/muduo/base/ProcessInfo.cc	/^int ProcessInfo::pageSize()$/;"	f	class:ProcessInfo	typeref:typename:int
paral_mul	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    bool paral_mul = false;$/;"	m	class:tfhe_superaic::TFHE_ACC	typeref:typename:bool
param	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  ParamType param;$/;"	m	struct:testing::TestParamInfo	typeref:typename:ParamType
param_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^    const T param_;$/;"	m	class:testing::internal::ThreadWithParam::RunnableImpl	typeref:typename:const T
param_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  const T param_;  \/\/ User-supplied parameter to the thread function.$/;"	m	class:testing::internal::ThreadWithParam	typeref:typename:const T
param_tests_present	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^param_tests_present = None$/;"	v
param_value	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  static int param_value() { return param_value_; }$/;"	f	class:GeneratorEvaluationTest	typeref:typename:int	file:
param_value_	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  static int param_value_;$/;"	m	class:GeneratorEvaluationTest	typeref:typename:int	file:
param_value_	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^int GeneratorEvaluationTest::param_value_ = 0;$/;"	m	class:GeneratorEvaluationTest	typeref:typename:int
parameter_	src/tests/googletest/googletest/include/gtest/gtest.h	/^  static const ParamType* parameter_;$/;"	m	class:testing::WithParamInterface	typeref:typename:const ParamType *
parameter_	src/tests/googletest/googletest/include/gtest/gtest.h	/^const T* WithParamInterface<T>::parameter_ = NULL;$/;"	m	class:testing::WithParamInterface<T>	typeref:typename:const T *
parameter_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  const ParamType parameter_;$/;"	m	class:testing::internal::ParameterizedTestFactory	typeref:typename:const ParamType
parameterized_test_registry	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  internal::ParameterizedTestCaseRegistry& parameterized_test_registry() {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:internal::ParameterizedTestCaseRegistry &
parameterized_test_registry	src/tests/googletest/googletest/src/gtest.cc	/^    UnitTest::parameterized_test_registry()$/;"	f	class:testing::UnitTest	typeref:typename:internal::ParameterizedTestCaseRegistry &
parameterized_test_registry_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  internal::ParameterizedTestCaseRegistry parameterized_test_registry_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:internal::ParameterizedTestCaseRegistry
parameterized_tests_registered_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  bool parameterized_tests_registered_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:bool
params	src/libtfhe-superaic-core/include/lwekey.h	/^   const LweParams* params;$/;"	m	struct:LweKey	typeref:typename:const LweParams *
params	src/libtfhe-superaic-core/include/tfhe_gate_bootstrapping_structures.h	/^    const TFheGateBootstrappingParameterSet *const params;$/;"	m	struct:TFheGateBootstrappingCloudKeySet	typeref:typename:const TFheGateBootstrappingParameterSet * const
params	src/libtfhe-superaic-core/include/tfhe_gate_bootstrapping_structures.h	/^    const TFheGateBootstrappingParameterSet *params;$/;"	m	struct:TFheGateBootstrappingSecretKeySet	typeref:typename:const TFheGateBootstrappingParameterSet *
params	src/libtfhe-superaic-core/include/tgsw.h	/^    const TGswParams *params; \/\/\/< the parameters$/;"	m	struct:TGswKey	typeref:typename:const TGswParams *
params	src/libtfhe-superaic-core/include/tlwe.h	/^    const TLweParams *params; \/\/\/< the parameters of the key$/;"	m	struct:TLweKey	typeref:typename:const TLweParams *
params1024	src/tests/lwe_test.cpp	/^        static const LweParams *params1024;$/;"	m	class:__anonc84148b60111::LweTest	typeref:typename:const LweParams *	file:
params1024	src/tests/lwe_test.cpp	/^    const LweParams *LweTest::params1024 = new_LweParams(1024, plaintext_modulus, 0., 1.);$/;"	m	class:__anonc84148b60111::LweTest	typeref:typename:const LweParams *
params1024_1	src/tests/tgsw_direct_test.cpp	/^    const TGswParams *params1024_1 = new_TGswParams(3, 10, new_TLweParams(1024, 1, plaintext_mod/;"	v	namespace:__anon2d2168ad0111	typeref:typename:const TGswParams *
params1024_1	src/tests/tgsw_test.cpp	/^    const TGswParams *params1024_1 = new_TGswParams(3, 10, new_TLweParams(1024, 1, 2, 0., 1.));$/;"	v	namespace:__anonfeb37f530111	typeref:typename:const TGswParams *
params1024_1	src/tests/tlwe_test.cpp	/^    const TLweParams *params1024_1 = new_TLweParams(1024, 1, plaintext_modulus, 0., 1.);$/;"	v	namespace:__anonc028f2ea0111	typeref:typename:const TLweParams *
params1024_2	src/tests/tgsw_direct_test.cpp	/^    const TGswParams *params1024_2 = new_TGswParams(4, 8, new_TLweParams(1024, 2, plaintext_modu/;"	v	namespace:__anon2d2168ad0111	typeref:typename:const TGswParams *
params1024_2	src/tests/tgsw_test.cpp	/^    const TGswParams *params1024_2 = new_TGswParams(4, 8, new_TLweParams(1024, 2, 2, 0., 1.));$/;"	v	namespace:__anonfeb37f530111	typeref:typename:const TGswParams *
params1024_2	src/tests/tlwe_test.cpp	/^    const TLweParams *params1024_2 = new_TLweParams(1024, 2, plaintext_modulus, 0., 1.);$/;"	v	namespace:__anonc028f2ea0111	typeref:typename:const TLweParams *
params2048_1	src/tests/tgsw_direct_test.cpp	/^    const TGswParams *params2048_1 = new_TGswParams(4, 8, new_TLweParams(2048, 1, plaintext_modu/;"	v	namespace:__anon2d2168ad0111	typeref:typename:const TGswParams *
params2048_1	src/tests/tgsw_test.cpp	/^    const TGswParams *params2048_1 = new_TGswParams(4, 8, new_TLweParams(2048, 1, 2, 0., 1.));$/;"	v	namespace:__anonfeb37f530111	typeref:typename:const TGswParams *
params2048_1	src/tests/tlwe_test.cpp	/^    const TLweParams *params2048_1 = new_TLweParams(2048, 1, plaintext_modulus, 0., 1.);$/;"	v	namespace:__anonc028f2ea0111	typeref:typename:const TLweParams *
params2048_2	src/tests/tgsw_direct_test.cpp	/^    const TGswParams *params2048_2 = new_TGswParams(3, 10, new_TLweParams(2048, 2, plaintext_mod/;"	v	namespace:__anon2d2168ad0111	typeref:typename:const TGswParams *
params2048_2	src/tests/tgsw_test.cpp	/^    const TGswParams *params2048_2 = new_TGswParams(3, 10, new_TLweParams(2048, 2, 2, 0., 1.));$/;"	v	namespace:__anonfeb37f530111	typeref:typename:const TGswParams *
params2048_2	src/tests/tlwe_test.cpp	/^    const TLweParams *params2048_2 = new_TLweParams(2048, 2, plaintext_modulus, 0., 1.);$/;"	v	namespace:__anonc028f2ea0111	typeref:typename:const TLweParams *
params4	src/tests/small_size_test.cpp	/^        static const LweParams *params4;$/;"	m	class:__anon9baab4410111::LweTest	typeref:typename:const LweParams *	file:
params4	src/tests/small_size_test.cpp	/^    const LweParams *LweTest::params4 = new_LweParams(4, plaintext_modulus, 0., 1.);$/;"	m	class:__anon9baab4410111::LweTest	typeref:typename:const LweParams *
params500	src/tests/lwe_test.cpp	/^        static const LweParams *params500;$/;"	m	class:__anonc84148b60111::LweTest	typeref:typename:const LweParams *	file:
params500	src/tests/lwe_test.cpp	/^    const LweParams *LweTest::params500 = new_LweParams(500, plaintext_modulus, 0., 1.);$/;"	m	class:__anonc84148b60111::LweTest	typeref:typename:const LweParams *
params500_0	src/tests/lwekeyswitch_test.cpp	/^    const LweParams *params500_0 = new_LweParams(500, plaintext_modulus, 0., 1.);$/;"	v	namespace:__anon0e34bff10111	typeref:typename:const LweParams *
params500_1em5	src/tests/lwekeyswitch_test.cpp	/^    const LweParams *params500_1em5 = new_LweParams(500, plaintext_modulus, 1e-5, 1.);$/;"	v	namespace:__anon0e34bff10111	typeref:typename:const LweParams *
params512_1	src/tests/tgsw_direct_test.cpp	/^    const TGswParams *params512_1 = new_TGswParams(4, 8, new_TLweParams(512, 1, plaintext_modulu/;"	v	namespace:__anon2d2168ad0111	typeref:typename:const TGswParams *
params512_1	src/tests/tgsw_test.cpp	/^    const TGswParams *params512_1 = new_TGswParams(4, 8, new_TLweParams(512, 1, 2, 0., 1.));$/;"	v	namespace:__anonfeb37f530111	typeref:typename:const TGswParams *
params512_1	src/tests/tlwe_test.cpp	/^    const TLweParams *params512_1 = new_TLweParams(512, 1, plaintext_modulus, 0., 1.);$/;"	v	namespace:__anonc028f2ea0111	typeref:typename:const TLweParams *
params512_2	src/tests/tgsw_direct_test.cpp	/^    const TGswParams *params512_2 = new_TGswParams(3, 10, new_TLweParams(512, 2, plaintext_modul/;"	v	namespace:__anon2d2168ad0111	typeref:typename:const TGswParams *
params512_2	src/tests/tgsw_test.cpp	/^    const TGswParams *params512_2 = new_TGswParams(3, 10, new_TLweParams(512, 2, 2, 0., 1.));$/;"	v	namespace:__anonfeb37f530111	typeref:typename:const TGswParams *
params512_2	src/tests/tlwe_test.cpp	/^    const TLweParams *params512_2 = new_TLweParams(512, 2, plaintext_modulus, 0., 1.);$/;"	v	namespace:__anonc028f2ea0111	typeref:typename:const TLweParams *
params750	src/tests/lwe_test.cpp	/^        static const LweParams *params750;$/;"	m	class:__anonc84148b60111::LweTest	typeref:typename:const LweParams *	file:
params750	src/tests/lwe_test.cpp	/^    const LweParams *LweTest::params750 = new_LweParams(750, plaintext_modulus, 0., 1.);$/;"	m	class:__anonc84148b60111::LweTest	typeref:typename:const LweParams *
paramsStream_	src/muduo/examples/fastcgi/fastcgi.h	/^  muduo::net::Buffer paramsStream_;$/;"	m	class:FastCgiCodec	typeref:typename:muduo::net::Buffer
params_	src/muduo/examples/fastcgi/fastcgi.h	/^  ParamMap params_;$/;"	m	class:FastCgiCodec	typeref:typename:ParamMap
parent_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  UnitTest* const parent_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:UnitTest * const
parent_	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  MockDeathTestFactory* const parent_;$/;"	m	class:MockDeathTest	typeref:typename:MockDeathTestFactory * const	file:
parse	src/muduo/examples/procmon/procmon.cc	/^  void parse(const char* startAtState, int kbPerPage)$/;"	f	struct:StatData	typeref:typename:void	file:
parse	src/muduo/examples/protobuf/codec/codec.cc	/^MessagePtr ProtobufCodec::parse(const char* buf, int len, ErrorCode* error)$/;"	f	class:ProtobufCodec	typeref:typename:MessagePtr
parse	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^  bool parse(const string& tag)$/;"	f	struct:RawMessage	typeref:typename:bool	file:
parse	src/muduo/muduo/net/protobuf/ProtobufCodecLite.cc	/^ProtobufCodecLite::ErrorCode ProtobufCodecLite::parse(const char* buf,$/;"	f	class:ProtobufCodecLite	typeref:typename:ProtobufCodecLite::ErrorCode
parseAllParams	src/muduo/examples/fastcgi/fastcgi.cc	/^bool FastCgiCodec::parseAllParams()$/;"	f	class:FastCgiCodec	typeref:typename:bool
parseCommandLine	src/muduo/examples/ace/ttcp/common.cc	/^bool parseCommandLine(int argc, char* argv[], Options* opt)$/;"	f	typeref:typename:bool
parseCommandLine	src/muduo/examples/memcached/server/server.cc	/^bool parseCommandLine(int argc, char* argv[], MemcacheServer::Options* options)$/;"	f	typeref:typename:bool
parseFromBuffer	src/muduo/muduo/net/protobuf/ProtobufCodecLite.cc	/^bool ProtobufCodecLite::parseFromBuffer(StringPiece buf, google::protobuf::Message* message)$/;"	f	class:ProtobufCodecLite	typeref:typename:bool
parseMessage	src/muduo/examples/hub/codec.cc	/^ParseResult pubsub::parseMessage(Buffer* buf,$/;"	f	class:pubsub	typeref:typename:ParseResult
parseRequest	src/muduo/examples/fastcgi/fastcgi.cc	/^bool FastCgiCodec::parseRequest(Buffer* buf)$/;"	f	class:FastCgiCodec	typeref:typename:bool
parseRequest	src/muduo/muduo/net/http/HttpContext.cc	/^bool HttpContext::parseRequest(Buffer* buf, Timestamp receiveTime)$/;"	f	class:HttpContext	typeref:typename:bool
parser	src/tests/googletest/googlemock/scripts/upload.py	/^parser = optparse.OptionParser(usage="%prog [options] [-- diff_options]")$/;"	v
parser	src/tests/googletest/googletest/scripts/upload.py	/^parser = optparse.OptionParser(usage="%prog [options] [-- diff_options]")$/;"	v
partial_regex_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  regex_t partial_regex_;  \/\/ For PartialMatch().$/;"	m	class:testing::internal::RE	typeref:typename:regex_t
passByConstReference	src/muduo/muduo/base/tests/Date_unittest.cc	/^void passByConstReference(const Date& x)$/;"	f	typeref:typename:void
passByConstReference	src/muduo/muduo/base/tests/Timestamp_unittest.cc	/^void passByConstReference(const Timestamp& x)$/;"	f	typeref:typename:void
passByValue	src/muduo/muduo/base/tests/Date_unittest.cc	/^void passByValue(Date x)$/;"	f	typeref:typename:void
passByValue	src/muduo/muduo/base/tests/Timestamp_unittest.cc	/^void passByValue(Timestamp x)$/;"	f	typeref:typename:void
passed	src/tests/googletest/googletest/include/gtest/gtest-test-part.h	/^  bool passed() const { return type_ == kSuccess; }$/;"	f	class:testing::TestPartResult	typeref:typename:bool
passed_	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  bool passed_;$/;"	m	class:MockDeathTestFactory	typeref:typename:bool	file:
passed_	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  const bool passed_;$/;"	m	class:MockDeathTest	typeref:typename:const bool	file:
passed_args_	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  std::vector<bool> passed_args_;$/;"	m	class:MockDeathTestFactory	typeref:typename:std::vector<bool>	file:
path	src/muduo/muduo/net/http/HttpRequest.h	/^  const string& path() const$/;"	f	class:muduo::net::HttpRequest	typeref:typename:const string &
path_	src/muduo/muduo/net/http/HttpRequest.h	/^  string path_;$/;"	m	class:muduo::net::HttpRequest	typeref:typename:string
pathname_	src/tests/googletest/googletest/include/gtest/internal/gtest-filepath.h	/^  std::string pathname_;$/;"	m	class:testing::internal::FilePath	typeref:typename:std::string
pattern	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  const char* pattern() const { return pattern_; }$/;"	f	class:testing::internal::RE	typeref:typename:const char *
pattern_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  const char* pattern_;$/;"	m	class:testing::internal::RE	typeref:typename:const char *
payload	src/libtfhe-superaic-core/include/tfhe_package.h	/^    uint8_t  payload[];$/;"	m	struct:TFHE_Comm_Pack	typeref:typename:uint8_t[]
payload	src/muduo/examples/protobuf/rpcbench/echo.proto	/^  required string payload = 1;$/;"	f	message:echo.EchoRequest	typeref:typename:string
payload	src/muduo/examples/protobuf/rpcbench/echo.proto	/^  required string payload = 2;$/;"	f	message:echo.EchoResponse	typeref:typename:string
payload	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  T payload;$/;"	m	struct:testing::internal::ByMoveWrapper	typeref:typename:T
payload_	src/muduo/examples/ace/ttcp/ttcp_asio_async.cc	/^  struct PayloadMessage* payload_;$/;"	m	class:TtcpServerConnection	typeref:struct:PayloadMessage *	file:
payload_size	src/libtfhe-superaic-core/include/tfhe_package.h	/^    uint32_t payload_size;$/;"	m	class:TFHE_Payload	typeref:typename:uint32_t
payload_size	src/libtfhe-superaic-core/include/tfhe_package.h	/^    uint32_t payload_size;$/;"	m	struct:TFHE_Comm_Pack	typeref:typename:uint32_t
payload_type	src/libtfhe-superaic-core/include/tfhe_package.h	/^    const TFHE_PayloadType_e payload_type;$/;"	m	class:TFHE_Payload	typeref:typename:const TFHE_PayloadType_e
payload_type	src/libtfhe-superaic-core/include/tfhe_package.h	/^    uint16_t payload_type;$/;"	m	struct:TFHE_Comm_Pack	typeref:typename:uint16_t
pbs_Bgbit	src/libtfhe-superaic-core/include/classic_PBS_parameters.h	/^    const int32_t pbs_Bgbit;$/;"	m	struct:ClassicPBSParameters	typeref:typename:const int32_t
pbs_decompose_length	src/libtfhe-superaic-core/include/classic_PBS_parameters.h	/^    const int32_t pbs_decompose_length;$/;"	m	struct:ClassicPBSParameters	typeref:typename:const int32_t
pcond_	src/muduo/muduo/base/Condition.h	/^  pthread_cond_t pcond_;$/;"	m	class:muduo::Condition	typeref:typename:pthread_cond_t
peek	src/muduo/muduo/net/Buffer.h	/^  const char* peek() const$/;"	f	class:muduo::net::Buffer	typeref:typename:const char *
peekInt16	src/muduo/muduo/net/Buffer.h	/^  int16_t peekInt16() const$/;"	f	class:muduo::net::Buffer	typeref:typename:int16_t
peekInt32	src/muduo/muduo/net/Buffer.h	/^  int32_t peekInt32() const$/;"	f	class:muduo::net::Buffer	typeref:typename:int32_t
peekInt64	src/muduo/muduo/net/Buffer.h	/^  int64_t peekInt64() const$/;"	f	class:muduo::net::Buffer	typeref:typename:int64_t
peekInt8	src/muduo/muduo/net/Buffer.h	/^  int8_t peekInt8() const$/;"	f	class:muduo::net::Buffer	typeref:typename:int8_t
peerAddr_	src/muduo/muduo/net/TcpConnection.h	/^  const InetAddress peerAddr_;$/;"	m	class:muduo::net::TcpConnection	typeref:typename:const InetAddress
peerAddress	src/muduo/muduo/net/TcpConnection.h	/^  const InetAddress& peerAddress() const { return peerAddr_; }$/;"	f	class:muduo::net::TcpConnection	typeref:typename:const InetAddress &
pending	src/muduo/examples/multiplexer/demux.cc	/^  Buffer pending;$/;"	m	struct:Entry	typeref:typename:Buffer	file:
per_thread_test_part_result_reporter_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^      per_thread_test_part_result_reporter_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:internal::ThreadLocal<TestPartResultReporterInterface * >
performanceInspector_	src/muduo/muduo/net/inspect/Inspector.h	/^  std::unique_ptr<PerformanceInspector> performanceInspector_;$/;"	m	class:muduo::net::Inspector	typeref:typename:std::unique_ptr<PerformanceInspector>
performed_	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    bool performed_;$/;"	m	class:testing::internal::ReturnAction::Impl	typeref:typename:bool
pgrp	src/muduo/examples/procmon/procmon.cc	/^  int pgrp;$/;"	m	struct:StatData	typeref:typename:int	file:
pid	src/muduo/muduo/base/ProcessInfo.cc	/^pid_t ProcessInfo::pid()$/;"	f	class:ProcessInfo	typeref:typename:pid_t
pid	src/muduo/muduo/net/inspect/ProcessInspector.cc	/^string ProcessInspector::pid(HttpRequest::Method, const Inspector::ArgList&)$/;"	f	class:ProcessInspector	typeref:typename:string
pidString	src/muduo/muduo/base/ProcessInfo.cc	/^string ProcessInfo::pidString()$/;"	f	class:ProcessInfo	typeref:typename:string
pid_	src/muduo/examples/procmon/procmon.cc	/^  const pid_t pid_;$/;"	m	class:Procmon	typeref:typename:const pid_t	file:
pieces_	src/muduo/examples/curl/download.cc	/^  std::vector<std::unique_ptr<Piece>> pieces_;$/;"	m	class:Downloader	typeref:typename:std::vector<std::unique_ptr<Piece>>	file:
ping	src/muduo/contrib/hiredis/Hiredis.cc	/^int Hiredis::ping()$/;"	f	class:Hiredis	typeref:typename:int
ping	src/muduo/contrib/thrift/tests/ping/PingServer.cc	/^  void ping()$/;"	f	class:PingHandler	typeref:typename:void	file:
ping	src/muduo/contrib/thrift/tests/ping/ping.thrift	/^  void ping();$/;"	f	service:Ping	typeref:typename:void
ping	src/muduo/contrib/thrift/tests/ping/ping.thrift	/^namespace cpp ping$/;"	n	target:cpp
ping	src/muduo/contrib/thrift/tests/ping/ping.thrift	/^namespace py ping$/;"	n	target:py
ping	src/muduo/contrib/thrift/tests/ping/pingclient.py	/^def ping():$/;"	f
pingCallback	src/muduo/contrib/hiredis/Hiredis.cc	/^void Hiredis::pingCallback(Hiredis* me, redisReply* reply)$/;"	f	class:Hiredis	typeref:typename:void
pingpong_bench	src/muduo/examples/pingpong/CMakeLists.txt	/^add_executable(pingpong_bench bench.cc)$/;"	t
pingpong_client	src/muduo/examples/pingpong/CMakeLists.txt	/^add_executable(pingpong_client client.cc)$/;"	t
pingpong_server	src/muduo/examples/pingpong/CMakeLists.txt	/^add_executable(pingpong_server server.cc)$/;"	t
pipelines_	src/muduo/examples/sudoku/pipeline.cc	/^  const int pipelines_;$/;"	m	class:SudokuClient	typeref:typename:const int	file:
pkey_	src/muduo/muduo/base/ThreadLocal.h	/^  pthread_key_t pkey_;$/;"	m	class:muduo::ThreadLocal	typeref:typename:pthread_key_t
pkey_	src/muduo/muduo/base/ThreadLocalSingleton.h	/^    pthread_key_t pkey_;$/;"	m	class:muduo::ThreadLocalSingleton::Deleter	typeref:typename:pthread_key_t
pkginclude_HEADERS	src/tests/googletest/googlemock/Makefile.am	/^pkginclude_HEADERS = \\$/;"	m
pkginclude_HEADERS	src/tests/googletest/googletest/Makefile.am	/^pkginclude_HEADERS = \\$/;"	m
pkginclude_internal	src/tests/googletest/googlemock/Makefile.am	/^pkginclude_internaldir = $(pkgincludedir)\/internal$/;"	d
pkginclude_internal	src/tests/googletest/googletest/Makefile.am	/^pkginclude_internaldir = $(pkgincludedir)\/internal$/;"	d
pkginclude_internal_HEADERS	src/tests/googletest/googlemock/Makefile.am	/^pkginclude_internal_HEADERS = \\$/;"	m
pkginclude_internal_HEADERS	src/tests/googletest/googletest/Makefile.am	/^pkginclude_internal_HEADERS = \\$/;"	m
pkginclude_internaldir	src/tests/googletest/googlemock/Makefile.am	/^pkginclude_internaldir = $(pkgincludedir)\/internal$/;"	m
pkginclude_internaldir	src/tests/googletest/googletest/Makefile.am	/^pkginclude_internaldir = $(pkgincludedir)\/internal$/;"	m
placement new‌	docs/code_note.md	/^## placement new‌$/;"	s	chapter:Fake
plaintext_modulus	src/libtfhe-superaic-core/include/classic_PBS_parameters.h	/^    const int32_t plaintext_modulus; \/\/\/< size of plaintext space$/;"	m	struct:ClassicPBSParameters	typeref:typename:const int32_t
plaintext_modulus	src/libtfhe-superaic-core/include/lweparams.h	/^    const int32_t plaintext_modulus;$/;"	m	struct:LweParams	typeref:typename:const int32_t
plaintext_modulus	src/libtfhe-superaic-core/include/tlwe.h	/^    const int32_t plaintext_modulus;$/;"	m	struct:TLweParams	typeref:typename:const int32_t
plaintext_modulus	src/tests/ACC_test.cpp	/^    const int32_t plaintext_modulus = 8;$/;"	v	namespace:__anonef2481d50111	typeref:typename:const int32_t
plaintext_modulus	src/tests/FPGA_ACC_test.cpp	/^    const int32_t plaintext_modulus = 8;$/;"	v	namespace:__anon88d438720111	typeref:typename:const int32_t
plaintext_modulus	src/tests/QEMU_test.cpp	/^    const int32_t plaintext_modulus = 8;$/;"	v	namespace:__anon4f389dc60111	typeref:typename:const int32_t
plaintext_modulus	src/tests/bootstrapping_classic_PBS_parameters_test.cpp	/^    const int32_t plaintext_modulus = M8_PARAM.plaintext_modulus;$/;"	v	namespace:__anon8153b4f20111	typeref:typename:const int32_t
plaintext_modulus	src/tests/bootstrapping_direct_test.cpp	/^    const int32_t plaintext_modulus = 8;$/;"	v	namespace:__anon560166140111	typeref:typename:const int32_t
plaintext_modulus	src/tests/bootstrapping_test.cpp	/^    const int32_t plaintext_modulus = 2;$/;"	v	namespace:__anonf36cd29a0111	typeref:typename:const int32_t
plaintext_modulus	src/tests/decrypt_with_plaintext_modulus.cpp	/^    const int32_t plaintext_modulus = 8;$/;"	v	namespace:__anondb55d4a50111	typeref:typename:const int32_t
plaintext_modulus	src/tests/io_test.cpp	/^    const int32_t plaintext_modulus = 2;$/;"	v	namespace:__anon2d72c1c60111	typeref:typename:const int32_t
plaintext_modulus	src/tests/lwe_test.cpp	/^    const int32_t plaintext_modulus = 8;$/;"	v	namespace:__anonc84148b60111	typeref:typename:const int32_t
plaintext_modulus	src/tests/lwekeyswitch_test.cpp	/^    const int32_t plaintext_modulus = 2;$/;"	v	namespace:__anon0e34bff10111	typeref:typename:const int32_t
plaintext_modulus	src/tests/macros_decrypt_with_plaintext_modulus_macros.cpp	/^    const int32_t plaintext_modulus = M8_PARAM.plaintext_modulus;$/;"	v	namespace:__anon478224cd0111	typeref:typename:const int32_t
plaintext_modulus	src/tests/macros_modSwitch_with_plaintext_modulus_macros.cpp	/^    const int32_t plaintext_modulus = M8_PARAM.plaintext_modulus;$/;"	v	namespace:__anon4cdaee640111	typeref:typename:const int32_t
plaintext_modulus	src/tests/ops_add.cpp	/^    const int32_t plaintext_modulus = M8_PARAM.plaintext_modulus;$/;"	v	namespace:__anonb1f413890111	typeref:typename:const int32_t
plaintext_modulus	src/tests/ops_add_with_carry.cpp	/^    const int32_t plaintext_modulus = M8_PARAM.plaintext_modulus;$/;"	v	namespace:__anon662e63c40111	typeref:typename:const int32_t
plaintext_modulus	src/tests/session_test.cpp	/^    const int32_t plaintext_modulus = 8;$/;"	v	namespace:__anon23f859320111	typeref:typename:const int32_t
plaintext_modulus	src/tests/small_size_test.cpp	/^    const int32_t plaintext_modulus = 8;$/;"	v	namespace:__anon9baab4410111	typeref:typename:const int32_t
plaintext_modulus	src/tests/tgsw_direct_test.cpp	/^#define plaintext_modulus /;"	d	file:
plaintext_modulus	src/tests/tlwe_test.cpp	/^    const int32_t plaintext_modulus = 8;$/;"	v	namespace:__anonc028f2ea0111	typeref:typename:const int32_t
plaintext_modulus	src/tests/zpf_for_bootstrap_detail.cpp	/^    const int32_t plaintext_modulus = M8_PARAM.plaintext_modulus;$/;"	v	namespace:__anonc07144f40111	typeref:typename:const int32_t
plotCpu	src/muduo/examples/procmon/plot.cc	/^muduo::string Plot::plotCpu(const std::vector<double>& data)$/;"	f	class:Plot	typeref:typename:muduo::string
plot_test	src/muduo/examples/procmon/CMakeLists.txt	/^add_executable(plot_test plot_test.cc plot.cc)$/;"	t
pointer	src/muduo/muduo/base/ThreadLocalSingleton.h	/^  static T* pointer()$/;"	f	class:muduo::ThreadLocalSingleton	typeref:typename:T *
pointer	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^    T* pointer() { return &value_; }$/;"	f	class:testing::internal::ThreadLocal::ValueHolder	typeref:typename:T *
pointer	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  T* pointer() { return &value_; }$/;"	f	class:testing::internal::ThreadLocal	typeref:typename:T *
pointer	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  T* pointer() { return GetOrCreateValue(); }$/;"	f	class:testing::internal::ThreadLocal	typeref:typename:T *
pointer	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  const T* pointer() const { return &value_; }$/;"	f	class:testing::internal::ThreadLocal	typeref:typename:const T *
pointer	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  const T* pointer() const { return GetOrCreateValue(); }$/;"	f	class:testing::internal::ThreadLocal	typeref:typename:const T *
pointer1	src/tests/googletest/googlemock/test/gmock_stress_test.cc	/^linked_ptr<Derived1> pointer1(new Derived1(1, 2));$/;"	v	namespace:testing::__anonc83180760111	typeref:typename:linked_ptr<Derived1>
pointer2	src/tests/googletest/googlemock/test/gmock_stress_test.cc	/^linked_ptr<Derived2> pointer2(new Derived2(3, 4));$/;"	v	namespace:testing::__anonc83180760111	typeref:typename:linked_ptr<Derived2>
pointer_	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  T* pointer_;$/;"	m	class:testing::internal::ReferenceWrapper	typeref:typename:T *
policy_	src/muduo/examples/memcached/server/Session.h	/^  Item::UpdatePolicy policy_;$/;"	m	class:Session	typeref:typename:Item::UpdatePolicy
poll	src/muduo/muduo/net/poller/EPollPoller.cc	/^Timestamp EPollPoller::poll(int timeoutMs, ChannelList* activeChannels)$/;"	f	class:EPollPoller	typeref:typename:Timestamp
poll	src/muduo/muduo/net/poller/PollPoller.cc	/^Timestamp PollPoller::poll(int timeoutMs, ChannelList* activeChannels)$/;"	f	class:PollPoller	typeref:typename:Timestamp
pollReturnTime	src/muduo/muduo/net/EventLoop.h	/^  Timestamp pollReturnTime() const { return pollReturnTime_; }$/;"	f	class:muduo::net::EventLoop	typeref:typename:Timestamp
pollReturnTime_	src/muduo/muduo/net/EventLoop.h	/^  Timestamp pollReturnTime_;$/;"	m	class:muduo::net::EventLoop	typeref:typename:Timestamp
poller_	src/muduo/muduo/net/EventLoop.h	/^  std::unique_ptr<Poller> poller_;$/;"	m	class:muduo::net::EventLoop	typeref:typename:std::unique_ptr<Poller>
pollfds_	src/muduo/muduo/net/poller/PollPoller.h	/^  PollFdList pollfds_;$/;"	m	class:muduo::net::PollPoller	typeref:typename:PollFdList
polynomials.cpp.i	buildotests/libtfhe-superaic-core/Makefile	/^polynomials.cpp.i:$/;"	t
polynomials.cpp.o	buildotests/libtfhe-superaic-core/Makefile	/^polynomials.cpp.o:$/;"	t
polynomials.cpp.s	buildotests/libtfhe-superaic-core/Makefile	/^polynomials.cpp.s:$/;"	t
polynomials.i	buildotests/libtfhe-superaic-core/Makefile	/^polynomials.i: polynomials.cpp.i$/;"	t
polynomials.o	buildotests/libtfhe-superaic-core/Makefile	/^polynomials.o: polynomials.cpp.o$/;"	t
polynomials.s	buildotests/libtfhe-superaic-core/Makefile	/^polynomials.s: polynomials.cpp.s$/;"	t
ponce_	src/muduo/muduo/base/Singleton.h	/^  static pthread_once_t ponce_;$/;"	m	class:muduo::Singleton	typeref:typename:pthread_once_t
ponce_	src/muduo/muduo/base/Singleton.h	/^pthread_once_t Singleton<T>::ponce_ = PTHREAD_ONCE_INIT;$/;"	m	class:muduo::Singleton<T>	typeref:typename:pthread_once_t
pool_	src/muduo/examples/sudoku/stat.h	/^  const ThreadPool& pool_;  \/\/ only for ThreadPool::queueSize()$/;"	m	class:SudokuStat	typeref:typename:const ThreadPool &
port	src/muduo/examples/ace/ttcp/common.h	/^  uint16_t port;$/;"	m	struct:Options	typeref:typename:uint16_t
port	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockBackendServer.java	/^    private final int port;$/;"	f	class:MockBackendServer	file:
port	src/muduo/examples/protobuf/resolver/resolver.proto	/^  repeated int32 port = 3;$/;"	f	message:resolver.ResolveResponse	typeref:typename:int32
port	src/muduo/examples/wordcount/slowsink.py	/^	port = int(sys.argv[3])$/;"	v
port	src/muduo/examples/wordcount/slowsink.py	/^port = 2007$/;"	v
port	src/muduo/muduo/net/InetAddress.cc	/^uint16_t InetAddress::port() const$/;"	f	class:InetAddress	typeref:typename:uint16_t
portNetEndian	src/muduo/muduo/net/InetAddress.h	/^  uint16_t portNetEndian() const { return addr_.sin_port; }$/;"	f	class:muduo::net::InetAddress	typeref:typename:uint16_t
port_num_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^    const std::string port_num_;$/;"	m	class:testing::internal::StreamingListener::SocketWriter	typeref:typename:const std::string
pos_	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^    typename std::list<value_type>::iterator pos_;$/;"	m	class:testing::gmock_matchers_test::Streamlike::ConstIter	typeref:typename:std::list<value_type>::iterator	file:
position	src/muduo/examples/idleconnection/sortedlist.cc	/^    WeakConnectionList::iterator position;$/;"	m	struct:EchoServer::Node	typeref:typename:WeakConnectionList::iterator	file:
posix	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^namespace posix {$/;"	n	namespace:testing::internal
posix	src/tests/googletest/googletest/src/gtest-port.cc	/^namespace posix {$/;"	n	namespace:testing::internal	file:
postTransition	src/muduo/muduo/base/tests/TimeZone_unittest.cc	/^  bool postTransition;$/;"	m	struct:LocalToUtcTestCase	typeref:typename:bool	file:
postTransition	src/muduo/muduo/base/tests/TimeZone_unittest.cc	/^  bool postTransition;$/;"	m	struct:TestCase	typeref:typename:bool	file:
post_flag_parse_init_performed_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  bool post_flag_parse_init_performed_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:bool
powers_of_two_dimensions	src/tests/polynomial_test.cpp	/^        const set<int32_t> powers_of_two_dimensions = {512, 1024, 2048};$/;"	m	class:__anon87ebe9520111::PolynomialTest	typeref:typename:const set<int32_t>	file:
powers_of_two_dimensions	src/tests/small_size_test.cpp	/^        const set<int32_t> powers_of_two_dimensions = {8};$/;"	m	class:__anon9baab4410111::PolynomialTest	typeref:typename:const set<int32_t>	file:
ppid	src/muduo/examples/procmon/procmon.cc	/^  int ppid;$/;"	m	struct:StatData	typeref:typename:int	file:
pr1	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  TestPartResult * pr1, * pr2;$/;"	m	class:__anonf780395f0111::TestResultTest	typeref:typename:TestPartResult *	file:
pr2	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  TestPartResult * pr1, * pr2;$/;"	m	class:__anonf780395f0111::TestResultTest	typeref:typename:TestPartResult *	file:
precalc_impl_	src/tests/googletest/googletest/samples/sample8_unittest.cc	/^  PreCalculatedPrimeTable* precalc_impl_;$/;"	m	class:HybridPrimeTable	typeref:typename:PreCalculatedPrimeTable *	file:
precomp	src/libtfhe-superaic-core/include/polynomials.h	/^   void* precomp;$/;"	m	struct:LagrangeHalfCPolynomial	typeref:typename:void *
predicate_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  Predicate predicate_;$/;"	m	class:testing::internal::TrulyMatcher	typeref:typename:Predicate
prefix_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const StringType prefix_;$/;"	m	class:testing::internal::StartsWithMatcher	typeref:typename:const StringType
preinstall	buildotests/Makefile	/^preinstall: all$/;"	t
preinstall	buildotests/driver/Makefile	/^preinstall: all$/;"	t
preinstall	buildotests/examples/Makefile	/^preinstall: all$/;"	t
preinstall	buildotests/libtfhe-superaic-acc/Makefile	/^preinstall: all$/;"	t
preinstall	buildotests/libtfhe-superaic-client/Makefile	/^preinstall: all$/;"	t
preinstall	buildotests/libtfhe-superaic-core/Makefile	/^preinstall: all$/;"	t
preinstall	buildotests/libtfhe-superaic-core/fft_processors/Makefile	/^preinstall: all$/;"	t
preinstall	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^preinstall: all$/;"	t
preinstall	buildotests/libtfhe-superaic-server/Makefile	/^preinstall: all$/;"	t
preinstall	buildotests/tests/Makefile	/^preinstall: all$/;"	t
preinstall	buildotests/tests/googletest/Makefile	/^preinstall: all$/;"	t
preinstall	buildotests/tests/googletest/googlemock/Makefile	/^preinstall: all$/;"	t
preinstall	buildotests/tests/googletest/googlemock/gtest/Makefile	/^preinstall: all$/;"	t
preinstall/fast	buildotests/Makefile	/^preinstall\/fast:$/;"	t
preinstall/fast	buildotests/driver/Makefile	/^preinstall\/fast:$/;"	t
preinstall/fast	buildotests/examples/Makefile	/^preinstall\/fast:$/;"	t
preinstall/fast	buildotests/libtfhe-superaic-acc/Makefile	/^preinstall\/fast:$/;"	t
preinstall/fast	buildotests/libtfhe-superaic-client/Makefile	/^preinstall\/fast:$/;"	t
preinstall/fast	buildotests/libtfhe-superaic-core/Makefile	/^preinstall\/fast:$/;"	t
preinstall/fast	buildotests/libtfhe-superaic-core/fft_processors/Makefile	/^preinstall\/fast:$/;"	t
preinstall/fast	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^preinstall\/fast:$/;"	t
preinstall/fast	buildotests/libtfhe-superaic-server/Makefile	/^preinstall\/fast:$/;"	t
preinstall/fast	buildotests/tests/Makefile	/^preinstall\/fast:$/;"	t
preinstall/fast	buildotests/tests/googletest/Makefile	/^preinstall\/fast:$/;"	t
preinstall/fast	buildotests/tests/googletest/googlemock/Makefile	/^preinstall\/fast:$/;"	t
preinstall/fast	buildotests/tests/googletest/googlemock/gtest/Makefile	/^preinstall\/fast:$/;"	t
premature_exit_file_path_	src/tests/googletest/googletest/test/gtest_premature_exit_test.cc	/^  const char* premature_exit_file_path_;$/;"	m	class:__anonb806fa6c0111::PrematureExitTest	typeref:typename:const char *	file:
premature_exit_filepath_	src/tests/googletest/googletest/src/gtest.cc	/^  const char* const premature_exit_filepath_;$/;"	m	class:testing::internal::ScopedPrematureExitFile	typeref:typename:const char * const	file:
prepend	src/muduo/muduo/net/Buffer.h	/^  void prepend(const void* \/*restrict*\/ data, size_t len)$/;"	f	class:muduo::net::Buffer	typeref:typename:void
prependInt16	src/muduo/muduo/net/Buffer.h	/^  void prependInt16(int16_t x)$/;"	f	class:muduo::net::Buffer	typeref:typename:void
prependInt32	src/muduo/muduo/net/Buffer.h	/^  void prependInt32(int32_t x)$/;"	f	class:muduo::net::Buffer	typeref:typename:void
prependInt64	src/muduo/muduo/net/Buffer.h	/^  void prependInt64(int64_t x)$/;"	f	class:muduo::net::Buffer	typeref:typename:void
prependInt8	src/muduo/muduo/net/Buffer.h	/^  void prependInt8(int8_t x)$/;"	f	class:muduo::net::Buffer	typeref:typename:void
prependableBytes	src/muduo/muduo/net/Buffer.h	/^  size_t prependableBytes() const$/;"	f	class:muduo::net::Buffer	typeref:typename:size_t
prevRunningHandles_	src/muduo/examples/curl/Curl.h	/^  int prevRunningHandles_;$/;"	m	class:curl::Curl	typeref:typename:int
print	src/libtfhe-superaic-core/lwekey.cpp	/^void LweKey::print(void) const {$/;"	f	class:LweKey	typeref:typename:void
print	src/libtfhe-superaic-core/lweparams.cpp	/^void LweParams::print(void) const {$/;"	f	class:LweParams	typeref:typename:void
print	src/libtfhe-superaic-core/lwesamples.cpp	/^void LweSample::print(){$/;"	f	class:LweSample	typeref:typename:void
print	src/libtfhe-superaic-core/multiplication.cpp	/^void IntPolynomial::print(void) const {$/;"	f	class:IntPolynomial	typeref:typename:void
print	src/libtfhe-superaic-core/multiplication.cpp	/^void TorusPolynomial::print(bool bRaw) const {$/;"	f	class:TorusPolynomial	typeref:typename:void
print	src/libtfhe-superaic-core/tgsw.cpp	/^void TGswKey::print(void) const {$/;"	f	class:TGswKey	typeref:typename:void
print	src/libtfhe-superaic-core/tgsw.cpp	/^void TGswParams::print(void) const{$/;"	f	class:TGswParams	typeref:typename:void
print	src/libtfhe-superaic-core/tgsw.cpp	/^void TGswSample::print(void) const {$/;"	f	class:TGswSample	typeref:typename:void
print	src/libtfhe-superaic-core/tlwe.cpp	/^void TLweKey::print(void) const {$/;"	f	class:TLweKey	typeref:typename:void
print	src/libtfhe-superaic-core/tlwe.cpp	/^void TLweParams::print(void) const {$/;"	f	class:TLweParams	typeref:typename:void
print	src/libtfhe-superaic-core/tlwe.cpp	/^void TLweSample::print(void) const {$/;"	f	class:TLweSample	typeref:typename:void
print	src/muduo/examples/asio/tutorial/timer2/timer.cc	/^void print()$/;"	f	typeref:typename:void
print	src/muduo/examples/asio/tutorial/timer3/timer.cc	/^void print(muduo::net::EventLoop* loop, int* count)$/;"	f	typeref:typename:void
print	src/muduo/examples/asio/tutorial/timer4/timer.cc	/^  void print()$/;"	f	class:Printer	typeref:typename:void	file:
print	src/muduo/examples/protobuf/codec/codec_test.cc	/^void print(const Buffer& buf)$/;"	f	typeref:typename:void
print	src/muduo/muduo/base/tests/Fork_test.cc	/^void print()$/;"	f	typeref:typename:void
print	src/muduo/muduo/base/tests/SingletonThreadLocal_test.cc	/^void print()$/;"	f	typeref:typename:void
print	src/muduo/muduo/base/tests/ThreadLocal_test.cc	/^void print()$/;"	f	typeref:typename:void
print	src/muduo/muduo/base/tests/ThreadPool_test.cc	/^void print()$/;"	f	typeref:typename:void
print	src/muduo/muduo/net/protorpc/RpcCodec_test.cc	/^void print(const Buffer& buf)$/;"	f	typeref:typename:void
print	src/muduo/muduo/net/tests/Channel_test.cc	/^void print(const char* msg)$/;"	f	typeref:typename:void
print	src/muduo/muduo/net/tests/EventLoopThreadPool_unittest.cc	/^void print(EventLoop* p = NULL)$/;"	f	typeref:typename:void
print	src/muduo/muduo/net/tests/EventLoopThread_unittest.cc	/^void print(EventLoop* p = NULL)$/;"	f	typeref:typename:void
print	src/muduo/muduo/net/tests/TimerQueue_unittest.cc	/^void print(const char* msg)$/;"	f	typeref:typename:void
print1	src/muduo/examples/asio/tutorial/timer5/timer.cc	/^  void print1()$/;"	f	class:Printer	typeref:typename:void	file:
print1	src/muduo/examples/asio/tutorial/timer6/timer.cc	/^  void print1()$/;"	f	class:Printer	typeref:typename:void	file:
print2	src/muduo/examples/asio/tutorial/timer5/timer.cc	/^  void print2()$/;"	f	class:Printer	typeref:typename:void	file:
print2	src/muduo/examples/asio/tutorial/timer6/timer.cc	/^  void print2()$/;"	f	class:Printer	typeref:typename:void	file:
printActiveChannels	src/muduo/muduo/net/EventLoop.cc	/^void EventLoop::printActiveChannels() const$/;"	f	class:EventLoop	typeref:typename:void
printConnection	src/muduo/examples/netty/echo/server2.cc	/^  void printConnection()$/;"	f	class:EchoServer	typeref:typename:void	file:
printStatistics	src/muduo/examples/multiplexer/multiplexer.cc	/^  void printStatistics()$/;"	f	class:MultiplexServer	typeref:typename:void	file:
printString	src/muduo/muduo/base/tests/ThreadPool_test.cc	/^void printString(const std::string& str)$/;"	f	typeref:typename:void
printThroughput	src/muduo/examples/netty/discard/server.cc	/^  void printThroughput()$/;"	f	class:DiscardServer	typeref:typename:void	file:
printThroughput	src/muduo/examples/netty/echo/server.cc	/^  void printThroughput()$/;"	f	class:EchoServer	typeref:typename:void	file:
printThroughput	src/muduo/examples/netty/echo/server2.cc	/^  void printThroughput()$/;"	f	class:EchoServer	typeref:typename:void	file:
printThroughput	src/muduo/examples/simple/chargen/chargen.cc	/^void ChargenServer::printThroughput()$/;"	f	class:ChargenServer	typeref:typename:void
printTid	src/muduo/muduo/net/tests/TimerQueue_unittest.cc	/^void printTid()$/;"	f	typeref:typename:void
printUtcAndLocal	src/muduo/muduo/base/tests/TimeZone_util.cc	/^void printUtcAndLocal(int64_t utc, TimeZone local)$/;"	f	typeref:typename:void
print_TextModeProperties_toOStream	src/libtfhe-superaic-core/tfhe_generic_streams.cpp	/^void print_TextModeProperties_toOStream(const Ostream &F, const TextModeProperties *properties) /;"	f	typeref:typename:void
print_time	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  bool print_time;$/;"	m	struct:testing::Flags	typeref:typename:bool	file:
print_time_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  bool print_time_;$/;"	m	class:testing::internal::GTestFlagSaver	typeref:typename:bool
priority	src/muduo/examples/procmon/procmon.cc	/^  long priority;$/;"	m	struct:StatData	typeref:typename:long	file:
proc	src/libtfhe-superaic-core/fft_processors/nayuki/lagrangehalfc_impl.h	/^   FFT_Processor_nayuki* proc;$/;"	m	struct:LagrangeHalfCPolynomial_IMPL	typeref:typename:FFT_Processor_nayuki *
procStat	src/muduo/muduo/base/ProcessInfo.cc	/^string ProcessInfo::procStat()$/;"	f	class:ProcessInfo	typeref:typename:string
procStatus	src/muduo/muduo/base/ProcessInfo.cc	/^string ProcessInfo::procStatus()$/;"	f	class:ProcessInfo	typeref:typename:string
procStatus	src/muduo/muduo/net/inspect/ProcessInspector.cc	/^string ProcessInspector::procStatus(HttpRequest::Method, const Inspector::ArgList&)$/;"	f	class:ProcessInspector	typeref:typename:string
process	src/muduo/contrib/thrift/ThriftConnection.cc	/^void ThriftConnection::process()$/;"	f	class:ThriftConnection	typeref:typename:void
processExists	src/muduo/examples/procmon/procmon.cc	/^bool processExists(pid_t pid)$/;"	f	typeref:typename:bool
processFile	src/muduo/examples/wordcount/hasher.cc	/^void WordCountSender::processFile(const char* filename)$/;"	f	class:WordCountSender	typeref:typename:void
processInspector_	src/muduo/muduo/net/inspect/Inspector.h	/^  std::unique_ptr<ProcessInspector> processInspector_;$/;"	m	class:muduo::net::Inspector	typeref:typename:std::unique_ptr<ProcessInspector>
processRequest	src/muduo/examples/memcached/server/Session.cc	/^bool Session::processRequest(StringPiece request)$/;"	f	class:Session	typeref:typename:bool
processRequest	src/muduo/examples/sudoku/server_basic.cc	/^  bool processRequest(const TcpConnectionPtr& conn, const string& request)$/;"	f	class:SudokuServer	typeref:typename:bool	file:
processRequest	src/muduo/examples/sudoku/server_hybrid.cc	/^  bool processRequest(const TcpConnectionPtr& conn, const string& request, Timestamp receiveTime/;"	f	class:SudokuServer	typeref:typename:bool	file:
processRequest	src/muduo/examples/sudoku/server_multiloop.cc	/^  bool processRequest(const TcpConnectionPtr& conn, const string& request)$/;"	f	class:SudokuServer	typeref:typename:bool	file:
processRequest	src/muduo/examples/sudoku/server_prod.cc	/^  bool processRequest(const TcpConnectionPtr& conn, const string& request, Timestamp receiveTime/;"	f	class:SudokuServer	typeref:typename:bool	file:
processRequest	src/muduo/examples/sudoku/server_threadpool.cc	/^  bool processRequest(const TcpConnectionPtr& conn, const string& request)$/;"	f	class:SudokuServer	typeref:typename:bool	file:
processRequestLine	src/muduo/muduo/net/http/HttpContext.cc	/^bool HttpContext::processRequestLine(const char* begin, const char* end)$/;"	f	class:HttpContext	typeref:typename:bool
process_id	src/muduo/examples/ace/logging/logrecord.proto	/^    required int32 process_id = 3;$/;"	f	message:logging.LogRecord.Heartbeat	typeref:typename:int32
process_name	src/muduo/examples/ace/logging/logrecord.proto	/^    required string process_name = 2;$/;"	f	message:logging.LogRecord.Heartbeat	typeref:typename:string
process_start_time	src/muduo/examples/ace/logging/logrecord.proto	/^    required int64 process_start_time = 4; \/\/ microseconds sinch epoch$/;"	f	message:logging.LogRecord.Heartbeat	typeref:typename:int64
processinfo_test	src/muduo/muduo/base/tests/CMakeLists.txt	/^add_executable(processinfo_test ProcessInfo_test.cc)$/;"	t
processor_	src/muduo/contrib/thrift/ThriftConnection.h	/^  boost::shared_ptr<TProcessor> processor_;$/;"	m	class:ThriftConnection	typeref:typename:boost::shared_ptr<TProcessor>
procmon	src/muduo/examples/procmon/CMakeLists.txt	/^add_executable(procmon procmon.cc plot.cc)$/;"	t
procname	src/muduo/muduo/base/ProcessInfo.cc	/^StringPiece ProcessInfo::procname(const string& stat)$/;"	f	class:ProcessInfo	typeref:typename:StringPiece
procname	src/muduo/muduo/base/ProcessInfo.cc	/^string ProcessInfo::procname()$/;"	f	class:ProcessInfo	typeref:typename:string
procname_	src/muduo/examples/procmon/procmon.cc	/^  const string procname_;$/;"	m	class:Procmon	typeref:typename:const string	file:
producer_	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  static ValueProducer* producer_;$/;"	m	class:testing::DefaultValue	typeref:typename:ValueProducer *
producer_	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^typename DefaultValue<T>::ValueProducer* DefaultValue<T>::producer_ = NULL;$/;"	m	class:testing::DefaultValue<T>	typeref:typename:DefaultValue<T>::ValueProducer *
profile	src/muduo/muduo/net/inspect/PerformanceInspector.cc	/^string PerformanceInspector::profile(HttpRequest::Method, const Inspector::ArgList&)$/;"	f	class:PerformanceInspector	typeref:typename:string
programmable_bootstrap	src/libtfhe-superaic-acc/accs/CPU-ser/acc_cpu_ser.cpp	/^ACC_RESULT CPU_ACC::programmable_bootstrap(Session_ID_t sessionID,const shared_ptr<LweSample> in/;"	f	class:tfhe_superaic::CPU_ACC	typeref:typename:ACC_RESULT
programmable_bootstrap	src/libtfhe-superaic-acc/accs/FPGA-V0/acc_fpga_v0.cpp	/^ACC_RESULT FPGA_ACC_V0::programmable_bootstrap(Session_ID_t sessionID,const shared_ptr<LweSample/;"	f	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:ACC_RESULT
programmable_bootstrap	src/libtfhe-superaic-acc/accs/QEMU-V0/acc_qemu_v0.cpp	/^ACC_RESULT QEMU_ACC_V0::programmable_bootstrap(Session_ID_t sessionID,const shared_ptr<LweSample/;"	f	class:tfhe_superaic::QEMU_ACC_V0	typeref:typename:ACC_RESULT
programmable_bootstrap	src/libtfhe-superaic-acc/tfhe_acc.cpp	/^ACC_RESULT TFHE_ACC::programmable_bootstrap(Session_ID_t sessionID, shared_ptr<LweSample> in_sam/;"	f	class:tfhe_superaic::TFHE_ACC	typeref:typename:ACC_RESULT
proto2	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^namespace proto2 {$/;"	n	file:
proto2	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^namespace proto2 { class Message; }$/;"	n
proto_	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  const internal::linked_ptr<Proto> proto_;$/;"	m	class:testing::internal::SetArgumentPointeeAction	typeref:typename:const internal::linked_ptr<Proto>
proto_file	src/muduo/muduo/net/protorpc/rpcservice.proto	/^  repeated string proto_file = 2;$/;"	f	message:muduo.net.GetServiceResponse	typeref:typename:string
proto_file_name	src/muduo/muduo/net/protorpc/rpcservice.proto	/^  repeated string proto_file_name = 3;$/;"	f	message:muduo.net.GetServiceResponse	typeref:typename:string
protobuf	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^namespace protobuf$/;"	n	namespace:google
protobuf	src/muduo/muduo/net/protorpc/RpcChannel.h	/^namespace protobuf {$/;"	n	namespace:google
protobuf	src/muduo/muduo/net/protorpc/RpcServer.h	/^namespace protobuf {$/;"	n	namespace:google
protobuf_client	src/muduo/examples/protobuf/codec/CMakeLists.txt	/^add_executable(protobuf_client client.cc)$/;"	t
protobuf_codec	src/muduo/examples/protobuf/codec/CMakeLists.txt	/^add_library(protobuf_codec codec.cc)$/;"	t
protobuf_codec_all	src/muduo/examples/protobuf/codec/CMakeLists.txt	/^add_custom_target(protobuf_codec_all$/;"	t
protobuf_codec_test	src/muduo/examples/protobuf/codec/CMakeLists.txt	/^add_executable(protobuf_codec_test codec_test.cc)$/;"	t
protobuf_dispatcher_lite_test	src/muduo/examples/protobuf/codec/CMakeLists.txt	/^add_executable(protobuf_dispatcher_lite_test dispatcher_lite_test.cc)$/;"	t
protobuf_dispatcher_test	src/muduo/examples/protobuf/codec/CMakeLists.txt	/^add_executable(protobuf_dispatcher_test dispatcher_test.cc)$/;"	t
protobuf_rpc_all	src/muduo/examples/protobuf/rpc/CMakeLists.txt	/^add_custom_target(protobuf_rpc_all$/;"	t
protobuf_rpc_balancer	src/muduo/examples/protobuf/rpcbalancer/CMakeLists.txt	/^add_executable(protobuf_rpc_balancer balancer.cc)$/;"	t
protobuf_rpc_balancer_raw	src/muduo/examples/protobuf/rpcbalancer/CMakeLists.txt	/^add_executable(protobuf_rpc_balancer_raw balancer_raw.cc)$/;"	t
protobuf_rpc_echo_client	src/muduo/examples/protobuf/rpcbench/CMakeLists.txt	/^add_executable(protobuf_rpc_echo_client client.cc)$/;"	t
protobuf_rpc_echo_server	src/muduo/examples/protobuf/rpcbench/CMakeLists.txt	/^add_executable(protobuf_rpc_echo_server server.cc)$/;"	t
protobuf_rpc_resolver_client	src/muduo/examples/protobuf/resolver/CMakeLists.txt	/^add_executable(protobuf_rpc_resolver_client client.cc)$/;"	t
protobuf_rpc_resolver_server	src/muduo/examples/protobuf/resolver/CMakeLists.txt	/^add_executable(protobuf_rpc_resolver_server server.cc)$/;"	t
protobuf_rpc_sudoku_client	src/muduo/examples/protobuf/rpc/CMakeLists.txt	/^add_executable(protobuf_rpc_sudoku_client client.cc)$/;"	t
protobuf_rpc_sudoku_server	src/muduo/examples/protobuf/rpc/CMakeLists.txt	/^add_executable(protobuf_rpc_sudoku_server server.cc)$/;"	t
protobuf_rpc_wire_test	src/muduo/muduo/net/protorpc/CMakeLists.txt	/^add_executable(protobuf_rpc_wire_test RpcCodec_test.cc)$/;"	t
protobuf_server	src/muduo/examples/protobuf/codec/CMakeLists.txt	/^add_executable(protobuf_server server.cc)$/;"	t
protocol_	src/muduo/examples/memcached/server/Session.h	/^  Protocol protocol_;$/;"	m	class:Session	typeref:typename:Protocol
prototype_	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^  const ::google::protobuf::Message* prototype_;$/;"	m	class:muduo::net::ProtobufCodecLite	typeref:typename:const::google::protobuf::Message *
pthreadId_	src/muduo/muduo/base/Thread.h	/^  pthread_t  pthreadId_;$/;"	m	class:muduo::Thread	typeref:typename:pthread_t
pthread_flag	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^bool pthread_flag;$/;"	v	namespace:__anon2b0cfa7f0111	typeref:typename:bool
pthreads	src/tests/googletest/googlemock/configure.ac	/^AC_ARG_WITH([pthreads],$/;"	w
pthreads	src/tests/googletest/googletest/configure.ac	/^AC_ARG_WITH([pthreads],$/;"	w
ptr_	src/muduo/muduo/base/StringPiece.h	/^  const char*   ptr_;$/;"	m	class:muduo::StringPiece	typeref:typename:const char *
ptr_	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  T1* const ptr_;$/;"	m	class:testing::internal::AssignAction	typeref:typename:T1 * const
ptr_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  T* ptr_;$/;"	m	class:testing::internal::scoped_ptr	typeref:typename:T *
pub	src/muduo/examples/hub/CMakeLists.txt	/^add_executable(pub pub.cc)$/;"	t
publish	src/muduo/examples/hub/hub.cc	/^  void publish(const string& content, Timestamp time)$/;"	f	class:pubsub::Topic	typeref:typename:void	file:
publish	src/muduo/examples/hub/pubsub.cc	/^bool PubSubClient::publish(const string& topic, const string& content)$/;"	f	class:PubSubClient	typeref:typename:bool
pubsub	src/muduo/examples/hub/codec.h	/^namespace pubsub$/;"	n
pubsub	src/muduo/examples/hub/hub.cc	/^namespace pubsub$/;"	n	file:
pubsub	src/muduo/examples/hub/pubsub.h	/^namespace pubsub$/;"	n
put	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/EventQueue.java	/^    public void put(Event e) {$/;"	m	class:EventQueue
put	src/muduo/muduo/base/BlockingQueue.h	/^  void put(T&& x)$/;"	f	class:muduo::BlockingQueue	typeref:typename:void
put	src/muduo/muduo/base/BlockingQueue.h	/^  void put(const T& x)$/;"	f	class:muduo::BlockingQueue	typeref:typename:void
put	src/muduo/muduo/base/BoundedBlockingQueue.h	/^  void put(T&& x)$/;"	f	class:muduo::BoundedBlockingQueue	typeref:typename:void
put	src/muduo/muduo/base/BoundedBlockingQueue.h	/^  void put(const T& x)$/;"	f	class:muduo::BoundedBlockingQueue	typeref:typename:void
put_left	src/muduo/examples/sudoku/sudoku.cc	/^    void put_left(Column* old, Column* nnew)$/;"	f	class:SudokuSolver	typeref:typename:void	file:
put_up	src/muduo/examples/sudoku/sudoku.cc	/^    void put_up(Column* old, Node* nnew)$/;"	f	class:SudokuSolver	typeref:typename:void	file:
puzzle	src/muduo/examples/sudoku/server_hybrid.cc	/^    string puzzle;$/;"	m	struct:SudokuServer::Request	typeref:typename:string	file:
puzzle	src/muduo/examples/sudoku/server_prod.cc	/^    string puzzle;$/;"	m	struct:SudokuServer::Request	typeref:typename:string	file:
py_test	src/tests/googletest/googletest/cmake/internal_utils.cmake	/^function(py_test name)$/;"	f
q0_	src/tests/googletest/googletest/samples/sample3_unittest.cc	/^  Queue<int> q0_;$/;"	m	class:QueueTest	typeref:typename:Queue<int>	file:
q0_	src/tests/googletest/googletest/samples/sample5_unittest.cc	/^  Queue<int> q0_;$/;"	m	class:QueueTest	typeref:typename:Queue<int>	file:
q1_	src/tests/googletest/googletest/samples/sample3_unittest.cc	/^  Queue<int> q1_;$/;"	m	class:QueueTest	typeref:typename:Queue<int>	file:
q1_	src/tests/googletest/googletest/samples/sample5_unittest.cc	/^  Queue<int> q1_;$/;"	m	class:QueueTest	typeref:typename:Queue<int>	file:
q2_	src/tests/googletest/googletest/samples/sample3_unittest.cc	/^  Queue<int> q2_;$/;"	m	class:QueueTest	typeref:typename:Queue<int>	file:
q2_	src/tests/googletest/googletest/samples/sample5_unittest.cc	/^  Queue<int> q2_;$/;"	m	class:QueueTest	typeref:typename:Queue<int>	file:
qnxnto	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v	typeref:typename:char const *
qnxnto	buildotests/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v	typeref:typename:char const *
qtest	Makefile	/^qtest: buildqtests$/;"	t
query	src/muduo/muduo/net/http/HttpRequest.h	/^  const string& query() const$/;"	f	class:muduo::net::HttpRequest	typeref:typename:const string &
query_	src/muduo/muduo/net/http/HttpRequest.h	/^  string query_;$/;"	m	class:muduo::net::HttpRequest	typeref:typename:string
query_proto	src/muduo/examples/protobuf/codec/CMakeLists.txt	/^add_library(query_proto query.pb.cc)$/;"	t
question	src/muduo/examples/protobuf/codec/query.proto	/^  repeated string question = 3;$/;"	f	message:muduo.Query	typeref:typename:string
questioner	src/muduo/examples/protobuf/codec/query.proto	/^  required string questioner = 2;$/;"	f	message:muduo.Answer	typeref:typename:string
questioner	src/muduo/examples/protobuf/codec/query.proto	/^  required string questioner = 2;$/;"	f	message:muduo.Query	typeref:typename:string
queue	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/EventQueue.java	/^    private BlockingDeque<Event> queue = new LinkedBlockingDeque<Event>();$/;"	f	class:EventQueue	file:
queue	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockBackendServer.java	/^    private final EventQueue queue;$/;"	f	class:MockBackendServer	file:
queue	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockClient.java	/^    private final EventQueue queue;$/;"	f	class:MockClient	file:
queue	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MultiplexerTest.java	/^    private EventQueue queue;$/;"	f	class:MultiplexerTest	file:
queue	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/TestCase.java	/^    protected EventQueue queue;$/;"	f	class:TestCase
queueInLoop	src/muduo/muduo/net/EventLoop.cc	/^void EventLoop::queueInLoop(Functor cb)$/;"	f	class:EventLoop	typeref:typename:void
queueSize	src/muduo/muduo/base/ThreadPool.cc	/^size_t ThreadPool::queueSize() const$/;"	f	class:ThreadPool	typeref:typename:size_t
queueSize	src/muduo/muduo/net/EventLoop.cc	/^size_t EventLoop::queueSize() const$/;"	f	class:EventLoop	typeref:typename:size_t
queue_	src/muduo/muduo/base/tests/BlockingQueue_bench.cc	/^  muduo::BlockingQueue<muduo::Timestamp> queue_;$/;"	m	class:Bench	typeref:typename:muduo::BlockingQueue<muduo::Timestamp>	file:
queue_	src/muduo/muduo/base/tests/BlockingQueue_test.cc	/^  muduo::BlockingQueue<std::string> queue_;$/;"	m	class:Test	typeref:typename:muduo::BlockingQueue<std::string>	file:
queue_	src/muduo/muduo/base/tests/BoundedBlockingQueue_test.cc	/^  muduo::BoundedBlockingQueue<std::string> queue_;$/;"	m	class:Test	typeref:typename:muduo::BoundedBlockingQueue<std::string>	file:
queue_type	src/muduo/muduo/base/BlockingQueue.h	/^  using queue_type = std::deque<T>;$/;"	t	class:muduo::BlockingQueue	typeref:typename:std::deque<T>
queues_	src/muduo/muduo/base/tests/BlockingQueue_bench2.cc	/^  std::vector<std::unique_ptr<muduo::BlockingQueue<int>>> queues_;$/;"	m	class:Bench	typeref:typename:std::vector<std::unique_ptr<muduo::BlockingQueue<int>>>	file:
quit	src/muduo/examples/cdns/dns.cc	/^void quit()$/;"	f	typeref:typename:void
quit	src/muduo/examples/pingpong/client.cc	/^  void quit()$/;"	f	class:Client	typeref:typename:void	file:
quit	src/muduo/muduo/net/EventLoop.cc	/^void EventLoop::quit()$/;"	f	class:EventLoop	typeref:typename:void
quit	src/muduo/muduo/net/tests/EventLoopThread_unittest.cc	/^void quit(EventLoop* p)$/;"	f	typeref:typename:void
quit_	src/muduo/muduo/net/EventLoop.h	/^  std::atomic<bool> quit_;$/;"	m	class:muduo::net::EventLoop	typeref:typename:std::atomic<bool>
r0	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  TestResult * r0, * r1, * r2;$/;"	m	class:__anonf780395f0111::TestResultTest	typeref:typename:TestResult *	file:
r1	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  TestResult * r0, * r1, * r2;$/;"	m	class:__anonf780395f0111::TestResultTest	typeref:typename:TestResult *	file:
r1_	src/tests/googletest/googletest/test/gtest-test-part_test.cc	/^  TestPartResult r1_, r2_, r3_;$/;"	m	class:__anona7ba7e300111::TestPartResultTest	typeref:typename:TestPartResult	file:
r1_	src/tests/googletest/googletest/test/gtest-test-part_test.cc	/^  const TestPartResult r1_, r2_;$/;"	m	class:__anona7ba7e300111::TestPartResultArrayTest	typeref:typename:const TestPartResult	file:
r2	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  TestResult * r0, * r1, * r2;$/;"	m	class:__anonf780395f0111::TestResultTest	typeref:typename:TestResult *	file:
r2_	src/tests/googletest/googletest/test/gtest-test-part_test.cc	/^  TestPartResult r1_, r2_, r3_;$/;"	m	class:__anona7ba7e300111::TestPartResultTest	typeref:typename:TestPartResult	file:
r2_	src/tests/googletest/googletest/test/gtest-test-part_test.cc	/^  const TestPartResult r1_, r2_;$/;"	m	class:__anona7ba7e300111::TestPartResultArrayTest	typeref:typename:const TestPartResult	file:
r3_	src/tests/googletest/googletest/test/gtest-test-part_test.cc	/^  TestPartResult r1_, r2_, r3_;$/;"	m	class:__anona7ba7e300111::TestPartResultTest	typeref:typename:TestPartResult	file:
ram_chart_	src/muduo/examples/procmon/procmon.cc	/^  Plot ram_chart_;$/;"	m	class:Procmon	typeref:typename:Plot	file:
random	src/muduo/examples/filetransfer/loadtest/Client.java	/^        Random random = new Random();$/;"	f	class:Client.PipelineFactory
random	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  internal::Random* random() { return &random_; }$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:internal::Random *
random_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  internal::Random random_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:internal::Random
random_	src/tests/googletest/googletest/test/gtest-port_test.cc	/^  Random       random_;$/;"	m	class:testing::internal::AtomicCounterWithMutex	typeref:typename:Random	file:
random_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  testing::internal::Random random_;$/;"	m	class:__anonf780395f0111::VectorShuffleTest	typeref:typename:testing::internal::Random	file:
random_binary_key	src/tests/bootstrapping_classic_PBS_parameters_test.cpp	/^    vector<bool> random_binary_key(const int32_t n) {$/;"	f	namespace:__anon8153b4f20111	typeref:typename:vector<bool>
random_binary_key	src/tests/bootstrapping_direct_test.cpp	/^    vector<bool> random_binary_key(const int32_t n) {$/;"	f	namespace:__anon560166140111	typeref:typename:vector<bool>
random_binary_key	src/tests/bootstrapping_test.cpp	/^    vector<bool> random_binary_key(const int32_t n) {$/;"	f	namespace:__anonf36cd29a0111	typeref:typename:vector<bool>
random_binary_key	src/tests/decrypt_with_plaintext_modulus.cpp	/^    vector<bool> random_binary_key(const int32_t n) {$/;"	f	namespace:__anondb55d4a50111	typeref:typename:vector<bool>
random_binary_key	src/tests/macros_decrypt_with_plaintext_modulus_macros.cpp	/^    vector<bool> random_binary_key(const int32_t n) {$/;"	f	namespace:__anon478224cd0111	typeref:typename:vector<bool>
random_binary_key	src/tests/macros_modSwitch_with_plaintext_modulus_macros.cpp	/^    vector<bool> random_binary_key(const int32_t n) {$/;"	f	namespace:__anon4cdaee640111	typeref:typename:vector<bool>
random_binary_key	src/tests/ops_add.cpp	/^    vector<bool> random_binary_key(const int32_t n) {$/;"	f	namespace:__anonb1f413890111	typeref:typename:vector<bool>
random_binary_key	src/tests/ops_add_with_carry.cpp	/^    vector<bool> random_binary_key(const int32_t n) {$/;"	f	namespace:__anon662e63c40111	typeref:typename:vector<bool>
random_binary_key	src/tests/small_size_test.cpp	/^    vector<bool> random_binary_key(const int32_t n) {$/;"	f	namespace:__anon9baab4410111	typeref:typename:vector<bool>
random_ks_key	src/tests/ACC_test.cpp	/^    void random_ks_key(LweKeySwitchKey* key) {$/;"	f	namespace:__anonef2481d50111	typeref:typename:void
random_ks_key	src/tests/FPGA_ACC_test.cpp	/^    void random_ks_key(LweKeySwitchKey* key) {$/;"	f	namespace:__anon88d438720111	typeref:typename:void
random_ks_key	src/tests/QEMU_test.cpp	/^    void random_ks_key(LweKeySwitchKey* key) {$/;"	f	namespace:__anon4f389dc60111	typeref:typename:void
random_ks_key	src/tests/io_test.cpp	/^    void random_ks_key(LweKeySwitchKey* key) {$/;"	f	namespace:__anon2d72c1c60111	typeref:typename:void
random_ks_key	src/tests/session_test.cpp	/^    void random_ks_key(LweKeySwitchKey* key) {$/;"	f	namespace:__anon23f859320111	typeref:typename:void
random_reals	src/libtfhe-superaic-core/fft_processors/nayuki/fft-test.c	/^static double *random_reals(int32_t n) {$/;"	f	typeref:typename:double *	file:
random_seed	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  int random_seed() const { return random_seed_; }$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:int
random_seed	src/tests/googletest/googletest/src/gtest.cc	/^int UnitTest::random_seed() const { return impl_->random_seed(); }$/;"	f	class:testing::UnitTest	typeref:typename:int
random_seed	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  Int32 random_seed;$/;"	m	struct:testing::Flags	typeref:typename:Int32	file:
random_seed_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  int random_seed_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:int
random_seed_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  internal::Int32 random_seed_;$/;"	m	class:testing::internal::GTestFlagSaver	typeref:typename:internal::Int32
random_small_ints	src/tests/polynomial_test.cpp	/^    void random_small_ints(int32_t *tab, int32_t bound, int32_t N) {$/;"	f	namespace:__anon87ebe9520111	typeref:typename:void
range_	src/muduo/examples/curl/download.cc	/^  muduo::string range_;$/;"	m	class:Piece	typeref:typename:muduo::string	file:
ratioX_	src/muduo/examples/procmon/plot.h	/^  const double ratioX_;$/;"	m	class:Plot	typeref:typename:const double
rawCb_	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^  RawMessageCallback rawCb_;$/;"	m	class:muduo::net::ProtobufCodecLite	typeref:typename:RawMessageCallback
read	src/muduo/examples/memcached/server/Session.cc	/^  bool read(T* val)$/;"	f	struct:Session::Reader	typeref:typename:bool	file:
read	src/muduo/muduo/base/GzipFile.h	/^  int read(void* buf, int len) { return ::gzread(file_, buf, len); }$/;"	f	class:muduo::GzipFile	typeref:typename:int
read	src/muduo/muduo/net/SocketsOps.cc	/^ssize_t sockets::read(int sockfd, void *buf, size_t count)$/;"	f	class:sockets	typeref:typename:ssize_t
readBytes	src/muduo/muduo/base/TimeZone.cc	/^  string readBytes(int n)$/;"	f	class:muduo::detail::File	typeref:typename:string	file:
readCallback	src/muduo/examples/pingpong/bench.cc	/^void readCallback(Timestamp, int fd, int idx)$/;"	f	typeref:typename:void
readCallback_	src/muduo/muduo/net/Channel.h	/^  ReadEventCallback readCallback_;$/;"	m	class:muduo::net::Channel	typeref:typename:ReadEventCallback
readDataBlock	src/muduo/muduo/base/TimeZone.cc	/^bool readDataBlock(File& f, struct TimeZone::Data* data, bool v1)$/;"	f	namespace:muduo::detail	typeref:typename:bool
readFd	src/muduo/muduo/net/Buffer.cc	/^ssize_t Buffer::readFd(int fd, int* savedErrno)$/;"	f	class:Buffer	typeref:typename:ssize_t
readFile	src/muduo/examples/filetransfer/download.cc	/^string readFile(const char* filename)$/;"	f	typeref:typename:string
readFile	src/muduo/muduo/base/FileUtil.h	/^int readFile(StringArg filename,$/;"	f	namespace:muduo::FileUtil	typeref:typename:int
readInput	src/muduo/examples/sudoku/batch.cc	/^InputPtr readInput(std::istream& in)$/;"	f	typeref:typename:InputPtr
readInput	src/muduo/examples/sudoku/loadtest.cc	/^InputPtr readInput(std::istream& in)$/;"	f	typeref:typename:InputPtr
readInput	src/muduo/examples/sudoku/pipeline.cc	/^InputPtr readInput(std::istream& in)$/;"	f	typeref:typename:InputPtr
readInt16	src/muduo/examples/fastcgi/fastcgi.cc	/^uint16_t readInt16(const void* p)$/;"	f	typeref:typename:uint16_t
readInt16	src/muduo/muduo/net/Buffer.h	/^  int16_t readInt16()$/;"	f	class:muduo::net::Buffer	typeref:typename:int16_t
readInt32	src/muduo/muduo/base/TimeZone.cc	/^  int32_t readInt32()$/;"	f	class:muduo::detail::File	typeref:typename:int32_t	file:
readInt32	src/muduo/muduo/net/Buffer.h	/^  int32_t readInt32()$/;"	f	class:muduo::net::Buffer	typeref:typename:int32_t
readInt64	src/muduo/muduo/base/TimeZone.cc	/^  int64_t readInt64()$/;"	f	class:muduo::detail::File	typeref:typename:int64_t	file:
readInt64	src/muduo/muduo/net/Buffer.h	/^  int64_t readInt64()$/;"	f	class:muduo::net::Buffer	typeref:typename:int64_t
readInt8	src/muduo/muduo/net/Buffer.h	/^  int8_t readInt8()$/;"	f	class:muduo::net::Buffer	typeref:typename:int8_t
readLen	src/muduo/examples/fastcgi/fastcgi.cc	/^uint32_t FastCgiCodec::readLen()$/;"	f	class:FastCgiCodec	typeref:typename:uint32_t
readLink	src/muduo/examples/procmon/procmon.cc	/^  string readLink(const char* basename)$/;"	f	class:Procmon	typeref:typename:string	file:
readProcFile	src/muduo/examples/procmon/procmon.cc	/^  string readProcFile(const char* basename)$/;"	f	class:Procmon	typeref:typename:string	file:
readTimeZoneFile	src/muduo/muduo/base/TimeZone.cc	/^bool readTimeZoneFile(const char* zonefile, struct TimeZone::Data* data)$/;"	f	namespace:muduo::detail	typeref:typename:bool
readTimerfd	src/muduo/muduo/net/TimerQueue.cc	/^void readTimerfd(int timerfd, Timestamp now)$/;"	f	namespace:muduo::net::detail	typeref:typename:void
readToBuffer	src/muduo/muduo/base/FileUtil.cc	/^int FileUtil::ReadSmallFile::readToBuffer(int* size)$/;"	f	class:FileUtil::ReadSmallFile	typeref:typename:int
readToEnd	src/muduo/muduo/base/TimeZone.cc	/^  string readToEnd()$/;"	f	class:muduo::detail::File	typeref:typename:string	file:
readToString	src/muduo/muduo/base/FileUtil.cc	/^int FileUtil::ReadSmallFile::readToString(int maxSize,$/;"	f	class:FileUtil::ReadSmallFile	typeref:typename:int
readUInt8	src/muduo/muduo/base/TimeZone.cc	/^  uint8_t readUInt8()$/;"	f	class:muduo::detail::File	typeref:typename:uint8_t	file:
read_LweBootstrappingKey_content	src/libtfhe-superaic-core/tfhe_io.cpp	/^void read_LweBootstrappingKey_content(const Istream &F, LweBootstrappingKey *bk) {$/;"	f	typeref:typename:void
read_fd	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  int read_fd() const { return read_fd_; }$/;"	f	class:testing::internal::DeathTestImpl	typeref:typename:int	file:
read_fd_	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  int read_fd_;$/;"	m	class:testing::internal::DeathTestImpl	typeref:typename:int	file:
read_lweKeySwitchKey_content	src/libtfhe-superaic-core/tfhe_io.cpp	/^void read_lweKeySwitchKey_content(const Istream &F, LweKeySwitchKey *ks) {$/;"	f	typeref:typename:void
read_lweKeySwitchParameters_section	src/libtfhe-superaic-core/tfhe_io.cpp	/^void read_lweKeySwitchParameters_section(const Istream &F, LweKeySwitchParameters *reps) {$/;"	f	typeref:typename:void
read_lweKey_content	src/libtfhe-superaic-core/tfhe_io.cpp	/^void read_lweKey_content(const Istream &F, LweKey *key) {$/;"	f	typeref:typename:void
read_lweSample	src/libtfhe-superaic-core/tfhe_io.cpp	/^void read_lweSample(const Istream &F, LweSample *sample, const LweParams *params) {$/;"	f	typeref:typename:void
read_n	src/muduo/examples/ace/ttcp/ttcp_blocking.cc	/^static int read_n(int sockfd, void* buf, int length)$/;"	f	typeref:typename:int	file:
read_new_lweBootstrappingKey	src/libtfhe-superaic-core/tfhe_io.cpp	/^read_new_lweBootstrappingKey(const Istream &F, const LweParams *in_out_params = 0, const TGswPar/;"	f	typeref:typename:LweBootstrappingKey *
read_new_lweKey	src/libtfhe-superaic-core/tfhe_io.cpp	/^LweKey *read_new_lweKey(const Istream &F, const LweParams *params = 0x0) {$/;"	f	typeref:typename:LweKey *
read_new_lweKeySwitchKey	src/libtfhe-superaic-core/tfhe_io.cpp	/^LweKeySwitchKey *read_new_lweKeySwitchKey(const Istream &F, const LweParams *out_params = 0) {$/;"	f	typeref:typename:LweKeySwitchKey *
read_new_lweParams	src/libtfhe-superaic-core/tfhe_io.cpp	/^LweParams *read_new_lweParams(const Istream &F) {$/;"	f	typeref:typename:LweParams *
read_new_tGswKey	src/libtfhe-superaic-core/tfhe_io.cpp	/^TGswKey *read_new_tGswKey(const Istream &F, const TGswParams *params = 0) {$/;"	f	typeref:typename:TGswKey *
read_new_tGswParams	src/libtfhe-superaic-core/tfhe_io.cpp	/^TGswParams *read_new_tGswParams(const Istream &F) {$/;"	f	typeref:typename:TGswParams *
read_new_tGswParams_section	src/libtfhe-superaic-core/tfhe_io.cpp	/^TGswParams *read_new_tGswParams_section(const Istream &F, const TLweParams *tlwe_params) {$/;"	f	typeref:typename:TGswParams *
read_new_tLweKey	src/libtfhe-superaic-core/tfhe_io.cpp	/^TLweKey *read_new_tLweKey(const Istream &F) {$/;"	f	typeref:typename:TLweKey *
read_new_tLweParams	src/libtfhe-superaic-core/tfhe_io.cpp	/^TLweParams *read_new_tLweParams(const Istream &F) {$/;"	f	typeref:typename:TLweParams *
read_new_tfheGateBootstrappingCloudKeySet	src/libtfhe-superaic-core/tfhe_io.cpp	/^read_new_tfheGateBootstrappingCloudKeySet(const Istream &F, const TFheGateBootstrappingParameter/;"	f	typeref:typename:TFheGateBootstrappingCloudKeySet *
read_new_tfheGateBootstrappingParameters	src/libtfhe-superaic-core/tfhe_io.cpp	/^TFheGateBootstrappingParameterSet *read_new_tfheGateBootstrappingParameters(const Istream &F) {$/;"	f	typeref:typename:TFheGateBootstrappingParameterSet *
read_new_tfheGateBootstrappingSecretKeySet	src/libtfhe-superaic-core/tfhe_io.cpp	/^read_new_tfheGateBootstrappingSecretKeySet(const Istream &F, const TFheGateBootstrappingParamete/;"	f	typeref:typename:TFheGateBootstrappingSecretKeySet *
read_tGswKey_content	src/libtfhe-superaic-core/tfhe_io.cpp	/^void read_tGswKey_content(const Istream &F, TGswKey *key) {$/;"	f	typeref:typename:void
read_tGswSample	src/libtfhe-superaic-core/tfhe_io.cpp	/^void read_tGswSample(const Istream &F, TGswSample *sample, const TGswParams *params) {$/;"	f	typeref:typename:void
read_tLweKey_content	src/libtfhe-superaic-core/tfhe_io.cpp	/^void read_tLweKey_content(const Istream &F, TLweKey *key) {$/;"	f	typeref:typename:void
read_tLweSample	src/libtfhe-superaic-core/tfhe_io.cpp	/^void read_tLweSample(const Istream &F, TLweSample *sample, const TLweParams *params) {$/;"	f	typeref:typename:void
read_tfheGateBootstrappingProperParameters_section	src/libtfhe-superaic-core/tfhe_io.cpp	/^void read_tfheGateBootstrappingProperParameters_section(const Istream &F, int32_t &ks_t, int32_t/;"	f	typeref:typename:void
read_v_non_interrupt	src/tests/FPGA_ACC_test.cpp	/^    Torus32 read_v_non_interrupt[1024] ;$/;"	v	namespace:__anon88d438720111	typeref:typename:Torus32[1024]
read_word_lite	src/libtfhe-superaic-acc/accs/FPGA-V0/acc_fpga_v0.cpp	/^ACC_RESULT FPGA_ACC_V0::read_word_lite(uint32_t address, uint32_t & value) {$/;"	f	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:ACC_RESULT
readableBytes	src/muduo/muduo/net/Buffer.h	/^  size_t readableBytes() const$/;"	f	class:muduo::net::Buffer	typeref:typename:size_t
readerIndex_	src/muduo/muduo/net/Buffer.h	/^  size_t readerIndex_;$/;"	m	class:muduo::net::Buffer	typeref:typename:size_t
reading_	src/muduo/muduo/net/TcpConnection.h	/^  bool reading_;$/;"	m	class:muduo::net::TcpConnection	typeref:typename:bool
readv	src/muduo/muduo/net/SocketsOps.cc	/^ssize_t sockets::readv(int sockfd, const struct iovec *iov, int iovcnt)$/;"	f	class:sockets	typeref:typename:ssize_t
real_delete_LweSample	src/tests/bootstrapping_classic_PBS_parameters_test.cpp	/^    void real_delete_LweSample(LweSample *sample) {$/;"	f	namespace:__anon8153b4f20111	typeref:typename:void
real_delete_LweSample	src/tests/bootstrapping_direct_test.cpp	/^    void real_delete_LweSample(LweSample *sample) {$/;"	f	namespace:__anon560166140111	typeref:typename:void
real_delete_LweSample	src/tests/bootstrapping_test.cpp	/^    void real_delete_LweSample(LweSample *sample) {$/;"	f	namespace:__anonf36cd29a0111	typeref:typename:void
real_delete_LweSample	src/tests/decrypt_with_plaintext_modulus.cpp	/^    void real_delete_LweSample(LweSample *sample) {$/;"	f	namespace:__anondb55d4a50111	typeref:typename:void
real_delete_LweSample	src/tests/macros_decrypt_with_plaintext_modulus_macros.cpp	/^    void real_delete_LweSample(LweSample *sample) {$/;"	f	namespace:__anon478224cd0111	typeref:typename:void
real_delete_LweSample	src/tests/macros_modSwitch_with_plaintext_modulus_macros.cpp	/^    void real_delete_LweSample(LweSample *sample) {$/;"	f	namespace:__anon4cdaee640111	typeref:typename:void
real_delete_LweSample	src/tests/ops_add.cpp	/^    void real_delete_LweSample(LweSample *sample) {$/;"	f	namespace:__anonb1f413890111	typeref:typename:void
real_delete_LweSample	src/tests/ops_add_with_carry.cpp	/^    void real_delete_LweSample(LweSample *sample) {$/;"	f	namespace:__anon662e63c40111	typeref:typename:void
real_delete_LweSample	src/tests/small_size_test.cpp	/^    void real_delete_LweSample(LweSample *sample) {$/;"	f	namespace:__anon9baab4410111	typeref:typename:void
real_delete_LweSample	src/tests/zpf_for_bootstrap_detail.cpp	/^    void real_delete_LweSample(LweSample *sample) {$/;"	f	namespace:__anonc07144f40111	typeref:typename:void
real_inout	src/libtfhe-superaic-core/fft_processors/nayuki/lagrangehalfc_impl.h	/^    double* real_inout;$/;"	m	class:FFT_Processor_nayuki	typeref:typename:double *
real_new_LweSample	src/tests/ACC_test.cpp	/^    LweSample *real_new_LweSample(const LweParams *params) {$/;"	f	namespace:__anonef2481d50111	typeref:typename:LweSample *
real_new_LweSample	src/tests/FPGA_ACC_test.cpp	/^    LweSample *real_new_LweSample(const LweParams *params) {$/;"	f	namespace:__anon88d438720111	typeref:typename:LweSample *
real_new_LweSample	src/tests/QEMU_test.cpp	/^    LweSample *real_new_LweSample(const LweParams *params) {$/;"	f	namespace:__anon4f389dc60111	typeref:typename:LweSample *
real_new_LweSample	src/tests/bootstrapping_classic_PBS_parameters_test.cpp	/^    LweSample *real_new_LweSample(const LweParams *params) {$/;"	f	namespace:__anon8153b4f20111	typeref:typename:LweSample *
real_new_LweSample	src/tests/bootstrapping_direct_test.cpp	/^    LweSample *real_new_LweSample(const LweParams *params) {$/;"	f	namespace:__anon560166140111	typeref:typename:LweSample *
real_new_LweSample	src/tests/bootstrapping_test.cpp	/^    LweSample *real_new_LweSample(const LweParams *params) {$/;"	f	namespace:__anonf36cd29a0111	typeref:typename:LweSample *
real_new_LweSample	src/tests/decrypt_with_plaintext_modulus.cpp	/^    LweSample *real_new_LweSample(const LweParams *params) {$/;"	f	namespace:__anondb55d4a50111	typeref:typename:LweSample *
real_new_LweSample	src/tests/macros_decrypt_with_plaintext_modulus_macros.cpp	/^    LweSample *real_new_LweSample(const LweParams *params) {$/;"	f	namespace:__anon478224cd0111	typeref:typename:LweSample *
real_new_LweSample	src/tests/macros_modSwitch_with_plaintext_modulus_macros.cpp	/^    LweSample *real_new_LweSample(const LweParams *params) {$/;"	f	namespace:__anon4cdaee640111	typeref:typename:LweSample *
real_new_LweSample	src/tests/ops_add.cpp	/^    LweSample *real_new_LweSample(const LweParams *params) {$/;"	f	namespace:__anonb1f413890111	typeref:typename:LweSample *
real_new_LweSample	src/tests/ops_add_with_carry.cpp	/^    LweSample *real_new_LweSample(const LweParams *params) {$/;"	f	namespace:__anon662e63c40111	typeref:typename:LweSample *
real_new_LweSample	src/tests/small_size_test.cpp	/^    LweSample *real_new_LweSample(const LweParams *params) {$/;"	f	namespace:__anon9baab4410111	typeref:typename:LweSample *
real_new_LweSample	src/tests/zpf_for_bootstrap_detail.cpp	/^    LweSample *real_new_LweSample(const LweParams *params) {$/;"	f	namespace:__anonc07144f40111	typeref:typename:LweSample *
rebuild_cache	buildotests/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache	buildotests/driver/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache	buildotests/examples/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache	buildotests/libtfhe-superaic-acc/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache	buildotests/libtfhe-superaic-client/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache	buildotests/libtfhe-superaic-core/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache	buildotests/libtfhe-superaic-core/fft_processors/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache	buildotests/libtfhe-superaic-server/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache	buildotests/tests/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache	buildotests/tests/googletest/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache	buildotests/tests/googletest/googlemock/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache	buildotests/tests/googletest/googlemock/gtest/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache/fast	buildotests/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
rebuild_cache/fast	buildotests/driver/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
rebuild_cache/fast	buildotests/examples/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
rebuild_cache/fast	buildotests/libtfhe-superaic-acc/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
rebuild_cache/fast	buildotests/libtfhe-superaic-client/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
rebuild_cache/fast	buildotests/libtfhe-superaic-core/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
rebuild_cache/fast	buildotests/libtfhe-superaic-core/fft_processors/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
rebuild_cache/fast	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
rebuild_cache/fast	buildotests/libtfhe-superaic-server/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
rebuild_cache/fast	buildotests/tests/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
rebuild_cache/fast	buildotests/tests/googletest/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
rebuild_cache/fast	buildotests/tests/googletest/googlemock/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
rebuild_cache/fast	buildotests/tests/googletest/googlemock/gtest/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
receive	src/muduo/examples/ace/ttcp/common.h	/^  bool transmit, receive, nodelay;$/;"	m	struct:Options	typeref:typename:bool
receive	src/muduo/examples/ace/ttcp/ttcp.cc	/^void receive(const Options& opt)$/;"	f	typeref:typename:void
receive	src/muduo/examples/ace/ttcp/ttcp_asio_async.cc	/^void receive(const Options& opt)$/;"	f	typeref:typename:void
receive	src/muduo/examples/ace/ttcp/ttcp_asio_sync.cc	/^void receive(const Options& opt)$/;"	f	typeref:typename:void
receive	src/muduo/examples/ace/ttcp/ttcp_blocking.cc	/^void receive(const Options& opt)$/;"	f	typeref:typename:void
receiveTime	src/muduo/examples/asio/chat/loadtest.cc	/^  Timestamp receiveTime() const { return receiveTime_; }$/;"	f	class:ChatClient	typeref:typename:Timestamp	file:
receiveTime	src/muduo/examples/sudoku/server_hybrid.cc	/^    Timestamp receiveTime;$/;"	m	struct:SudokuServer::Request	typeref:typename:Timestamp	file:
receiveTime	src/muduo/examples/sudoku/server_prod.cc	/^    Timestamp receiveTime;$/;"	m	struct:SudokuServer::Request	typeref:typename:Timestamp	file:
receiveTime	src/muduo/muduo/net/http/HttpRequest.h	/^  Timestamp receiveTime() const$/;"	f	class:muduo::net::HttpRequest	typeref:typename:Timestamp
receiveTime_	src/muduo/examples/asio/chat/loadtest.cc	/^  Timestamp receiveTime_;$/;"	m	class:ChatClient	typeref:typename:Timestamp	file:
receiveTime_	src/muduo/muduo/net/http/HttpRequest.h	/^  Timestamp receiveTime_;$/;"	m	class:muduo::net::HttpRequest	typeref:typename:Timestamp
receiveValue	src/muduo/examples/memcached/server/Session.cc	/^void Session::receiveValue(muduo::net::Buffer* buf)$/;"	f	class:Session	typeref:typename:void
receive_payload	src/libtfhe-superaic-core/tfhe_package.cpp	/^shared_ptr<TFHE_Payload> receive_payload(int fd){$/;"	f	typeref:typename:shared_ptr<TFHE_Payload>
receive_until	src/libtfhe-superaic-core/tfhe_package.cpp	/^bool receive_until(int fd, char * buffer, size_t total_size){$/;"	f	typeref:typename:bool
received	src/muduo/examples/filetransfer/loadtest/Handler.java	/^    private int received = 0;$/;"	f	class:Handler	file:
receivedBytes_	src/muduo/examples/memcached/server/Item.h	/^  int            receivedBytes_;  \/\/ FIXME: remove this member$/;"	m	class:Item	typeref:typename:int
receivedMessages_	src/muduo/examples/multiplexer/multiplexer.cc	/^  AtomicInt64 receivedMessages_;$/;"	m	class:MultiplexServer	typeref:typename:AtomicInt64	file:
receivedMessages_	src/muduo/examples/netty/discard/server.cc	/^  AtomicInt64 receivedMessages_;$/;"	m	class:DiscardServer	typeref:typename:AtomicInt64	file:
receivedMessages_	src/muduo/examples/netty/echo/server.cc	/^  AtomicInt64 receivedMessages_;$/;"	m	class:EchoServer	typeref:typename:AtomicInt64	file:
receivedMessages_	src/muduo/examples/netty/echo/server2.cc	/^  AtomicInt32 receivedMessages_;$/;"	m	class:EchoServer	typeref:typename:AtomicInt32	file:
receiving	src/muduo/examples/ace/ttcp/ttcp.cc	/^namespace receiving$/;"	n	file:
reconnect	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockClient.java	/^        private void reconnect() {$/;"	m	class:MockClient.Handler	file:
recordBadRequest	src/muduo/examples/sudoku/stat.h	/^  void recordBadRequest()$/;"	f	class:SudokuStat	typeref:typename:void
recordDroppedRequest	src/muduo/examples/sudoku/stat.h	/^  void recordDroppedRequest()$/;"	f	class:SudokuStat	typeref:typename:void
recordRequest	src/muduo/examples/sudoku/stat.h	/^  void recordRequest()$/;"	f	class:SudokuStat	typeref:typename:void
recordResponse	src/muduo/examples/sudoku/stat.h	/^  void recordResponse(Timestamp now, Timestamp receive, bool solved)$/;"	f	class:SudokuStat	typeref:typename:void
record_property_env	src/tests/googletest/googletest/test/gtest_unittest.cc	/^static Environment* record_property_env =$/;"	v	namespace:__anonf780395f0111	typeref:typename:Environment *	file:
redirections	src/muduo/examples/shorturl/shorturl.cc	/^std::map<string, string> redirections;$/;"	v	typeref:typename:std::map<string,string>
redisReplyToString	src/muduo/contrib/hiredis/mrediscli.cc	/^string redisReplyToString(const redisReply* reply)$/;"	f	typeref:typename:string
redoCheckSum	src/muduo/examples/protobuf/codec/codec_test.cc	/^void redoCheckSum(string& data, int len)$/;"	f	typeref:typename:void
ref_	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    T& ref_;$/;"	m	class:testing::internal::ReturnRefAction::Impl	typeref:typename:T &
ref_	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  T& ref_;$/;"	m	class:testing::internal::ReturnRefAction	typeref:typename:T &
reference	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  typedef T& reference;$/;"	t	class:testing::internal::ReferenceOrValueWrapper	typeref:typename:T &
reference	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  typedef const T& reference;$/;"	t	class:testing::internal::ParamIterator	typeref:typename:const T &
regex	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  const RE* regex() const { return regex_; }$/;"	f	class:testing::internal::DeathTestImpl	typeref:typename:const RE *	file:
regex_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const internal::linked_ptr<const RE> regex_;$/;"	m	class:testing::internal::MatchesRegexMatcher	typeref:typename:const internal::linked_ptr<const RE>
regex_	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  const RE* const regex_;$/;"	m	class:testing::internal::DeathTestImpl	typeref:typename:const RE * const	file:
registerCommands	src/muduo/muduo/net/inspect/PerformanceInspector.cc	/^void PerformanceInspector::registerCommands(Inspector* ins)$/;"	f	class:PerformanceInspector	typeref:typename:void
registerCommands	src/muduo/muduo/net/inspect/ProcessInspector.cc	/^void ProcessInspector::registerCommands(Inspector* ins)$/;"	f	class:ProcessInspector	typeref:typename:void
registerCommands	src/muduo/muduo/net/inspect/SystemInspector.cc	/^void SystemInspector::registerCommands(Inspector* ins)$/;"	f	class:SystemInspector	typeref:typename:void
registerMessageCallback	src/muduo/examples/protobuf/codec/dispatcher.h	/^  void registerMessageCallback(const typename CallbackT<T>::ProtobufMessageTCallback& callback)$/;"	f	class:ProtobufDispatcher	typeref:typename:void
registerMessageCallback	src/muduo/examples/protobuf/codec/dispatcher_lite.h	/^  void registerMessageCallback(const google::protobuf::Descriptor* desc,$/;"	f	class:ProtobufDispatcherLite	typeref:typename:void
registerService	src/muduo/muduo/net/protorpc/RpcServer.cc	/^void RpcServer::registerService(google::protobuf::Service* service)$/;"	f	class:RpcServer	typeref:typename:void
register_param	src/libtfhe-superaic-core/tfhe_garbage_collector.cpp	/^void TfheGarbageCollector::register_param(LweParams* param) { init(); global_tfheGarbageCollecto/;"	f	class:TfheGarbageCollector	typeref:typename:void
register_param	src/libtfhe-superaic-core/tfhe_garbage_collector.cpp	/^void TfheGarbageCollector::register_param(TFheGateBootstrappingParameterSet* param) { init(); gl/;"	f	class:TfheGarbageCollector	typeref:typename:void
register_param	src/libtfhe-superaic-core/tfhe_garbage_collector.cpp	/^void TfheGarbageCollector::register_param(TGswParams* param) { init(); global_tfheGarbageCollect/;"	f	class:TfheGarbageCollector	typeref:typename:void
register_param	src/libtfhe-superaic-core/tfhe_garbage_collector.cpp	/^void TfheGarbageCollector::register_param(TLweParams* param) { init(); global_tfheGarbageCollect/;"	f	class:TfheGarbageCollector	typeref:typename:void
registered_	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  bool registered_;$/;"	m	class:testing::internal::TypedTestCasePState	typeref:typename:bool
registered_tests_	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  RegisteredTestsMap registered_tests_;$/;"	m	class:testing::internal::TypedTestCasePState	typeref:typename:RegisteredTestsMap
rel_exptime	src/muduo/examples/memcached/server/Item.h	/^  int rel_exptime() const$/;"	f	class:Item	typeref:typename:int
rel_exptime_	src/muduo/examples/memcached/server/Item.h	/^  const int      rel_exptime_;$/;"	m	class:Item	typeref:typename:const int
release	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  T* release() {$/;"	f	class:testing::internal::scoped_ptr	typeref:typename:T *
releaseFreeMemory	src/muduo/muduo/net/inspect/PerformanceInspector.cc	/^string PerformanceInspector::releaseFreeMemory(HttpRequest::Method, const Inspector::ArgList&)$/;"	f	class:PerformanceInspector	typeref:typename:string
release_comm_pack	src/libtfhe-superaic-core/tfhe_package.cpp	/^void release_comm_pack(TFHE_Comm_Pack_t * pack){$/;"	f	typeref:typename:void
release_executor	src/libtfhe-superaic-acc/accs/executor.cpp	/^void Executor_List::release_executor(shared_ptr<Executor> executor) {$/;"	f	class:tfhe_superaic::Executor_List	typeref:typename:void
remainder_	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  mutable std::list<value_type> remainder_;  \/\/ modified by iteration$/;"	m	class:testing::gmock_matchers_test::Streamlike	typeref:typename:std::list<value_type>	file:
remoteAddress	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockClient.java	/^    private final InetSocketAddress remoteAddress;$/;"	f	class:MockClient	file:
remove	src/muduo/examples/hub/hub.cc	/^  void remove(const TcpConnectionPtr& conn)$/;"	f	class:pubsub::Topic	typeref:typename:void	file:
remove	src/muduo/muduo/net/Channel.cc	/^void Channel::remove()$/;"	f	class:Channel	typeref:typename:void
remove	src/muduo/muduo/net/inspect/Inspector.cc	/^void Inspector::remove(const string& module, const string& command)$/;"	f	class:Inspector	typeref:typename:void
remove	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^int remove(const char* path) {$/;"	f	namespace:testing::internal::__anon077d0c590111	typeref:typename:int
removeAndResetChannel	src/muduo/muduo/net/Connector.cc	/^int Connector::removeAndResetChannel()$/;"	f	class:Connector	typeref:typename:int
removeChannel	src/muduo/contrib/hiredis/Hiredis.cc	/^void Hiredis::removeChannel()$/;"	f	class:Hiredis	typeref:typename:void
removeChannel	src/muduo/examples/curl/Curl.cc	/^void Request::removeChannel()$/;"	f	class:Request	typeref:typename:void
removeChannel	src/muduo/muduo/net/EventLoop.cc	/^void EventLoop::removeChannel(Channel* channel)$/;"	f	class:EventLoop	typeref:typename:void
removeChannel	src/muduo/muduo/net/poller/EPollPoller.cc	/^void EPollPoller::removeChannel(Channel* channel)$/;"	f	class:EPollPoller	typeref:typename:void
removeChannel	src/muduo/muduo/net/poller/PollPoller.cc	/^void PollPoller::removeChannel(Channel* channel)$/;"	f	class:PollPoller	typeref:typename:void
removeConnection	src/muduo/muduo/net/TcpClient.cc	/^void TcpClient::removeConnection(const TcpConnectionPtr& conn)$/;"	f	class:TcpClient	typeref:typename:void
removeConnection	src/muduo/muduo/net/TcpClient.cc	/^void removeConnection(EventLoop* loop, const TcpConnectionPtr& conn)$/;"	f	namespace:muduo::net::detail	typeref:typename:void
removeConnection	src/muduo/muduo/net/TcpServer.cc	/^void TcpServer::removeConnection(const TcpConnectionPtr& conn)$/;"	f	class:TcpServer	typeref:typename:void
removeConnectionInLoop	src/muduo/muduo/net/TcpServer.cc	/^void TcpServer::removeConnectionInLoop(const TcpConnectionPtr& conn)$/;"	f	class:TcpServer	typeref:typename:void
removeConnector	src/muduo/muduo/net/TcpClient.cc	/^void removeConnector(const ConnectorPtr& connector)$/;"	f	namespace:muduo::net::detail	typeref:typename:void
remove_prefix	src/muduo/muduo/base/StringPiece.h	/^  void remove_prefix(int n) {$/;"	f	class:muduo::StringPiece	typeref:typename:void
remove_reference	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^template <typename T> struct remove_reference { typedef T type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
remove_reference	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^template <typename T> struct remove_reference<T&> { typedef T type; }; \/\/ NOLINT$/;"	s	namespace:testing::internal
remove_session	src/libtfhe-superaic-acc/tfhe_acc.cpp	/^void TFHE_ACC::remove_session(Session_ID_t sessionID)$/;"	f	class:tfhe_superaic::TFHE_ACC	typeref:typename:void
remove_session	src/libtfhe-superaic-core/tfhe_session.cpp	/^void remove_session(Session_ID_t sessionID){$/;"	f	namespace:tfhe_superaic	typeref:typename:void
remove_suffix	src/muduo/muduo/base/StringPiece.h	/^  void remove_suffix(int n) {$/;"	f	class:muduo::StringPiece	typeref:typename:void
removes_	src/tests/googletest/googletest/src/gtest.cc	/^  size_t adds_, removes_, common_;$/;"	m	class:testing::internal::edit_distance::__anon3f29b7680211::Hunk	typeref:typename:size_t	file:
renormalizeKSkey	src/libtfhe-superaic-core/lwe-keyswitch-functions.cpp	/^void renormalizeKSkey(LweKeySwitchKey* ks, const LweKey* out_key, const int32_t* in_key){$/;"	f	typeref:typename:void
repeat	src/muduo/muduo/net/Timer.h	/^  bool repeat() const { return repeat_; }$/;"	f	class:muduo::net::Timer	typeref:typename:bool
repeat	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  Int32 repeat;$/;"	m	struct:testing::Flags	typeref:typename:Int32	file:
repeat_	src/muduo/muduo/net/Timer.h	/^  const bool repeat_;$/;"	m	class:muduo::net::Timer	typeref:typename:const bool
repeat_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  internal::Int32 repeat_;$/;"	m	class:testing::internal::GTestFlagSaver	typeref:typename:internal::Int32
repeated_action	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  const Action<F>& repeated_action() const { return repeated_action_; }$/;"	f	class:testing::internal::TypedExpectation	typeref:typename:const Action<F> &
repeated_action_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  Action<F> repeated_action_;$/;"	m	class:testing::internal::TypedExpectation	typeref:typename:Action<F>
repeated_action_specified_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  bool repeated_action_specified_;  \/\/ True if a WillRepeatedly() was specified.$/;"	m	class:testing::internal::ExpectationBase	typeref:typename:bool
repeater	src/tests/googletest/googletest/src/gtest.cc	/^TestEventListener* TestEventListeners::repeater() { return repeater_; }$/;"	f	class:testing::TestEventListeners	typeref:typename:TestEventListener *
repeater_	src/tests/googletest/googletest/include/gtest/gtest.h	/^  internal::TestEventRepeater* repeater_;$/;"	m	class:testing::TestEventListeners	typeref:typename:internal::TestEventRepeater *
repl	src/tests/googletest/googlemock/scripts/upload.py	/^    def repl(m):$/;"	f	member:SubversionVCS._CollapseKeywords	file:
repl	src/tests/googletest/googletest/scripts/upload.py	/^    def repl(m):$/;"	f	member:SubversionVCS._CollapseKeywords	file:
replacer_	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  static testing::internal::ReplaceDeathTestFactory* replacer_;$/;"	m	class:MacroLogicDeathTest	typeref:typename:testing::internal::ReplaceDeathTestFactory *	file:
replacer_	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^testing::internal::ReplaceDeathTestFactory* MacroLogicDeathTest::replacer_$/;"	m	class:MacroLogicDeathTest	typeref:typename:testing::internal::ReplaceDeathTestFactory *
replied	src/muduo/examples/protobuf/rpcbench/client.cc	/^  void replied(echo::EchoResponse* resp)$/;"	f	class:RpcClient	typeref:typename:void	file:
reply	src/muduo/examples/memcached/server/Session.cc	/^void Session::reply(muduo::StringPiece msg)$/;"	f	class:Session	typeref:typename:void
report	src/muduo/examples/sudoku/loadtest.cc	/^  void report(std::vector<int>* latency, int* infly)$/;"	f	class:SudokuClient	typeref:typename:void	file:
report	src/muduo/examples/sudoku/percentile.h	/^  const muduo::LogStream::Buffer& report() const$/;"	f	class:Percentile	typeref:typename:const muduo::LogStream::Buffer &
report	src/muduo/examples/sudoku/pipeline.cc	/^  void report(std::vector<int>* latency, int* infly)$/;"	f	class:SudokuClient	typeref:typename:void	file:
report	src/muduo/examples/sudoku/pipeline.cc	/^void report(const std::vector<std::unique_ptr<SudokuClient>>& clients)$/;"	f	typeref:typename:void
report	src/muduo/examples/sudoku/stat.h	/^  string report() const$/;"	f	class:SudokuStat	typeref:typename:string
reportable_disabled_test_count	src/tests/googletest/googletest/src/gtest.cc	/^int TestCase::reportable_disabled_test_count() const {$/;"	f	class:testing::TestCase	typeref:typename:int
reportable_disabled_test_count	src/tests/googletest/googletest/src/gtest.cc	/^int UnitTest::reportable_disabled_test_count() const {$/;"	f	class:testing::UnitTest	typeref:typename:int
reportable_disabled_test_count	src/tests/googletest/googletest/src/gtest.cc	/^int UnitTestImpl::reportable_disabled_test_count() const {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:int
reportable_test_count	src/tests/googletest/googletest/src/gtest.cc	/^int TestCase::reportable_test_count() const {$/;"	f	class:testing::TestCase	typeref:typename:int
reportable_test_count	src/tests/googletest/googletest/src/gtest.cc	/^int UnitTest::reportable_test_count() const {$/;"	f	class:testing::UnitTest	typeref:typename:int
reportable_test_count	src/tests/googletest/googletest/src/gtest.cc	/^int UnitTestImpl::reportable_test_count() const {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:int
req2_	src/muduo/examples/curl/download.cc	/^  curl::RequestPtr req2_;$/;"	m	class:Downloader	typeref:typename:curl::RequestPtr	file:
req_	src/muduo/examples/curl/download.cc	/^  curl::RequestPtr req_;$/;"	m	class:Downloader	typeref:typename:curl::RequestPtr	file:
req_	src/muduo/examples/curl/download.cc	/^  curl::RequestPtr req_;$/;"	m	class:Piece	typeref:typename:curl::RequestPtr	file:
request	src/muduo/muduo/net/http/HttpContext.h	/^  HttpRequest& request()$/;"	f	class:muduo::net::HttpContext	typeref:typename:HttpRequest &
request	src/muduo/muduo/net/http/HttpContext.h	/^  const HttpRequest& request() const$/;"	f	class:muduo::net::HttpContext	typeref:typename:const HttpRequest &
request	src/muduo/muduo/net/protorpc/rpc.proto	/^  optional bytes request = 5;$/;"	f	message:muduo.net.RpcMessage	typeref:typename:bytes
request_	src/muduo/muduo/net/http/HttpContext.h	/^  HttpRequest request_;$/;"	m	class:muduo::net::HttpContext	typeref:typename:HttpRequest
requestsProcessed_	src/muduo/examples/memcached/server/Session.h	/^  size_t requestsProcessed_;$/;"	m	class:Session	typeref:typename:size_t
requests_	src/muduo/examples/memcached/client/bench.cc	/^  const int requests_;$/;"	m	class:Client	typeref:typename:const int	file:
requests_	src/muduo/examples/sudoku/loadtest.cc	/^  Buffer requests_;$/;"	m	class:SudokuClient	typeref:typename:Buffer	file:
requests_	src/muduo/examples/sudoku/stat.h	/^  boost::circular_buffer<int64_t> requests_;$/;"	m	class:SudokuStat	typeref:typename:boost::circular_buffer<int64_t>
require_32_bit_integer_at_least	src/muduo/muduo/base/Date.cc	/^char require_32_bit_integer_at_least[sizeof(int) >= sizeof(int32_t) ? 1 : -1];$/;"	v	namespace:muduo::detail	typeref:typename:char[]
reset	src/muduo/examples/memcached/server/Session.h	/^    void reset() {}$/;"	f	struct:Session::SpaceSeparator	typeref:typename:void
reset	src/muduo/examples/sudoku/stat.h	/^  string reset()$/;"	f	class:SudokuStat	typeref:typename:string
reset	src/muduo/muduo/base/LogStream.h	/^  void reset() { cur_ = data_; }$/;"	f	class:muduo::detail::FixedBuffer	typeref:typename:void
reset	src/muduo/muduo/net/TimerQueue.cc	/^void TimerQueue::reset(const std::vector<Entry>& expired, Timestamp now)$/;"	f	class:TimerQueue	typeref:typename:void
reset	src/muduo/muduo/net/http/HttpContext.h	/^  void reset()$/;"	f	class:muduo::net::HttpContext	typeref:typename:void
reset	src/tests/googletest/googletest/include/gtest/internal/gtest-linked_ptr.h	/^  void reset(T* ptr = NULL) {$/;"	f	class:testing::internal::linked_ptr	typeref:typename:void
reset	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  void reset(T* p = NULL) {$/;"	f	class:testing::internal::scoped_ptr	typeref:typename:void
resetBuffer	src/muduo/muduo/base/LogStream.h	/^  void resetBuffer() { buffer_.reset(); }$/;"	f	class:muduo::LogStream	typeref:typename:void
resetChannel	src/muduo/muduo/net/Connector.cc	/^void Connector::resetChannel()$/;"	f	class:Connector	typeref:typename:void
resetKey	src/muduo/examples/memcached/server/Item.cc	/^void Item::resetKey(StringPiece k)$/;"	f	class:Item	typeref:typename:void
resetRequest	src/muduo/examples/memcached/server/Session.cc	/^void Session::resetRequest()$/;"	f	class:Session	typeref:typename:void
resetTimerfd	src/muduo/muduo/net/TimerQueue.cc	/^void resetTimerfd(int timerfd, Timestamp expiration)$/;"	f	namespace:muduo::net::detail	typeref:typename:void
resolve	src/muduo/examples/cdns/Resolver.cc	/^bool Resolver::resolve(StringArg hostname, const Callback& cb)$/;"	f	class:Resolver	typeref:typename:bool
resolve	src/muduo/examples/cdns/dns.cc	/^void resolve(Resolver* res, const string& host)$/;"	f	typeref:typename:void
resolve	src/muduo/examples/protobuf/resolver/client.cc	/^  void resolve(const std::string& host)$/;"	f	class:RpcClient	typeref:typename:void	file:
resolve	src/muduo/muduo/net/InetAddress.cc	/^bool InetAddress::resolve(StringArg hostname, InetAddress* out)$/;"	f	class:InetAddress	typeref:typename:bool
resolveCallback	src/muduo/examples/cdns/dns.cc	/^void resolveCallback(const string& host, const InetAddress& addr)$/;"	f	typeref:typename:void
resolveOrDie	src/muduo/examples/ace/ttcp/common.cc	/^struct sockaddr_in resolveOrDie(const char* host, uint16_t port)$/;"	f	typeref:struct:sockaddr_in
resolved	src/muduo/examples/protobuf/resolver/client.cc	/^  void resolved(resolver::ResolveResponse* resp, std::string host) \/\/ pass by value for NewCal/;"	f	class:RpcClient	typeref:typename:void	file:
resolved	src/muduo/examples/protobuf/resolver/resolver.proto	/^  optional bool resolved = 1 [default=false];$/;"	f	message:resolver.ResolveResponse	typeref:typename:bool
resolver	src/muduo/examples/protobuf/resolver/resolver.proto	/^package resolver;$/;"	p
resolver	src/muduo/examples/protobuf/resolver/server.cc	/^namespace resolver$/;"	n	file:
resolver_	src/muduo/examples/protobuf/resolver/server.cc	/^  cdns::Resolver resolver_;$/;"	m	class:resolver::ResolverServiceImpl	typeref:typename:cdns::Resolver	file:
resolver_proto	src/muduo/examples/protobuf/resolver/CMakeLists.txt	/^add_library(resolver_proto resolver.pb.cc)$/;"	t
respond	src/muduo/examples/fastcgi/fastcgi.cc	/^void FastCgiCodec::respond(Buffer* response)$/;"	f	class:FastCgiCodec	typeref:typename:void
response	src/muduo/muduo/net/protorpc/rpc.proto	/^  optional bytes response = 6;$/;"	f	message:muduo.net.RpcMessage	typeref:typename:bytes
response_	src/muduo/examples/procmon/procmon.cc	/^  Buffer response_;$/;"	m	class:Procmon	typeref:typename:Buffer	file:
restart	src/muduo/muduo/net/Connector.cc	/^void Connector::restart()$/;"	f	class:Connector	typeref:typename:void
restart	src/muduo/muduo/net/Timer.cc	/^void Timer::restart(Timestamp now)$/;"	f	class:Timer	typeref:typename:void
result	src/tests/googletest/googletest/include/gtest/gtest.h	/^  const TestResult* result() const { return &result_; }$/;"	f	class:testing::TestInfo	typeref:typename:const TestResult *
result_	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  const T result_;$/;"	m	class:testing::internal::SetErrnoAndReturnAction	typeref:typename:const T
result_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  Wrapper result_;$/;"	m	class:testing::internal::ActionResultHolder	typeref:typename:Wrapper
result_	src/tests/googletest/googletest/include/gtest/gtest-spi.h	/^  TestPartResultArray* const result_;$/;"	m	class:testing::ScopedFakeTestPartResultReporter	typeref:typename:TestPartResultArray * const
result_	src/tests/googletest/googletest/include/gtest/gtest.h	/^  TestResult result_;$/;"	m	class:testing::TestInfo	typeref:typename:TestResult
result_type	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  typedef const int* result_type;$/;"	t	struct:testing::gmock_matchers_test::ReferencingFunctor	typeref:typename:const int *	file:
result_type	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  typedef int result_type;$/;"	t	struct:testing::gmock_matchers_test::PolymorphicFunctor	typeref:typename:int	file:
results_	src/tests/googletest/googletest/include/gtest/gtest-spi.h	/^  const TestPartResultArray* const results_;$/;"	m	class:testing::internal::SingleFailureChecker	typeref:typename:const TestPartResultArray * const
retired_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  bool retired_;    \/\/ True iff this expectation has retired.$/;"	m	class:testing::internal::ExpectationBase	typeref:typename:bool
retires_on_saturation_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  bool retires_on_saturation_;$/;"	m	class:testing::internal::ExpectationBase	typeref:typename:bool
retrieve	src/muduo/muduo/net/Buffer.h	/^  void retrieve(size_t len)$/;"	f	class:muduo::net::Buffer	typeref:typename:void
retrieveAll	src/muduo/muduo/net/Buffer.h	/^  void retrieveAll()$/;"	f	class:muduo::net::Buffer	typeref:typename:void
retrieveAllAsString	src/muduo/muduo/net/Buffer.h	/^  string retrieveAllAsString()$/;"	f	class:muduo::net::Buffer	typeref:typename:string
retrieveAsString	src/muduo/muduo/net/Buffer.h	/^  string retrieveAsString(size_t len)$/;"	f	class:muduo::net::Buffer	typeref:typename:string
retrieveInt16	src/muduo/muduo/net/Buffer.h	/^  void retrieveInt16()$/;"	f	class:muduo::net::Buffer	typeref:typename:void
retrieveInt32	src/muduo/muduo/net/Buffer.h	/^  void retrieveInt32()$/;"	f	class:muduo::net::Buffer	typeref:typename:void
retrieveInt64	src/muduo/muduo/net/Buffer.h	/^  void retrieveInt64()$/;"	f	class:muduo::net::Buffer	typeref:typename:void
retrieveInt8	src/muduo/muduo/net/Buffer.h	/^  void retrieveInt8()$/;"	f	class:muduo::net::Buffer	typeref:typename:void
retrieveUntil	src/muduo/muduo/net/Buffer.h	/^  void retrieveUntil(const char* end)$/;"	f	class:muduo::net::Buffer	typeref:typename:void
retry	src/muduo/muduo/net/Connector.cc	/^void Connector::retry(int sockfd)$/;"	f	class:Connector	typeref:typename:void
retry	src/muduo/muduo/net/TcpClient.h	/^  bool retry() const { return retry_; }$/;"	f	class:muduo::net::TcpClient	typeref:typename:bool
retryDelayMs_	src/muduo/muduo/net/Connector.h	/^  int retryDelayMs_;$/;"	m	class:muduo::net::Connector	typeref:typename:int
retry_	src/muduo/muduo/net/TcpClient.h	/^  bool retry_;   \/\/ atomic$/;"	m	class:muduo::net::TcpClient	typeref:typename:bool
reventsToString	src/muduo/muduo/net/Channel.cc	/^string Channel::reventsToString() const$/;"	f	class:Channel	typeref:typename:string
revents_	src/muduo/muduo/net/Channel.h	/^  int        revents_; \/\/ it's the received event types of epoll or poll$/;"	m	class:muduo::net::Channel	typeref:typename:int
reverse_bits	src/libtfhe-superaic-core/fft_processors/nayuki/fft-portable.c	/^static size_t reverse_bits(size_t x, uint32_t n) {$/;"	f	typeref:typename:size_t	file:
reverse_bits	src/libtfhe-superaic-core/fft_processors/nayuki/fft-x8664-avx-aux.c	/^static uint64_t reverse_bits(uint64_t x, uint32_t n) {$/;"	f	typeref:typename:uint64_t	file:
reversed	src/tests/googletest/googlemock/scripts/generator/cpp/ast.py	/^    def reversed(seq):$/;"	f
rhs_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    Rhs rhs_;$/;"	m	class:testing::internal::ComparisonBase::Impl	typeref:typename:Rhs
rhs_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    const RhsStlContainer rhs_;$/;"	m	class:testing::internal::PointwiseMatcher::Impl	typeref:typename:const RhsStlContainer
rhs_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  Rhs rhs_;$/;"	m	class:testing::internal::ComparisonBase	typeref:typename:Rhs
rhs_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const RhsStlContainer rhs_;$/;"	m	class:testing::internal::PointwiseMatcher	typeref:typename:const RhsStlContainer
rhs_	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^  int rhs_;$/;"	m	class:__anoncaf4ae130111::GreaterThanMatcher	typeref:typename:int	file:
rhs_	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  int rhs_;$/;"	m	class:testing::gmock_matchers_test::GreaterThanMatcher	typeref:typename:int	file:
rhs_used_	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  std::vector<size_t> rhs_used_;$/;"	m	class:testing::gmock_matchers_test::__anon745c08170311::BacktrackingMaxBPMState	typeref:typename:std::vector<size_t>	file:
right	src/muduo/examples/sudoku/sudoku.cc	/^    Node* right;$/;"	m	struct:Node	typeref:typename:Node *	file:
right	src/tests/googletest/googletest/test/gtest_unittest.cc	/^    const char* right;$/;"	m	struct:__anonf780395f0111::TEST::Case	typeref:typename:const char *	file:
right_start_	src/tests/googletest/googletest/src/gtest.cc	/^  size_t left_start_, right_start_;$/;"	m	class:testing::internal::edit_distance::__anon3f29b7680211::Hunk	typeref:typename:size_t	file:
role_	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  DeathTest::TestRole role_;$/;"	m	class:MockDeathTestFactory	typeref:typename:DeathTest::TestRole	file:
role_	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  const TestRole role_;$/;"	m	class:MockDeathTest	typeref:typename:const TestRole	file:
rollFile	src/muduo/muduo/base/LogFile.cc	/^bool LogFile::rollFile()$/;"	f	class:LogFile	typeref:typename:bool
rollSize_	src/muduo/muduo/base/AsyncLogging.h	/^  const off_t rollSize_;$/;"	m	class:muduo::AsyncLogging	typeref:typename:const off_t
rollSize_	src/muduo/muduo/base/LogFile.h	/^  const off_t rollSize_;$/;"	m	class:muduo::LogFile	typeref:typename:const off_t
root_	src/muduo/examples/sudoku/sudoku.cc	/^    Column* root_;$/;"	m	class:SudokuSolver	typeref:typename:Column *	file:
roundtrip	src/muduo/examples/roundtrip/CMakeLists.txt	/^add_executable(roundtrip roundtrip.cc)$/;"	t
roundtrip_udp	src/muduo/examples/roundtrip/CMakeLists.txt	/^add_executable(roundtrip_udp roundtrip_udp.cc)$/;"	t
rpcMessageCallback	src/muduo/muduo/net/protorpc/RpcCodec_test.cc	/^void rpcMessageCallback(const TcpConnectionPtr&,$/;"	f	typeref:typename:void
rpctag	src/muduo/muduo/net/protorpc/RpcCodec.cc	/^const char rpctag [] = "RPC0";$/;"	v	namespace:muduo::net	typeref:typename:const char[]
rpctag	src/muduo/muduo/net/protorpc/RpcCodec_test.cc	/^char rpctag[] = "RPC0";$/;"	v	typeref:typename:char[]
rssKb	src/muduo/examples/procmon/procmon.cc	/^  long rssKb;$/;"	m	struct:StatData	typeref:typename:long	file:
rsslim	src/muduo/examples/procmon/procmon.cc	/^  long rsslim;$/;"	m	struct:StatData	typeref:typename:long	file:
run	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MultiplexerTest.java	/^    private void run() {$/;"	m	class:MultiplexerTest	file:
run	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/TestCase.java	/^    public abstract void run();$/;"	m	class:TestCase
run	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/testcase/TestOneClientBackendSend.java	/^    public void run() {$/;"	m	class:TestOneClientBackendSend
run	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/testcase/TestOneClientBothSend.java	/^    public void run() {$/;"	m	class:TestOneClientBothSend
run	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/testcase/TestOneClientNoData.java	/^    public void run() {$/;"	m	class:TestOneClientNoData
run	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/testcase/TestOneClientSend.java	/^    public void run() {$/;"	m	class:TestOneClientSend
run	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/testcase/TestTwoClients.java	/^    public void run() {$/;"	m	class:TestTwoClients
run	src/muduo/muduo/base/ThreadPool.cc	/^void ThreadPool::run(Task task)$/;"	f	class:ThreadPool	typeref:typename:void
run	src/muduo/muduo/base/tests/BlockingQueue_bench.cc	/^  void run(int times)$/;"	f	class:Bench	typeref:typename:void	file:
run	src/muduo/muduo/base/tests/BlockingQueue_test.cc	/^  void run(int times)$/;"	f	class:Test	typeref:typename:void	file:
run	src/muduo/muduo/base/tests/BoundedBlockingQueue_test.cc	/^  void run(int times)$/;"	f	class:Test	typeref:typename:void	file:
run	src/muduo/muduo/net/Timer.h	/^  void run() const$/;"	f	class:muduo::net::Timer	typeref:typename:void
runAfter	src/muduo/muduo/net/EventLoop.cc	/^TimerId EventLoop::runAfter(double delay, TimerCallback cb)$/;"	f	class:EventLoop	typeref:typename:TimerId
runAt	src/muduo/muduo/net/EventLoop.cc	/^TimerId EventLoop::runAt(Timestamp time, TimerCallback cb)$/;"	f	class:EventLoop	typeref:typename:TimerId
runClient	src/muduo/examples/roundtrip/roundtrip.cc	/^void runClient(const char* ip, uint16_t port)$/;"	f	typeref:typename:void
runClient	src/muduo/examples/roundtrip/roundtrip_udp.cc	/^void runClient(const char* ip, uint16_t port)$/;"	f	typeref:typename:void
runClient	src/muduo/examples/sudoku/batch.cc	/^void runClient(std::istream& in, const InetAddress& serverAddr, int conn)$/;"	f	typeref:typename:void
runClient	src/muduo/examples/sudoku/loadtest.cc	/^  void runClient(const InputPtr& input, const InetAddress& serverAddr, int rps, int conn, bool n/;"	f	class:SudokuLoadtest	typeref:typename:void	file:
runClient	src/muduo/examples/sudoku/pipeline.cc	/^void runClient(const InputPtr& input,$/;"	f	typeref:typename:void
runEvery	src/muduo/muduo/net/EventLoop.cc	/^TimerId EventLoop::runEvery(double interval, TimerCallback cb)$/;"	f	class:EventLoop	typeref:typename:TimerId
runInLoop	src/muduo/muduo/net/EventLoop.cc	/^void EventLoop::runInLoop(Functor cb)$/;"	f	class:EventLoop	typeref:typename:void
runInThread	src/muduo/muduo/base/Thread.cc	/^  void runInThread()$/;"	f	struct:muduo::detail::ThreadData	typeref:typename:void	file:
runInThread	src/muduo/muduo/base/ThreadPool.cc	/^void ThreadPool::runInThread()$/;"	f	class:ThreadPool	typeref:typename:void
runLocal	src/muduo/examples/sudoku/batch.cc	/^void runLocal(std::istream& in)$/;"	f	typeref:typename:void
runOnce	src/muduo/examples/pingpong/bench.cc	/^std::pair<int, int> runOnce()$/;"	f	typeref:typename:std::pair<int,int>
runServer	src/muduo/examples/roundtrip/roundtrip.cc	/^void runServer(uint16_t port)$/;"	f	typeref:typename:void
runServer	src/muduo/examples/roundtrip/roundtrip_udp.cc	/^void runServer(uint16_t port)$/;"	f	typeref:typename:void
run_	src/muduo/muduo/base/tests/Thread_bench.cc	/^  TimestampQueue start_, run_, done_;$/;"	m	class:Bench	typeref:typename:TimestampQueue	file:
runnable_	src/tests/googletest/googletest/src/gtest-port.cc	/^    scoped_ptr<Runnable> runnable_;$/;"	m	struct:testing::internal::__anon142d171a0211::ThreadWithParamSupport::ThreadMainParam	typeref:typename:scoped_ptr<Runnable>	file:
runningHandles_	src/muduo/examples/curl/Curl.h	/^  int runningHandles_;$/;"	m	class:curl::Curl	typeref:typename:int
running_	src/muduo/muduo/base/AsyncLogging.h	/^  std::atomic<bool> running_;$/;"	m	class:muduo::AsyncLogging	typeref:typename:std::atomic<bool>
running_	src/muduo/muduo/base/ThreadPool.h	/^  bool running_;$/;"	m	class:muduo::ThreadPool	typeref:typename:bool
s	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  const std::string& s() const { return s_; }$/;"	f	class:testing::gmock_matchers_test::AClass	typeref:typename:const std::string &	file:
s1_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static const char* const s1_;$/;"	m	class:__anonf780395f0111::SingleEvaluationTest	typeref:typename:const char * const	file:
s1_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^const char* const SingleEvaluationTest::s1_ = "01234";$/;"	m	class:__anonf780395f0111::SingleEvaluationTest	typeref:typename:const char * const
s2_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static const char* const s2_;$/;"	m	class:__anonf780395f0111::SingleEvaluationTest	typeref:typename:const char * const	file:
s2_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^const char* const SingleEvaluationTest::s2_ = "abcde";$/;"	m	class:__anonf780395f0111::SingleEvaluationTest	typeref:typename:const char * const
s_	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^    const Streamlike* s_;$/;"	m	class:testing::gmock_matchers_test::Streamlike::ConstIter	typeref:typename:const Streamlike *	file:
s_	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  std::string s_;$/;"	m	class:testing::gmock_matchers_test::AClass	typeref:typename:std::string	file:
s_numCreated_	src/muduo/muduo/net/Timer.cc	/^AtomicInt64 Timer::s_numCreated_;$/;"	m	class:Timer	typeref:typename:AtomicInt64
s_numCreated_	src/muduo/muduo/net/Timer.h	/^  static AtomicInt64 s_numCreated_;$/;"	m	class:muduo::net::Timer	typeref:typename:AtomicInt64
sample	src/libtfhe-superaic-core/include/tgsw.h	/^    TLweSampleFFT **sample; \/\/\/< accès optionnel aux différents blocs de taille l.$/;"	m	struct:TGswSampleFFT	typeref:typename:TLweSampleFFT **
sample1.o	src/tests/googletest/googletest/make/Makefile	/^sample1.o : $(USER_DIR)\/sample1.cc $(USER_DIR)\/sample1.h $(GTEST_HEADERS)$/;"	t
sample1.o	src/tests/googletest/googletest/scripts/test/Makefile	/^sample1.o : $(SAMPLE_DIR)\/sample1.cc $(SAMPLE_DIR)\/sample1.h$/;"	t
sample1_unittest	src/tests/googletest/googletest/make/Makefile	/^sample1_unittest : sample1.o sample1_unittest.o gtest_main.a$/;"	t
sample1_unittest	src/tests/googletest/googletest/scripts/test/Makefile	/^sample1_unittest : sample1.o sample1_unittest.o gtest-all.o gtest_main.o$/;"	t
sample1_unittest.o	src/tests/googletest/googletest/make/Makefile	/^sample1_unittest.o : $(USER_DIR)\/sample1_unittest.cc \\$/;"	t
sample1_unittest.o	src/tests/googletest/googletest/scripts/test/Makefile	/^sample1_unittest.o : $(SAMPLE_DIR)\/sample1_unittest.cc \\$/;"	t
samples/libsamples.la	src/tests/googletest/googletest/Makefile.am	/^noinst_LTLIBRARIES = samples\/libsamples.la$/;"	T	pseudodir:noinst
samples/sample10_unittest	src/tests/googletest/googletest/Makefile.am	/^check_PROGRAMS += samples\/sample10_unittest$/;"	P	pseudodir:check
samples/sample1_unittest	src/tests/googletest/googletest/Makefile.am	/^check_PROGRAMS += samples\/sample1_unittest$/;"	P	pseudodir:check
samples_libsamples_la	src/tests/googletest/googletest/Makefile.am	/^noinst_LTLIBRARIES = samples\/libsamples.la$/;"	T	pseudodir:noinst
samples_libsamples_la_SOURCES	src/tests/googletest/googletest/Makefile.am	/^samples_libsamples_la_SOURCES = \\$/;"	m
samples_sample10_unittest	src/tests/googletest/googletest/Makefile.am	/^check_PROGRAMS += samples\/sample10_unittest$/;"	P	pseudodir:check
samples_sample10_unittest_LDADD	src/tests/googletest/googletest/Makefile.am	/^samples_sample10_unittest_LDADD = lib\/libgtest.la$/;"	m
samples_sample10_unittest_SOURCES	src/tests/googletest/googletest/Makefile.am	/^samples_sample10_unittest_SOURCES = samples\/sample10_unittest.cc$/;"	m
samples_sample1_unittest	src/tests/googletest/googletest/Makefile.am	/^check_PROGRAMS += samples\/sample1_unittest$/;"	P	pseudodir:check
samples_sample1_unittest_LDADD	src/tests/googletest/googletest/Makefile.am	/^samples_sample1_unittest_LDADD = lib\/libgtest_main.la \\$/;"	m
samples_sample1_unittest_SOURCES	src/tests/googletest/googletest/Makefile.am	/^samples_sample1_unittest_SOURCES = samples\/sample1_unittest.cc$/;"	m
samplingPeriod_	src/muduo/examples/procmon/plot.h	/^  const int samplingPeriod_;$/;"	m	class:Plot	typeref:typename:const int
save	src/muduo/examples/sudoku/percentile.h	/^  void save(const std::vector<int>& latencies, muduo::StringArg name) const$/;"	f	class:Percentile	typeref:typename:void
saved_tz_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  const char* saved_tz_;$/;"	m	class:__anonf780395f0111::FormatEpochTimeInMillisAsIso8601Test	typeref:typename:const char *	file:
saved_verbose_flag_	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^  const std::string saved_verbose_flag_;$/;"	m	class:__anon6b6cf3b20111::VerboseFlagPreservingFixture	typeref:typename:const std::string	file:
saver_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static GTestFlagSaver* saver_;$/;"	m	class:__anonf780395f0111::GTestFlagSaverTest	typeref:typename:GTestFlagSaver *	file:
saver_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^GTestFlagSaver* GTestFlagSaverTest::saver_ = NULL;$/;"	m	class:__anonf780395f0111::GTestFlagSaverTest	typeref:typename:GTestFlagSaver *
sawtooth	src/muduo/examples/procmon/dummyload.cc	/^void sawtooth()$/;"	f	typeref:typename:void
scanDir	src/muduo/muduo/base/ProcessInfo.cc	/^int scanDir(const char *dirpath, int (*filter)(const struct dirent *))$/;"	f	namespace:muduo::detail	typeref:typename:int
scoped_ptr	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  explicit scoped_ptr(T* p = NULL) : ptr_(p) {}$/;"	f	class:testing::internal::scoped_ptr
scoped_ptr	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^class scoped_ptr {$/;"	c	namespace:testing::internal
second	src/muduo/muduo/base/TimeZone.h	/^  int second = 0;   \/\/ [0, 59]$/;"	m	struct:muduo::DateTime	typeref:typename:int
second_matcher_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const Matcher<const SecondType&> second_matcher_;$/;"	m	class:testing::internal::PairMatcherImpl	typeref:typename:const Matcher<const SecondType &>
second_matcher_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const SecondMatcher second_matcher_;$/;"	m	class:testing::internal::PairMatcher	typeref:typename:const SecondMatcher
second_value_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    const Second second_value_;$/;"	m	class:testing::internal::BoundSecondMatcher::Impl	typeref:typename:const Second
second_value_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const Second second_value_;$/;"	m	class:testing::internal::BoundSecondMatcher	typeref:typename:const Second
secondsSinceEpoch	src/muduo/muduo/base/Timestamp.h	/^  time_t secondsSinceEpoch() const$/;"	f	class:muduo::Timestamp	typeref:typename:time_t
selectCallback	src/muduo/contrib/hiredis/mrediscli.cc	/^void selectCallback(hiredis::Hiredis* c, redisReply* reply, uint16_t* index)$/;"	f	typeref:typename:void
self	src/muduo/muduo/base/LogStream.h	/^  typedef LogStream self;$/;"	t	class:muduo::LogStream	typeref:typename:LogStream
send	src/muduo/examples/asio/chat/codec.h	/^  void send(muduo::net::TcpConnection* conn,$/;"	f	class:LengthHeaderCodec	typeref:typename:void
send	src/muduo/examples/asio/chat/loadtest.cc	/^  void send()$/;"	f	class:ChatClient	typeref:typename:void	file:
send	src/muduo/examples/hub/pubsub.cc	/^bool PubSubClient::send(const string& message)$/;"	f	class:PubSubClient	typeref:typename:bool
send	src/muduo/examples/memcached/client/bench.cc	/^  void send()$/;"	f	class:Client	typeref:typename:void	file:
send	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockClient.java	/^    public ChannelBuffer send(String str) {$/;"	m	class:MockClient
send	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockClient.java	/^    public void send(ChannelBuffer buf) {$/;"	m	class:MockClient
send	src/muduo/examples/protobuf/codec/codec.h	/^  void send(const muduo::net::TcpConnectionPtr& conn,$/;"	f	class:ProtobufCodec	typeref:typename:void
send	src/muduo/examples/protobuf/rpcbalancer/balancer.cc	/^  bool send(RpcMessage& msg, const TcpConnectionPtr& clientConn)$/;"	f	class:BackendSession	typeref:typename:bool	file:
send	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^  bool send(MSG& msg, const TcpConnectionPtr& clientConn)$/;"	f	class:BackendSession	typeref:typename:bool	file:
send	src/muduo/examples/sudoku/loadtest.cc	/^  void send(int n)$/;"	f	class:SudokuClient	typeref:typename:void	file:
send	src/muduo/examples/sudoku/pipeline.cc	/^  void send(int n)$/;"	f	class:SudokuClient	typeref:typename:void	file:
send	src/muduo/examples/wordcount/hasher.cc	/^  void send(const string& word, int64_t count)$/;"	f	class:SendThrottler	typeref:typename:void	file:
send	src/muduo/muduo/net/TcpConnection.cc	/^void TcpConnection::send(Buffer* buf)$/;"	f	class:TcpConnection	typeref:typename:void
send	src/muduo/muduo/net/TcpConnection.cc	/^void TcpConnection::send(const StringPiece& message)$/;"	f	class:TcpConnection	typeref:typename:void
send	src/muduo/muduo/net/TcpConnection.cc	/^void TcpConnection::send(const void* data, int len)$/;"	f	class:TcpConnection	typeref:typename:void
send	src/muduo/muduo/net/protobuf/ProtobufCodecLite.cc	/^void ProtobufCodecLite::send(const TcpConnectionPtr& conn,$/;"	f	class:ProtobufCodecLite	typeref:typename:void
send	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^  void send(const TcpConnectionPtr& conn,$/;"	f	class:muduo::net::ProtobufCodecLiteT	typeref:typename:void
sendBackendBuffer	src/muduo/examples/multiplexer/multiplexer.cc	/^  void sendBackendBuffer(int id, Buffer* buf)$/;"	f	class:MultiplexServer	typeref:typename:void	file:
sendBackendBuffer	src/muduo/examples/multiplexer/multiplexer_simple.cc	/^  void sendBackendBuffer(int id, Buffer* buf)$/;"	f	class:MultiplexServer	typeref:typename:void	file:
sendBackendPacket	src/muduo/examples/multiplexer/multiplexer.cc	/^  void sendBackendPacket(int id, Buffer* buf)$/;"	f	class:MultiplexServer	typeref:typename:void	file:
sendBackendPacket	src/muduo/examples/multiplexer/multiplexer_simple.cc	/^  void sendBackendPacket(int id, Buffer* buf)$/;"	f	class:MultiplexServer	typeref:typename:void	file:
sendBackendString	src/muduo/examples/multiplexer/multiplexer.cc	/^  void sendBackendString(int id, const string& msg)$/;"	f	class:MultiplexServer	typeref:typename:void	file:
sendBackendString	src/muduo/examples/multiplexer/multiplexer_simple.cc	/^  void sendBackendString(int id, const string& msg)$/;"	f	class:MultiplexServer	typeref:typename:void	file:
sendInLoop	src/muduo/muduo/net/TcpConnection.cc	/^void TcpConnection::sendInLoop(const StringPiece& message)$/;"	f	class:TcpConnection	typeref:typename:void
sendInLoop	src/muduo/muduo/net/TcpConnection.cc	/^void TcpConnection::sendInLoop(const void* data, size_t len)$/;"	f	class:TcpConnection	typeref:typename:void
sendMyTime	src/muduo/examples/roundtrip/roundtrip.cc	/^void sendMyTime()$/;"	f	typeref:typename:void
sendMyTime	src/muduo/examples/roundtrip/roundtrip_udp.cc	/^void sendMyTime(int sockfd)$/;"	f	typeref:typename:void
sendRequest	src/muduo/examples/protobuf/rpcbench/client.cc	/^  void sendRequest()$/;"	f	class:RpcClient	typeref:typename:void	file:
sendServerPacket	src/muduo/examples/multiplexer/demux.cc	/^  void sendServerPacket(int connId, Buffer* buf)$/;"	f	class:DemuxServer	typeref:typename:void	file:
sendTime_	src/muduo/examples/sudoku/loadtest.cc	/^  std::unordered_map<int, Timestamp> sendTime_;$/;"	m	class:SudokuClient	typeref:typename:std::unordered_map<int,Timestamp>	file:
sendTime_	src/muduo/examples/sudoku/pipeline.cc	/^  std::unordered_map<int, Timestamp> sendTime_;$/;"	m	class:SudokuClient	typeref:typename:std::unordered_map<int,Timestamp>	file:
sendTo	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^  void sendTo(const TcpConnectionPtr& conn, RawMessage& msg)$/;"	f	class:BackendSession	typeref:typename:void	file:
sendTo	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^  void sendTo(const TcpConnectionPtr& conn, const RpcMessage& msg)$/;"	f	class:BackendSession	typeref:typename:void	file:
sendToClient	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockBackendServer.java	/^    public ChannelBuffer sendToClient(int whichClient, String str) {$/;"	m	class:MockBackendServer
sendToClient	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockBackendServer.java	/^    public void sendToClient(int whichClient, ChannelBuffer data) {$/;"	m	class:MockBackendServer
sendToClient	src/muduo/examples/multiplexer/multiplexer.cc	/^  void sendToClient(Buffer* buf)$/;"	f	class:MultiplexServer	typeref:typename:void	file:
sendToClient	src/muduo/examples/multiplexer/multiplexer_simple.cc	/^  void sendToClient(Buffer* buf)$/;"	f	class:MultiplexServer	typeref:typename:void	file:
send_payload	src/libtfhe-superaic-core/tfhe_package.cpp	/^bool send_payload(shared_ptr<TFHE_Payload> payload,int fd){$/;"	f	typeref:typename:bool
send_proxy_pack	src/libtfhe-superaic-core/tfhe_package.cpp	/^bool send_proxy_pack(TFHE_Comm_Pack_t &pack, int fd){$/;"	f	typeref:typename:bool
senders_	src/muduo/examples/wordcount/receiver.cc	/^  int senders_;$/;"	m	class:WordCountReceiver	typeref:typename:int	file:
sent_	src/muduo/examples/memcached/client/bench.cc	/^  int sent_;$/;"	m	class:Client	typeref:typename:int	file:
sequence	src/muduo/muduo/net/Timer.h	/^  int64_t sequence() const { return sequence_; }$/;"	f	class:muduo::net::Timer	typeref:typename:int64_t
sequence_	src/muduo/muduo/net/Timer.h	/^  const int64_t sequence_;$/;"	m	class:muduo::net::Timer	typeref:typename:const int64_t
sequence_	src/muduo/muduo/net/TimerId.h	/^  int64_t sequence_;$/;"	m	class:muduo::net::TimerId	typeref:typename:int64_t
sequence_created_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  bool sequence_created_;$/;"	m	class:testing::InSequence	typeref:typename:bool
serialVersionUID	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/TestFailedException.java	/^    private static final long serialVersionUID = 1982L;$/;"	f	class:TestFailedException	file:
serializeToBuffer	src/muduo/muduo/net/protobuf/ProtobufCodecLite.cc	/^int ProtobufCodecLite::serializeToBuffer(const google::protobuf::Message& message, Buffer* buf)$/;"	f	class:ProtobufCodecLite	typeref:typename:int
serialize_payload	src/libtfhe-superaic-core/tfhe_package.cpp	/^size_t ProxyPayload_ACK_OK::serialize_payload(unsigned char *buffer, size_t buffer_size)$/;"	f	class:ProxyPayload_ACK_OK	typeref:typename:size_t
serve	src/muduo/contrib/thrift/ThriftServer.cc	/^void ThriftServer::serve()$/;"	f	class:ThriftServer	typeref:typename:void
serverAddr_	src/muduo/contrib/hiredis/Hiredis.h	/^  const muduo::net::InetAddress serverAddr_;$/;"	m	class:hiredis::Hiredis	typeref:typename:const muduo::net::InetAddress
serverAddr_	src/muduo/muduo/net/Connector.h	/^  InetAddress serverAddr_;$/;"	m	class:muduo::net::Connector	typeref:typename:InetAddress
serverAddress	src/muduo/contrib/hiredis/Hiredis.h	/^  const muduo::net::InetAddress& serverAddress() const { return serverAddr_; }$/;"	f	class:hiredis::Hiredis	typeref:typename:const muduo::net::InetAddress &
serverAddress	src/muduo/muduo/net/Connector.h	/^  const InetAddress& serverAddress() const { return serverAddr_; }$/;"	f	class:muduo::net::Connector	typeref:typename:const InetAddress &
serverConn_	src/muduo/examples/multiplexer/demux.cc	/^  TcpConnectionPtr serverConn_;$/;"	m	class:DemuxServer	typeref:typename:TcpConnectionPtr	file:
serverConn_	src/muduo/examples/socks4a/tunnel.h	/^  muduo::net::TcpConnectionPtr serverConn_;$/;"	m	class:Tunnel	typeref:typename:muduo::net::TcpConnectionPtr
serverConnectionCallback	src/muduo/examples/roundtrip/roundtrip.cc	/^void serverConnectionCallback(const TcpConnectionPtr& conn)$/;"	f	typeref:typename:void
serverMessageCallback	src/muduo/examples/roundtrip/roundtrip.cc	/^void serverMessageCallback(const TcpConnectionPtr& conn,$/;"	f	typeref:typename:void
serverReadCallback	src/muduo/examples/roundtrip/roundtrip_udp.cc	/^void serverReadCallback(int sockfd, muduo::Timestamp receiveTime)$/;"	f	typeref:typename:void
server_	src/muduo/contrib/thrift/ThriftConnection.h	/^  ThriftServer* server_;$/;"	m	class:ThriftConnection	typeref:typename:ThriftServer *
server_	src/muduo/contrib/thrift/ThriftServer.h	/^  muduo::net::TcpServer server_;$/;"	m	class:ThriftServer	typeref:typename:muduo::net::TcpServer
server_	src/muduo/examples/ace/logging/server.cc	/^  TcpServer server_;$/;"	m	class:logging::LogServer	typeref:typename:TcpServer	file:
server_	src/muduo/examples/asio/chat/server.cc	/^  TcpServer server_;$/;"	m	class:ChatServer	typeref:typename:TcpServer	file:
server_	src/muduo/examples/asio/chat/server_threaded.cc	/^  TcpServer server_;$/;"	m	class:ChatServer	typeref:typename:TcpServer	file:
server_	src/muduo/examples/asio/chat/server_threaded_efficient.cc	/^  TcpServer server_;$/;"	m	class:ChatServer	typeref:typename:TcpServer	file:
server_	src/muduo/examples/asio/chat/server_threaded_highperformance.cc	/^  TcpServer server_;$/;"	m	class:ChatServer	typeref:typename:TcpServer	file:
server_	src/muduo/examples/hub/hub.cc	/^  TcpServer server_;$/;"	m	class:pubsub::PubSubServer	typeref:typename:TcpServer	file:
server_	src/muduo/examples/idleconnection/echo.h	/^  muduo::net::TcpServer server_;$/;"	m	class:EchoServer	typeref:typename:muduo::net::TcpServer
server_	src/muduo/examples/idleconnection/sortedlist.cc	/^  TcpServer server_;$/;"	m	class:EchoServer	typeref:typename:TcpServer	file:
server_	src/muduo/examples/maxconnection/echo.h	/^  muduo::net::TcpServer server_;$/;"	m	class:EchoServer	typeref:typename:muduo::net::TcpServer
server_	src/muduo/examples/memcached/server/MemcacheServer.h	/^  muduo::net::TcpServer server_;$/;"	m	class:MemcacheServer	typeref:typename:muduo::net::TcpServer
server_	src/muduo/examples/multiplexer/demux.cc	/^  TcpServer server_;$/;"	m	class:DemuxServer	typeref:typename:TcpServer	file:
server_	src/muduo/examples/multiplexer/multiplexer.cc	/^  TcpServer server_;$/;"	m	class:MultiplexServer	typeref:typename:TcpServer	file:
server_	src/muduo/examples/multiplexer/multiplexer_simple.cc	/^  TcpServer server_;$/;"	m	class:MultiplexServer	typeref:typename:TcpServer	file:
server_	src/muduo/examples/netty/discard/server.cc	/^  TcpServer server_;$/;"	m	class:DiscardServer	typeref:typename:TcpServer	file:
server_	src/muduo/examples/netty/echo/server.cc	/^  TcpServer server_;$/;"	m	class:EchoServer	typeref:typename:TcpServer	file:
server_	src/muduo/examples/netty/echo/server2.cc	/^  TcpServer server_;$/;"	m	class:EchoServer	typeref:typename:TcpServer	file:
server_	src/muduo/examples/procmon/procmon.cc	/^  HttpServer server_;$/;"	m	class:Procmon	typeref:typename:HttpServer	file:
server_	src/muduo/examples/protobuf/codec/server.cc	/^  TcpServer server_;$/;"	m	class:QueryServer	typeref:typename:TcpServer	file:
server_	src/muduo/examples/protobuf/rpcbalancer/balancer.cc	/^  TcpServer server_;$/;"	m	class:Balancer	typeref:typename:TcpServer	file:
server_	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^  TcpServer server_;$/;"	m	class:Balancer	typeref:typename:TcpServer	file:
server_	src/muduo/examples/simple/chargen/chargen.h	/^  muduo::net::TcpServer server_;$/;"	m	class:ChargenServer	typeref:typename:muduo::net::TcpServer
server_	src/muduo/examples/simple/daytime/daytime.h	/^  muduo::net::TcpServer server_;$/;"	m	class:DaytimeServer	typeref:typename:muduo::net::TcpServer
server_	src/muduo/examples/simple/discard/discard.h	/^  muduo::net::TcpServer server_;$/;"	m	class:DiscardServer	typeref:typename:muduo::net::TcpServer
server_	src/muduo/examples/simple/echo/echo.h	/^  muduo::net::TcpServer server_;$/;"	m	class:EchoServer	typeref:typename:muduo::net::TcpServer
server_	src/muduo/examples/simple/time/time.h	/^  muduo::net::TcpServer server_;$/;"	m	class:TimeServer	typeref:typename:muduo::net::TcpServer
server_	src/muduo/examples/sudoku/server_basic.cc	/^  TcpServer server_;$/;"	m	class:SudokuServer	typeref:typename:TcpServer	file:
server_	src/muduo/examples/sudoku/server_hybrid.cc	/^  TcpServer server_;$/;"	m	class:SudokuServer	typeref:typename:TcpServer	file:
server_	src/muduo/examples/sudoku/server_multiloop.cc	/^  TcpServer server_;$/;"	m	class:SudokuServer	typeref:typename:TcpServer	file:
server_	src/muduo/examples/sudoku/server_prod.cc	/^  TcpServer server_;$/;"	m	class:SudokuServer	typeref:typename:TcpServer	file:
server_	src/muduo/examples/sudoku/server_threadpool.cc	/^  TcpServer server_;$/;"	m	class:SudokuServer	typeref:typename:TcpServer	file:
server_	src/muduo/examples/wordcount/receiver.cc	/^  TcpServer server_;$/;"	m	class:WordCountReceiver	typeref:typename:TcpServer	file:
server_	src/muduo/muduo/net/http/HttpServer.h	/^  TcpServer server_;$/;"	m	class:muduo::net::HttpServer	typeref:typename:TcpServer
server_	src/muduo/muduo/net/inspect/Inspector.h	/^  HttpServer server_;$/;"	m	class:muduo::net::Inspector	typeref:typename:HttpServer
server_	src/muduo/muduo/net/protorpc/RpcServer.h	/^  TcpServer server_;$/;"	m	class:muduo::net::RpcServer	typeref:typename:TcpServer
server_	src/muduo/muduo/net/tests/EchoServer_unittest.cc	/^  TcpServer server_;$/;"	m	class:EchoServer	typeref:typename:TcpServer	file:
server_socket	src/muduo/examples/wordcount/slowsink.py	/^	server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
server_with_driver	buildotests/Makefile	/^server_with_driver: cmake_check_build_system$/;"	t
server_with_driver	buildotests/examples/Makefile	/^server_with_driver: examples\/CMakeFiles\/server_with_driver.dir\/rule$/;"	t
server_with_driver	src/examples/CMakeLists.txt	/^add_executable(server_with_driver server_with_driver.cpp)$/;"	t
server_with_driver.cpp.i	buildotests/examples/Makefile	/^server_with_driver.cpp.i:$/;"	t
server_with_driver.cpp.o	buildotests/examples/Makefile	/^server_with_driver.cpp.o:$/;"	t
server_with_driver.cpp.s	buildotests/examples/Makefile	/^server_with_driver.cpp.s:$/;"	t
server_with_driver.i	buildotests/examples/Makefile	/^server_with_driver.i: server_with_driver.cpp.i$/;"	t
server_with_driver.o	buildotests/examples/Makefile	/^server_with_driver.o: server_with_driver.cpp.o$/;"	t
server_with_driver.s	buildotests/examples/Makefile	/^server_with_driver.s: server_with_driver.cpp.s$/;"	t
server_with_driver/fast	buildotests/Makefile	/^server_with_driver\/fast:$/;"	t
server_with_driver/fast	buildotests/examples/Makefile	/^server_with_driver\/fast:$/;"	t
server_without_driver	buildotests/Makefile	/^server_without_driver: cmake_check_build_system$/;"	t
server_without_driver	buildotests/examples/Makefile	/^server_without_driver: examples\/CMakeFiles\/server_without_driver.dir\/rule$/;"	t
server_without_driver	src/examples/CMakeLists.txt	/^add_executable(server_without_driver server_without_driver.cpp)$/;"	t
server_without_driver.cpp.i	buildotests/examples/Makefile	/^server_without_driver.cpp.i:$/;"	t
server_without_driver.cpp.o	buildotests/examples/Makefile	/^server_without_driver.cpp.o:$/;"	t
server_without_driver.cpp.s	buildotests/examples/Makefile	/^server_without_driver.cpp.s:$/;"	t
server_without_driver.i	buildotests/examples/Makefile	/^server_without_driver.i: server_without_driver.cpp.i$/;"	t
server_without_driver.o	buildotests/examples/Makefile	/^server_without_driver.o: server_without_driver.cpp.o$/;"	t
server_without_driver.s	buildotests/examples/Makefile	/^server_without_driver.s: server_without_driver.cpp.s$/;"	t
server_without_driver/fast	buildotests/Makefile	/^server_without_driver\/fast:$/;"	t
server_without_driver/fast	buildotests/examples/Makefile	/^server_without_driver\/fast:$/;"	t
service	src/muduo/muduo/net/protorpc/rpc.proto	/^  optional string service = 3;$/;"	f	message:muduo.net.RpcMessage	typeref:typename:string
service_name	src/muduo/muduo/net/protorpc/rpcservice.proto	/^  optional string service_name = 1;$/;"	f	message:muduo.net.ListRpcRequest	typeref:typename:string
service_name	src/muduo/muduo/net/protorpc/rpcservice.proto	/^  repeated string service_name = 2;$/;"	f	message:muduo.net.ListRpcResponse	typeref:typename:string
service_name	src/muduo/muduo/net/protorpc/rpcservice.proto	/^  required string service_name = 1;$/;"	f	message:muduo.net.GetServiceRequest	typeref:typename:string
services_	src/muduo/muduo/net/protorpc/RpcChannel.h	/^  const std::map<std::string, ::google::protobuf::Service*>* services_;$/;"	m	class:muduo::net::RpcChannel	typeref:typename:const std::map<std::string,::google::protobuf::Service * > *
services_	src/muduo/muduo/net/protorpc/RpcServer.h	/^  std::map<std::string, ::google::protobuf::Service*> services_;$/;"	m	class:muduo::net::RpcServer	typeref:typename:std::map<std::string,::google::protobuf::Service * >
session	src/muduo/examples/ace/ttcp/ttcp.cc	/^  SessionMessage session;$/;"	m	struct:Context	typeref:typename:SessionMessage	file:
session	src/muduo/examples/procmon/procmon.cc	/^  int session;$/;"	m	struct:StatData	typeref:typename:int	file:
sessionCount_	src/muduo/examples/pingpong/client.cc	/^  int sessionCount_;$/;"	m	class:Client	typeref:typename:int	file:
sessionID	src/libtfhe-superaic-core/include/tfhe_session.h	/^    Session_ID_t sessionID;$/;"	m	class:tfhe_superaic::Session	typeref:typename:Session_ID_t
sessionMessage_	src/muduo/examples/ace/ttcp/ttcp_asio_async.cc	/^  struct SessionMessage sessionMessage_;$/;"	m	class:TtcpServerConnection	typeref:struct:SessionMessage	file:
session_mtx	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    mutex session_mtx;$/;"	m	class:tfhe_superaic::TFHE_ACC	typeref:typename:mutex
sessions	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    map<Session_ID_t,shared_ptr<Session>> sessions;$/;"	m	class:tfhe_superaic::TFHE_ACC	typeref:typename:map<Session_ID_t,shared_ptr<Session>>
sessions_	src/muduo/examples/pingpong/client.cc	/^  std::vector<std::unique_ptr<Session>> sessions_;$/;"	m	class:Client	typeref:typename:std::vector<std::unique_ptr<Session>>	file:
set	src/muduo/muduo/base/StringPiece.h	/^  void set(const char* buffer, int len) { ptr_ = buffer; length_ = len; }$/;"	f	class:muduo::StringPiece	typeref:typename:void
set	src/muduo/muduo/base/StringPiece.h	/^  void set(const char* str) {$/;"	f	class:muduo::StringPiece	typeref:typename:void
set	src/muduo/muduo/base/StringPiece.h	/^  void set(const void* buffer, int len) {$/;"	f	class:muduo::StringPiece	typeref:typename:void
set	src/muduo/muduo/base/ThreadLocalSingleton.h	/^    void set(T* newObj)$/;"	f	class:muduo::ThreadLocalSingleton::Deleter	typeref:typename:void
set	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class.py	/^  set = sets.Set$/;"	v
set	src/tests/googletest/googlemock/scripts/generator/cpp/keywords.py	/^    from sets import Set as set$/;"	Y	nameref:unknown:Set
set	src/tests/googletest/googlemock/scripts/generator/cpp/tokenize.py	/^    from sets import Set as set$/;"	Y	nameref:unknown:Set
set	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  void set(const T& value) { *pointer() = value; }$/;"	f	class:testing::internal::ThreadLocal	typeref:typename:void
set	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  void set(const T& value) { value_ = value; }$/;"	f	class:testing::internal::ThreadLocal	typeref:typename:void
set	src/tests/googletest/googletest/scripts/fuse_gtest_files.py	/^  from sets import Set as set  # For Python 2.3 compatibility$/;"	Y	nameref:unknown:Set
set	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^  from sets import Set as set  # For Python 2.3 compatibility$/;"	Y	nameref:unknown:Set
setBody	src/muduo/muduo/net/http/HttpResponse.h	/^  void setBody(const string& body)$/;"	f	class:muduo::net::HttpResponse	typeref:typename:void
setBuffer	src/muduo/muduo/base/GzipFile.h	/^  bool setBuffer(int size) { return ::gzbuffer(file_, size) == 0; }$/;"	f	class:muduo::GzipFile	typeref:typename:bool
setCas	src/muduo/examples/memcached/server/Item.h	/^  void setCas(uint64_t casArg)$/;"	f	class:Item	typeref:typename:void
setChannel	src/muduo/contrib/hiredis/Hiredis.cc	/^void Hiredis::setChannel()$/;"	f	class:Hiredis	typeref:typename:void
setChannel	src/muduo/examples/curl/Curl.cc	/^Channel* Request::setChannel(int fd)$/;"	f	class:Request	typeref:typename:Channel *
setCloseCallback	src/muduo/muduo/net/Channel.h	/^  void setCloseCallback(EventCallback cb)$/;"	f	class:muduo::net::Channel	typeref:typename:void
setCloseCallback	src/muduo/muduo/net/TcpConnection.h	/^  void setCloseCallback(const CloseCallback& cb)$/;"	f	class:muduo::net::TcpConnection	typeref:typename:void
setCloseConnection	src/muduo/muduo/net/http/HttpResponse.h	/^  void setCloseConnection(bool on)$/;"	f	class:muduo::net::HttpResponse	typeref:typename:void
setConnectCallback	src/muduo/contrib/hiredis/Hiredis.h	/^  void setConnectCallback(const ConnectCallback& cb) { connectCb_ = cb; }$/;"	f	class:hiredis::Hiredis	typeref:typename:void
setConnection	src/muduo/muduo/net/protorpc/RpcChannel.h	/^  void setConnection(const TcpConnectionPtr& conn)$/;"	f	class:muduo::net::RpcChannel	typeref:typename:void
setConnectionCallback	src/muduo/examples/hub/pubsub.h	/^  void setConnectionCallback(const ConnectionCallback& cb)$/;"	f	class:pubsub::PubSubClient	typeref:typename:void
setConnectionCallback	src/muduo/muduo/net/TcpClient.h	/^  void setConnectionCallback(ConnectionCallback cb)$/;"	f	class:muduo::net::TcpClient	typeref:typename:void
setConnectionCallback	src/muduo/muduo/net/TcpConnection.h	/^  void setConnectionCallback(const ConnectionCallback& cb)$/;"	f	class:muduo::net::TcpConnection	typeref:typename:void
setConnectionCallback	src/muduo/muduo/net/TcpServer.h	/^  void setConnectionCallback(const ConnectionCallback& cb)$/;"	f	class:muduo::net::TcpServer	typeref:typename:void
setContentType	src/muduo/muduo/net/http/HttpResponse.h	/^  void setContentType(const string& contentType)$/;"	f	class:muduo::net::HttpResponse	typeref:typename:void
setContext	src/muduo/muduo/net/EventLoop.h	/^  void setContext(const boost::any& context)$/;"	f	class:muduo::net::EventLoop	typeref:typename:void
setContext	src/muduo/muduo/net/TcpConnection.h	/^  void setContext(const boost::any& context)$/;"	f	class:muduo::net::TcpConnection	typeref:typename:void
setCookie	src/muduo/muduo/base/LogStream.h	/^  void setCookie(void (*cookie)()) { cookie_ = cookie; }$/;"	f	class:muduo::detail::FixedBuffer	typeref:typename:void
setDataCallback	src/muduo/examples/curl/Curl.h	/^  void setDataCallback(const DataCallback& cb)$/;"	f	class:curl::Request	typeref:typename:void
setDefaultName	src/muduo/muduo/base/Thread.cc	/^void Thread::setDefaultName()$/;"	f	class:muduo::Thread	typeref:typename:void
setDisconnectCallback	src/muduo/contrib/hiredis/Hiredis.h	/^  void setDisconnectCallback(const DisconnectCallback& cb) { disconnectCb_ = cb; }$/;"	f	class:hiredis::Hiredis	typeref:typename:void
setDoneCallback	src/muduo/examples/curl/Curl.h	/^  void setDoneCallback(const DoneCallback& cb)$/;"	f	class:curl::Request	typeref:typename:void
setErrorCallback	src/muduo/muduo/net/Channel.h	/^  void setErrorCallback(EventCallback cb)$/;"	f	class:muduo::net::Channel	typeref:typename:void
setFlush	src/muduo/muduo/base/Logging.cc	/^void Logger::setFlush(FlushFunc flush)$/;"	f	class:Logger	typeref:typename:void
setHeaderCallback	src/muduo/examples/curl/Curl.h	/^  void setHeaderCallback(const DataCallback& cb)$/;"	f	class:curl::Request	typeref:typename:void
setHighWaterMarkCallback	src/muduo/muduo/net/TcpConnection.h	/^  void setHighWaterMarkCallback(const HighWaterMarkCallback& cb, size_t highWaterMark)$/;"	f	class:muduo::net::TcpConnection	typeref:typename:void
setHttpCallback	src/muduo/muduo/net/http/HttpServer.h	/^  void setHttpCallback(const HttpCallback& cb)$/;"	f	class:muduo::net::HttpServer	typeref:typename:void
setId	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockClient.java	/^    public void setId(int connId) {$/;"	m	class:MockClient
setKeepAlive	src/muduo/muduo/net/Socket.cc	/^void Socket::setKeepAlive(bool on)$/;"	f	class:Socket	typeref:typename:void
setLogLevel	src/muduo/muduo/base/Logging.cc	/^void Logger::setLogLevel(Logger::LogLevel level)$/;"	f	class:Logger	typeref:typename:void
setMaxQueueSize	src/muduo/muduo/base/ThreadPool.h	/^  void setMaxQueueSize(int maxSize) { maxQueueSize_ = maxSize; }$/;"	f	class:muduo::ThreadPool	typeref:typename:void
setMessageCallback	src/muduo/muduo/net/TcpClient.h	/^  void setMessageCallback(MessageCallback cb)$/;"	f	class:muduo::net::TcpClient	typeref:typename:void
setMessageCallback	src/muduo/muduo/net/TcpConnection.h	/^  void setMessageCallback(const MessageCallback& cb)$/;"	f	class:muduo::net::TcpConnection	typeref:typename:void
setMessageCallback	src/muduo/muduo/net/TcpServer.h	/^  void setMessageCallback(const MessageCallback& cb)$/;"	f	class:muduo::net::TcpServer	typeref:typename:void
setMessageVariance	src/tests/fakes/tgsw-fft.h	/^        void setMessageVariance(bool mess, double variance) {$/;"	f	struct:__anonee999a9f0111::FakeTGswFFT	typeref:typename:void
setMessageVariance	src/tests/fakes/tgsw.h	/^        void setMessageVariance(bool mess, double variance) {$/;"	f	struct:__anond844f8d20111::FakeTGsw	typeref:typename:void
setMethod	src/muduo/muduo/net/http/HttpRequest.h	/^  bool setMethod(const char* start, const char* end)$/;"	f	class:muduo::net::HttpRequest	typeref:typename:bool
setName	src/muduo/muduo/base/tests/SingletonThreadLocal_test.cc	/^  void setName(const muduo::string& n) { name_ = n; }$/;"	f	class:Test	typeref:typename:void	file:
setName	src/muduo/muduo/base/tests/Singleton_test.cc	/^  void setName(const muduo::string& n) { name_ = n; }$/;"	f	class:Test	typeref:typename:void	file:
setName	src/muduo/muduo/base/tests/ThreadLocalSingleton_test.cc	/^  void setName(const muduo::string& n) { name_ = n; }$/;"	f	class:Test	typeref:typename:void	file:
setName	src/muduo/muduo/base/tests/ThreadLocal_test.cc	/^  void setName(const muduo::string& n) { name_ = n; }$/;"	f	class:Test	typeref:typename:void	file:
setNewConnectionCallback	src/muduo/muduo/net/Acceptor.h	/^  void setNewConnectionCallback(const NewConnectionCallback& cb)$/;"	f	class:muduo::net::Acceptor	typeref:typename:void
setNewConnectionCallback	src/muduo/muduo/net/Connector.h	/^  void setNewConnectionCallback(const NewConnectionCallback& cb)$/;"	f	class:muduo::net::Connector	typeref:typename:void
setNonBlockAndCloseOnExec	src/muduo/muduo/net/SocketsOps.cc	/^void setNonBlockAndCloseOnExec(int sockfd)$/;"	f	namespace:__anon4a4088460111	typeref:typename:void
setOutput	src/muduo/muduo/base/Logging.cc	/^void Logger::setOutput(OutputFunc out)$/;"	f	class:Logger	typeref:typename:void
setOwner	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/TestCase.java	/^    public void setOwner(MultiplexerTest god) {$/;"	m	class:TestCase
setPath	src/muduo/muduo/net/http/HttpRequest.h	/^  void setPath(const char* start, const char* end)$/;"	f	class:muduo::net::HttpRequest	typeref:typename:void
setProperty	src/libtfhe-superaic-core/tfhe_generic_streams.cpp	/^    virtual void setProperty(const std::string &name, const std::string &value) {$/;"	f	class:MapTextModeProperties	typeref:typename:void	file:
setProperty_double	src/libtfhe-superaic-core/tfhe_generic_streams.cpp	/^    virtual void setProperty_double(const std::string &name, double value) {$/;"	f	class:MapTextModeProperties	typeref:typename:void	file:
setProperty_int64_t	src/libtfhe-superaic-core/tfhe_generic_streams.cpp	/^    virtual void setProperty_int64_t(const std::string &name, int64_t value) {$/;"	f	class:MapTextModeProperties	typeref:typename:void	file:
setQuery	src/muduo/muduo/net/http/HttpRequest.h	/^  void setQuery(const char* start, const char* end)$/;"	f	class:muduo::net::HttpRequest	typeref:typename:void
setRange	src/muduo/examples/curl/Curl.cc	/^void Request::setRange(const StringArg range)$/;"	f	class:Request	typeref:typename:void
setReadCallback	src/muduo/muduo/net/Channel.h	/^  void setReadCallback(ReadEventCallback cb)$/;"	f	class:muduo::net::Channel	typeref:typename:void
setReceiveTime	src/muduo/muduo/net/http/HttpRequest.h	/^  void setReceiveTime(Timestamp t)$/;"	f	class:muduo::net::HttpRequest	typeref:typename:void
setReuseAddr	src/muduo/muduo/net/Socket.cc	/^void Socket::setReuseAddr(bool on)$/;"	f	class:Socket	typeref:typename:void
setReusePort	src/muduo/muduo/net/Socket.cc	/^void Socket::setReusePort(bool on)$/;"	f	class:Socket	typeref:typename:void
setScopeId	src/muduo/muduo/net/InetAddress.cc	/^void InetAddress::setScopeId(uint32_t scope_id)$/;"	f	class:InetAddress	typeref:typename:void
setServices	src/muduo/muduo/net/protorpc/RpcChannel.h	/^  void setServices(const std::map<std::string, ::google::protobuf::Service*>* services)$/;"	f	class:muduo::net::RpcChannel	typeref:typename:void
setSockAddrInet6	src/muduo/muduo/net/InetAddress.h	/^  void setSockAddrInet6(const struct sockaddr_in6& addr6) { addr6_ = addr6; }$/;"	f	class:muduo::net::InetAddress	typeref:typename:void
setState	src/muduo/muduo/net/Connector.h	/^  void setState(States s) { state_ = s; }$/;"	f	class:muduo::net::Connector	typeref:typename:void
setState	src/muduo/muduo/net/TcpConnection.h	/^  void setState(StateE s) { state_ = s; }$/;"	f	class:muduo::net::TcpConnection	typeref:typename:void
setStatusCode	src/muduo/muduo/net/http/HttpResponse.h	/^  void setStatusCode(HttpStatusCode code)$/;"	f	class:muduo::net::HttpResponse	typeref:typename:void
setStatusMessage	src/muduo/muduo/net/http/HttpResponse.h	/^  void setStatusMessage(const string& message)$/;"	f	class:muduo::net::HttpResponse	typeref:typename:void
setTcpNoDelay	src/muduo/muduo/net/Socket.cc	/^void Socket::setTcpNoDelay(bool on)$/;"	f	class:Socket	typeref:typename:void
setTcpNoDelay	src/muduo/muduo/net/TcpConnection.cc	/^void TcpConnection::setTcpNoDelay(bool on)$/;"	f	class:TcpConnection	typeref:typename:void
setThreadInitCallback	src/muduo/muduo/base/ThreadPool.h	/^  void setThreadInitCallback(const Task& cb)$/;"	f	class:muduo::ThreadPool	typeref:typename:void
setThreadInitCallback	src/muduo/muduo/net/TcpServer.h	/^  void setThreadInitCallback(const ThreadInitCallback& cb)$/;"	f	class:muduo::net::TcpServer	typeref:typename:void
setThreadNum	src/muduo/contrib/thrift/ThriftServer.h	/^  void setThreadNum(int numThreads)$/;"	f	class:ThriftServer	typeref:typename:void
setThreadNum	src/muduo/examples/asio/chat/server_threaded.cc	/^  void setThreadNum(int numThreads)$/;"	f	class:ChatServer	typeref:typename:void	file:
setThreadNum	src/muduo/examples/asio/chat/server_threaded_efficient.cc	/^  void setThreadNum(int numThreads)$/;"	f	class:ChatServer	typeref:typename:void	file:
setThreadNum	src/muduo/examples/asio/chat/server_threaded_highperformance.cc	/^  void setThreadNum(int numThreads)$/;"	f	class:ChatServer	typeref:typename:void	file:
setThreadNum	src/muduo/examples/memcached/server/MemcacheServer.h	/^  void setThreadNum(int threads) { server_.setThreadNum(threads); }$/;"	f	class:MemcacheServer	typeref:typename:void
setThreadNum	src/muduo/examples/protobuf/rpcbalancer/balancer.cc	/^  void setThreadNum(int numThreads)$/;"	f	class:Balancer	typeref:typename:void	file:
setThreadNum	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^  void setThreadNum(int numThreads)$/;"	f	class:Balancer	typeref:typename:void	file:
setThreadNum	src/muduo/muduo/net/EventLoopThreadPool.h	/^  void setThreadNum(int numThreads) { numThreads_ = numThreads; }$/;"	f	class:muduo::net::EventLoopThreadPool	typeref:typename:void
setThreadNum	src/muduo/muduo/net/TcpServer.cc	/^void TcpServer::setThreadNum(int numThreads)$/;"	f	class:TcpServer	typeref:typename:void
setThreadNum	src/muduo/muduo/net/http/HttpServer.h	/^  void setThreadNum(int numThreads)$/;"	f	class:muduo::net::HttpServer	typeref:typename:void
setThreadNum	src/muduo/muduo/net/protorpc/RpcServer.h	/^  void setThreadNum(int numThreads)$/;"	f	class:muduo::net::RpcServer	typeref:typename:void
setTimeZone	src/muduo/muduo/base/Logging.cc	/^void Logger::setTimeZone(const TimeZone& tz)$/;"	f	class:Logger	typeref:typename:void
setTypeTitle	src/libtfhe-superaic-core/tfhe_generic_streams.cpp	/^    virtual void setTypeTitle(const std::string &title) {$/;"	f	class:MapTextModeProperties	typeref:typename:void	file:
setUp	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^  def setUp(self):$/;"	m	class:GTestFilterUnitTest
setUp	src/tests/googletest/googletest/test/gtest_shuffle_test.py	/^  def setUp(self):$/;"	m	class:GTestShuffleUnitTest
setUp	src/tests/googletest/googletest/test/gtest_xml_outfiles_test.py	/^  def setUp(self):$/;"	m	class:GTestXMLOutFilesTest
setVersion	src/muduo/muduo/net/http/HttpRequest.h	/^  void setVersion(Version v)$/;"	f	class:muduo::net::HttpRequest	typeref:typename:void
setWorkerThreadNum	src/muduo/contrib/thrift/ThriftServer.h	/^  void setWorkerThreadNum(int numWorkerThreads)$/;"	f	class:ThriftServer	typeref:typename:void
setWriteCallback	src/muduo/muduo/net/Channel.h	/^  void setWriteCallback(EventCallback cb)$/;"	f	class:muduo::net::Channel	typeref:typename:void
setWriteCompleteCallback	src/muduo/muduo/net/TcpClient.h	/^  void setWriteCompleteCallback(WriteCompleteCallback cb)$/;"	f	class:muduo::net::TcpClient	typeref:typename:void
setWriteCompleteCallback	src/muduo/muduo/net/TcpConnection.h	/^  void setWriteCompleteCallback(const WriteCompleteCallback& cb)$/;"	f	class:muduo::net::TcpConnection	typeref:typename:void
setWriteCompleteCallback	src/muduo/muduo/net/TcpServer.h	/^  void setWriteCompleteCallback(const WriteCompleteCallback& cb)$/;"	f	class:muduo::net::TcpServer	typeref:typename:void
set_cardinality	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  void set_cardinality(const Cardinality& a_cardinality) {$/;"	f	class:testing::internal::ExpectationBase	typeref:typename:void
set_catch_exceptions	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  void set_catch_exceptions(bool value) { catch_exceptions_ = value; }$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:void
set_child_pid	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  void set_child_pid(pid_t child_pid) { child_pid_ = child_pid; }$/;"	f	class:testing::internal::ForkingDeathTest	typeref:typename:void	file:
set_current_test_case	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  void set_current_test_case(TestCase* a_current_test_case) {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:void
set_current_test_info	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  void set_current_test_info(TestInfo* a_current_test_info) {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:void
set_divider	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  void set_divider(int a_divider) { divider_ = a_divider; }$/;"	f	class:testing::gmock_matchers_test::DivisibleByImpl	typeref:typename:void	file:
set_elapsed_time	src/tests/googletest/googletest/include/gtest/gtest.h	/^  void set_elapsed_time(TimeInMillis elapsed) { elapsed_time_ = elapsed; }$/;"	f	class:testing::TestResult	typeref:typename:void
set_failure_in_set_up	src/tests/googletest/googletest/test/gtest_environment_test.cc	/^  void set_failure_in_set_up(FailureType type) {$/;"	f	class:__anon7fd7f0f30111::MyEnvironment	typeref:typename:void	file:
set_forwarding_enabled	src/tests/googletest/googletest/src/gtest.cc	/^  void set_forwarding_enabled(bool enable) { forwarding_enabled_ = enable; }$/;"	f	class:testing::internal::TestEventRepeater	typeref:typename:void	file:
set_full_coef	src/libtfhe-superaic-acc/accs/FPGA-V0/acc_fpga_v0.cpp	/^int FPGA_ACC_V0::set_full_coef(const Torus32 * in_buffer,uint64_t address){$/;"	f	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:int
set_id	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^  void set_id(uint64_t x) { id_ = x; }$/;"	f	struct:RawMessage	typeref:typename:void	file:
set_index	src/muduo/muduo/net/Channel.h	/^  void set_index(int idx) { index_ = idx; }$/;"	f	class:muduo::net::Channel	typeref:typename:void
set_intPolynomial	src/tests/fakes/lagrangehalfc.h	/^        void set_intPolynomial(const IntPolynomial *p) {$/;"	f	struct:__anonb49ff32c0111::FakeLagrangeHalfCPolynomial	typeref:typename:void
set_last_death_test_message	src/tests/googletest/googletest/src/gtest-death-test.cc	/^void DeathTest::set_last_death_test_message(const std::string& message) {$/;"	f	class:testing::internal::DeathTest	typeref:typename:void
set_n	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  void set_n(int new_n) { n_ = new_n; }$/;"	f	class:testing::gmock_matchers_test::AClass	typeref:typename:void	file:
set_os_stack_trace_getter	src/tests/googletest/googletest/src/gtest.cc	/^void UnitTestImpl::set_os_stack_trace_getter($/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:void
set_outcome	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  void set_outcome(DeathTestOutcome an_outcome) { outcome_ = an_outcome; }$/;"	f	class:testing::internal::DeathTestImpl	typeref:typename:void	file:
set_param_value	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  static void set_param_value(int param_value) { param_value_ = param_value; }$/;"	f	class:GeneratorEvaluationTest	typeref:typename:void	file:
set_read_fd	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  void set_read_fd(int fd) { read_fd_ = fd; }$/;"	f	class:testing::internal::DeathTestImpl	typeref:typename:void	file:
set_revents	src/muduo/muduo/net/Channel.h	/^  void set_revents(int revt) { revents_ = revt; } \/\/ used by pollers$/;"	f	class:muduo::net::Channel	typeref:typename:void
set_s	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  void set_s(const std::string& new_s) { s_ = new_s; }$/;"	f	class:testing::gmock_matchers_test::AClass	typeref:typename:void	file:
set_should_run	src/tests/googletest/googletest/include/gtest/gtest.h	/^  void set_should_run(bool should) { should_run_ = should; }$/;"	f	class:testing::TestCase	typeref:typename:void
set_spawned	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  void set_spawned(bool is_spawned) { spawned_ = is_spawned; }$/;"	f	class:testing::internal::DeathTestImpl	typeref:typename:void	file:
set_status	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  void set_status(int a_status) { status_ = a_status; }$/;"	f	class:testing::internal::DeathTestImpl	typeref:typename:void	file:
set_torusPolynomial	src/tests/fakes/lagrangehalfc.h	/^        void set_torusPolynomial(const TorusPolynomial *p) {$/;"	f	struct:__anonb49ff32c0111::FakeLagrangeHalfCPolynomial	typeref:typename:void
set_up_count_	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  int set_up_count_;$/;"	m	class:TestGenerationEnvironment	typeref:typename:int	file:
set_up_tc_	src/tests/googletest/googletest/include/gtest/gtest.h	/^  Test::SetUpTestCaseFunc set_up_tc_;$/;"	m	class:testing::TestCase	typeref:typename:Test::SetUpTestCaseFunc
set_up_was_run	src/tests/googletest/googletest/test/gtest_environment_test.cc	/^  bool set_up_was_run() const { return set_up_was_run_; }$/;"	f	class:__anon7fd7f0f30111::MyEnvironment	typeref:typename:bool	file:
set_up_was_run_	src/tests/googletest/googletest/test/gtest_environment_test.cc	/^  bool set_up_was_run_;$/;"	m	class:__anon7fd7f0f30111::MyEnvironment	typeref:typename:bool	file:
set_value	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  void set_value(int i) { value_ = i; }$/;"	f	class:testing::gmock_matchers_test::Uncopyable	typeref:typename:void	file:
set_write_fd	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  void set_write_fd(int fd) { write_fd_ = fd; }$/;"	f	class:testing::internal::DeathTestImpl	typeref:typename:void	file:
set_x	src/tests/googletest/googletest/test/production.h	/^  void set_x(int an_x) { x_ = an_x; }$/;"	f	class:PrivateCode	typeref:typename:void
setopt	src/muduo/examples/curl/Curl.h	/^  int setopt(OPT opt, const char* p)$/;"	f	class:curl::Request	typeref:typename:int
setopt	src/muduo/examples/curl/Curl.h	/^  int setopt(OPT opt, long p)$/;"	f	class:curl::Request	typeref:typename:int
setopt	src/muduo/examples/curl/Curl.h	/^  int setopt(OPT opt, size_t (*p)(char *, size_t , size_t , void *))$/;"	f	class:curl::Request	typeref:typename:int
setopt	src/muduo/examples/curl/Curl.h	/^  int setopt(OPT opt, void* p)$/;"	f	class:curl::Request	typeref:typename:int
setup	src/muduo/examples/socks4a/tunnel.h	/^  void setup()$/;"	f	class:Tunnel	typeref:typename:void
severity_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  const GTestLogSeverity severity_;$/;"	m	class:testing::internal::GTestLog	typeref:typename:const GTestLogSeverity
shards_	src/muduo/examples/memcached/server/MemcacheServer.h	/^  std::array<MapWithLock, kShards> shards_;$/;"	m	class:MemcacheServer	typeref:typename:std::array<MapWithLock,kShards>
shared_	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^  static T* shared_;$/;"	m	class:CommonTest	typeref:typename:T *	file:
shared_	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^T* CommonTest<T>::shared_ = NULL;$/;"	m	class:CommonTest<T>	typeref:typename:T *
shared_resource_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static const char* shared_resource_;$/;"	m	class:testing::SetUpTestCaseTest	typeref:typename:const char *	file:
shared_resource_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^const char* SetUpTestCaseTest::shared_resource_ = NULL;$/;"	m	class:testing::SetUpTestCaseTest	typeref:typename:const char *
shorturl	src/muduo/examples/shorturl/CMakeLists.txt	/^add_executable(shorturl shorturl.cc)$/;"	t
should_die_	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  bool should_die_;$/;"	m	class:MayDie	typeref:typename:bool	file:
should_die_	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  bool should_die_;$/;"	m	class:TestForDeathTest	typeref:typename:bool	file:
should_run	src/tests/googletest/googletest/include/gtest/gtest.h	/^  bool should_run() const { return should_run_; }$/;"	f	class:testing::TestCase	typeref:typename:bool
should_run	src/tests/googletest/googletest/include/gtest/gtest.h	/^  bool should_run() const { return should_run_; }$/;"	f	class:testing::TestInfo	typeref:typename:bool
should_run_	src/tests/googletest/googletest/include/gtest/gtest.h	/^  bool should_run_;                 \/\/ True iff this test should run$/;"	m	class:testing::TestInfo	typeref:typename:bool
should_run_	src/tests/googletest/googletest/include/gtest/gtest.h	/^  bool should_run_;$/;"	m	class:testing::TestCase	typeref:typename:bool
shrink	src/muduo/muduo/net/Buffer.h	/^  void shrink(size_t reserve)$/;"	f	class:muduo::net::Buffer	typeref:typename:void
shuffle	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  bool shuffle;$/;"	m	struct:testing::Flags	typeref:typename:bool	file:
shuffle_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  bool shuffle_;$/;"	m	class:testing::internal::GTestFlagSaver	typeref:typename:bool
shutdown	src/muduo/muduo/net/TcpConnection.cc	/^void TcpConnection::shutdown()$/;"	f	class:TcpConnection	typeref:typename:void
shutdownInLoop	src/muduo/muduo/net/TcpConnection.cc	/^void TcpConnection::shutdownInLoop()$/;"	f	class:TcpConnection	typeref:typename:void
shutdownWrite	src/muduo/muduo/net/Socket.cc	/^void Socket::shutdownWrite()$/;"	f	class:Socket	typeref:typename:void
shutdownWrite	src/muduo/muduo/net/SocketsOps.cc	/^void sockets::shutdownWrite(int sockfd)$/;"	f	class:sockets	typeref:typename:void
sign_bit	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  Bits sign_bit() const { return kSignBitMask & u_.bits_; }$/;"	f	class:testing::internal::FloatingPoint	typeref:typename:Bits
signum_	src/tests/googletest/googletest/include/gtest/gtest-death-test.h	/^  const int signum_;$/;"	m	class:testing::KilledBySignal	typeref:typename:const int
simple_allinone	src/muduo/examples/simple/CMakeLists.txt	/^add_executable(simple_allinone$/;"	t
simple_chargen	src/muduo/examples/simple/CMakeLists.txt	/^add_executable(simple_chargen chargen\/chargen.cc chargen\/main.cc)$/;"	t
simple_chargenclient	src/muduo/examples/simple/CMakeLists.txt	/^add_executable(simple_chargenclient chargenclient\/chargenclient.cc)$/;"	t
simple_daytime	src/muduo/examples/simple/CMakeLists.txt	/^add_executable(simple_daytime daytime\/daytime.cc daytime\/main.cc)$/;"	t
simple_discard	src/muduo/examples/simple/CMakeLists.txt	/^add_executable(simple_discard discard\/discard.cc discard\/main.cc)$/;"	t
simple_echo	src/muduo/examples/simple/CMakeLists.txt	/^add_executable(simple_echo echo\/echo.cc echo\/main.cc)$/;"	t
simple_time	src/muduo/examples/simple/CMakeLists.txt	/^add_executable(simple_time time\/time.cc time\/main.cc)$/;"	t
simple_timeclient	src/muduo/examples/simple/CMakeLists.txt	/^add_executable(simple_timeclient timeclient\/timeclient.cc)$/;"	t
sin_table	src/libtfhe-superaic-core/fft_processors/nayuki/fft-portable.c	/^	double *sin_table;$/;"	m	struct:FftTables	typeref:typename:double *	file:
singleton_test	src/muduo/muduo/base/tests/CMakeLists.txt	/^add_executable(singleton_test Singleton_test.cc)$/;"	t
singleton_threadlocal_test	src/muduo/muduo/base/tests/CMakeLists.txt	/^add_executable(singleton_threadlocal_test SingletonThreadLocal_test.cc)$/;"	t
size	src/muduo/examples/sudoku/sudoku.cc	/^    int size;$/;"	m	struct:Node	typeref:typename:int	file:
size	src/muduo/examples/wordcount/slowsink.py	/^		size = len(data)$/;"	v
size	src/muduo/muduo/base/BlockingQueue.h	/^  size_t size() const$/;"	f	class:muduo::BlockingQueue	typeref:typename:size_t
size	src/muduo/muduo/base/BoundedBlockingQueue.h	/^  size_t size() const$/;"	f	class:muduo::BoundedBlockingQueue	typeref:typename:size_t
size	src/muduo/muduo/base/StringPiece.h	/^  int size() const { return length_; }$/;"	f	class:muduo::StringPiece	typeref:typename:int
size	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  int size() const { return static_cast<int>(expectations_.size()); }$/;"	f	class:testing::ExpectationSet	typeref:typename:int
size	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  size_t size() const { return size_; }$/;"	f	class:testing::internal::NativeArray	typeref:typename:size_t
size	src/tests/googletest/googletest/src/gtest-test-part.cc	/^int TestPartResultArray::size() const {$/;"	f	class:testing::TestPartResultArray	typeref:typename:int
size2loop	src/libtfhe-superaic-core/fft_processors/nayuki/fft-x8664-avx-reverse.s	/^size2loop:$/;"	l
size2loop	src/libtfhe-superaic-core/fft_processors/nayuki/fft-x8664-avx.s	/^size2loop:$/;"	l
size4loop	src/libtfhe-superaic-core/fft_processors/nayuki/fft-x8664-avx-reverse.s	/^size4loop:$/;"	l
size4loop	src/libtfhe-superaic-core/fft_processors/nayuki/fft-x8664-avx.s	/^size4loop:$/;"	l
size4negation0	src/libtfhe-superaic-core/fft_processors/nayuki/fft-x8664-avx-reverse.s	/^size4negation0: .double +1.0, +1.0, -1.0, -1.0$/;"	l
size4negation0	src/libtfhe-superaic-core/fft_processors/nayuki/fft-x8664-avx.s	/^size4negation0: .double +1.0, +1.0, -1.0, -1.0$/;"	l
size4negation1	src/libtfhe-superaic-core/fft_processors/nayuki/fft-x8664-avx-reverse.s	/^size4negation1: .double +1.0, -1.0, -1.0, +1.0$/;"	l
size4negation1	src/libtfhe-superaic-core/fft_processors/nayuki/fft-x8664-avx.s	/^size4negation1: .double +1.0, -1.0, -1.0, +1.0$/;"	l
size_	src/muduo/muduo/base/Logging.h	/^    int size_;$/;"	m	class:muduo::Logger::SourceFile	typeref:typename:int
size_	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  size_t size_;$/;"	m	class:testing::internal::NativeArray	typeref:typename:size_t
size_	src/tests/googletest/googletest/samples/sample3-inl.h	/^  size_t size_;  \/\/ The number of elements in the queue.$/;"	m	class:Queue	typeref:typename:size_t
size_matcher_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    const Matcher<SizeType> size_matcher_;$/;"	m	class:testing::internal::SizeIsMatcher::Impl	typeref:typename:const Matcher<SizeType>
size_matcher_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const SizeMatcher size_matcher_;$/;"	m	class:testing::internal::SizeIsMatcher	typeref:typename:const SizeMatcher
skip	src/muduo/muduo/base/TimeZone.cc	/^  off_t skip(ssize_t bytes)$/;"	f	class:muduo::detail::File	typeref:typename:off_t	file:
sleep	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MultiplexerTest.java	/^    public void sleep(int millis) {$/;"	m	class:MultiplexerTest
sleepUsec	src/muduo/muduo/base/Thread.cc	/^void CurrentThread::sleepUsec(int64_t usec)$/;"	f	class:muduo::CurrentThread	typeref:typename:void
sockaddr_cast	src/muduo/muduo/net/SocketsOps.cc	/^const struct sockaddr* sockets::sockaddr_cast(const struct sockaddr_in* addr)$/;"	f	class:sockets	typeref:typename:const struct sockaddr *
sockaddr_cast	src/muduo/muduo/net/SocketsOps.cc	/^const struct sockaddr* sockets::sockaddr_cast(const struct sockaddr_in6* addr)$/;"	f	class:sockets	typeref:typename:const struct sockaddr *
sockaddr_cast	src/muduo/muduo/net/SocketsOps.cc	/^struct sockaddr* sockets::sockaddr_cast(struct sockaddr_in6* addr)$/;"	f	class:sockets	typeref:struct:sockaddr *
sockaddr_in6_cast	src/muduo/muduo/net/SocketsOps.cc	/^const struct sockaddr_in6* sockets::sockaddr_in6_cast(const struct sockaddr* addr)$/;"	f	class:sockets	typeref:typename:const struct sockaddr_in6 *
sockaddr_in_cast	src/muduo/muduo/net/SocketsOps.cc	/^const struct sockaddr_in* sockets::sockaddr_in_cast(const struct sockaddr* addr)$/;"	f	class:sockets	typeref:typename:const struct sockaddr_in *
socket	src/muduo/examples/ace/ttcp/ttcp_asio_async.cc	/^  tcp::socket& socket() { return socket_; }$/;"	f	class:TtcpServerConnection	typeref:typename:tcp::socket &	file:
socketCallback	src/muduo/examples/curl/Curl.cc	/^int Curl::socketCallback(CURL* c, int fd, int what, void* userp, void* socketp)$/;"	f	class:Curl	typeref:typename:int
socket_	src/muduo/examples/ace/ttcp/ttcp_asio_async.cc	/^  tcp::socket socket_;$/;"	m	class:TtcpServerConnection	typeref:typename:tcp::socket	file:
socket_	src/muduo/muduo/net/TcpConnection.h	/^  std::unique_ptr<Socket> socket_;$/;"	m	class:muduo::net::TcpConnection	typeref:typename:std::unique_ptr<Socket>
socket_writer_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  const scoped_ptr<AbstractSocketWriter> socket_writer_;$/;"	m	class:testing::internal::StreamingListener	typeref:typename:const scoped_ptr<AbstractSocketWriter>
sockets	src/muduo/muduo/net/Endian.h	/^namespace sockets$/;"	n	namespace:muduo::net
sockets	src/muduo/muduo/net/InetAddress.h	/^namespace sockets$/;"	n	namespace:muduo::net
sockets	src/muduo/muduo/net/SocketsOps.h	/^namespace sockets$/;"	n	namespace:muduo::net
sockfd_	src/muduo/muduo/net/Socket.h	/^  const int sockfd_;$/;"	m	class:muduo::net::Socket	typeref:typename:const int
sockfd_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^    int sockfd_;  \/\/ socket file descriptor$/;"	m	class:testing::internal::StreamingListener::SocketWriter	typeref:typename:int
socks4a	src/muduo/examples/socks4a/CMakeLists.txt	/^add_executable(socks4a socks4a.cc)$/;"	t
socksAddr_	src/muduo/examples/multiplexer/demux.cc	/^  const InetAddress socksAddr_;$/;"	m	class:DemuxServer	typeref:typename:const InetAddress	file:
socksConns_	src/muduo/examples/multiplexer/demux.cc	/^  std::map<int, Entry> socksConns_;$/;"	m	class:DemuxServer	typeref:typename:std::map<int,Entry>	file:
socksIp	src/muduo/examples/multiplexer/demux.cc	/^const char* socksIp = "127.0.0.1";$/;"	v	typeref:typename:const char *
sofar_	src/muduo/examples/sudoku/loadtest.cc	/^  int64_t sofar_;$/;"	m	class:SudokuLoadtest	typeref:typename:int64_t	file:
solution	src/muduo/examples/protobuf/codec/query.proto	/^  repeated string solution = 4;$/;"	f	message:muduo.Answer	typeref:typename:string
solve	src/muduo/examples/sudoku/server_hybrid.cc	/^  void solve(const TcpConnectionPtr& conn, const Request& req)$/;"	f	class:SudokuServer	typeref:typename:void	file:
solve	src/muduo/examples/sudoku/server_prod.cc	/^  void solve(const TcpConnectionPtr& conn, const Request& req)$/;"	f	class:SudokuServer	typeref:typename:void	file:
solve	src/muduo/examples/sudoku/server_threadpool.cc	/^  static void solve(const TcpConnectionPtr& conn,$/;"	f	class:SudokuServer	typeref:typename:void	file:
solve	src/muduo/examples/sudoku/sudoku.cc	/^    bool solve()$/;"	f	class:SudokuSolver	typeref:typename:bool	file:
solveSudoku	src/muduo/examples/sudoku/sudoku.cc	/^string solveSudoku(const StringPiece& puzzle)$/;"	f	typeref:typename:string
solved	src/muduo/examples/protobuf/rpc/client.cc	/^  void solved(sudoku::SudokuResponse* resp)$/;"	f	class:RpcClient	typeref:typename:void	file:
solved	src/muduo/examples/protobuf/rpc/sudoku.proto	/^  optional bool solved = 1 [default=false];$/;"	f	message:sudoku.SudokuResponse	typeref:typename:bool
source	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/DataEvent.java	/^    public final EventSource source;$/;"	f	class:DataEvent
source_matcher_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^    const Matcher<U> source_matcher_;$/;"	m	class:testing::internal::MatcherCastImpl::Impl	typeref:typename:const Matcher<U>
source_text	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  const char* source_text() const { return source_text_.c_str(); }$/;"	f	class:testing::internal::ExpectationBase	typeref:typename:const char *
source_text_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  const std::string source_text_;  \/\/ The EXPECT_CALL(...) source text.$/;"	m	class:testing::internal::ExpectationBase	typeref:typename:const std::string
spawn_thread_ok_to_terminate	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^  Notification spawn_thread_ok_to_terminate;$/;"	m	struct:SpawnThreadNotifications	typeref:typename:Notification	file:
spawn_thread_started	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^  Notification spawn_thread_started;$/;"	m	struct:SpawnThreadNotifications	typeref:typename:Notification	file:
spawned	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  bool spawned() const { return spawned_; }$/;"	f	class:testing::internal::DeathTestImpl	typeref:typename:bool	file:
spawned_	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  bool spawned_;$/;"	m	class:testing::internal::DeathTestImpl	typeref:typename:bool	file:
split	src/muduo/muduo/net/inspect/Inspector.cc	/^std::vector<string> split(const string& str)$/;"	f	namespace:__anon8c5f3b940111	typeref:typename:std::vector<string>
src/gmock-all.cc.i	buildotests/tests/googletest/googlemock/Makefile	/^src\/gmock-all.cc.i:$/;"	t
src/gmock-all.cc.o	buildotests/tests/googletest/googlemock/Makefile	/^src\/gmock-all.cc.o:$/;"	t
src/gmock-all.cc.s	buildotests/tests/googletest/googlemock/Makefile	/^src\/gmock-all.cc.s:$/;"	t
src/gmock-all.i	buildotests/tests/googletest/googlemock/Makefile	/^src\/gmock-all.i: src\/gmock-all.cc.i$/;"	t
src/gmock-all.o	buildotests/tests/googletest/googlemock/Makefile	/^src\/gmock-all.o: src\/gmock-all.cc.o$/;"	t
src/gmock-all.s	buildotests/tests/googletest/googlemock/Makefile	/^src\/gmock-all.s: src\/gmock-all.cc.s$/;"	t
src/gmock_main.cc.i	buildotests/tests/googletest/googlemock/Makefile	/^src\/gmock_main.cc.i:$/;"	t
src/gmock_main.cc.o	buildotests/tests/googletest/googlemock/Makefile	/^src\/gmock_main.cc.o:$/;"	t
src/gmock_main.cc.s	buildotests/tests/googletest/googlemock/Makefile	/^src\/gmock_main.cc.s:$/;"	t
src/gmock_main.i	buildotests/tests/googletest/googlemock/Makefile	/^src\/gmock_main.i: src\/gmock_main.cc.i$/;"	t
src/gmock_main.o	buildotests/tests/googletest/googlemock/Makefile	/^src\/gmock_main.o: src\/gmock_main.cc.o$/;"	t
src/gmock_main.s	buildotests/tests/googletest/googlemock/Makefile	/^src\/gmock_main.s: src\/gmock_main.cc.s$/;"	t
src/gtest-all.cc.i	buildotests/tests/googletest/googlemock/gtest/Makefile	/^src\/gtest-all.cc.i:$/;"	t
src/gtest-all.cc.o	buildotests/tests/googletest/googlemock/gtest/Makefile	/^src\/gtest-all.cc.o:$/;"	t
src/gtest-all.cc.s	buildotests/tests/googletest/googlemock/gtest/Makefile	/^src\/gtest-all.cc.s:$/;"	t
src/gtest-all.i	buildotests/tests/googletest/googlemock/gtest/Makefile	/^src\/gtest-all.i: src\/gtest-all.cc.i$/;"	t
src/gtest-all.o	buildotests/tests/googletest/googlemock/gtest/Makefile	/^src\/gtest-all.o: src\/gtest-all.cc.o$/;"	t
src/gtest-all.s	buildotests/tests/googletest/googlemock/gtest/Makefile	/^src\/gtest-all.s: src\/gtest-all.cc.s$/;"	t
src/gtest_main.cc.i	buildotests/tests/googletest/googlemock/gtest/Makefile	/^src\/gtest_main.cc.i:$/;"	t
src/gtest_main.cc.o	buildotests/tests/googletest/googlemock/gtest/Makefile	/^src\/gtest_main.cc.o:$/;"	t
src/gtest_main.cc.s	buildotests/tests/googletest/googlemock/gtest/Makefile	/^src\/gtest_main.cc.s:$/;"	t
src/gtest_main.i	buildotests/tests/googletest/googlemock/gtest/Makefile	/^src\/gtest_main.i: src\/gtest_main.cc.i$/;"	t
src/gtest_main.o	buildotests/tests/googletest/googlemock/gtest/Makefile	/^src\/gtest_main.o: src\/gtest_main.cc.o$/;"	t
src/gtest_main.s	buildotests/tests/googletest/googlemock/gtest/Makefile	/^src\/gtest_main.s: src\/gtest_main.cc.s$/;"	t
ss_	src/tests/googletest/googletest/include/gtest/gtest-message.h	/^  const internal::scoped_ptr< ::std::stringstream> ss_;$/;"	m	class:testing::Message	typeref:typename:const internal::scoped_ptr<::std::stringstream>
stackTrace	src/muduo/muduo/base/CurrentThread.cc	/^string stackTrace(bool demangle)$/;"	f	namespace:muduo::CurrentThread	typeref:typename:string
stackTrace	src/muduo/muduo/base/Exception.h	/^  const char* stackTrace() const noexcept$/;"	f	class:muduo::Exception	typeref:typename:const char *
stack_	src/muduo/examples/sudoku/sudoku.cc	/^    std::vector<Node*> stack_;$/;"	m	class:SudokuSolver	typeref:typename:std::vector<Node * >	file:
stack_	src/muduo/muduo/base/Exception.h	/^  string stack_;$/;"	m	class:muduo::Exception	typeref:typename:string
stack_trace_depth	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  Int32 stack_trace_depth;$/;"	m	struct:testing::Flags	typeref:typename:Int32	file:
stack_trace_depth_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  internal::Int32 stack_trace_depth_;$/;"	m	class:testing::internal::GTestFlagSaver	typeref:typename:internal::Int32
start	src/libtfhe-superaic-acc/accs/FPGA-V0/acc_fpga_v0.cpp	/^ACC_RESULT FPGA_ACC_V0::start(uint8_t executor) {$/;"	f	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:ACC_RESULT
start	src/muduo/contrib/thrift/ThriftServer.cc	/^void ThriftServer::start()$/;"	f	class:ThriftServer	typeref:typename:void
start	src/muduo/examples/ace/logging/server.cc	/^  void start()$/;"	f	class:logging::LogServer	typeref:typename:void	file:
start	src/muduo/examples/ace/ttcp/ttcp_asio_async.cc	/^  void start()$/;"	f	class:TtcpServerConnection	typeref:typename:void	file:
start	src/muduo/examples/asio/chat/server.cc	/^  void start()$/;"	f	class:ChatServer	typeref:typename:void	file:
start	src/muduo/examples/asio/chat/server_threaded.cc	/^  void start()$/;"	f	class:ChatServer	typeref:typename:void	file:
start	src/muduo/examples/asio/chat/server_threaded_efficient.cc	/^  void start()$/;"	f	class:ChatServer	typeref:typename:void	file:
start	src/muduo/examples/asio/chat/server_threaded_highperformance.cc	/^  void start()$/;"	f	class:ChatServer	typeref:typename:void	file:
start	src/muduo/examples/hub/hub.cc	/^  void start()$/;"	f	class:pubsub::PubSubServer	typeref:typename:void	file:
start	src/muduo/examples/hub/pubsub.cc	/^void PubSubClient::start()$/;"	f	class:PubSubClient	typeref:typename:void
start	src/muduo/examples/idleconnection/echo.cc	/^void EchoServer::start()$/;"	f	class:EchoServer	typeref:typename:void
start	src/muduo/examples/idleconnection/sortedlist.cc	/^  void start()$/;"	f	class:EchoServer	typeref:typename:void	file:
start	src/muduo/examples/maxconnection/echo.cc	/^void EchoServer::start()$/;"	f	class:EchoServer	typeref:typename:void
start	src/muduo/examples/memcached/server/MemcacheServer.cc	/^void MemcacheServer::start()$/;"	f	class:MemcacheServer	typeref:typename:void
start	src/muduo/examples/multiplexer/demux.cc	/^  void start()$/;"	f	class:DemuxServer	typeref:typename:void	file:
start	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockBackendServer.java	/^    public void start() {$/;"	m	class:MockBackendServer
start	src/muduo/examples/multiplexer/multiplexer.cc	/^  void start()$/;"	f	class:MultiplexServer	typeref:typename:void	file:
start	src/muduo/examples/multiplexer/multiplexer_simple.cc	/^  void start()$/;"	f	class:MultiplexServer	typeref:typename:void	file:
start	src/muduo/examples/netty/discard/server.cc	/^  void start()$/;"	f	class:DiscardServer	typeref:typename:void	file:
start	src/muduo/examples/netty/echo/server.cc	/^  void start()$/;"	f	class:EchoServer	typeref:typename:void	file:
start	src/muduo/examples/netty/echo/server2.cc	/^  void start()$/;"	f	class:EchoServer	typeref:typename:void	file:
start	src/muduo/examples/pingpong/client.cc	/^  void start()$/;"	f	class:Session	typeref:typename:void	file:
start	src/muduo/examples/procmon/procmon.cc	/^  void start()$/;"	f	class:Procmon	typeref:typename:void	file:
start	src/muduo/examples/protobuf/codec/server.cc	/^  void start()$/;"	f	class:QueryServer	typeref:typename:void	file:
start	src/muduo/examples/protobuf/rpcbalancer/balancer.cc	/^  void start()$/;"	f	class:Balancer	typeref:typename:void	file:
start	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^  void start()$/;"	f	class:Balancer	typeref:typename:void	file:
start	src/muduo/examples/simple/chargen/chargen.cc	/^void ChargenServer::start()$/;"	f	class:ChargenServer	typeref:typename:void
start	src/muduo/examples/simple/daytime/daytime.cc	/^void DaytimeServer::start()$/;"	f	class:DaytimeServer	typeref:typename:void
start	src/muduo/examples/simple/discard/discard.cc	/^void DiscardServer::start()$/;"	f	class:DiscardServer	typeref:typename:void
start	src/muduo/examples/simple/echo/echo.cc	/^void EchoServer::start()$/;"	f	class:EchoServer	typeref:typename:void
start	src/muduo/examples/simple/time/time.cc	/^void TimeServer::start()$/;"	f	class:TimeServer	typeref:typename:void
start	src/muduo/examples/sudoku/server_basic.cc	/^  void start()$/;"	f	class:SudokuServer	typeref:typename:void	file:
start	src/muduo/examples/sudoku/server_hybrid.cc	/^  void start()$/;"	f	class:SudokuServer	typeref:typename:void	file:
start	src/muduo/examples/sudoku/server_multiloop.cc	/^  void start()$/;"	f	class:SudokuServer	typeref:typename:void	file:
start	src/muduo/examples/sudoku/server_prod.cc	/^  void start()$/;"	f	class:SudokuServer	typeref:typename:void	file:
start	src/muduo/examples/sudoku/server_threadpool.cc	/^  void start()$/;"	f	class:SudokuServer	typeref:typename:void	file:
start	src/muduo/examples/wordcount/receiver.cc	/^  void start(int senders)$/;"	f	class:WordCountReceiver	typeref:typename:void	file:
start	src/muduo/examples/wordcount/slowsink.py	/^start = time.time()$/;"	v
start	src/muduo/muduo/base/AsyncLogging.h	/^  void start()$/;"	f	class:muduo::AsyncLogging	typeref:typename:void
start	src/muduo/muduo/base/Thread.cc	/^void Thread::start()$/;"	f	class:muduo::Thread	typeref:typename:void
start	src/muduo/muduo/base/ThreadPool.cc	/^void ThreadPool::start(int numThreads)$/;"	f	class:ThreadPool	typeref:typename:void
start	src/muduo/muduo/net/Connector.cc	/^void Connector::start()$/;"	f	class:Connector	typeref:typename:void
start	src/muduo/muduo/net/EventLoopThreadPool.cc	/^void EventLoopThreadPool::start(const ThreadInitCallback& cb)$/;"	f	class:EventLoopThreadPool	typeref:typename:void
start	src/muduo/muduo/net/TcpServer.cc	/^void TcpServer::start()$/;"	f	class:TcpServer	typeref:typename:void
start	src/muduo/muduo/net/http/HttpServer.cc	/^void HttpServer::start()$/;"	f	class:HttpServer	typeref:typename:void
start	src/muduo/muduo/net/inspect/Inspector.cc	/^void Inspector::start()$/;"	f	class:Inspector	typeref:typename:void
start	src/muduo/muduo/net/protorpc/RpcServer.cc	/^void RpcServer::start()$/;"	f	class:RpcServer	typeref:typename:void
start	src/muduo/muduo/net/tests/Channel_test.cc	/^  void start()$/;"	f	class:PeriodicTimer	typeref:typename:void	file:
start	src/muduo/muduo/net/tests/EchoServer_unittest.cc	/^  void start()$/;"	f	class:EchoServer	typeref:typename:void	file:
startInLoop	src/muduo/muduo/net/Connector.cc	/^void Connector::startInLoop()$/;"	f	class:Connector	typeref:typename:void
startLatch_	src/muduo/muduo/base/tests/BlockingQueue_bench2.cc	/^  muduo::CountDownLatch startLatch_, stopLatch_;$/;"	m	class:Bench	typeref:typename:muduo::CountDownLatch	file:
startLatch_	src/muduo/muduo/base/tests/Thread_bench.cc	/^  muduo::CountDownLatch startLatch_, stopLatch_;$/;"	m	class:Bench	typeref:typename:muduo::CountDownLatch	file:
startLoop	src/muduo/muduo/net/EventLoopThread.cc	/^EventLoop* EventLoopThread::startLoop()$/;"	f	class:EventLoopThread	typeref:typename:EventLoop *
startOfPeriod_	src/muduo/muduo/base/LogFile.h	/^  time_t startOfPeriod_;$/;"	m	class:muduo::LogFile	typeref:typename:time_t
startRead	src/muduo/muduo/net/TcpConnection.cc	/^void TcpConnection::startRead()$/;"	f	class:TcpConnection	typeref:typename:void
startReadInLoop	src/muduo/muduo/net/TcpConnection.cc	/^void TcpConnection::startReadInLoop()$/;"	f	class:TcpConnection	typeref:typename:void
startThread	src/muduo/muduo/base/Thread.cc	/^void* startThread(void* obj)$/;"	f	namespace:muduo::detail	typeref:typename:void *
startTime	src/muduo/examples/memcached/server/MemcacheServer.h	/^  time_t startTime() const { return startTime_; }$/;"	f	class:MemcacheServer	typeref:typename:time_t
startTime	src/muduo/muduo/base/ProcessInfo.cc	/^Timestamp ProcessInfo::startTime()$/;"	f	class:ProcessInfo	typeref:typename:Timestamp
startTime_	src/muduo/examples/memcached/server/MemcacheServer.h	/^  const time_t startTime_;$/;"	m	class:MemcacheServer	typeref:typename:const time_t
startTime_	src/muduo/examples/multiplexer/multiplexer.cc	/^  Timestamp startTime_;$/;"	m	class:MultiplexServer	typeref:typename:Timestamp	file:
startTime_	src/muduo/examples/netty/discard/server.cc	/^  Timestamp startTime_;$/;"	m	class:DiscardServer	typeref:typename:Timestamp	file:
startTime_	src/muduo/examples/netty/echo/server.cc	/^  Timestamp startTime_;$/;"	m	class:EchoServer	typeref:typename:Timestamp	file:
startTime_	src/muduo/examples/netty/echo/server2.cc	/^  Timestamp startTime_;$/;"	m	class:EchoServer	typeref:typename:Timestamp	file:
startTime_	src/muduo/examples/simple/chargen/chargen.h	/^  muduo::Timestamp startTime_;$/;"	m	class:ChargenServer	typeref:typename:muduo::Timestamp
startTime_	src/muduo/examples/sudoku/server_basic.cc	/^  Timestamp startTime_;$/;"	m	class:SudokuServer	typeref:typename:Timestamp	file:
startTime_	src/muduo/examples/sudoku/server_hybrid.cc	/^  const Timestamp startTime_;$/;"	m	class:SudokuServer	typeref:typename:const Timestamp	file:
startTime_	src/muduo/examples/sudoku/server_multiloop.cc	/^  Timestamp startTime_;$/;"	m	class:SudokuServer	typeref:typename:Timestamp	file:
startTime_	src/muduo/examples/sudoku/server_prod.cc	/^  const Timestamp startTime_;$/;"	m	class:SudokuServer	typeref:typename:const Timestamp	file:
startTime_	src/muduo/examples/sudoku/server_threadpool.cc	/^  Timestamp startTime_;$/;"	m	class:SudokuServer	typeref:typename:Timestamp	file:
startWith	src/muduo/examples/curl/download.cc	/^bool startWith(const string& str, const char (&prefix)[N])$/;"	f	typeref:typename:bool
start_	src/muduo/examples/sudoku/batch.cc	/^  Timestamp start_;$/;"	m	class:SudokuClient	typeref:typename:Timestamp	file:
start_	src/muduo/muduo/base/tests/Thread_bench.cc	/^  TimestampQueue start_, run_, done_;$/;"	m	class:Bench	typeref:typename:TimestampQueue	file:
start_time_	src/tests/googletest/googletest/samples/sample5_unittest.cc	/^  time_t start_time_;$/;"	m	class:QuickTest	typeref:typename:time_t	file:
start_timestamp	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  TimeInMillis start_timestamp() const { return start_timestamp_; }$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:TimeInMillis
start_timestamp	src/tests/googletest/googletest/src/gtest.cc	/^internal::TimeInMillis UnitTest::start_timestamp() const {$/;"	f	class:testing::UnitTest	typeref:typename:internal::TimeInMillis
start_timestamp_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  TimeInMillis start_timestamp_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:TimeInMillis
started	src/muduo/muduo/base/Thread.h	/^  bool started() const { return started_; }$/;"	f	class:muduo::Thread	typeref:typename:bool
started	src/muduo/muduo/net/EventLoopThreadPool.h	/^  bool started() const$/;"	f	class:muduo::net::EventLoopThreadPool	typeref:typename:bool
started_	src/muduo/muduo/base/Thread.h	/^  bool       started_;$/;"	m	class:muduo::Thread	typeref:typename:bool
started_	src/muduo/muduo/net/EventLoopThreadPool.h	/^  bool started_;$/;"	m	class:muduo::net::EventLoopThreadPool	typeref:typename:bool
started_	src/muduo/muduo/net/TcpServer.h	/^  AtomicInt32 started_;$/;"	m	class:muduo::net::TcpServer	typeref:typename:AtomicInt32
starts_with	src/muduo/muduo/base/StringPiece.h	/^  bool starts_with(const StringPiece& x) const {$/;"	f	class:muduo::StringPiece	typeref:typename:bool
starttime	src/muduo/examples/procmon/procmon.cc	/^  long starttime;$/;"	m	struct:StatData	typeref:typename:long	file:
stat	src/muduo/examples/sudoku/percentile.h	/^  muduo::LogStream stat;$/;"	m	class:Percentile	typeref:typename:muduo::LogStream
stat	src/muduo/muduo/net/inspect/SystemInspector.cc	/^string SystemInspector::stat(HttpRequest::Method, const Inspector::ArgList&)$/;"	f	class:SystemInspector	typeref:typename:string
stat_	src/muduo/examples/sudoku/server_hybrid.cc	/^  SudokuStat stat_;$/;"	m	class:SudokuServer	typeref:typename:SudokuStat	file:
stat_	src/muduo/examples/sudoku/server_prod.cc	/^  SudokuStat stat_;$/;"	m	class:SudokuServer	typeref:typename:SudokuStat	file:
state	src/muduo/examples/procmon/procmon.cc	/^  char state;$/;"	m	struct:StatData	typeref:typename:char	file:
stateToString	src/muduo/muduo/net/TcpConnection.cc	/^const char* TcpConnection::stateToString() const$/;"	f	class:TcpConnection	typeref:typename:const char *
state_	src/muduo/contrib/thrift/ThriftConnection.h	/^  enum State state_;$/;"	m	class:ThriftConnection	typeref:enum:State
state_	src/muduo/examples/memcached/server/Session.h	/^  State state_;$/;"	m	class:Session	typeref:typename:State
state_	src/muduo/muduo/net/Connector.h	/^  States state_;  \/\/ FIXME: use atomic variable$/;"	m	class:muduo::net::Connector	typeref:typename:States
state_	src/muduo/muduo/net/TcpConnection.h	/^  StateE state_;  \/\/ FIXME: use atomic variable$/;"	m	class:muduo::net::TcpConnection	typeref:typename:StateE
state_	src/muduo/muduo/net/http/HttpContext.h	/^  HttpRequestParseState state_;$/;"	m	class:muduo::net::HttpContext	typeref:typename:HttpRequestParseState
state_	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  UInt32 state_;$/;"	m	class:testing::internal::Random	typeref:typename:UInt32
state_	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^  TypedTestCasePState state_;$/;"	m	class:TypedTestCasePStateTest	typeref:typename:TypedTestCasePState	file:
statement	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  const char* statement() const { return statement_; }$/;"	f	class:testing::internal::DeathTestImpl	typeref:typename:const char *	file:
statement_	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  const char* const statement_;$/;"	m	class:testing::internal::DeathTestImpl	typeref:typename:const char * const	file:
states	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^  StateMap& states() { return states_; }$/;"	f	class:testing::__anonc1446e5b0111::MockObjectRegistry	typeref:typename:StateMap &	file:
states_	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^  StateMap states_;$/;"	m	class:testing::__anonc1446e5b0111::MockObjectRegistry	typeref:typename:StateMap	file:
staticCheck	src/muduo/muduo/base/LogStream.cc	/^void LogStream::staticCheck()$/;"	f	class:LogStream	typeref:typename:void
statistic	src/muduo/examples/asio/chat/loadtest.cc	/^void statistic(const std::vector<std::unique_ptr<ChatClient>>& clients)$/;"	f	typeref:typename:void
status	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  int status() const { return status_; }$/;"	f	class:testing::internal::DeathTestImpl	typeref:typename:int	file:
statusCode_	src/muduo/muduo/net/http/HttpResponse.h	/^  HttpStatusCode statusCode_;$/;"	m	class:muduo::net::HttpResponse	typeref:typename:HttpStatusCode
statusMessage_	src/muduo/muduo/net/http/HttpResponse.h	/^  string statusMessage_;$/;"	m	class:muduo::net::HttpResponse	typeref:typename:string
status_	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  int status_;$/;"	m	class:testing::internal::DeathTestImpl	typeref:typename:int	file:
status_	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  const int status_;$/;"	m	class:MockDeathTest	typeref:typename:const int	file:
status_	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  int status_;$/;"	m	class:MockDeathTestFactory	typeref:typename:int	file:
std	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^namespace std {$/;"	n
std	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^namespace std {$/;"	n
stdin_	src/muduo/examples/fastcgi/fastcgi.h	/^  muduo::net::Buffer stdin_;$/;"	m	class:FastCgiCodec	typeref:typename:muduo::net::Buffer
step_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^    const IncrementT step_;$/;"	m	class:testing::internal::RangeGenerator::Iterator	typeref:typename:const IncrementT
step_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  const IncrementT step_;$/;"	m	class:testing::internal::RangeGenerator	typeref:typename:const IncrementT
stime	src/muduo/examples/procmon/procmon.cc	/^  long stime;$/;"	m	struct:StatData	typeref:typename:long	file:
stop	src/muduo/contrib/thrift/ThriftServer.cc	/^void ThriftServer::stop()$/;"	f	class:ThriftServer	typeref:typename:void
stop	src/muduo/examples/hub/pubsub.cc	/^void PubSubClient::stop()$/;"	f	class:PubSubClient	typeref:typename:void
stop	src/muduo/examples/memcached/server/MemcacheServer.cc	/^void MemcacheServer::stop()$/;"	f	class:MemcacheServer	typeref:typename:void
stop	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockBackendServer.java	/^    public void stop() {$/;"	m	class:MockBackendServer
stop	src/muduo/examples/pingpong/client.cc	/^  void stop()$/;"	f	class:Session	typeref:typename:void	file:
stop	src/muduo/muduo/base/AsyncLogging.h	/^  void stop() NO_THREAD_SAFETY_ANALYSIS$/;"	f	class:muduo::AsyncLogging	typeref:typename:void
stop	src/muduo/muduo/base/ThreadPool.cc	/^void ThreadPool::stop()$/;"	f	class:ThreadPool	typeref:typename:void
stop	src/muduo/muduo/net/Connector.cc	/^void Connector::stop()$/;"	f	class:Connector	typeref:typename:void
stop	src/muduo/muduo/net/TcpClient.cc	/^void TcpClient::stop()$/;"	f	class:TcpClient	typeref:typename:void
stopInLoop	src/muduo/muduo/net/Connector.cc	/^void Connector::stopInLoop()$/;"	f	class:Connector	typeref:typename:void
stopLatch_	src/muduo/muduo/base/tests/BlockingQueue_bench2.cc	/^  muduo::CountDownLatch startLatch_, stopLatch_;$/;"	m	class:Bench	typeref:typename:muduo::CountDownLatch	file:
stopLatch_	src/muduo/muduo/base/tests/Thread_bench.cc	/^  muduo::CountDownLatch startLatch_, stopLatch_;$/;"	m	class:Bench	typeref:typename:muduo::CountDownLatch	file:
stopRead	src/muduo/muduo/net/TcpConnection.cc	/^void TcpConnection::stopRead()$/;"	f	class:TcpConnection	typeref:typename:void
stopReadInLoop	src/muduo/muduo/net/TcpConnection.cc	/^void TcpConnection::stopReadInLoop()$/;"	f	class:TcpConnection	typeref:typename:void
storeItem	src/muduo/examples/memcached/server/MemcacheServer.cc	/^bool MemcacheServer::storeItem(const ItemPtr& item, const Item::UpdatePolicy policy, bool* exist/;"	f	class:MemcacheServer	typeref:typename:bool
str	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  std::string str() const { return ss_.str(); }$/;"	f	class:testing::StringMatchResultListener	typeref:typename:std::string
str	src/tests/googletest/googlemock/test/gmock-nice-strict_test.cc	/^  const std::string& str() const { return str_; }$/;"	f	class:testing::gmock_nice_strict_test::MockBar	typeref:typename:const std::string &	file:
str_	src/muduo/muduo/base/Logging.cc	/^  const char* str_;$/;"	m	class:muduo::T	typeref:typename:const char *	file:
str_	src/muduo/muduo/base/StringPiece.h	/^  const char* str_;$/;"	m	class:muduo::StringArg	typeref:typename:const char *
str_	src/tests/googletest/googlemock/test/gmock-nice-strict_test.cc	/^  std::string str_;$/;"	m	class:testing::gmock_nice_strict_test::MockBar	typeref:typename:std::string	file:
stream	src/muduo/muduo/base/Logging.h	/^  LogStream& stream() { return impl_.stream_; }$/;"	f	class:muduo::Logger	typeref:typename:LogStream &
stream	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  ::std::ostream* stream() { return stream_; }$/;"	f	class:testing::MatchResultListener	typeref:typename:::std::ostream *
stream_	src/muduo/muduo/base/Logging.h	/^  LogStream stream_;$/;"	m	class:muduo::Logger::Impl	typeref:typename:LogStream
stream_result_to	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  const char* stream_result_to;$/;"	m	struct:testing::Flags	typeref:typename:const char *	file:
stream_result_to_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  std::string stream_result_to_;$/;"	m	class:testing::internal::GTestFlagSaver	typeref:typename:std::string
streamer_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  StreamingListener streamer_;$/;"	m	class:testing::internal::StreamingListenerTest	typeref:typename:StreamingListener	file:
strerror_tl	src/muduo/muduo/base/Logging.cc	/^const char* strerror_tl(int savedErrno)$/;"	f	namespace:muduo	typeref:typename:const char *
string	src/tests/googletest/googletest/include/gtest/internal/gtest-filepath.h	/^  const std::string& string() const { return pathname_; }$/;"	f	class:testing::internal::FilePath	typeref:typename:const std::string &
string	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^typedef ::std::string string;$/;"	t	namespace:testing::internal	typeref:typename:::std::string
string	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^typedef ::string string;$/;"	t	namespace:testing::internal	typeref:typename:::string
stringPrintf	src/muduo/muduo/net/inspect/ProcessInspector.cc	/^int stringPrintf(string* out, const char* fmt, ...)$/;"	f	namespace:muduo::inspect	typeref:typename:int
string_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const StringType string_;$/;"	m	class:testing::internal::StrEqualityMatcher	typeref:typename:const StringType
string_to_buffer	src/libtfhe-superaic-core/tfhe_package.cpp	/^size_t string_to_buffer(string &msg, unsigned char *buffer, size_t buffer_size){$/;"	f	typeref:typename:size_t
stub_	src/muduo/examples/protobuf/resolver/client.cc	/^  resolver::ResolverService::Stub stub_;$/;"	m	class:RpcClient	typeref:typename:resolver::ResolverService::Stub	file:
stub_	src/muduo/examples/protobuf/rpc/client.cc	/^  sudoku::SudokuService::Stub stub_;$/;"	m	class:RpcClient	typeref:typename:sudoku::SudokuService::Stub	file:
stub_	src/muduo/examples/protobuf/rpcbench/client.cc	/^  echo::EchoService::Stub stub_;$/;"	m	class:RpcClient	typeref:typename:echo::EchoService::Stub	file:
sub	src/muduo/examples/hub/CMakeLists.txt	/^add_executable(sub sub.cc)$/;"	t
subscribe	src/muduo/examples/hub/pubsub.cc	/^bool PubSubClient::subscribe(const string& topic, const SubscribeCallback& cb)$/;"	f	class:PubSubClient	typeref:typename:bool
subscribeCallback_	src/muduo/examples/hub/pubsub.h	/^  SubscribeCallback subscribeCallback_;$/;"	m	class:pubsub::PubSubClient	typeref:typename:SubscribeCallback
subscription	src/muduo/examples/hub/sub.cc	/^void subscription(const string& topic, const string& content, Timestamp)$/;"	f	typeref:typename:void
substr_	src/tests/googletest/googletest/include/gtest/gtest-spi.h	/^  const std::string substr_;$/;"	m	class:testing::internal::SingleFailureChecker	typeref:typename:const std::string
substring_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const StringType substring_;$/;"	m	class:testing::internal::HasSubstrMatcher	typeref:typename:const StringType
success_	src/tests/googletest/googletest/include/gtest/gtest.h	/^  bool success_;$/;"	m	class:testing::AssertionResult	typeref:typename:bool
successful_test_case_count	src/tests/googletest/googletest/src/gtest.cc	/^int UnitTest::successful_test_case_count() const {$/;"	f	class:testing::UnitTest	typeref:typename:int
successful_test_case_count	src/tests/googletest/googletest/src/gtest.cc	/^int UnitTestImpl::successful_test_case_count() const {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:int
successful_test_count	src/tests/googletest/googletest/src/gtest.cc	/^int TestCase::successful_test_count() const {$/;"	f	class:testing::TestCase	typeref:typename:int
successful_test_count	src/tests/googletest/googletest/src/gtest.cc	/^int UnitTest::successful_test_count() const {$/;"	f	class:testing::UnitTest	typeref:typename:int
successful_test_count	src/tests/googletest/googletest/src/gtest.cc	/^int UnitTestImpl::successful_test_count() const {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:int
sudoku	src/muduo/examples/protobuf/rpc/server.cc	/^namespace sudoku$/;"	n	file:
sudoku	src/muduo/examples/protobuf/rpc/sudoku.proto	/^package sudoku;$/;"	p
sudoku_client_batch	src/muduo/examples/sudoku/CMakeLists.txt	/^add_executable(sudoku_client_batch batch.cc sudoku.cc)$/;"	t
sudoku_client_pipeline	src/muduo/examples/sudoku/CMakeLists.txt	/^add_executable(sudoku_client_pipeline pipeline.cc sudoku.cc)$/;"	t
sudoku_loadtest	src/muduo/examples/sudoku/CMakeLists.txt	/^add_executable(sudoku_loadtest loadtest.cc sudoku.cc)$/;"	t
sudoku_proto	src/muduo/examples/protobuf/rpc/CMakeLists.txt	/^add_library(sudoku_proto sudoku.pb.cc)$/;"	t
sudoku_solver_basic	src/muduo/examples/sudoku/CMakeLists.txt	/^add_executable(sudoku_solver_basic server_basic.cc sudoku.cc)$/;"	t
sudoku_solver_hybrid	src/muduo/examples/sudoku/CMakeLists.txt	/^add_executable(sudoku_solver_hybrid server_hybrid.cc sudoku.cc)$/;"	t
sudoku_solver_multiloop	src/muduo/examples/sudoku/CMakeLists.txt	/^add_executable(sudoku_solver_multiloop server_multiloop.cc sudoku.cc)$/;"	t
sudoku_solver_prod	src/muduo/examples/sudoku/CMakeLists.txt	/^add_executable(sudoku_solver_prod server_prod.cc sudoku.cc)$/;"	t
sudoku_solver_threadpool	src/muduo/examples/sudoku/CMakeLists.txt	/^add_executable(sudoku_solver_threadpool server_threadpool.cc sudoku.cc)$/;"	t
sudoku_stat_unittest	src/muduo/examples/sudoku/CMakeLists.txt	/^add_executable(sudoku_stat_unittest stat_unittest.cc)$/;"	t
suffix_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const StringType suffix_;$/;"	m	class:testing::internal::EndsWithMatcher	typeref:typename:const StringType
suffix_char	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^  char suffix_char = static_cast<char>(suffix);$/;"	v	namespace:__anoncaf4ae130111	typeref:typename:char
sum	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  int sum;$/;"	m	struct:StatefulNamingFunctor	typeref:typename:int	file:
sum_	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  int sum_;$/;"	m	class:StatefulNamingTest	typeref:typename:int	file:
summary	docs/rustops/summary_of_ops_add.md	/^## summary$/;"	s	chapter:add
summary	src/tests/googletest/googletest/include/gtest/gtest-test-part.h	/^  const char* summary() const { return summary_.c_str(); }$/;"	f	class:testing::TestPartResult	typeref:typename:const char *
summary_	src/tests/googletest/googletest/include/gtest/gtest-test-part.h	/^  std::string summary_;  \/\/ The test failure summary.$/;"	m	class:testing::TestPartResult	typeref:typename:std::string
superaic_get_cipher_word_size	src/libtfhe-superaic-core/tfhe_superaic_torus.c	/^EXPORT size_t superaic_get_cipher_word_size(void) {$/;"	f	typeref:typename:EXPORT size_t
swap	src/muduo/muduo/base/Date.h	/^  void swap(Date& that)$/;"	f	class:muduo::Date	typeref:typename:void
swap	src/muduo/muduo/base/GzipFile.h	/^  void swap(GzipFile& rhs) { std::swap(file_, rhs.file_); }$/;"	f	class:muduo::GzipFile	typeref:typename:void
swap	src/muduo/muduo/base/Timestamp.h	/^  void swap(Timestamp& that)$/;"	f	class:muduo::Timestamp	typeref:typename:void
swap	src/muduo/muduo/net/Buffer.h	/^  void swap(Buffer& rhs)$/;"	f	class:muduo::net::Buffer	typeref:typename:void
swap	src/muduo/muduo/net/http/HttpRequest.h	/^  void swap(HttpRequest& that)$/;"	f	class:muduo::net::HttpRequest	typeref:typename:void
swap	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  friend void swap(scoped_ptr& a, scoped_ptr& b) {$/;"	f	namespace:testing::internal	typeref:typename:void
swap	src/tests/googletest/googletest/src/gtest.cc	/^void AssertionResult::swap(AssertionResult& other) {$/;"	f	class:testing::AssertionResult	typeref:typename:void
swap_out_LRU	src/libtfhe-superaic-acc/tfhe_acc.cpp	/^void TFHE_ACC::swap_out_LRU()$/;"	f	class:tfhe_superaic::TFHE_ACC	typeref:typename:void
sysTime_	src/muduo/examples/procmon/procmon.cc	/^    int sysTime_;$/;"	m	struct:Procmon::CpuTime	typeref:typename:int	file:
systemInspector_	src/muduo/muduo/net/inspect/Inspector.h	/^  std::unique_ptr<SystemInspector> systemInspector_;$/;"	m	class:muduo::net::Inspector	typeref:typename:std::unique_ptr<SystemInspector>
systemSeconds	src/muduo/muduo/base/ProcessInfo.h	/^    double systemSeconds;$/;"	m	struct:muduo::ProcessInfo::CpuTime	typeref:typename:double
t	src/libtfhe-superaic-core/include/lwekeyswitch.h	/^    int32_t t; \/\/\/< decomposition length$/;"	m	struct:LweKeySwitchKey	typeref:typename:int32_t
t	src/libtfhe-superaic-core/tfhe_io.cpp	/^    int32_t t;$/;"	m	struct:LweKeySwitchParameters	typeref:typename:int32_t	file:
t	src/tests/fakes/lwe-keyswitch.h	/^        const int32_t t;$/;"	m	struct:__anonbf4a421d0111::FakeLweKeySwitchKey	typeref:typename:const int32_t
t32tod	src/libtfhe-superaic-core/numeric-functions.cpp	/^EXPORT double t32tod(Torus32 x) {$/;"	f	typeref:typename:EXPORT double
tGswAddH	src/libtfhe-superaic-core/tgsw-functions.cpp	/^EXPORT void tGswAddH(TGswSample *result, const TGswParams *params) {$/;"	f	typeref:typename:EXPORT void
tGswAddH	src/tests/tgsw_test.cpp	/^        inline void tGswAddH(TGswSample *result, const TGswParams *params) {$/;"	f	class:__anonfeb37f530111::TGswTest	typeref:typename:void	file:
tGswAddMuH	src/libtfhe-superaic-core/tgsw-functions.cpp	/^EXPORT void tGswAddMuH(TGswSample *result, const IntPolynomial *message, const TGswParams *param/;"	f	typeref:typename:EXPORT void
tGswAddMuH	src/tests/tgsw_test.cpp	/^        inline void tGswAddMuH(TGswSample *result, const IntPolynomial *message, const TGswParam/;"	f	class:__anonfeb37f530111::TGswTest	typeref:typename:void	file:
tGswAddMuIntH	src/libtfhe-superaic-core/tgsw-functions.cpp	/^EXPORT void tGswAddMuIntH(TGswSample *result, const int32_t message, const TGswParams *params) {$/;"	f	typeref:typename:EXPORT void
tGswAddMuIntH	src/tests/tgsw_test.cpp	/^        inline void tGswAddMuIntH(TGswSample *result, const int32_t message, const TGswParams *p/;"	f	class:__anonfeb37f530111::TGswTest	typeref:typename:void	file:
tGswClear	src/libtfhe-superaic-core/tgsw-functions.cpp	/^EXPORT void tGswClear(TGswSample *result, const TGswParams *params) {$/;"	f	typeref:typename:EXPORT void
tGswEncryptB	src/libtfhe-superaic-core/tgsw-functions.cpp	/^EXPORT void tGswEncryptB(TGswSample *result, const int32_t message, double alpha, const TGswKey /;"	f	typeref:typename:EXPORT void
tGswEncryptZero	src/libtfhe-superaic-core/tgsw-functions.cpp	/^EXPORT void tGswEncryptZero(TGswSample *result, double alpha, const TGswKey *key) {$/;"	f	typeref:typename:EXPORT void
tGswExternMulToTLwe	src/libtfhe-superaic-acc/tfhe_acc.cpp	/^void TFHE_ACC::tGswExternMulToTLwe(TLweSample *accum, const TGswSample *sample, const TGswParams/;"	f	class:tfhe_superaic::TFHE_ACC	typeref:typename:void
tGswExternMulToTLwe	src/libtfhe-superaic-core/tgsw-functions.cpp	/^EXPORT void tGswExternMulToTLwe(TLweSample *accum, const TGswSample *sample, const TGswParams *p/;"	f	typeref:typename:EXPORT void
tGswExternMulToTLwe_paral	src/libtfhe-superaic-acc/tfhe_acc.cpp	/^void TFHE_ACC::tGswExternMulToTLwe_paral(TLweSample *accum, const TGswSample *sample, const TGsw/;"	f	class:tfhe_superaic::TFHE_ACC	typeref:typename:void
tGswExternProduct	src/libtfhe-superaic-core/tgsw-functions.cpp	/^EXPORT void tGswExternProduct(TLweSample *result, const TGswSample *a, const TLweSample *b, cons/;"	f	typeref:typename:EXPORT void
tGswFFTAddH	src/libtfhe-superaic-core/tgsw-fft-operations.cpp	/^EXPORT void tGswFFTAddH(TGswSampleFFT *result, const TGswParams *params) {$/;"	f	typeref:typename:EXPORT void
tGswFFTClear	src/libtfhe-superaic-core/tgsw-fft-operations.cpp	/^EXPORT void tGswFFTClear(TGswSampleFFT *result, const TGswParams *params) {$/;"	f	typeref:typename:EXPORT void
tGswFFTClear	src/tests/fakes/tgsw-fft.h	/^    inline void tGswFFTClear(TGswSampleFFT *result, const TGswParams *params) {$/;"	f	namespace:__anonee999a9f0111	typeref:typename:void
tGswFFTExternMulToTLwe	src/libtfhe-superaic-core/tgsw-fft-operations.cpp	/^EXPORT void tGswFFTExternMulToTLwe(TLweSample *accum, const TGswSampleFFT *gsw, const TGswParams/;"	f	typeref:typename:EXPORT void
tGswFromFFTConvert	src/libtfhe-superaic-core/tgsw-fft-operations.cpp	/^EXPORT void tGswFromFFTConvert(TGswSample *result, const TGswSampleFFT *source, const TGswParams/;"	f	typeref:typename:EXPORT void
tGswFromFFTConvert	src/tests/fakes/tgsw-fft.h	/^#define  tGswFromFFTConvert /;"	d
tGswKeyGen	src/libtfhe-superaic-core/tgsw-functions.cpp	/^EXPORT void tGswKeyGen(TGswKey *result) {$/;"	f	typeref:typename:EXPORT void
tGswMulByXaiMinusOne	src/libtfhe-superaic-core/tgsw-functions.cpp	/^EXPORT void tGswMulByXaiMinusOne(TGswSample *result, int32_t ai, const TGswSample *bk, const TGs/;"	f	typeref:typename:EXPORT void
tGswNoiselessTrivial	src/libtfhe-superaic-core/tgsw-functions.cpp	/^EXPORT void tGswNoiselessTrivial(TGswSample *result, const IntPolynomial *mu, const TGswParams */;"	f	typeref:typename:EXPORT void
tGswSymDecrypt	src/libtfhe-superaic-core/tgsw-functions.cpp	/^EXPORT void tGswSymDecrypt(IntPolynomial *result, const TGswSample *sample, const TGswKey *key, /;"	f	typeref:typename:EXPORT void
tGswSymEncrypt	src/libtfhe-superaic-core/tgsw-functions.cpp	/^EXPORT void tGswSymEncrypt(TGswSample *result, const IntPolynomial *message, double alpha, const/;"	f	typeref:typename:EXPORT void
tGswSymEncryptInt	src/libtfhe-superaic-core/tgsw-functions.cpp	/^EXPORT void tGswSymEncryptInt(TGswSample *result, const int32_t message, double alpha, const TGs/;"	f	typeref:typename:EXPORT void
tGswSymEncryptInt  把整数加密成 TGsw密文	docs/code_note.md	/^## tGswSymEncryptInt  把整数加密成 TGsw密文$/;"	s	chapter:TGsw
tGswTLweDecompH	src/libtfhe-superaic-core/tgsw-functions.cpp	/^EXPORT void tGswTLweDecompH(IntPolynomial *result, const TLweSample *sample, const TGswParams *p/;"	f	typeref:typename:EXPORT void
tGswTLweDecompH	src/tests/tgsw_test.cpp	/^        inline void tGswTLweDecompH(IntPolynomial *result, const TLweSample *sample, const TGswP/;"	f	class:__anonfeb37f530111::TGswTest	typeref:typename:void	file:
tGswToFFTConvert	src/libtfhe-superaic-core/tgsw-fft-operations.cpp	/^EXPORT void tGswToFFTConvert(TGswSampleFFT *result, const TGswSample *source, const TGswParams */;"	f	typeref:typename:EXPORT void
tGswTorus32PolynomialDecompH	src/libtfhe-superaic-core/tgsw-functions.cpp	/^tGswTorus32PolynomialDecompH(IntPolynomial *result, const TorusPolynomial *sample, const TGswPar/;"	f	typeref:typename:EXPORT void
tGswTorus32PolynomialDecompH	src/tests/tgsw_test.cpp	/^        inline void tGswTorus32PolynomialDecompH(IntPolynomial *result, const TorusPolynomial *s/;"	f	class:__anonfeb37f530111::TGswTest	typeref:typename:void	file:
tLweAddMulRTo	src/libtfhe-superaic-acc/tfhe_acc.cpp	/^TFHE_ACC::tLweAddMulRTo(TLweSample *result, const IntPolynomial *p, const TLweSample *sample, co/;"	f	class:tfhe_superaic::TFHE_ACC	typeref:typename:void
tLweAddMulRTo	src/libtfhe-superaic-core/tlwe-functions.cpp	/^tLweAddMulRTo(TLweSample *result, const IntPolynomial *p, const TLweSample *sample, const TLwePa/;"	f	typeref:typename:EXPORT void
tLweAddMulRTo_paral	src/libtfhe-superaic-acc/tfhe_acc.cpp	/^TFHE_ACC::tLweAddMulRTo_paral(TLweSample *result, const IntPolynomial *p, const TLweSample *samp/;"	f	class:tfhe_superaic::TFHE_ACC	typeref:typename:void
tLweAddMulTo	src/libtfhe-superaic-core/tlwe-functions.cpp	/^EXPORT void tLweAddMulTo(TLweSample *result, int32_t p, const TLweSample *sample, const TLwePara/;"	f	typeref:typename:EXPORT void
tLweAddRTTo	src/libtfhe-superaic-core/tlwe-functions.cpp	/^tLweAddRTTo(TLweSample *result, const int32_t pos, const IntPolynomial *p, const Torus32 x, cons/;"	f	typeref:typename:EXPORT void
tLweAddTTo	src/libtfhe-superaic-core/tlwe-functions.cpp	/^EXPORT void tLweAddTTo(TLweSample *result, const int32_t pos, const Torus32 x, const TLweParams /;"	f	typeref:typename:EXPORT void
tLweAddTo	src/libtfhe-superaic-core/tlwe-functions.cpp	/^EXPORT void tLweAddTo(TLweSample *result, const TLweSample *sample, const TLweParams *params) {$/;"	f	typeref:typename:EXPORT void
tLweApproxPhase	src/libtfhe-superaic-core/tlwe-functions.cpp	/^EXPORT void tLweApproxPhase(TorusPolynomial *message, const TorusPolynomial *phase, int32_t plai/;"	f	typeref:typename:EXPORT void
tLweClear	src/libtfhe-superaic-core/tlwe-functions.cpp	/^EXPORT void tLweClear(TLweSample *result, const TLweParams *params) {$/;"	f	typeref:typename:EXPORT void
tLweCopy	src/libtfhe-superaic-core/tlwe-functions.cpp	/^EXPORT void tLweCopy(TLweSample *result, const TLweSample *sample, const TLweParams *params) {$/;"	f	typeref:typename:EXPORT void
tLweExtractKey	src/libtfhe-superaic-core/lwe.cpp	/^EXPORT void tLweExtractKey(LweKey* result, const TLweKey* key) \/\/sans doute un param suppléme/;"	f	typeref:typename:EXPORT void
tLweExtractLweSample	src/libtfhe-superaic-core/lwe.cpp	/^EXPORT void tLweExtractLweSample(LweSample* result, const TLweSample* x, const LweParams* params/;"	f	typeref:typename:EXPORT void
tLweExtractLweSampleIndex	src/libtfhe-superaic-core/lwe.cpp	/^EXPORT void tLweExtractLweSampleIndex(LweSample* result, const TLweSample* x, const int32_t inde/;"	f	typeref:typename:EXPORT void
tLweFFTAddMulRTo	src/libtfhe-superaic-core/tlwe-fft-operations.cpp	/^EXPORT void tLweFFTAddMulRTo(TLweSampleFFT *result, const LagrangeHalfCPolynomial *p, const TLwe/;"	f	typeref:typename:EXPORT void
tLweFFTClear	src/libtfhe-superaic-core/tlwe-fft-operations.cpp	/^EXPORT void tLweFFTClear(TLweSampleFFT *result, const TLweParams *params) {$/;"	f	typeref:typename:EXPORT void
tLweFromFFTConvert	src/libtfhe-superaic-core/tlwe-fft-operations.cpp	/^EXPORT void tLweFromFFTConvert(TLweSample *result, const TLweSampleFFT *source, const TLweParams/;"	f	typeref:typename:EXPORT void
tLweKeyGen	src/libtfhe-superaic-core/tlwe-functions.cpp	/^EXPORT void tLweKeyGen(TLweKey *result) {$/;"	f	typeref:typename:EXPORT void
tLweMulByXaiMinusOne	src/libtfhe-superaic-core/tlwe-functions.cpp	/^EXPORT void tLweMulByXaiMinusOne(TLweSample *result, int32_t ai, const TLweSample *bk, const TLw/;"	f	typeref:typename:EXPORT void
tLweNoiselessTrivial	src/libtfhe-superaic-core/tlwe-functions.cpp	/^EXPORT void tLweNoiselessTrivial(TLweSample *result, const TorusPolynomial *mu, const TLweParams/;"	f	typeref:typename:EXPORT void
tLweNoiselessTrivialT	src/libtfhe-superaic-core/tlwe-functions.cpp	/^EXPORT void tLweNoiselessTrivialT(TLweSample *result, const Torus32 mu, const TLweParams *params/;"	f	typeref:typename:EXPORT void
tLwePhase	src/libtfhe-superaic-core/tlwe-functions.cpp	/^EXPORT void tLwePhase(TorusPolynomial *phase, const TLweSample *sample, const TLweKey *key) {$/;"	f	typeref:typename:EXPORT void
tLweSubMulTo	src/libtfhe-superaic-core/tlwe-functions.cpp	/^EXPORT void tLweSubMulTo(TLweSample *result, int32_t p, const TLweSample *sample, const TLwePara/;"	f	typeref:typename:EXPORT void
tLweSubTo	src/libtfhe-superaic-core/tlwe-functions.cpp	/^EXPORT void tLweSubTo(TLweSample *result, const TLweSample *sample, const TLweParams *params) {$/;"	f	typeref:typename:EXPORT void
tLweSymDecrypt	src/libtfhe-superaic-core/tlwe-functions.cpp	/^EXPORT void tLweSymDecrypt(TorusPolynomial *result, const TLweSample *sample, const TLweKey *key/;"	f	typeref:typename:EXPORT void
tLweSymDecryptT	src/libtfhe-superaic-core/tlwe-functions.cpp	/^EXPORT Torus32 tLweSymDecryptT(const TLweSample *sample, const TLweKey *key, int32_t plaintext_m/;"	f	typeref:typename:EXPORT Torus32
tLweSymEncrypt	src/libtfhe-superaic-core/tlwe-functions.cpp	/^EXPORT void tLweSymEncrypt(TLweSample *result, TorusPolynomial *message, double alpha, const TLw/;"	f	typeref:typename:EXPORT void
tLweSymEncryptT	src/libtfhe-superaic-core/tlwe-functions.cpp	/^EXPORT void tLweSymEncryptT(TLweSample *result, Torus32 message, double alpha, const TLweKey *ke/;"	f	typeref:typename:EXPORT void
tLweSymEncryptZero	src/libtfhe-superaic-core/tlwe-functions.cpp	/^EXPORT void tLweSymEncryptZero(TLweSample *result, double alpha, const TLweKey *key) {$/;"	f	typeref:typename:EXPORT void
tLweToFFTConvert	src/libtfhe-superaic-core/tlwe-fft-operations.cpp	/^EXPORT void tLweToFFTConvert(TLweSampleFFT *result, const TLweSample *source, const TLweParams */;"	f	typeref:typename:EXPORT void
t_backends_	src/muduo/examples/protobuf/rpcbalancer/balancer.cc	/^  ThreadLocal<PerThread> t_backends_;$/;"	m	class:Balancer	typeref:typename:ThreadLocal<PerThread>	file:
t_backends_	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^  ThreadLocal<PerThread> t_backends_;$/;"	m	class:Balancer	typeref:typename:ThreadLocal<PerThread>	file:
t_cachedTid	src/muduo/muduo/base/CurrentThread.cc	/^__thread int t_cachedTid = 0;$/;"	v	namespace:muduo::CurrentThread	typeref:typename:int
t_errnobuf	src/muduo/muduo/base/Logging.cc	/^__thread char t_errnobuf[512];$/;"	v	namespace:muduo	typeref:typename:char[512]
t_lastSecond	src/muduo/muduo/base/Logging.cc	/^__thread time_t t_lastSecond;$/;"	v	namespace:muduo	typeref:typename:time_t
t_loopInThisThread	src/muduo/muduo/net/EventLoop.cc	/^__thread EventLoop* t_loopInThisThread = 0;$/;"	v	namespace:__anon600130340111	typeref:typename:EventLoop *
t_numOpenedFiles	src/muduo/muduo/base/ProcessInfo.cc	/^__thread int t_numOpenedFiles = 0;$/;"	v	namespace:muduo::detail	typeref:typename:int
t_pids	src/muduo/muduo/base/ProcessInfo.cc	/^__thread std::vector<pid_t>* t_pids = NULL;$/;"	v	namespace:muduo::detail	typeref:typename:std::vector<pid_t> *
t_resolveBuffer	src/muduo/muduo/net/InetAddress.cc	/^static __thread char t_resolveBuffer[64 * 1024];$/;"	v	typeref:typename:char[]	file:
t_threadName	src/muduo/muduo/base/CurrentThread.cc	/^__thread const char* t_threadName = "unknown";$/;"	v	namespace:muduo::CurrentThread	typeref:typename:const char *
t_tidString	src/muduo/muduo/base/CurrentThread.cc	/^__thread char t_tidString[32];$/;"	v	namespace:muduo::CurrentThread	typeref:typename:char[32]
t_tidStringLength	src/muduo/muduo/base/CurrentThread.cc	/^__thread int t_tidStringLength = 6;$/;"	v	namespace:muduo::CurrentThread	typeref:typename:int
t_time	src/muduo/muduo/base/Logging.cc	/^__thread char t_time[64];$/;"	v	namespace:muduo	typeref:typename:char[64]
t_tunnels	src/muduo/examples/socks4a/balancer.cc	/^ThreadLocal<std::map<string, TunnelPtr> > t_tunnels;$/;"	v	typeref:typename:ThreadLocal<std::map<string,TunnelPtr>>
t_value_	src/muduo/muduo/base/ThreadLocalSingleton.h	/^  static __thread T* t_value_;$/;"	m	class:muduo::ThreadLocalSingleton	typeref:typename:T *
t_value_	src/muduo/muduo/base/ThreadLocalSingleton.h	/^__thread T* ThreadLocalSingleton<T>::t_value_ = 0;$/;"	m	class:muduo::ThreadLocalSingleton<T>	typeref:typename:T *
table_	src/tests/googletest/googletest/samples/sample6_unittest.cc	/^  PrimeTable* const table_;$/;"	m	class:PrimeTableTest	typeref:typename:PrimeTable * const	file:
table_	src/tests/googletest/googletest/samples/sample7_unittest.cc	/^  PrimeTable* table_;$/;"	m	class:PrimeTableTest	typeref:typename:PrimeTable *	file:
table_	src/tests/googletest/googletest/samples/sample8_unittest.cc	/^  HybridPrimeTable* table_;$/;"	m	class:PrimeTableTest	typeref:typename:HybridPrimeTable *	file:
tables_direct	src/libtfhe-superaic-core/fft_processors/nayuki/lagrangehalfc_impl.h	/^    void* tables_direct;$/;"	m	class:FFT_Processor_nayuki	typeref:typename:void *
tables_reverse	src/libtfhe-superaic-core/fft_processors/nayuki/lagrangehalfc_impl.h	/^    void* tables_reverse;$/;"	m	class:FFT_Processor_nayuki	typeref:typename:void *
tag	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^  const string& tag() const { return codec_.tag(); }$/;"	f	class:muduo::net::ProtobufCodecLiteT	typeref:typename:const string &
tag	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^  const string& tag() const { return tag_; }$/;"	f	class:muduo::net::ProtobufCodecLite	typeref:typename:const string &
tag_	src/muduo/muduo/net/protobuf/ProtobufCodecLite.h	/^  const string tag_;$/;"	m	class:muduo::net::ProtobufCodecLite	typeref:typename:const string
take	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/EventQueue.java	/^    public Event take() {$/;"	m	class:EventQueue
take	src/muduo/muduo/base/BlockingQueue.h	/^  T take()$/;"	f	class:muduo::BlockingQueue	typeref:typename:T
take	src/muduo/muduo/base/BoundedBlockingQueue.h	/^  T take()$/;"	f	class:muduo::BoundedBlockingQueue	typeref:typename:T
take	src/muduo/muduo/base/ThreadPool.cc	/^ThreadPool::Task ThreadPool::take()$/;"	f	class:ThreadPool	typeref:typename:ThreadPool::Task
taskDirFilter	src/muduo/muduo/base/ProcessInfo.cc	/^int taskDirFilter(const struct dirent* d)$/;"	f	namespace:muduo::detail	typeref:typename:int
tcpNoDelay_	src/muduo/examples/sudoku/loadtest.cc	/^  const bool tcpNoDelay_;$/;"	m	class:SudokuClient	typeref:typename:const bool	file:
tcpNoDelay_	src/muduo/examples/sudoku/pipeline.cc	/^  const bool tcpNoDelay_;$/;"	m	class:SudokuClient	typeref:typename:const bool	file:
tcpNoDelay_	src/muduo/examples/sudoku/server_hybrid.cc	/^  const bool tcpNoDelay_;$/;"	m	class:SudokuServer	typeref:typename:const bool	file:
tcpNoDelay_	src/muduo/examples/sudoku/server_prod.cc	/^  const bool tcpNoDelay_;$/;"	m	class:SudokuServer	typeref:typename:const bool	file:
tcpclient_reg1	src/muduo/muduo/net/tests/CMakeLists.txt	/^add_executable(tcpclient_reg1 TcpClient_reg1.cc)$/;"	t
tcpclient_reg2	src/muduo/muduo/net/tests/CMakeLists.txt	/^add_executable(tcpclient_reg2 TcpClient_reg2.cc)$/;"	t
tcpclient_reg3	src/muduo/muduo/net/tests/CMakeLists.txt	/^add_executable(tcpclient_reg3 TcpClient_reg3.cc)$/;"	t
tcpport	src/muduo/examples/memcached/server/MemcacheServer.h	/^    uint16_t tcpport;$/;"	m	struct:MemcacheServer::Options	typeref:typename:uint16_t
tcprelay	src/muduo/examples/socks4a/CMakeLists.txt	/^add_executable(tcprelay tcprelay.cc)$/;"	t
tearDown	src/tests/googletest/googletest/test/gtest_xml_outfiles_test.py	/^  def tearDown(self):$/;"	m	class:GTestXMLOutFilesTest
tear_down_count_	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  int tear_down_count_;$/;"	m	class:TestGenerationEnvironment	typeref:typename:int	file:
tear_down_tc_	src/tests/googletest/googletest/include/gtest/gtest.h	/^  Test::TearDownTestCaseFunc tear_down_tc_;$/;"	m	class:testing::TestCase	typeref:typename:Test::TearDownTestCaseFunc
tear_down_was_run	src/tests/googletest/googletest/test/gtest_environment_test.cc	/^  bool tear_down_was_run() const { return tear_down_was_run_; }$/;"	f	class:__anon7fd7f0f30111::MyEnvironment	typeref:typename:bool	file:
tear_down_was_run_	src/tests/googletest/googletest/test/gtest_environment_test.cc	/^  bool tear_down_was_run_;$/;"	m	class:__anon7fd7f0f30111::MyEnvironment	typeref:typename:bool	file:
teardown	src/muduo/examples/socks4a/tunnel.h	/^  void teardown()$/;"	f	class:Tunnel	typeref:typename:void
tell	src/muduo/muduo/base/GzipFile.h	/^  off_t tell() const { return ::gztell(file_); }$/;"	f	class:muduo::GzipFile	typeref:typename:off_t
test	Makefile	/^test: otest dtest mtest$/;"	t
test	buildotests/Makefile	/^test:$/;"	t
test	buildotests/driver/Makefile	/^test:$/;"	t
test	buildotests/examples/Makefile	/^test:$/;"	t
test	buildotests/libtfhe-superaic-acc/Makefile	/^test:$/;"	t
test	buildotests/libtfhe-superaic-client/Makefile	/^test:$/;"	t
test	buildotests/libtfhe-superaic-core/Makefile	/^test:$/;"	t
test	buildotests/libtfhe-superaic-core/fft_processors/Makefile	/^test:$/;"	t
test	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^test:$/;"	t
test	buildotests/libtfhe-superaic-server/Makefile	/^test:$/;"	t
test	buildotests/tests/Makefile	/^test:$/;"	t
test	buildotests/tests/googletest/Makefile	/^test:$/;"	t
test	buildotests/tests/googletest/googlemock/Makefile	/^test:$/;"	t
test	buildotests/tests/googletest/googlemock/gtest/Makefile	/^test:$/;"	t
test	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/TestCase.java	/^    public void test() {$/;"	m	class:TestCase
test	src/muduo/muduo/base/tests/Exception_test.cc	/^  void test(std::vector<std::string> names = {})$/;"	f	class:Bar	typeref:typename:void	file:
test	src/muduo/muduo/base/tests/ThreadPool_test.cc	/^void test(int maxSize)$/;"	f	typeref:typename:void
test	src/muduo/muduo/base/tests/TimeZone_unittest.cc	/^void test(const TimeZone& tz, TestCase tc)$/;"	f	typeref:typename:void
test/fast	buildotests/Makefile	/^test\/fast: test$/;"	t
test/fast	buildotests/driver/Makefile	/^test\/fast: test$/;"	t
test/fast	buildotests/examples/Makefile	/^test\/fast: test$/;"	t
test/fast	buildotests/libtfhe-superaic-acc/Makefile	/^test\/fast: test$/;"	t
test/fast	buildotests/libtfhe-superaic-client/Makefile	/^test\/fast: test$/;"	t
test/fast	buildotests/libtfhe-superaic-core/Makefile	/^test\/fast: test$/;"	t
test/fast	buildotests/libtfhe-superaic-core/fft_processors/Makefile	/^test\/fast: test$/;"	t
test/fast	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^test\/fast: test$/;"	t
test/fast	buildotests/libtfhe-superaic-server/Makefile	/^test\/fast: test$/;"	t
test/fast	buildotests/tests/Makefile	/^test\/fast: test$/;"	t
test/fast	buildotests/tests/googletest/Makefile	/^test\/fast: test$/;"	t
test/fast	buildotests/tests/googletest/googlemock/Makefile	/^test\/fast: test$/;"	t
test/fast	buildotests/tests/googletest/googlemock/gtest/Makefile	/^test\/fast: test$/;"	t
test/fused_gtest_test	src/tests/googletest/googletest/Makefile.am	/^check_PROGRAMS += test\/fused_gtest_test$/;"	P	pseudodir:check
test/gmock-spec-builders_test	src/tests/googletest/googlemock/Makefile.am	/^check_PROGRAMS += test\/gmock-spec-builders_test$/;"	P	pseudodir:check
test/gmock_fused_test	src/tests/googletest/googlemock/Makefile.am	/^  check_PROGRAMS += test\/gmock_fused_test$/;"	P	pseudodir:check
test/gmock_link_test	src/tests/googletest/googlemock/Makefile.am	/^check_PROGRAMS += test\/gmock_link_test$/;"	P	pseudodir:check
test/gtest_all_test	src/tests/googletest/googletest/Makefile.am	/^check_PROGRAMS += test\/gtest_all_test$/;"	P	pseudodir:check
test2	src/muduo/muduo/base/tests/ThreadPool_test.cc	/^void test2()$/;"	f	typeref:typename:void
testAliasesOfYesAndNo	src/tests/googletest/googletest/test/gtest_color_test.py	/^  def testAliasesOfYesAndNo(self):$/;"	m	class:GTestColorTest
testAnswer	src/muduo/examples/protobuf/codec/codec_test.cc	/^void testAnswer()$/;"	f	typeref:typename:void
testArgsOfTemplateTypes	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class_test.py	/^  def testArgsOfTemplateTypes(self):$/;"	m	class:GenerateMethodsTest
testArrayArgWithoutNames	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class_test.py	/^  def testArrayArgWithoutNames(self):$/;"	m	class:GenerateMethodsTest
testBadBuffer	src/muduo/examples/protobuf/codec/codec_test.cc	/^void testBadBuffer()$/;"	f	typeref:typename:void
testBadFilter	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^  def testBadFilter(self):$/;"	m	class:GTestFilterUnitTest
testBreakOnFailureOverridesThrowOnFailure	src/tests/googletest/googletest/test/gtest_break_on_failure_unittest.py	/^  def testBreakOnFailureOverridesThrowOnFailure(self):$/;"	m	class:GTestBreakOnFailureUnitTest
testCStyleCommentsInParameterListAreNotRemoved	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class_test.py	/^  def testCStyleCommentsInParameterListAreNotRemoved(self):$/;"	m	class:GenerateMethodsTest
testCases	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MultiplexerTest.java	/^    private ArrayList<TestCase> testCases;$/;"	f	class:MultiplexerTest	file:
testCatchExceptionsDoesNotInterfere	src/tests/googletest/googletest/test/gtest_break_on_failure_unittest.py	/^    def testCatchExceptionsDoesNotInterfere(self):$/;"	m	class:GTestBreakOnFailureUnitTest
testCatchesCxxExceptionsInFixtureConstructor	src/tests/googletest/googletest/test/gtest_catch_exceptions_test.py	/^  def testCatchesCxxExceptionsInFixtureConstructor(self):$/;"	m	class:CatchCxxExceptionsTest
testCatchesCxxExceptionsInFixtureDestructor	src/tests/googletest/googletest/test/gtest_catch_exceptions_test.py	/^    def testCatchesCxxExceptionsInFixtureDestructor(self):$/;"	m	class:CatchCxxExceptionsTest
testCatchesCxxExceptionsInSetUp	src/tests/googletest/googletest/test/gtest_catch_exceptions_test.py	/^  def testCatchesCxxExceptionsInSetUp(self):$/;"	m	class:CatchCxxExceptionsTest
testCatchesCxxExceptionsInSetUpTestCase	src/tests/googletest/googletest/test/gtest_catch_exceptions_test.py	/^  def testCatchesCxxExceptionsInSetUpTestCase(self):$/;"	m	class:CatchCxxExceptionsTest
testCatchesCxxExceptionsInTearDown	src/tests/googletest/googletest/test/gtest_catch_exceptions_test.py	/^  def testCatchesCxxExceptionsInTearDown(self):$/;"	m	class:CatchCxxExceptionsTest
testCatchesCxxExceptionsInTearDownTestCase	src/tests/googletest/googletest/test/gtest_catch_exceptions_test.py	/^  def testCatchesCxxExceptionsInTearDownTestCase(self):$/;"	m	class:CatchCxxExceptionsTest
testCatchesCxxExceptionsInTestBody	src/tests/googletest/googletest/test/gtest_catch_exceptions_test.py	/^  def testCatchesCxxExceptionsInTestBody(self):$/;"	m	class:CatchCxxExceptionsTest
testCatchesLeakedMockByDefault	src/tests/googletest/googlemock/test/gmock_leak_test.py	/^  def testCatchesLeakedMockByDefault(self):$/;"	m	class:GMockLeakTest
testCatchesLeakedMockWhenEnabled	src/tests/googletest/googlemock/test/gmock_leak_test.py	/^  def testCatchesLeakedMockWhenEnabled(self):$/;"	m	class:GMockLeakTest
testCatchesLeakedMockWhenEnabledWithExplictFlagValue	src/tests/googletest/googlemock/test/gmock_leak_test.py	/^  def testCatchesLeakedMockWhenEnabledWithExplictFlagValue(self):$/;"	m	class:GMockLeakTest
testCatchesMultipleLeakedMocks	src/tests/googletest/googlemock/test/gmock_leak_test.py	/^  def testCatchesMultipleLeakedMocks(self):$/;"	m	class:GMockLeakTest
testCatchesNonStdCxxExceptions	src/tests/googletest/googletest/test/gtest_catch_exceptions_test.py	/^  def testCatchesNonStdCxxExceptions(self):$/;"	m	class:CatchCxxExceptionsTest
testCatchesSehExceptionsWithCxxExceptionsDisabled	src/tests/googletest/googletest/test/gtest_catch_exceptions_test.py	/^    def testCatchesSehExceptionsWithCxxExceptionsDisabled(self):$/;"	m	class:CatchSehExceptionsTest
testCatchesSehExceptionsWithCxxExceptionsEnabled	src/tests/googletest/googletest/test/gtest_catch_exceptions_test.py	/^    def testCatchesSehExceptionsWithCxxExceptionsEnabled(self):$/;"	m	class:CatchSehExceptionsTest
testClassWithStorageSpecifierMacro	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class_test.py	/^  def testClassWithStorageSpecifierMacro(self):$/;"	m	class:GenerateMocksTest
testDefaultBehavior	src/tests/googletest/googletest/test/gtest_break_on_failure_unittest.py	/^  def testDefaultBehavior(self):$/;"	m	class:GTestBreakOnFailureUnitTest
testDefaultBehavior	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^  def testDefaultBehavior(self):$/;"	m	class:GTestFilterUnitTest
testDefaultBehavior	src/tests/googletest/googletest/test/gtest_list_tests_unittest.py	/^  def testDefaultBehavior(self):$/;"	m	class:GTestListTestsUnitTest
testDefaultBehavior	src/tests/googletest/googletest/test/gtest_throw_on_failure_test.py	/^  def testDefaultBehavior(self):$/;"	m	class:ThrowOnFailureTest
testDefaultBehaviorWithShards	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^  def testDefaultBehaviorWithShards(self):$/;"	m	class:GTestFilterUnitTest
testDefaultOutputFile	src/tests/googletest/googletest/test/gtest_xml_output_unittest.py	/^  def testDefaultOutputFile(self):$/;"	m	class:GTestXMLOutputUnitTest
testDefaultParameters	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class_test.py	/^  def testDefaultParameters(self):$/;"	m	class:GenerateMethodsTest
testDoesNotCatchLeakedMockWhenDisabled	src/tests/googletest/googlemock/test/gmock_leak_test.py	/^  def testDoesNotCatchLeakedMockWhenDisabled(self):$/;"	m	class:GMockLeakTest
testDoubleSlashCommentsInParameterListAreRemoved	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class_test.py	/^  def testDoubleSlashCommentsInParameterListAreRemoved(self):$/;"	m	class:GenerateMethodsTest
testEmpty	src/muduo/examples/protobuf/codec/codec_test.cc	/^void testEmpty()$/;"	f	typeref:typename:void
testEmptyFilter	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^  def testEmptyFilter(self):$/;"	m	class:GTestFilterUnitTest
testEmptyXmlOutput	src/tests/googletest/googletest/test/gtest_xml_output_unittest.py	/^  def testEmptyXmlOutput(self):$/;"	m	class:GTestXMLOutputUnitTest
testEnvVar	src/tests/googletest/googletest/test/gtest_break_on_failure_unittest.py	/^  def testEnvVar(self):$/;"	m	class:GTestBreakOnFailureUnitTest
testEnvVarAffectsFlag	src/tests/googletest/googletest/test/gtest_env_var_test.py	/^  def testEnvVarAffectsFlag(self):$/;"	m	class:GTestEnvVarTest
testEnvVarAndFlag	src/tests/googletest/googletest/test/gtest_color_test.py	/^  def testEnvVarAndFlag(self):$/;"	m	class:GTestColorTest
testEnvVarOnly	src/tests/googletest/googletest/test/gtest_color_test.py	/^  def testEnvVarOnly(self):$/;"	m	class:GTestColorTest
testExitCodeAndOutput	src/tests/googletest/googletest/test/gtest_uninitialized_test.py	/^  def testExitCodeAndOutput(self):$/;"	m	class:GTestUninitializedTest
testExplicitVoid	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class_test.py	/^  def testExplicitVoid(self):$/;"	m	class:GenerateMethodsTest
testExplicitlyDefaultedConstructorsAndDestructor	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class_test.py	/^  def testExplicitlyDefaultedConstructorsAndDestructor(self):$/;"	m	class:GenerateMethodsTest
testExplicitlyDeletedConstructorsAndDestructor	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class_test.py	/^  def testExplicitlyDeletedConstructorsAndDestructor(self):$/;"	m	class:GenerateMethodsTest
testFilterByTest	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^  def testFilterByTest(self):$/;"	m	class:GTestFilterUnitTest
testFilterByTestCase	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^  def testFilterByTestCase(self):$/;"	m	class:GTestFilterUnitTest
testFilterDisabledTests	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^  def testFilterDisabledTests(self):$/;"	m	class:GTestFilterUnitTest
testFilterWithoutDot	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^  def testFilterWithoutDot(self):$/;"	m	class:GTestFilterUnitTest
testFilteredTestXmlOutput	src/tests/googletest/googletest/test/gtest_xml_output_unittest.py	/^  def testFilteredTestXmlOutput(self):$/;"	m	class:GTestXMLOutputUnitTest
testFixedTimezone	src/muduo/muduo/base/tests/TimeZone_unittest.cc	/^void testFixedTimezone()$/;"	f	typeref:typename:void
testFlag	src/tests/googletest/googletest/test/gtest_break_on_failure_unittest.py	/^  def testFlag(self):$/;"	m	class:GTestBreakOnFailureUnitTest
testFlag	src/tests/googletest/googletest/test/gtest_list_tests_unittest.py	/^  def testFlag(self):$/;"	m	class:GTestListTestsUnitTest
testFlagOnly	src/tests/googletest/googletest/test/gtest_color_test.py	/^  def testFlagOnly(self):$/;"	m	class:GTestColorTest
testFlagOverridesEnvVar	src/tests/googletest/googletest/test/gtest_break_on_failure_unittest.py	/^  def testFlagOverridesEnvVar(self):$/;"	m	class:GTestBreakOnFailureUnitTest
testFlagOverridesEnvVar	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^  def testFlagOverridesEnvVar(self):$/;"	m	class:GTestFilterUnitTest
testFullName	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^  def testFullName(self):$/;"	m	class:GTestFilterUnitTest
testHongKong	src/muduo/muduo/base/tests/TimeZone_unittest.cc	/^void testHongKong()$/;"	f	typeref:typename:void
testLondon	src/muduo/muduo/base/tests/TimeZone_unittest.cc	/^void testLondon()$/;"	f	typeref:typename:void
testLosAngeles	src/muduo/muduo/base/tests/TimeZone_unittest.cc	/^void testLosAngeles()$/;"	f	typeref:typename:void
testMove	src/muduo/muduo/base/tests/BlockingQueue_test.cc	/^void testMove()$/;"	f	typeref:typename:void
testMove	src/muduo/muduo/base/tests/BoundedBlockingQueue_test.cc	/^void testMove()$/;"	f	typeref:typename:void
testMultipleDefaultParameters	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class_test.py	/^  def testMultipleDefaultParameters(self):$/;"	m	class:GenerateMethodsTest
testNamespaces	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class_test.py	/^  def testNamespaces(self):$/;"	m	class:GenerateMocksTest
testNegativeFilters	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^  def testNegativeFilters(self):$/;"	m	class:GTestFilterUnitTest
testNewYork	src/muduo/muduo/base/tests/TimeZone_unittest.cc	/^void testNewYork()$/;"	f	typeref:typename:void
testNoEnvVarNoFlag	src/tests/googletest/googletest/test/gtest_color_test.py	/^  def testNoEnvVarNoFlag(self):$/;"	m	class:GTestColorTest
testNonEmptyXmlOutput	src/tests/googletest/googletest/test/gtest_xml_output_unittest.py	/^    def testNonEmptyXmlOutput(self):$/;"	m	class:GTestXMLOutputUnitTest
testObj1	src/muduo/muduo/base/tests/ThreadLocal_test.cc	/^muduo::ThreadLocal<Test> testObj1;$/;"	v	typeref:typename:muduo::ThreadLocal<Test>
testObj2	src/muduo/muduo/base/tests/ThreadLocal_test.cc	/^muduo::ThreadLocal<Test> testObj2;$/;"	v	typeref:typename:muduo::ThreadLocal<Test>
testOnMessage	src/muduo/examples/protobuf/codec/codec_test.cc	/^void testOnMessage()$/;"	f	typeref:typename:void
testOutfile1	src/tests/googletest/googletest/test/gtest_xml_outfiles_test.py	/^  def testOutfile1(self):$/;"	m	class:GTestXMLOutFilesTest
testOutfile2	src/tests/googletest/googletest/test/gtest_xml_outfiles_test.py	/^  def testOutfile2(self):$/;"	m	class:GTestXMLOutFilesTest
testOutput	src/tests/googletest/googlemock/test/gmock_output_test.py	/^  def testOutput(self):$/;"	m	class:GMockOutputTest
testOutput	src/tests/googletest/googletest/test/gtest_output_test.py	/^  def testOutput(self):$/;"	m	class:GTestOutputTest
testOverrideNonFilterFlags	src/tests/googletest/googletest/test/gtest_list_tests_unittest.py	/^  def testOverrideNonFilterFlags(self):$/;"	m	class:GTestListTestsUnitTest
testPointerArgWithoutNames	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class_test.py	/^  def testPointerArgWithoutNames(self):$/;"	m	class:GenerateMethodsTest
testPolynomialGen	src/libtfhe-superaic-core/lwe-bootstrapping-functions.cpp	/^EXPORT void testPolynomialGen(TorusPolynomial *testvect, const int32_t N, const int32_t plaintex/;"	f	typeref:typename:EXPORT void
testPolynomialGenWithPBSTable	src/libtfhe-superaic-core/lwe-bootstrapping-functions.cpp	/^EXPORT void testPolynomialGenWithPBSTable(TorusPolynomial *testvect, const int32_t N, const int3/;"	f	typeref:typename:EXPORT void
testPrintsHelpWithFullFlag	src/tests/googletest/googletest/test/gtest_help_test.py	/^  def testPrintsHelpWithFullFlag(self):$/;"	m	class:GTestHelpTest
testPrintsHelpWithIncorrectFlagStyle	src/tests/googletest/googletest/test/gtest_help_test.py	/^  def testPrintsHelpWithIncorrectFlagStyle(self):$/;"	m	class:GTestHelpTest
testPrintsHelpWithQuestionFlag	src/tests/googletest/googletest/test/gtest_help_test.py	/^  def testPrintsHelpWithQuestionFlag(self):$/;"	m	class:GTestHelpTest
testPrintsHelpWithShortFlag	src/tests/googletest/googletest/test/gtest_help_test.py	/^  def testPrintsHelpWithShortFlag(self):$/;"	m	class:GTestHelpTest
testPrintsHelpWithUnrecognizedGoogleTestFlag	src/tests/googletest/googletest/test/gtest_help_test.py	/^  def testPrintsHelpWithUnrecognizedGoogleTestFlag(self):$/;"	m	class:GTestHelpTest
testPrintsHelpWithWindowsStyleQuestionFlag	src/tests/googletest/googletest/test/gtest_help_test.py	/^  def testPrintsHelpWithWindowsStyleQuestionFlag(self):$/;"	m	class:GTestHelpTest
testQuery	src/muduo/examples/protobuf/codec/codec_test.cc	/^void testQuery()$/;"	f	typeref:typename:void
testReferenceArgWithoutNames	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class_test.py	/^  def testReferenceArgWithoutNames(self):$/;"	m	class:GenerateMethodsTest
testRemovesCommentsWhenDefaultsArePresent	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class_test.py	/^  def testRemovesCommentsWhenDefaultsArePresent(self):$/;"	m	class:GenerateMethodsTest
testReturnTypeWithManyTemplateArgs	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class_test.py	/^  def testReturnTypeWithManyTemplateArgs(self):$/;"	m	class:GenerateMethodsTest
testReturnTypeWithOneTemplateArg	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class_test.py	/^  def testReturnTypeWithOneTemplateArg(self):$/;"	m	class:GenerateMethodsTest
testRunsTestsWithGtestInternalFlag	src/tests/googletest/googletest/test/gtest_help_test.py	/^  def testRunsTestsWithGtestInternalFlag(self):$/;"	m	class:GTestHelpTest
testRunsTestsWithoutHelpFlag	src/tests/googletest/googletest/test/gtest_help_test.py	/^  def testRunsTestsWithoutHelpFlag(self):$/;"	m	class:GTestHelpTest
testShardStatusFileIsCreated	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^  def testShardStatusFileIsCreated(self):$/;"	m	class:GTestFilterUnitTest
testShardStatusFileIsCreatedWithListTests	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^  def testShardStatusFileIsCreatedWithListTests(self):$/;"	m	class:GTestFilterUnitTest
testShardingWorksWithDeathTests	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^    def testShardingWorksWithDeathTests(self):$/;"	m	class:GTestFilterUnitTest
testShuffleChangesTestCaseOrder	src/tests/googletest/googletest/test/gtest_shuffle_test.py	/^  def testShuffleChangesTestCaseOrder(self):$/;"	m	class:GTestShuffleUnitTest
testShuffleChangesTestOrder	src/tests/googletest/googletest/test/gtest_shuffle_test.py	/^  def testShuffleChangesTestOrder(self):$/;"	m	class:GTestShuffleUnitTest
testShuffleDoesNotCreateNewTest	src/tests/googletest/googletest/test/gtest_shuffle_test.py	/^  def testShuffleDoesNotCreateNewTest(self):$/;"	m	class:GTestShuffleUnitTest
testShuffleDoesNotInterleaveTestCases	src/tests/googletest/googletest/test/gtest_shuffle_test.py	/^  def testShuffleDoesNotInterleaveTestCases(self):$/;"	m	class:GTestShuffleUnitTest
testShuffleDoesNotRepeatTest	src/tests/googletest/googletest/test/gtest_shuffle_test.py	/^  def testShuffleDoesNotRepeatTest(self):$/;"	m	class:GTestShuffleUnitTest
testShuffleGeneratesNewOrderInEachIteration	src/tests/googletest/googletest/test/gtest_shuffle_test.py	/^  def testShuffleGeneratesNewOrderInEachIteration(self):$/;"	m	class:GTestShuffleUnitTest
testShuffleIncludesAllTests	src/tests/googletest/googletest/test/gtest_shuffle_test.py	/^  def testShuffleIncludesAllTests(self):$/;"	m	class:GTestShuffleUnitTest
testShuffleLeavesDeathTestsAtFront	src/tests/googletest/googletest/test/gtest_shuffle_test.py	/^  def testShuffleLeavesDeathTestsAtFront(self):$/;"	m	class:GTestShuffleUnitTest
testShufflePreservesNumberOfTests	src/tests/googletest/googletest/test/gtest_shuffle_test.py	/^  def testShufflePreservesNumberOfTests(self):$/;"	m	class:GTestShuffleUnitTest
testShuffleRestoresOrderAfterEachIteration	src/tests/googletest/googletest/test/gtest_shuffle_test.py	/^  def testShuffleRestoresOrderAfterEachIteration(self):$/;"	m	class:GTestShuffleUnitTest
testShuffleShardedTestsPreservesPartition	src/tests/googletest/googletest/test/gtest_shuffle_test.py	/^  def testShuffleShardedTestsPreservesPartition(self):$/;"	m	class:GTestShuffleUnitTest
testSimpleConstMethod	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class_test.py	/^  def testSimpleConstMethod(self):$/;"	m	class:GenerateMethodsTest
testSimpleConstructorsAndDestructor	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class_test.py	/^  def testSimpleConstructorsAndDestructor(self):$/;"	m	class:GenerateMethodsTest
testSimpleMethod	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class_test.py	/^  def testSimpleMethod(self):$/;"	m	class:GenerateMethodsTest
testSimpleMethodInTemplatedClass	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class_test.py	/^  def testSimpleMethodInTemplatedClass(self):$/;"	m	class:GenerateMethodsTest
testSimpleOverrideMethod	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class_test.py	/^  def testSimpleOverrideMethod(self):$/;"	m	class:GenerateMethodsTest
testStrangeNewlineInParameter	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class_test.py	/^  def testStrangeNewlineInParameter(self):$/;"	m	class:GenerateMethodsTest
testSuppressedXmlOutput	src/tests/googletest/googletest/test/gtest_xml_output_unittest.py	/^  def testSuppressedXmlOutput(self):$/;"	m	class:GTestXMLOutputUnitTest
testSydney	src/muduo/muduo/base/tests/TimeZone_unittest.cc	/^void testSydney()$/;"	f	typeref:typename:void
testTemplateInATemplateTypedef	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class_test.py	/^  def testTemplateInATemplateTypedef(self):$/;"	m	class:GenerateMocksTest
testTemplateInATemplateTypedefWithComma	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class_test.py	/^  def testTemplateInATemplateTypedefWithComma(self):$/;"	m	class:GenerateMocksTest
testTemplatedClass	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class_test.py	/^  def testTemplatedClass(self):$/;"	m	class:GenerateMocksTest
testTemplatedForwardDeclaration	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class_test.py	/^  def testTemplatedForwardDeclaration(self):$/;"	m	class:GenerateMocksTest
testThreePatterns	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^  def testThreePatterns(self):$/;"	m	class:GTestFilterUnitTest
testThrowOnFailureEnvVar	src/tests/googletest/googletest/test/gtest_throw_on_failure_test.py	/^  def testThrowOnFailureEnvVar(self):$/;"	m	class:ThrowOnFailureTest
testThrowOnFailureFlag	src/tests/googletest/googletest/test/gtest_throw_on_failure_test.py	/^  def testThrowOnFailureFlag(self):$/;"	m	class:ThrowOnFailureTest
testThrowOnFailureFlagOverridesEnvVar	src/tests/googletest/googletest/test/gtest_throw_on_failure_test.py	/^  def testThrowOnFailureFlagOverridesEnvVar(self):$/;"	m	class:ThrowOnFailureTest
testTimestampValue	src/tests/googletest/googletest/test/gtest_xml_output_unittest.py	/^  def testTimestampValue(self):$/;"	m	class:GTestXMLOutputUnitTest
testTwoPatterns	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^  def testTwoPatterns(self):$/;"	m	class:GTestFilterUnitTest
testUnhandledCxxExceptionsAbortTheProgram	src/tests/googletest/googletest/test/gtest_catch_exceptions_test.py	/^  def testUnhandledCxxExceptionsAbortTheProgram(self):$/;"	m	class:CatchCxxExceptionsTest
testUniversalFilters	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^  def testUniversalFilters(self):$/;"	m	class:GTestFilterUnitTest
testUtc	src/muduo/muduo/base/tests/TimeZone_unittest.cc	/^void testUtc()$/;"	f	typeref:typename:void
testVirtualDestructor	src/tests/googletest/googlemock/scripts/generator/cpp/gmock_class_test.py	/^  def testVirtualDestructor(self):$/;"	m	class:GenerateMethodsTest
testWildcardInTestCaseName	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^  def testWildcardInTestCaseName(self):$/;"	m	class:GTestFilterUnitTest
testWildcardInTestName	src/tests/googletest/googletest/test/gtest_filter_unittest.py	/^  def testWildcardInTestName(self):$/;"	m	class:GTestFilterUnitTest
testWithFilterFlags	src/tests/googletest/googletest/test/gtest_list_tests_unittest.py	/^  def testWithFilterFlags(self):$/;"	m	class:GTestListTestsUnitTest
testXmlOutputFile	src/tests/googletest/googletest/test/gtest_env_var_test.py	/^  def testXmlOutputFile(self):$/;"	m	class:GTestEnvVarTest
testXmlOutputFileOverride	src/tests/googletest/googletest/test/gtest_env_var_test.py	/^  def testXmlOutputFileOverride(self):$/;"	m	class:GTestEnvVarTest
test_	src/tests/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h	/^    DeathTest* const test_;$/;"	m	class:testing::internal::DeathTest::ReturnSentinel	typeref:typename:DeathTest * const
test_base_name	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^    const std::string test_base_name;$/;"	m	struct:testing::internal::ParameterizedTestCaseInfo::TestInfo	typeref:typename:const std::string
test_body_count_	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  int test_body_count_;$/;"	m	class:TestGenerationEnvironment	typeref:typename:int	file:
test_case_base_name	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^    const std::string test_case_base_name;$/;"	m	struct:testing::internal::ParameterizedTestCaseInfo::TestInfo	typeref:typename:const std::string
test_case_indices_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  std::vector<int> test_case_indices_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:std::vector<int>
test_case_infos_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  TestCaseInfoContainer test_case_infos_;$/;"	m	class:testing::internal::ParameterizedTestCaseRegistry	typeref:typename:TestCaseInfoContainer
test_case_name	src/tests/googletest/googletest/include/gtest/gtest.h	/^  const char* test_case_name() const { return test_case_name_.c_str(); }$/;"	f	class:testing::TestInfo	typeref:typename:const char *
test_case_name_	src/tests/googletest/googletest/include/gtest/gtest.h	/^  const std::string test_case_name_;     \/\/ Test case name$/;"	m	class:testing::TestInfo	typeref:typename:const std::string
test_case_name_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  const std::string test_case_name_;$/;"	m	class:testing::internal::ParameterizedTestCaseInfo	typeref:typename:const std::string
test_case_to_run_count	src/tests/googletest/googletest/src/gtest.cc	/^int UnitTest::test_case_to_run_count() const {$/;"	f	class:testing::UnitTest	typeref:typename:int
test_case_to_run_count	src/tests/googletest/googletest/src/gtest.cc	/^int UnitTestImpl::test_case_to_run_count() const {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:int
test_cases_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  std::vector<TestCase*> test_cases_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:std::vector<TestCase * >
test_deleted_	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  bool test_deleted_;$/;"	m	class:MockDeathTestFactory	typeref:typename:bool	file:
test_down_pointer_cast	src/muduo/examples/protobuf/codec/dispatcher_test.cc	/^void test_down_pointer_cast()$/;"	f	typeref:typename:void
test_fft_log_error	src/libtfhe-superaic-core/fft_processors/nayuki/fft-test.c	/^static double test_fft_log_error(int32_t n) {$/;"	f	typeref:typename:double	file:
test_fused_gtest_test	src/tests/googletest/googletest/Makefile.am	/^check_PROGRAMS += test\/fused_gtest_test$/;"	P	pseudodir:check
test_fused_gtest_test_CPPFLAGS	src/tests/googletest/googletest/Makefile.am	/^test_fused_gtest_test_CPPFLAGS = -I"$(srcdir)\/fused-src"$/;"	m
test_fused_gtest_test_SOURCES	src/tests/googletest/googletest/Makefile.am	/^test_fused_gtest_test_SOURCES = $(FUSED_GTEST_SRC) \\$/;"	m
test_generation_params	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^const int test_generation_params[] = {36, 42, 72};$/;"	v	typeref:typename:const int[]
test_gmock_fused_test	src/tests/googletest/googlemock/Makefile.am	/^  check_PROGRAMS += test\/gmock_fused_test$/;"	P	pseudodir:check
test_gmock_fused_test_CPPFLAGS	src/tests/googletest/googlemock/Makefile.am	/^  test_gmock_fused_test_CPPFLAGS = -I"$(srcdir)\/fused-src"$/;"	m
test_gmock_fused_test_SOURCES	src/tests/googletest/googlemock/Makefile.am	/^  test_gmock_fused_test_SOURCES = \\$/;"	m
test_gmock_link_test	src/tests/googletest/googlemock/Makefile.am	/^check_PROGRAMS += test\/gmock_link_test$/;"	P	pseudodir:check
test_gmock_link_test_LDADD	src/tests/googletest/googlemock/Makefile.am	/^test_gmock_link_test_LDADD = $(GTEST_LIBS) lib\/libgmock_main.la  lib\/libgmock.la$/;"	m
test_gmock_link_test_SOURCES	src/tests/googletest/googlemock/Makefile.am	/^test_gmock_link_test_SOURCES = \\$/;"	m
test_gmock_spec_builders_test	src/tests/googletest/googlemock/Makefile.am	/^check_PROGRAMS += test\/gmock-spec-builders_test$/;"	P	pseudodir:check
test_gmock_spec_builders_test_LDADD	src/tests/googletest/googlemock/Makefile.am	/^test_gmock_spec_builders_test_LDADD = $(GTEST_LIBS) lib\/libgmock.la$/;"	m
test_gmock_spec_builders_test_SOURCES	src/tests/googletest/googlemock/Makefile.am	/^test_gmock_spec_builders_test_SOURCES = test\/gmock-spec-builders_test.cc$/;"	m
test_gtest_all_test	src/tests/googletest/googletest/Makefile.am	/^check_PROGRAMS += test\/gtest_all_test$/;"	P	pseudodir:check
test_gtest_all_test_LDADD	src/tests/googletest/googletest/Makefile.am	/^test_gtest_all_test_LDADD = lib\/libgtest_main.la \\$/;"	m
test_gtest_all_test_SOURCES	src/tests/googletest/googletest/Makefile.am	/^test_gtest_all_test_SOURCES = test\/gtest_all_test.cc$/;"	m
test_indices_	src/tests/googletest/googletest/include/gtest/gtest.h	/^  std::vector<int> test_indices_;$/;"	m	class:testing::TestCase	typeref:typename:std::vector<int>
test_info_list	src/tests/googletest/googletest/include/gtest/gtest.h	/^  const std::vector<TestInfo*>& test_info_list() const {$/;"	f	class:testing::TestCase	typeref:typename:const std::vector<TestInfo * > &
test_info_list	src/tests/googletest/googletest/include/gtest/gtest.h	/^  std::vector<TestInfo*>& test_info_list() { return test_info_list_; }$/;"	f	class:testing::TestCase	typeref:typename:std::vector<TestInfo * > &
test_info_list_	src/tests/googletest/googletest/include/gtest/gtest.h	/^  std::vector<TestInfo*> test_info_list_;$/;"	m	class:testing::TestCase	typeref:typename:std::vector<TestInfo * >
test_info_obj_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  TestInfo test_info_obj_;  \/\/ The name test_info_ was taken by testing::Test.$/;"	m	class:testing::internal::StreamingListenerTest	typeref:typename:TestInfo	file:
test_list	src/tests/googletest/googletest/test/gtest_output_test.py	/^test_list = GetShellCommandOutput(COMMAND_LIST_TESTS)$/;"	v
test_meta_factory	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^    const scoped_ptr<TestMetaFactoryBase<ParamType> > test_meta_factory;$/;"	m	struct:testing::internal::ParameterizedTestCaseInfo::TestInfo	typeref:typename:const scoped_ptr<TestMetaFactoryBase<ParamType>>
test_part_results	src/tests/googletest/googletest/include/gtest/gtest.h	/^  const std::vector<TestPartResult>& test_part_results() const {$/;"	f	class:testing::TestResult	typeref:typename:const std::vector<TestPartResult> &
test_part_results	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  static const std::vector<testing::TestPartResult>& test_part_results($/;"	f	class:testing::internal::TestResultAccessor	typeref:typename:const std::vector<testing::TestPartResult> &
test_part_results_	src/tests/googletest/googletest/include/gtest/gtest.h	/^  std::vector<TestPartResult> test_part_results_;$/;"	m	class:testing::TestResult	typeref:typename:std::vector<TestPartResult>
test_properites_mutex_	src/tests/googletest/googletest/include/gtest/gtest.h	/^  internal::Mutex test_properites_mutex_;$/;"	m	class:testing::TestResult	typeref:typename:internal::Mutex
test_properties	src/tests/googletest/googletest/include/gtest/gtest.h	/^  const std::vector<TestProperty>& test_properties() const {$/;"	f	class:testing::TestResult	typeref:typename:const std::vector<TestProperty> &
test_properties_	src/tests/googletest/googletest/include/gtest/gtest.h	/^  std::vector<TestProperty> test_properties_;$/;"	m	class:testing::TestResult	typeref:typename:std::vector<TestProperty>
test_property_count	src/tests/googletest/googletest/src/gtest.cc	/^int TestResult::test_property_count() const {$/;"	f	class:testing::TestResult	typeref:typename:int
test_to_run_count	src/tests/googletest/googletest/src/gtest.cc	/^int TestCase::test_to_run_count() const {$/;"	f	class:testing::TestCase	typeref:typename:int
test_to_run_count	src/tests/googletest/googletest/src/gtest.cc	/^int UnitTest::test_to_run_count() const { return impl()->test_to_run_count(); }$/;"	f	class:testing::UnitTest	typeref:typename:int
test_to_run_count	src/tests/googletest/googletest/src/gtest.cc	/^int UnitTestImpl::test_to_run_count() const {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:int
test_was_run	src/tests/googletest/googletest/test/gtest_environment_test.cc	/^bool test_was_run;$/;"	v	namespace:__anon7fd7f0f30111	typeref:typename:bool
testdata_file_	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^  FilePath testdata_file_;  \/\/ "\/tmp\/directory_creation\/test"$/;"	m	class:testing::internal::__anon077d0c590111::DirectoryCreationTest	typeref:typename:FilePath	file:
testdata_path_	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^  FilePath testdata_path_;  \/\/ "\/tmp\/directory_creation\/test\/"$/;"	m	class:testing::internal::__anon077d0c590111::DirectoryCreationTest	typeref:typename:FilePath	file:
testdata_path_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  internal::FilePath testdata_path_;$/;"	m	class:testing::FlagfileTest	typeref:typename:internal::FilePath	file:
testing	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^namespace testing {$/;"	n
testing	src/tests/googletest/googlemock/include/gmock/gmock-cardinalities.h	/^namespace testing {$/;"	n
testing	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^namespace testing {$/;"	n
testing	src/tests/googletest/googlemock/include/gmock/gmock-generated-function-mockers.h	/^namespace testing {$/;"	n
testing	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^namespace testing {$/;"	n
testing	src/tests/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h	/^namespace testing {$/;"	n
testing	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^namespace testing {$/;"	n
testing	src/tests/googletest/googlemock/include/gmock/gmock-more-actions.h	/^namespace testing {$/;"	n
testing	src/tests/googletest/googlemock/include/gmock/gmock-more-matchers.h	/^namespace testing {$/;"	n
testing	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^namespace testing {$/;"	n
testing	src/tests/googletest/googlemock/include/gmock/gmock.h	/^namespace testing {$/;"	n
testing	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^namespace testing {$/;"	n
testing	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^namespace testing {$/;"	n
testing	src/tests/googletest/googlemock/src/gmock-cardinalities.cc	/^namespace testing {$/;"	n	file:
testing	src/tests/googletest/googlemock/src/gmock-internal-utils.cc	/^namespace testing {$/;"	n	file:
testing	src/tests/googletest/googlemock/src/gmock-matchers.cc	/^namespace testing {$/;"	n	file:
testing	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^namespace testing {$/;"	n	file:
testing	src/tests/googletest/googlemock/src/gmock.cc	/^namespace testing {$/;"	n	file:
testing	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^namespace testing {$/;"	n	file:
testing	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^namespace testing {$/;"	n	file:
testing	src/tests/googletest/googlemock/test/gmock-internal-utils_test.cc	/^namespace testing {$/;"	n	file:
testing	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^namespace testing {$/;"	n	file:
testing	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^namespace testing {$/;"	n	file:
testing	src/tests/googletest/googlemock/test/gmock-nice-strict_test.cc	/^namespace testing {$/;"	n	file:
testing	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^namespace testing {$/;"	n	file:
testing	src/tests/googletest/googlemock/test/gmock_stress_test.cc	/^namespace testing {$/;"	n	file:
testing	src/tests/googletest/googletest/include/gtest/gtest-death-test.h	/^namespace testing {$/;"	n
testing	src/tests/googletest/googletest/include/gtest/gtest-message.h	/^namespace testing {$/;"	n
testing	src/tests/googletest/googletest/include/gtest/gtest-param-test.h	/^namespace testing {$/;"	n
testing	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^namespace testing {$/;"	n
testing	src/tests/googletest/googletest/include/gtest/gtest-spi.h	/^namespace testing {$/;"	n
testing	src/tests/googletest/googletest/include/gtest/gtest-test-part.h	/^namespace testing {$/;"	n
testing	src/tests/googletest/googletest/include/gtest/gtest.h	/^namespace testing {$/;"	n
testing	src/tests/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h	/^namespace testing {$/;"	n
testing	src/tests/googletest/googletest/include/gtest/internal/gtest-filepath.h	/^namespace testing {$/;"	n
testing	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^namespace testing {$/;"	n
testing	src/tests/googletest/googletest/include/gtest/internal/gtest-linked_ptr.h	/^namespace testing {$/;"	n
testing	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^namespace testing {$/;"	n
testing	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^namespace testing {$/;"	n
testing	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^namespace testing {$/;"	n
testing	src/tests/googletest/googletest/include/gtest/internal/gtest-string.h	/^namespace testing {$/;"	n
testing	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^namespace testing {$/;"	n
testing	src/tests/googletest/googletest/src/gtest-death-test.cc	/^namespace testing {$/;"	n	file:
testing	src/tests/googletest/googletest/src/gtest-filepath.cc	/^namespace testing {$/;"	n	file:
testing	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^namespace testing {$/;"	n
testing	src/tests/googletest/googletest/src/gtest-port.cc	/^namespace testing {$/;"	n	file:
testing	src/tests/googletest/googletest/src/gtest-printers.cc	/^namespace testing {$/;"	n	file:
testing	src/tests/googletest/googletest/src/gtest-test-part.cc	/^namespace testing {$/;"	n	file:
testing	src/tests/googletest/googletest/src/gtest-typed-test.cc	/^namespace testing {$/;"	n	file:
testing	src/tests/googletest/googletest/src/gtest.cc	/^namespace testing {$/;"	n	file:
testing	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^namespace testing {$/;"	n	file:
testing	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^namespace testing {$/;"	n	file:
testing	src/tests/googletest/googletest/test/gtest-listener_test.cc	/^namespace testing {$/;"	n	file:
testing	src/tests/googletest/googletest/test/gtest-options_test.cc	/^namespace testing {$/;"	n	file:
testing	src/tests/googletest/googletest/test/gtest-port_test.cc	/^namespace testing {$/;"	n	file:
testing	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^namespace testing {$/;"	n	file:
testing	src/tests/googletest/googletest/test/gtest-unittest-api_test.cc	/^namespace testing {$/;"	n	file:
testing	src/tests/googletest/googletest/test/gtest_env_var_test_.cc	/^namespace testing {$/;"	n	file:
testing	src/tests/googletest/googletest/test/gtest_environment_test.cc	/^namespace testing {$/;"	n	file:
testing	src/tests/googletest/googletest/test/gtest_repeat_test.cc	/^namespace testing {$/;"	n	file:
testing	src/tests/googletest/googletest/test/gtest_stress_test.cc	/^namespace testing {$/;"	n	file:
testing	src/tests/googletest/googletest/test/gtest_unittest.cc	/^namespace testing {$/;"	n	file:
testing	src/tests/googletest/googletest/test/gtest_unittest.cc	/^namespace testing {$/;"	n	namespace:my_namespace	file:
testing_internal	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^namespace testing_internal {$/;"	n
tests/CMakeFiles/macros_decrypt_with_plaintext_modulus_macros.dir/rule	buildotests/tests/Makefile	/^tests\/CMakeFiles\/macros_decrypt_with_plaintext_modulus_macros.dir\/rule:$/;"	t
tests/googletest/googlemock/CMakeFiles/gmock.dir/rule	buildotests/tests/googletest/googlemock/Makefile	/^tests\/googletest\/googlemock\/CMakeFiles\/gmock.dir\/rule:$/;"	t
tests/googletest/googlemock/CMakeFiles/gmock_main.dir/rule	buildotests/tests/googletest/googlemock/Makefile	/^tests\/googletest\/googlemock\/CMakeFiles\/gmock_main.dir\/rule:$/;"	t
tests/googletest/googlemock/gtest/CMakeFiles/gtest.dir/rule	buildotests/tests/googletest/googlemock/gtest/Makefile	/^tests\/googletest\/googlemock\/gtest\/CMakeFiles\/gtest.dir\/rule:$/;"	t
tests/googletest/googlemock/gtest/CMakeFiles/gtest_main.dir/rule	buildotests/tests/googletest/googlemock/gtest/Makefile	/^tests\/googletest\/googlemock\/gtest\/CMakeFiles\/gtest_main.dir\/rule:$/;"	t
tests_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  TestInfoContainer tests_;$/;"	m	class:testing::internal::ParameterizedTestCaseInfo	typeref:typename:TestInfoContainer
tfhe	src/libtfhe-superaic-core/include/tfhe_generic_templates.h	/^namespace tfhe {$/;"	n
tfhe-fft-nayuki-avx	src/libtfhe-superaic-core/fft_processors/nayuki/CMakeLists.txt	/^    add_library(tfhe-fft-nayuki-avx OBJECT ${SRCS_AVX} ${HEADERS})$/;"	t
tfhe-fft-nayuki-portable	buildotests/Makefile	/^tfhe-fft-nayuki-portable: cmake_check_build_system$/;"	t
tfhe-fft-nayuki-portable	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^tfhe-fft-nayuki-portable: libtfhe-superaic-core\/fft_processors\/nayuki\/CMakeFiles\/tfhe-fft-na/;"	t
tfhe-fft-nayuki-portable	src/libtfhe-superaic-core/fft_processors/nayuki/CMakeLists.txt	/^    add_library(tfhe-fft-nayuki-portable OBJECT ${SRCS_PORTABLE} ${HEADERS})$/;"	t
tfhe-fft-nayuki-portable/fast	buildotests/Makefile	/^tfhe-fft-nayuki-portable\/fast:$/;"	t
tfhe-fft-nayuki-portable/fast	buildotests/libtfhe-superaic-core/fft_processors/nayuki/Makefile	/^tfhe-fft-nayuki-portable\/fast:$/;"	t
tfhe_MuxRotate	src/libtfhe-superaic-acc/tfhe_acc.cpp	/^void TFHE_ACC::tfhe_MuxRotate(TLweSample *result, const TLweSample *accum, const TGswSample *bki/;"	f	class:tfhe_superaic::TFHE_ACC	typeref:typename:void
tfhe_MuxRotate	src/libtfhe-superaic-core/lwe-bootstrapping-functions.cpp	/^EXPORT void tfhe_MuxRotate(TLweSample *result, const TLweSample *accum, const TGswSample *bki, c/;"	f	typeref:typename:EXPORT void
tfhe_MuxRotate_FFT	src/libtfhe-superaic-core/lwe-bootstrapping-functions-fft.cpp	/^void tfhe_MuxRotate_FFT(TLweSample *result, const TLweSample *accum, const TGswSampleFFT *bki, c/;"	f	typeref:typename:void
tfhe_acc.cpp.i	buildotests/libtfhe-superaic-acc/Makefile	/^tfhe_acc.cpp.i:$/;"	t
tfhe_acc.cpp.o	buildotests/libtfhe-superaic-acc/Makefile	/^tfhe_acc.cpp.o:$/;"	t
tfhe_acc.cpp.s	buildotests/libtfhe-superaic-acc/Makefile	/^tfhe_acc.cpp.s:$/;"	t
tfhe_acc.i	buildotests/libtfhe-superaic-acc/Makefile	/^tfhe_acc.i: tfhe_acc.cpp.i$/;"	t
tfhe_acc.o	buildotests/libtfhe-superaic-acc/Makefile	/^tfhe_acc.o: tfhe_acc.cpp.o$/;"	t
tfhe_acc.s	buildotests/libtfhe-superaic-acc/Makefile	/^tfhe_acc.s: tfhe_acc.cpp.s$/;"	t
tfhe_blindRotate	src/libtfhe-superaic-acc/tfhe_acc.cpp	/^void TFHE_ACC::tfhe_blindRotate(TLweSample *accum, const TGswSample *bk, const int32_t *bara, co/;"	f	class:tfhe_superaic::TFHE_ACC	typeref:typename:void
tfhe_blindRotate	src/libtfhe-superaic-core/lwe-bootstrapping-functions.cpp	/^tfhe_blindRotate(TLweSample *accum, const TGswSample *bk, const int32_t *bara, const int32_t n, /;"	f	typeref:typename:EXPORT void
tfhe_blindRotateAndExtract	src/libtfhe-superaic-acc/tfhe_acc.cpp	/^void TFHE_ACC::tfhe_blindRotateAndExtract(LweSample *result,$/;"	f	class:tfhe_superaic::TFHE_ACC	typeref:typename:void
tfhe_blindRotateAndExtract	src/libtfhe-superaic-core/lwe-bootstrapping-functions.cpp	/^EXPORT void tfhe_blindRotateAndExtract(LweSample *result,$/;"	f	typeref:typename:EXPORT void
tfhe_blindRotateAndExtract_FFT	src/libtfhe-superaic-core/lwe-bootstrapping-functions-fft.cpp	/^EXPORT void tfhe_blindRotateAndExtract_FFT(LweSample *result,$/;"	f	typeref:typename:EXPORT void
tfhe_blindRotate_FFT	src/libtfhe-superaic-core/lwe-bootstrapping-functions-fft.cpp	/^EXPORT void tfhe_blindRotate_FFT(TLweSample *accum,$/;"	f	typeref:typename:EXPORT void
tfhe_bootstrap	src/libtfhe-superaic-core/lwe-bootstrapping-functions.cpp	/^EXPORT void tfhe_bootstrap(LweSample *result,$/;"	f	typeref:typename:EXPORT void
tfhe_bootstrap_FFT	src/libtfhe-superaic-core/lwe-bootstrapping-functions-fft.cpp	/^EXPORT void tfhe_bootstrap_FFT(LweSample *result,$/;"	f	typeref:typename:EXPORT void
tfhe_bootstrap_woKS	src/libtfhe-superaic-core/lwe-bootstrapping-functions.cpp	/^EXPORT void tfhe_bootstrap_woKS(LweSample *result,$/;"	f	typeref:typename:EXPORT void
tfhe_bootstrap_woKS_FFT	src/libtfhe-superaic-core/lwe-bootstrapping-functions-fft.cpp	/^EXPORT void tfhe_bootstrap_woKS_FFT(LweSample *result,$/;"	f	typeref:typename:EXPORT void
tfhe_createLweBootstrappingKey	src/libtfhe-superaic-core/lwe-bootstrapping-functions.cpp	/^EXPORT void tfhe_createLweBootstrappingKey($/;"	f	typeref:typename:EXPORT void
tfhe_garbage_collector.cpp.i	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_garbage_collector.cpp.i:$/;"	t
tfhe_garbage_collector.cpp.o	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_garbage_collector.cpp.o:$/;"	t
tfhe_garbage_collector.cpp.s	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_garbage_collector.cpp.s:$/;"	t
tfhe_garbage_collector.i	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_garbage_collector.i: tfhe_garbage_collector.cpp.i$/;"	t
tfhe_garbage_collector.o	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_garbage_collector.o: tfhe_garbage_collector.cpp.o$/;"	t
tfhe_garbage_collector.s	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_garbage_collector.s: tfhe_garbage_collector.cpp.s$/;"	t
tfhe_gate_bootstrapping.cpp.i	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_gate_bootstrapping.cpp.i:$/;"	t
tfhe_gate_bootstrapping.cpp.o	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_gate_bootstrapping.cpp.o:$/;"	t
tfhe_gate_bootstrapping.cpp.s	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_gate_bootstrapping.cpp.s:$/;"	t
tfhe_gate_bootstrapping.i	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_gate_bootstrapping.i: tfhe_gate_bootstrapping.cpp.i$/;"	t
tfhe_gate_bootstrapping.o	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_gate_bootstrapping.o: tfhe_gate_bootstrapping.cpp.o$/;"	t
tfhe_gate_bootstrapping.s	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_gate_bootstrapping.s: tfhe_gate_bootstrapping.cpp.s$/;"	t
tfhe_gate_bootstrapping_structures.cpp.i	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_gate_bootstrapping_structures.cpp.i:$/;"	t
tfhe_gate_bootstrapping_structures.cpp.o	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_gate_bootstrapping_structures.cpp.o:$/;"	t
tfhe_gate_bootstrapping_structures.cpp.s	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_gate_bootstrapping_structures.cpp.s:$/;"	t
tfhe_gate_bootstrapping_structures.i	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_gate_bootstrapping_structures.i: tfhe_gate_bootstrapping_structures.cpp.i$/;"	t
tfhe_gate_bootstrapping_structures.o	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_gate_bootstrapping_structures.o: tfhe_gate_bootstrapping_structures.cpp.o$/;"	t
tfhe_gate_bootstrapping_structures.s	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_gate_bootstrapping_structures.s: tfhe_gate_bootstrapping_structures.cpp.s$/;"	t
tfhe_generic_streams.cpp.i	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_generic_streams.cpp.i:$/;"	t
tfhe_generic_streams.cpp.o	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_generic_streams.cpp.o:$/;"	t
tfhe_generic_streams.cpp.s	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_generic_streams.cpp.s:$/;"	t
tfhe_generic_streams.i	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_generic_streams.i: tfhe_generic_streams.cpp.i$/;"	t
tfhe_generic_streams.o	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_generic_streams.o: tfhe_generic_streams.cpp.o$/;"	t
tfhe_generic_streams.s	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_generic_streams.s: tfhe_generic_streams.cpp.s$/;"	t
tfhe_io.cpp.i	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_io.cpp.i:$/;"	t
tfhe_io.cpp.o	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_io.cpp.o:$/;"	t
tfhe_io.cpp.s	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_io.cpp.s:$/;"	t
tfhe_io.i	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_io.i: tfhe_io.cpp.i$/;"	t
tfhe_io.o	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_io.o: tfhe_io.cpp.o$/;"	t
tfhe_io.s	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_io.s: tfhe_io.cpp.s$/;"	t
tfhe_package.cpp.i	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_package.cpp.i:$/;"	t
tfhe_package.cpp.o	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_package.cpp.o:$/;"	t
tfhe_package.cpp.s	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_package.cpp.s:$/;"	t
tfhe_package.i	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_package.i: tfhe_package.cpp.i$/;"	t
tfhe_package.o	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_package.o: tfhe_package.cpp.o$/;"	t
tfhe_package.s	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_package.s: tfhe_package.cpp.s$/;"	t
tfhe_programmable_bootstrap	src/libtfhe-superaic-core/lwe-bootstrapping-functions.cpp	/^EXPORT void tfhe_programmable_bootstrap(LweSample *result,$/;"	f	typeref:typename:EXPORT void
tfhe_programmable_bootstrap_woKS	src/libtfhe-superaic-acc/tfhe_acc.cpp	/^void TFHE_ACC::tfhe_programmable_bootstrap_woKS(LweSample *result,$/;"	f	class:tfhe_superaic::TFHE_ACC	typeref:typename:void
tfhe_programmable_bootstrap_woKS	src/libtfhe-superaic-core/lwe-bootstrapping-functions.cpp	/^EXPORT void tfhe_programmable_bootstrap_woKS(LweSample *result,$/;"	f	typeref:typename:EXPORT void
tfhe_random_generator_setSeed	src/libtfhe-superaic-core/numeric-functions.cpp	/^EXPORT void tfhe_random_generator_setSeed(uint32_t* values, int32_t size) {$/;"	f	typeref:typename:EXPORT void
tfhe_session.cpp.i	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_session.cpp.i:$/;"	t
tfhe_session.cpp.o	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_session.cpp.o:$/;"	t
tfhe_session.cpp.s	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_session.cpp.s:$/;"	t
tfhe_session.i	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_session.i: tfhe_session.cpp.i$/;"	t
tfhe_session.o	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_session.o: tfhe_session.cpp.o$/;"	t
tfhe_session.s	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_session.s: tfhe_session.cpp.s$/;"	t
tfhe_superaic	src/CMakeLists.txt	/^project(tfhe_superaic)$/;"	p
tfhe_superaic	src/libtfhe-superaic-acc/accs/CPU-ser/acc_cpu_ser.cpp	/^namespace tfhe_superaic {$/;"	n	file:
tfhe_superaic	src/libtfhe-superaic-acc/accs/FPGA-V0/acc_fpga_v0.cpp	/^namespace tfhe_superaic {$/;"	n	file:
tfhe_superaic	src/libtfhe-superaic-acc/accs/QEMU-V0/acc_qemu_v0.cpp	/^namespace tfhe_superaic {$/;"	n	file:
tfhe_superaic	src/libtfhe-superaic-acc/accs/executor.cpp	/^namespace tfhe_superaic {$/;"	n	file:
tfhe_superaic	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^namespace tfhe_superaic {$/;"	n
tfhe_superaic	src/libtfhe-superaic-acc/tfhe_acc.cpp	/^namespace tfhe_superaic {$/;"	n	file:
tfhe_superaic	src/libtfhe-superaic-core/include/tfhe_session.h	/^namespace tfhe_superaic {$/;"	n
tfhe_superaic	src/libtfhe-superaic-core/tfhe_session.cpp	/^namespace tfhe_superaic {$/;"	n	file:
tfhe_superaic	src/libtfhe-superaic-server/include/tfhe_superaic_server.h	/^namespace tfhe_superaic {$/;"	n
tfhe_superaic	src/libtfhe-superaic-server/tfhe_superaic_server.cpp	/^namespace tfhe_superaic {$/;"	n	file:
tfhe_superaic_acc	buildotests/Makefile	/^tfhe_superaic_acc: cmake_check_build_system$/;"	t
tfhe_superaic_acc	buildotests/libtfhe-superaic-acc/Makefile	/^tfhe_superaic_acc: libtfhe-superaic-acc\/CMakeFiles\/tfhe_superaic_acc.dir\/rule$/;"	t
tfhe_superaic_acc	src/libtfhe-superaic-acc/CMakeLists.txt	/^add_library(tfhe_superaic_acc SHARED)$/;"	t
tfhe_superaic_acc	src/libtfhe-superaic-acc/CMakeLists.txt	/^project(tfhe_superaic_acc)$/;"	p
tfhe_superaic_acc/fast	buildotests/Makefile	/^tfhe_superaic_acc\/fast:$/;"	t
tfhe_superaic_acc/fast	buildotests/libtfhe-superaic-acc/Makefile	/^tfhe_superaic_acc\/fast:$/;"	t
tfhe_superaic_client	buildotests/Makefile	/^tfhe_superaic_client: cmake_check_build_system$/;"	t
tfhe_superaic_client	buildotests/libtfhe-superaic-client/Makefile	/^tfhe_superaic_client: libtfhe-superaic-client\/CMakeFiles\/tfhe_superaic_client.dir\/rule$/;"	t
tfhe_superaic_client	src/libtfhe-superaic-client/CMakeLists.txt	/^add_library(tfhe_superaic_client SHARED)$/;"	t
tfhe_superaic_client	src/libtfhe-superaic-client/CMakeLists.txt	/^project(tfhe_superaic_client)$/;"	p
tfhe_superaic_client.c.i	buildotests/libtfhe-superaic-client/Makefile	/^tfhe_superaic_client.c.i:$/;"	t
tfhe_superaic_client.c.o	buildotests/libtfhe-superaic-client/Makefile	/^tfhe_superaic_client.c.o:$/;"	t
tfhe_superaic_client.c.s	buildotests/libtfhe-superaic-client/Makefile	/^tfhe_superaic_client.c.s:$/;"	t
tfhe_superaic_client.i	buildotests/libtfhe-superaic-client/Makefile	/^tfhe_superaic_client.i: tfhe_superaic_client.c.i$/;"	t
tfhe_superaic_client.o	buildotests/libtfhe-superaic-client/Makefile	/^tfhe_superaic_client.o: tfhe_superaic_client.c.o$/;"	t
tfhe_superaic_client.s	buildotests/libtfhe-superaic-client/Makefile	/^tfhe_superaic_client.s: tfhe_superaic_client.c.s$/;"	t
tfhe_superaic_client/fast	buildotests/Makefile	/^tfhe_superaic_client\/fast:$/;"	t
tfhe_superaic_client/fast	buildotests/libtfhe-superaic-client/Makefile	/^tfhe_superaic_client\/fast:$/;"	t
tfhe_superaic_core	buildotests/Makefile	/^tfhe_superaic_core: cmake_check_build_system$/;"	t
tfhe_superaic_core	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_superaic_core: libtfhe-superaic-core\/CMakeFiles\/tfhe_superaic_core.dir\/rule$/;"	t
tfhe_superaic_core	src/libtfhe-superaic-core/CMakeLists.txt	/^add_library(tfhe_superaic_core SHARED)$/;"	t
tfhe_superaic_core/fast	buildotests/Makefile	/^tfhe_superaic_core\/fast:$/;"	t
tfhe_superaic_core/fast	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_superaic_core\/fast:$/;"	t
tfhe_superaic_driver	src/driver/CMakeLists.txt	/^add_library(tfhe_superaic_driver INTERFACE)$/;"	t
tfhe_superaic_examples	src/examples/CMakeLists.txt	/^project(tfhe_superaic_examples)$/;"	p
tfhe_superaic_server	buildotests/Makefile	/^tfhe_superaic_server: cmake_check_build_system$/;"	t
tfhe_superaic_server	buildotests/libtfhe-superaic-server/Makefile	/^tfhe_superaic_server: libtfhe-superaic-server\/CMakeFiles\/tfhe_superaic_server.dir\/rule$/;"	t
tfhe_superaic_server	src/libtfhe-superaic-server/CMakeLists.txt	/^add_library(tfhe_superaic_server SHARED)$/;"	t
tfhe_superaic_server	src/libtfhe-superaic-server/CMakeLists.txt	/^project(tfhe_superaic_server)$/;"	p
tfhe_superaic_server.cpp.i	buildotests/libtfhe-superaic-server/Makefile	/^tfhe_superaic_server.cpp.i:$/;"	t
tfhe_superaic_server.cpp.o	buildotests/libtfhe-superaic-server/Makefile	/^tfhe_superaic_server.cpp.o:$/;"	t
tfhe_superaic_server.cpp.s	buildotests/libtfhe-superaic-server/Makefile	/^tfhe_superaic_server.cpp.s:$/;"	t
tfhe_superaic_server.i	buildotests/libtfhe-superaic-server/Makefile	/^tfhe_superaic_server.i: tfhe_superaic_server.cpp.i$/;"	t
tfhe_superaic_server.o	buildotests/libtfhe-superaic-server/Makefile	/^tfhe_superaic_server.o: tfhe_superaic_server.cpp.o$/;"	t
tfhe_superaic_server.s	buildotests/libtfhe-superaic-server/Makefile	/^tfhe_superaic_server.s: tfhe_superaic_server.cpp.s$/;"	t
tfhe_superaic_server/fast	buildotests/Makefile	/^tfhe_superaic_server\/fast:$/;"	t
tfhe_superaic_server/fast	buildotests/libtfhe-superaic-server/Makefile	/^tfhe_superaic_server\/fast:$/;"	t
tfhe_superaic_torus.c.i	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_superaic_torus.c.i:$/;"	t
tfhe_superaic_torus.c.o	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_superaic_torus.c.o:$/;"	t
tfhe_superaic_torus.c.s	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_superaic_torus.c.s:$/;"	t
tfhe_superaic_torus.i	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_superaic_torus.i: tfhe_superaic_torus.c.i$/;"	t
tfhe_superaic_torus.o	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_superaic_torus.o: tfhe_superaic_torus.c.o$/;"	t
tfhe_superaic_torus.s	buildotests/libtfhe-superaic-core/Makefile	/^tfhe_superaic_torus.s: tfhe_superaic_torus.c.s$/;"	t
tgsw-fft-operations.cpp.i	buildotests/libtfhe-superaic-core/Makefile	/^tgsw-fft-operations.cpp.i:$/;"	t
tgsw-fft-operations.cpp.o	buildotests/libtfhe-superaic-core/Makefile	/^tgsw-fft-operations.cpp.o:$/;"	t
tgsw-fft-operations.cpp.s	buildotests/libtfhe-superaic-core/Makefile	/^tgsw-fft-operations.cpp.s:$/;"	t
tgsw-fft-operations.i	buildotests/libtfhe-superaic-core/Makefile	/^tgsw-fft-operations.i: tgsw-fft-operations.cpp.i$/;"	t
tgsw-fft-operations.o	buildotests/libtfhe-superaic-core/Makefile	/^tgsw-fft-operations.o: tgsw-fft-operations.cpp.o$/;"	t
tgsw-fft-operations.s	buildotests/libtfhe-superaic-core/Makefile	/^tgsw-fft-operations.s: tgsw-fft-operations.cpp.s$/;"	t
tgsw-functions.cpp.i	buildotests/libtfhe-superaic-core/Makefile	/^tgsw-functions.cpp.i:$/;"	t
tgsw-functions.cpp.o	buildotests/libtfhe-superaic-core/Makefile	/^tgsw-functions.cpp.o:$/;"	t
tgsw-functions.cpp.s	buildotests/libtfhe-superaic-core/Makefile	/^tgsw-functions.cpp.s:$/;"	t
tgsw-functions.i	buildotests/libtfhe-superaic-core/Makefile	/^tgsw-functions.i: tgsw-functions.cpp.i$/;"	t
tgsw-functions.o	buildotests/libtfhe-superaic-core/Makefile	/^tgsw-functions.o: tgsw-functions.cpp.o$/;"	t
tgsw-functions.s	buildotests/libtfhe-superaic-core/Makefile	/^tgsw-functions.s: tgsw-functions.cpp.s$/;"	t
tgsw.cpp.i	buildotests/libtfhe-superaic-core/Makefile	/^tgsw.cpp.i:$/;"	t
tgsw.cpp.o	buildotests/libtfhe-superaic-core/Makefile	/^tgsw.cpp.o:$/;"	t
tgsw.cpp.s	buildotests/libtfhe-superaic-core/Makefile	/^tgsw.cpp.s:$/;"	t
tgsw.i	buildotests/libtfhe-superaic-core/Makefile	/^tgsw.i: tgsw.cpp.i$/;"	t
tgsw.o	buildotests/libtfhe-superaic-core/Makefile	/^tgsw.o: tgsw.cpp.o$/;"	t
tgsw.s	buildotests/libtfhe-superaic-core/Makefile	/^tgsw.s: tgsw.cpp.s$/;"	t
tgswSampleUniform	src/tests/io_test.cpp	/^    void tgswSampleUniform(TGswSample* a, const TGswParams* params) {$/;"	f	namespace:__anon2d72c1c60111	typeref:typename:void
tgsw_Bgbit	src/libtfhe-superaic-core/include/classic_PBS_parameters.h	/^    const int32_t tgsw_Bgbit; \/\/\/< log of decomposition base (base must be a power of 2)$/;"	m	struct:ClassicPBSParameters	typeref:typename:const int32_t
tgsw_Bgbit	src/tests/classic_PBS_parameters.cpp	/^    const int32_t tgsw_Bgbit; \/\/\/< log of decomposition base (base must be a power of 2)$/;"	m	struct:ClassicPBSParameters	typeref:typename:const int32_t	file:
tgsw_decompose_length	src/libtfhe-superaic-core/include/classic_PBS_parameters.h	/^    const int32_t tgsw_decompose_length; \/\/\/< B^{decompose_length} | q$/;"	m	struct:ClassicPBSParameters	typeref:typename:const int32_t
tgsw_decompose_length	src/tests/classic_PBS_parameters.cpp	/^    const int32_t tgsw_decompose_length; \/\/\/< B^{decompose_length} | q$/;"	m	struct:ClassicPBSParameters	typeref:typename:const int32_t	file:
tgsw_key	src/libtfhe-superaic-core/include/tfhe_gate_bootstrapping_structures.h	/^    const TGswKey *tgsw_key;$/;"	m	struct:TFheGateBootstrappingSecretKeySet	typeref:typename:const TGswKey *
tgsw_params	src/libtfhe-superaic-core/include/tfhe_garbage_collector.h	/^    std::vector<TGswParams *> tgsw_params;$/;"	m	class:TfheGarbageCollector	typeref:typename:std::vector<TGswParams * >
tgsw_params	src/libtfhe-superaic-core/include/tfhe_gate_bootstrapping_structures.h	/^    const TGswParams *const tgsw_params;$/;"	m	struct:TFheGateBootstrappingParameterSet	typeref:typename:const TGswParams * const
tgswkey1024_1	src/tests/io_test.cpp	/^    const TGswKey* tgswkey1024_1 = new_random_tgsw_key(tgswparams1024_1);$/;"	v	namespace:__anon2d72c1c60111	typeref:typename:const TGswKey *
tgswkey128_2	src/tests/io_test.cpp	/^    const TGswKey* tgswkey128_2 = new_random_tgsw_key(tgswparams128_2);$/;"	v	namespace:__anon2d72c1c60111	typeref:typename:const TGswKey *
tgswparams1024_1	src/tests/ACC_test.cpp	/^    const TGswParams* tgswparams1024_1 = new_TGswParams(3,15,tlweparams1024_1);$/;"	v	namespace:__anonef2481d50111	typeref:typename:const TGswParams *
tgswparams1024_1	src/tests/FPGA_ACC_test.cpp	/^    const TGswParams* tgswparams1024_1 = new_TGswParams(3,15,tlweparams1024_1);$/;"	v	namespace:__anon88d438720111	typeref:typename:const TGswParams *
tgswparams1024_1	src/tests/QEMU_test.cpp	/^    const TGswParams* tgswparams1024_1 = new_TGswParams(3,15,tlweparams1024_1);$/;"	v	namespace:__anon4f389dc60111	typeref:typename:const TGswParams *
tgswparams1024_1	src/tests/io_test.cpp	/^    const TGswParams* tgswparams1024_1 = new_TGswParams(3,15,tlweparams1024_1);$/;"	v	namespace:__anon2d72c1c60111	typeref:typename:const TGswParams *
tgswparams1024_1	src/tests/session_test.cpp	/^    const TGswParams* tgswparams1024_1 = new_TGswParams(3,15,tlweparams1024_1);$/;"	v	namespace:__anon23f859320111	typeref:typename:const TGswParams *
tgswparams128_2	src/tests/ACC_test.cpp	/^    const TGswParams* tgswparams128_2 = new_TGswParams(7,4,tlweparams128_2);$/;"	v	namespace:__anonef2481d50111	typeref:typename:const TGswParams *
tgswparams128_2	src/tests/FPGA_ACC_test.cpp	/^    const TGswParams* tgswparams128_2 = new_TGswParams(7,4,tlweparams128_2);$/;"	v	namespace:__anon88d438720111	typeref:typename:const TGswParams *
tgswparams128_2	src/tests/QEMU_test.cpp	/^    const TGswParams* tgswparams128_2 = new_TGswParams(7,4,tlweparams128_2);$/;"	v	namespace:__anon4f389dc60111	typeref:typename:const TGswParams *
tgswparams128_2	src/tests/io_test.cpp	/^    const TGswParams* tgswparams128_2 = new_TGswParams(7,4,tlweparams128_2);$/;"	v	namespace:__anon2d72c1c60111	typeref:typename:const TGswParams *
tgswparams128_2	src/tests/session_test.cpp	/^    const TGswParams* tgswparams128_2 = new_TGswParams(7,4,tlweparams128_2);$/;"	v	namespace:__anon23f859320111	typeref:typename:const TGswParams *
threadCount_	src/muduo/examples/protobuf/rpcbalancer/balancer.cc	/^  AtomicInt32 threadCount_;$/;"	m	class:Balancer	typeref:typename:AtomicInt32	file:
threadCount_	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^  AtomicInt32 threadCount_;$/;"	m	class:Balancer	typeref:typename:AtomicInt32	file:
threadFunc	src/muduo/examples/procmon/dummyload.cc	/^void threadFunc()$/;"	f	typeref:typename:void
threadFunc	src/muduo/muduo/base/AsyncLogging.cc	/^void AsyncLogging::threadFunc()$/;"	f	class:AsyncLogging	typeref:typename:void
threadFunc	src/muduo/muduo/base/tests/BlockingQueue_bench.cc	/^  void threadFunc()$/;"	f	class:Bench	typeref:typename:void	file:
threadFunc	src/muduo/muduo/base/tests/BlockingQueue_bench2.cc	/^  void threadFunc(int id)$/;"	f	class:Bench	typeref:typename:void	file:
threadFunc	src/muduo/muduo/base/tests/BlockingQueue_test.cc	/^  void threadFunc()$/;"	f	class:Test	typeref:typename:void	file:
threadFunc	src/muduo/muduo/base/tests/BoundedBlockingQueue_test.cc	/^  void threadFunc()$/;"	f	class:Test	typeref:typename:void	file:
threadFunc	src/muduo/muduo/base/tests/Mutex_test.cc	/^void threadFunc()$/;"	f	typeref:typename:void
threadFunc	src/muduo/muduo/base/tests/SingletonThreadLocal_test.cc	/^void threadFunc(const char* changeTo)$/;"	f	typeref:typename:void
threadFunc	src/muduo/muduo/base/tests/Singleton_test.cc	/^void threadFunc()$/;"	f	typeref:typename:void
threadFunc	src/muduo/muduo/base/tests/ThreadLocalSingleton_test.cc	/^void threadFunc(const char* changeTo)$/;"	f	typeref:typename:void
threadFunc	src/muduo/muduo/base/tests/ThreadLocal_test.cc	/^void threadFunc()$/;"	f	typeref:typename:void
threadFunc	src/muduo/muduo/base/tests/Thread_bench.cc	/^  void threadFunc()$/;"	f	class:Bench	typeref:typename:void	file:
threadFunc	src/muduo/muduo/base/tests/Thread_bench.cc	/^void threadFunc()$/;"	f	typeref:typename:void
threadFunc	src/muduo/muduo/base/tests/Thread_test.cc	/^void threadFunc()$/;"	f	typeref:typename:void
threadFunc	src/muduo/muduo/net/EventLoopThread.cc	/^void EventLoopThread::threadFunc()$/;"	f	class:EventLoopThread	typeref:typename:void
threadFunc	src/muduo/muduo/net/tests/EventLoop_unittest.cc	/^void threadFunc()$/;"	f	typeref:typename:void
threadFunc	src/muduo/muduo/net/tests/TcpClient_reg2.cc	/^void threadFunc(EventLoop* loop)$/;"	f	typeref:typename:void
threadFunc2	src/muduo/muduo/base/tests/Thread_bench.cc	/^void threadFunc2(muduo::Timestamp start)$/;"	f	typeref:typename:void
threadFunc2	src/muduo/muduo/base/tests/Thread_test.cc	/^void threadFunc2(int x)$/;"	f	typeref:typename:void
threadFunc3	src/muduo/muduo/base/tests/Thread_test.cc	/^void threadFunc3()$/;"	f	typeref:typename:void
threadId_	src/muduo/muduo/net/EventLoop.h	/^  const pid_t threadId_;$/;"	m	class:muduo::net::EventLoop	typeref:typename:const pid_t
threadInit	src/muduo/examples/asio/chat/server_threaded_highperformance.cc	/^  void threadInit(EventLoop* loop)$/;"	f	class:ChatServer	typeref:typename:void	file:
threadInitCallback_	src/muduo/muduo/base/ThreadPool.h	/^  Task threadInitCallback_;$/;"	m	class:muduo::ThreadPool	typeref:typename:Task
threadInitCallback_	src/muduo/muduo/net/TcpServer.h	/^  ThreadInitCallback threadInitCallback_;$/;"	m	class:muduo::net::TcpServer	typeref:typename:ThreadInitCallback
threadPool	src/muduo/muduo/net/TcpServer.h	/^  std::shared_ptr<EventLoopThreadPool> threadPool()$/;"	f	class:muduo::net::TcpServer	typeref:typename:std::shared_ptr<EventLoopThreadPool>
threadPool_	src/muduo/examples/pingpong/client.cc	/^  EventLoopThreadPool threadPool_;$/;"	m	class:Client	typeref:typename:EventLoopThreadPool	file:
threadPool_	src/muduo/examples/sudoku/server_hybrid.cc	/^  ThreadPool threadPool_;$/;"	m	class:SudokuServer	typeref:typename:ThreadPool	file:
threadPool_	src/muduo/examples/sudoku/server_prod.cc	/^  ThreadPool threadPool_;$/;"	m	class:SudokuServer	typeref:typename:ThreadPool	file:
threadPool_	src/muduo/examples/sudoku/server_threadpool.cc	/^  ThreadPool threadPool_;$/;"	m	class:SudokuServer	typeref:typename:ThreadPool	file:
threadPool_	src/muduo/muduo/net/TcpServer.h	/^  std::shared_ptr<EventLoopThreadPool> threadPool_;$/;"	m	class:muduo::net::TcpServer	typeref:typename:std::shared_ptr<EventLoopThreadPool>
threadStat	src/muduo/muduo/base/ProcessInfo.cc	/^string ProcessInfo::threadStat()$/;"	f	class:ProcessInfo	typeref:typename:string
thread_	src/muduo/muduo/base/AsyncLogging.h	/^  muduo::Thread thread_;$/;"	m	class:muduo::AsyncLogging	typeref:typename:muduo::Thread
thread_	src/muduo/muduo/net/EventLoopThread.h	/^  Thread thread_;$/;"	m	class:muduo::net::EventLoopThread	typeref:typename:Thread
thread_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  AutoHandle thread_;$/;"	m	class:testing::internal::ThreadWithParamBase	typeref:typename:AutoHandle
thread_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  pthread_t thread_;  \/\/ The native thread object.$/;"	m	class:testing::internal::ThreadWithParam	typeref:typename:pthread_t
thread_	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^      thread_;$/;"	m	class:DeathTestAndMultiThreadsTest	typeref:typename:testing::internal::scoped_ptr<ThreadWithParam<SpawnThreadNotifications * >>	file:
thread_bench	src/muduo/muduo/base/tests/CMakeLists.txt	/^add_executable(thread_bench Thread_bench.cc)$/;"	t
thread_can_start_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  Notification* const thread_can_start_;$/;"	m	class:testing::internal::ThreadWithParam	typeref:typename:Notification * const
thread_can_start_	src/tests/googletest/googletest/src/gtest-port.cc	/^    Notification* thread_can_start_;$/;"	m	struct:testing::internal::__anon142d171a0211::ThreadWithParamSupport::ThreadMainParam	typeref:typename:Notification *	file:
thread_id	src/muduo/examples/ace/logging/logrecord.proto	/^  required int32 thread_id = 3;$/;"	f	message:logging.LogRecord	typeref:typename:int32
thread_map_mutex_	src/tests/googletest/googletest/src/gtest-port.cc	/^  static Mutex thread_map_mutex_;$/;"	m	class:testing::internal::ThreadLocalRegistryImpl	typeref:typename:Mutex	file:
thread_test	src/muduo/muduo/base/tests/CMakeLists.txt	/^add_executable(thread_test Thread_test.cc)$/;"	t
threadlocal_test	src/muduo/muduo/base/tests/CMakeLists.txt	/^add_executable(threadlocal_test ThreadLocal_test.cc)$/;"	t
threadlocalsingleton_test	src/muduo/muduo/base/tests/CMakeLists.txt	/^add_executable(threadlocalsingleton_test ThreadLocalSingleton_test.cc)$/;"	t
threadpool_test	src/muduo/muduo/base/tests/CMakeLists.txt	/^add_executable(threadpool_test ThreadPool_test.cc)$/;"	t
threads	src/muduo/examples/memcached/server/MemcacheServer.h	/^    int threads;$/;"	m	struct:MemcacheServer::Options	typeref:typename:int
threads	src/muduo/muduo/base/ProcessInfo.cc	/^std::vector<pid_t> ProcessInfo::threads()$/;"	f	class:ProcessInfo	typeref:typename:std::vector<pid_t>
threads	src/muduo/muduo/net/inspect/ProcessInspector.cc	/^string ProcessInspector::threads(HttpRequest::Method, const Inspector::ArgList&)$/;"	f	class:ProcessInspector	typeref:typename:string
threads_	src/muduo/muduo/base/ThreadPool.h	/^  std::vector<std::unique_ptr<muduo::Thread>> threads_;$/;"	m	class:muduo::ThreadPool	typeref:typename:std::vector<std::unique_ptr<muduo::Thread>>
threads_	src/muduo/muduo/base/tests/BlockingQueue_bench.cc	/^  std::vector<std::unique_ptr<muduo::Thread>> threads_;$/;"	m	class:Bench	typeref:typename:std::vector<std::unique_ptr<muduo::Thread>>	file:
threads_	src/muduo/muduo/base/tests/BlockingQueue_bench2.cc	/^  std::vector<std::unique_ptr<muduo::Thread>> threads_;$/;"	m	class:Bench	typeref:typename:std::vector<std::unique_ptr<muduo::Thread>>	file:
threads_	src/muduo/muduo/base/tests/BlockingQueue_test.cc	/^  std::vector<std::unique_ptr<muduo::Thread>> threads_;$/;"	m	class:Test	typeref:typename:std::vector<std::unique_ptr<muduo::Thread>>	file:
threads_	src/muduo/muduo/base/tests/BoundedBlockingQueue_test.cc	/^  std::vector<std::unique_ptr<muduo::Thread>> threads_;$/;"	m	class:Test	typeref:typename:std::vector<std::unique_ptr<muduo::Thread>>	file:
threads_	src/muduo/muduo/base/tests/Thread_bench.cc	/^  std::vector<std::unique_ptr<muduo::Thread>> threads_;$/;"	m	class:Bench	typeref:typename:std::vector<std::unique_ptr<muduo::Thread>>	file:
threads_	src/muduo/muduo/net/EventLoopThreadPool.h	/^  std::vector<std::unique_ptr<EventLoopThread>> threads_;$/;"	m	class:muduo::net::EventLoopThreadPool	typeref:typename:std::vector<std::unique_ptr<EventLoopThread>>
threshold_	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  int threshold_;$/;"	m	class:testing::gmock_matchers_test::IsGreaterThan	typeref:typename:int	file:
throttle	src/muduo/examples/wordcount/hasher.cc	/^  void throttle()$/;"	f	class:SendThrottler	typeref:typename:void	file:
throw_on_failure	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  bool throw_on_failure;$/;"	m	struct:testing::Flags	typeref:typename:bool	file:
throw_on_failure_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  bool throw_on_failure_;$/;"	m	class:testing::internal::GTestFlagSaver	typeref:typename:bool
tick	src/muduo/examples/procmon/procmon.cc	/^  void tick()$/;"	f	class:Procmon	typeref:typename:void	file:
tick	src/muduo/examples/sudoku/loadtest.cc	/^  void tick(int rps)$/;"	f	class:SudokuLoadtest	typeref:typename:void	file:
ticks_	src/muduo/examples/procmon/procmon.cc	/^  int ticks_;$/;"	m	class:Procmon	typeref:typename:int	file:
ticks_	src/muduo/examples/sudoku/loadtest.cc	/^  int64_t ticks_;$/;"	m	class:SudokuLoadtest	typeref:typename:int64_t	file:
tid	src/muduo/muduo/base/CurrentThread.h	/^  inline int tid()$/;"	f	namespace:muduo::CurrentThread	typeref:typename:int
tid	src/muduo/muduo/base/Thread.h	/^  pid_t tid() const { return tid_; }$/;"	f	class:muduo::Thread	typeref:typename:pid_t
tidString	src/muduo/muduo/base/CurrentThread.h	/^  inline const char* tidString() \/\/ for logging$/;"	f	namespace:muduo::CurrentThread	typeref:typename:const char *
tidStringLength	src/muduo/muduo/base/CurrentThread.h	/^  inline int tidStringLength() \/\/ for logging$/;"	f	namespace:muduo::CurrentThread	typeref:typename:int
tid_	src/muduo/muduo/base/Thread.cc	/^  pid_t* tid_;$/;"	m	struct:muduo::detail::ThreadData	typeref:typename:pid_t *	file:
tid_	src/muduo/muduo/base/Thread.h	/^  pid_t      tid_;$/;"	m	class:muduo::Thread	typeref:typename:pid_t
tie	src/muduo/muduo/net/Channel.cc	/^void Channel::tie(const std::shared_ptr<void>& obj)$/;"	f	class:Channel	typeref:typename:void
tie_	src/muduo/muduo/net/Channel.h	/^  std::weak_ptr<void> tie_;$/;"	m	class:muduo::net::Channel	typeref:typename:std::weak_ptr<void>
tied_	src/muduo/muduo/net/Channel.h	/^  bool tied_;$/;"	m	class:muduo::net::Channel	typeref:typename:bool
timeCallback	src/muduo/contrib/hiredis/mrediscli.cc	/^void timeCallback(hiredis::Hiredis* c, redisReply* reply)$/;"	f	typeref:typename:void
timeDifference	src/muduo/muduo/base/Timestamp.h	/^inline double timeDifference(Timestamp high, Timestamp low)$/;"	f	namespace:muduo	typeref:typename:double
timePublish	src/muduo/examples/hub/hub.cc	/^  void timePublish()$/;"	f	class:pubsub::PubSubServer	typeref:typename:void	file:
time_	src/muduo/muduo/base/Logging.h	/^  Timestamp time_;$/;"	m	class:muduo::Logger::Impl	typeref:typename:Timestamp
timeout	src/muduo/muduo/net/tests/TcpClient_reg1.cc	/^void timeout()$/;"	f	typeref:typename:void
timeout_	src/muduo/examples/pingpong/client.cc	/^  int timeout_;$/;"	m	class:Client	typeref:typename:int	file:
timer	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockClient.java	/^    private final Timer timer;$/;"	f	class:MockClient	file:
timerActive_	src/muduo/examples/cdns/Resolver.h	/^  bool timerActive_;$/;"	m	class:cdns::Resolver	typeref:typename:bool
timerCallback	src/muduo/examples/curl/Curl.cc	/^int Curl::timerCallback(CURLM* curlm, long ms, void* userp)$/;"	f	class:Curl	typeref:typename:int
timerQueue_	src/muduo/muduo/net/EventLoop.h	/^  std::unique_ptr<TimerQueue> timerQueue_;$/;"	m	class:muduo::net::EventLoop	typeref:typename:std::unique_ptr<TimerQueue>
timer_	src/muduo/muduo/net/TimerId.h	/^  Timer* timer_;$/;"	m	class:muduo::net::TimerId	typeref:typename:Timer *
timerfdChannel_	src/muduo/muduo/net/TimerQueue.h	/^  Channel timerfdChannel_;$/;"	m	class:muduo::net::TimerQueue	typeref:typename:Channel
timerfdChannel_	src/muduo/muduo/net/tests/Channel_test.cc	/^  Channel timerfdChannel_;$/;"	m	class:PeriodicTimer	typeref:typename:Channel	file:
timerfd_	src/muduo/muduo/net/TimerQueue.h	/^  const int timerfd_;$/;"	m	class:muduo::net::TimerQueue	typeref:typename:const int
timerfd_	src/muduo/muduo/net/tests/Channel_test.cc	/^  const int timerfd_;$/;"	m	class:PeriodicTimer	typeref:typename:const int	file:
timerqueue_unittest	src/muduo/muduo/net/tests/CMakeLists.txt	/^add_executable(timerqueue_unittest TimerQueue_unittest.cc)$/;"	t
timers_	src/muduo/muduo/net/TimerQueue.h	/^  TimerList timers_;$/;"	m	class:muduo::net::TimerQueue	typeref:typename:TimerList
timespec_sub	src/libtfhe-superaic-acc/tfhe_acc.cpp	/^void TFHE_ACC::timespec_sub(struct timespec &t1, struct timespec &t2, struct timespec &t3) {$/;"	f	class:tfhe_superaic::TFHE_ACC	typeref:typename:void
timestamp	src/muduo/examples/ace/logging/logrecord.proto	/^  required int64 timestamp = 4; \/\/ microseconds sinch epoch$/;"	f	message:logging.LogRecord	typeref:typename:int64
timestamp_unittest	src/muduo/muduo/base/tests/CMakeLists.txt	/^add_executable(timestamp_unittest Timestamp_unittest.cc)$/;"	t
timezone_unittest	src/muduo/muduo/base/tests/CMakeLists.txt	/^add_executable(timezone_unittest TimeZone_unittest.cc)$/;"	t
timezone_util	src/muduo/muduo/base/tests/CMakeLists.txt	/^add_executable(timezone_util TimeZone_util.cc)$/;"	t
title	src/libtfhe-superaic-core/tfhe_generic_streams.cpp	/^    string title;$/;"	m	class:MapTextModeProperties	typeref:typename:string	file:
tlwe-fft-operations.cpp.i	buildotests/libtfhe-superaic-core/Makefile	/^tlwe-fft-operations.cpp.i:$/;"	t
tlwe-fft-operations.cpp.o	buildotests/libtfhe-superaic-core/Makefile	/^tlwe-fft-operations.cpp.o:$/;"	t
tlwe-fft-operations.cpp.s	buildotests/libtfhe-superaic-core/Makefile	/^tlwe-fft-operations.cpp.s:$/;"	t
tlwe-fft-operations.i	buildotests/libtfhe-superaic-core/Makefile	/^tlwe-fft-operations.i: tlwe-fft-operations.cpp.i$/;"	t
tlwe-fft-operations.o	buildotests/libtfhe-superaic-core/Makefile	/^tlwe-fft-operations.o: tlwe-fft-operations.cpp.o$/;"	t
tlwe-fft-operations.s	buildotests/libtfhe-superaic-core/Makefile	/^tlwe-fft-operations.s: tlwe-fft-operations.cpp.s$/;"	t
tlwe-functions.cpp.i	buildotests/libtfhe-superaic-core/Makefile	/^tlwe-functions.cpp.i:$/;"	t
tlwe-functions.cpp.o	buildotests/libtfhe-superaic-core/Makefile	/^tlwe-functions.cpp.o:$/;"	t
tlwe-functions.cpp.s	buildotests/libtfhe-superaic-core/Makefile	/^tlwe-functions.cpp.s:$/;"	t
tlwe-functions.i	buildotests/libtfhe-superaic-core/Makefile	/^tlwe-functions.i: tlwe-functions.cpp.i$/;"	t
tlwe-functions.o	buildotests/libtfhe-superaic-core/Makefile	/^tlwe-functions.o: tlwe-functions.cpp.o$/;"	t
tlwe-functions.s	buildotests/libtfhe-superaic-core/Makefile	/^tlwe-functions.s: tlwe-functions.cpp.s$/;"	t
tlwe.cpp.i	buildotests/libtfhe-superaic-core/Makefile	/^tlwe.cpp.i:$/;"	t
tlwe.cpp.o	buildotests/libtfhe-superaic-core/Makefile	/^tlwe.cpp.o:$/;"	t
tlwe.cpp.s	buildotests/libtfhe-superaic-core/Makefile	/^tlwe.cpp.s:$/;"	t
tlwe.i	buildotests/libtfhe-superaic-core/Makefile	/^tlwe.i: tlwe.cpp.i$/;"	t
tlwe.o	buildotests/libtfhe-superaic-core/Makefile	/^tlwe.o: tlwe.cpp.o$/;"	t
tlwe.s	buildotests/libtfhe-superaic-core/Makefile	/^tlwe.s: tlwe.cpp.s$/;"	t
tlweSampleUniform	src/tests/io_test.cpp	/^    void tlweSampleUniform(TLweSample* a, const TLweParams* params) {$/;"	f	namespace:__anon2d72c1c60111	typeref:typename:void
tlwe_alpha_max	src/libtfhe-superaic-core/include/classic_PBS_parameters.h	/^    const double tlwe_alpha_max; \/\/\/< maximal noise s.t. we can decrypt$/;"	m	struct:ClassicPBSParameters	typeref:typename:const double
tlwe_alpha_max	src/tests/classic_PBS_parameters.cpp	/^    const double tlwe_alpha_max; \/\/\/< maximal noise s.t. we can decrypt$/;"	m	struct:ClassicPBSParameters	typeref:typename:const double	file:
tlwe_alpha_min	src/libtfhe-superaic-core/include/classic_PBS_parameters.h	/^    const double tlwe_alpha_min; \/\/\/< minimal noise s.t. the tlwe sample is secure$/;"	m	struct:ClassicPBSParameters	typeref:typename:const double
tlwe_alpha_min	src/tests/classic_PBS_parameters.cpp	/^    const double tlwe_alpha_min; \/\/\/< minimal noise s.t. the tlwe sample is secure$/;"	m	struct:ClassicPBSParameters	typeref:typename:const double	file:
tlwe_dimension	src/libtfhe-superaic-core/include/classic_PBS_parameters.h	/^    const int32_t tlwe_dimension; \/\/\/< a power of 2: degree of the polynomials$/;"	m	struct:ClassicPBSParameters	typeref:typename:const int32_t
tlwe_dimension	src/tests/classic_PBS_parameters.cpp	/^    const int32_t tlwe_dimension; \/\/\/< a power of 2: degree of the polynomials$/;"	m	struct:ClassicPBSParameters	typeref:typename:const int32_t	file:
tlwe_key	src/libtfhe-superaic-core/include/tgsw.h	/^    TLweKey tlwe_key; \/\/ 里面有指向TLweParams的指针，不能在销毁TGswKey对象之前/;"	m	struct:TGswKey	typeref:typename:TLweKey
tlwe_params	src/libtfhe-superaic-core/include/tfhe_garbage_collector.h	/^    std::vector<TLweParams *> tlwe_params;$/;"	m	class:TfheGarbageCollector	typeref:typename:std::vector<TLweParams * >
tlwe_params	src/libtfhe-superaic-core/include/tgsw.h	/^    const TLweParams *tlwe_params; \/\/\/< Params of each row$/;"	m	struct:TGswParams	typeref:typename:const TLweParams *
tlwe_params	src/libtfhe-superaic-core/include/tgsw.h	/^    const TLweParams *tlwe_params; \/\/\/< the tlwe params of each rows$/;"	m	struct:TGswKey	typeref:typename:const TLweParams *
tlwe_polynomials_numbers	src/libtfhe-superaic-core/include/classic_PBS_parameters.h	/^    const int32_t tlwe_polynomials_numbers; \/\/\/< number of polynomials in the mask$/;"	m	struct:ClassicPBSParameters	typeref:typename:const int32_t
tlwe_polynomials_numbers	src/tests/classic_PBS_parameters.cpp	/^    const int32_t tlwe_polynomials_numbers; \/\/\/< number of polynomials in the mask$/;"	m	struct:ClassicPBSParameters	typeref:typename:const int32_t	file:
tlwe_secret_key	src/tests/classic_PBS_parameters.cpp	/^    TLweKey *tlwe_secret_key; \/\/ used to generate the bootstrapping keys and key switching key/;"	m	struct:ClientKey	typeref:typename:TLweKey *	file:
tlwekey1024_1	src/tests/io_test.cpp	/^    const TLweKey* tlwekey1024_1 = new_random_tlwe_key(tlweparams1024_1);$/;"	v	namespace:__anon2d72c1c60111	typeref:typename:const TLweKey *
tlweparams1024_1	src/tests/ACC_test.cpp	/^    const TLweParams* tlweparams1024_1 = new_TLweParams(1024,1, plaintext_modulus,0.1,0.3);$/;"	v	namespace:__anonef2481d50111	typeref:typename:const TLweParams *
tlweparams1024_1	src/tests/FPGA_ACC_test.cpp	/^    const TLweParams* tlweparams1024_1 = new_TLweParams(1024,1, plaintext_modulus,0.1,0.3);$/;"	v	namespace:__anon88d438720111	typeref:typename:const TLweParams *
tlweparams1024_1	src/tests/QEMU_test.cpp	/^    const TLweParams* tlweparams1024_1 = new_TLweParams(1024,1, plaintext_modulus,0.1,0.3);$/;"	v	namespace:__anon4f389dc60111	typeref:typename:const TLweParams *
tlweparams1024_1	src/tests/io_test.cpp	/^    const TLweParams* tlweparams1024_1 = new_TLweParams(1024,1, plaintext_modulus,0.1,0.3);$/;"	v	namespace:__anon2d72c1c60111	typeref:typename:const TLweParams *
tlweparams1024_1	src/tests/session_test.cpp	/^    const TLweParams* tlweparams1024_1 = new_TLweParams(1024,1, plaintext_modulus,0.1,0.3);$/;"	v	namespace:__anon23f859320111	typeref:typename:const TLweParams *
tlweparams128_2	src/tests/ACC_test.cpp	/^    const TLweParams* tlweparams128_2 = new_TLweParams(128,2, plaintext_modulus,0.1,0.3);$/;"	v	namespace:__anonef2481d50111	typeref:typename:const TLweParams *
tlweparams128_2	src/tests/FPGA_ACC_test.cpp	/^    const TLweParams* tlweparams128_2 = new_TLweParams(128,2, plaintext_modulus,0.1,0.3);$/;"	v	namespace:__anon88d438720111	typeref:typename:const TLweParams *
tlweparams128_2	src/tests/QEMU_test.cpp	/^    const TLweParams* tlweparams128_2 = new_TLweParams(128,2, plaintext_modulus,0.1,0.3);$/;"	v	namespace:__anon4f389dc60111	typeref:typename:const TLweParams *
tlweparams128_2	src/tests/io_test.cpp	/^    const TLweParams* tlweparams128_2 = new_TLweParams(128,2, plaintext_modulus,0.1,0.3);$/;"	v	namespace:__anon2d72c1c60111	typeref:typename:const TLweParams *
tlweparams128_2	src/tests/session_test.cpp	/^    const TLweParams* tlweparams128_2 = new_TLweParams(128,2, plaintext_modulus,0.1,0.3);$/;"	v	namespace:__anon23f859320111	typeref:typename:const TLweParams *
toFormattedString	src/muduo/muduo/base/Timestamp.cc	/^string Timestamp::toFormattedString(bool showMicroseconds) const$/;"	f	class:Timestamp	typeref:typename:string
toIp	src/muduo/muduo/net/InetAddress.cc	/^string InetAddress::toIp() const$/;"	f	class:InetAddress	typeref:typename:string
toIp	src/muduo/muduo/net/SocketsOps.cc	/^void sockets::toIp(char* buf, size_t size,$/;"	f	class:sockets	typeref:typename:void
toIpPort	src/muduo/muduo/net/InetAddress.cc	/^string InetAddress::toIpPort() const$/;"	f	class:InetAddress	typeref:typename:string
toIpPort	src/muduo/muduo/net/SocketsOps.cc	/^void sockets::toIpPort(char* buf, size_t size,$/;"	f	class:sockets	typeref:typename:void
toIsoString	src/muduo/muduo/base/Date.cc	/^string Date::toIsoString() const$/;"	f	class:Date	typeref:typename:string
toIsoString	src/muduo/muduo/base/TimeZone.cc	/^string DateTime::toIsoString() const$/;"	f	class:DateTime	typeref:typename:string
toLocalTime	src/muduo/muduo/base/TimeZone.cc	/^struct DateTime TimeZone::toLocalTime(int64_t seconds, int* utcOffset) const$/;"	f	class:TimeZone	typeref:struct:DateTime
toPng	src/muduo/examples/procmon/plot.cc	/^muduo::string Plot::toPng()$/;"	f	class:Plot	typeref:typename:muduo::string
toString	src/muduo/contrib/hiredis/mrediscli.cc	/^string toString(long long value)$/;"	f	typeref:typename:string
toString	src/muduo/muduo/base/LogStream.h	/^  string toString() const { return string(data_, length()); }$/;"	f	class:muduo::detail::FixedBuffer	typeref:typename:string
toString	src/muduo/muduo/base/Timestamp.cc	/^string Timestamp::toString() const$/;"	f	class:Timestamp	typeref:typename:string
toStringPiece	src/muduo/muduo/base/LogStream.h	/^  StringPiece toStringPiece() const { return StringPiece(data_, length()); }$/;"	f	class:muduo::detail::FixedBuffer	typeref:typename:StringPiece
toStringPiece	src/muduo/muduo/net/Buffer.h	/^  StringPiece toStringPiece() const$/;"	f	class:muduo::net::Buffer	typeref:typename:StringPiece
toTimeSpec	src/muduo/muduo/net/tests/Channel_test.cc	/^  static struct timespec toTimeSpec(double seconds)$/;"	f	class:PeriodicTimer	typeref:struct:timespec	file:
toUtcTime	src/muduo/muduo/base/TimeZone.cc	/^DateTime TimeZone::toUtcTime(int64_t secondsSinceEpoch)$/;"	f	class:TimeZone	typeref:typename:DateTime
to_Istream	src/libtfhe-superaic-core/tfhe_generic_streams.cpp	/^CIstream to_Istream(FILE *F) { return CIstream(F); }$/;"	f	typeref:typename:CIstream
to_Istream	src/libtfhe-superaic-core/tfhe_generic_streams.cpp	/^StdIstream to_Istream(std::istream &in) { return StdIstream(in); }$/;"	f	typeref:typename:StdIstream
to_Ostream	src/libtfhe-superaic-core/tfhe_generic_streams.cpp	/^COstream to_Ostream(FILE *F) { return COstream(F); }$/;"	f	typeref:typename:COstream
to_Ostream	src/libtfhe-superaic-core/tfhe_generic_streams.cpp	/^StdOstream to_Ostream(std::ostream &out) { return StdOstream(out); }$/;"	f	typeref:typename:StdOstream
tock	src/muduo/examples/sudoku/loadtest.cc	/^  void tock()$/;"	f	class:SudokuLoadtest	typeref:typename:void	file:
tokenizer	src/muduo/examples/wordcount/hasher.cc	/^  typedef boost::tokenizer<boost::char_separator<char> > tokenizer;$/;"	t	function:WordCountSender::WordCountSender	typeref:typename:boost::tokenizer<boost::char_separator<char>>	file:
toler	src/tests/tlwe_test.cpp	/^    const double toler = 1e-8;$/;"	v	namespace:__anonc028f2ea0111	typeref:typename:const double
topic_	src/muduo/examples/hub/hub.cc	/^  string topic_;$/;"	m	class:pubsub::Topic	typeref:typename:string	file:
topics_	src/muduo/examples/hub/hub.cc	/^  std::map<string, Topic> topics_;$/;"	m	class:pubsub::PubSubServer	typeref:typename:std::map<string,Topic>	file:
torusPolynomialAdd	src/libtfhe-superaic-core/toruspolynomial-functions.cpp	/^EXPORT void torusPolynomialAdd(TorusPolynomial *result, const TorusPolynomial *poly1, const Toru/;"	f	typeref:typename:EXPORT void
torusPolynomialAddMulR	src/libtfhe-superaic-acc/accs/FPGA-V0/acc_fpga_v0.cpp	/^void FPGA_ACC_V0::torusPolynomialAddMulR(TorusPolynomial* result, const IntPolynomial* poly1, co/;"	f	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:void
torusPolynomialAddMulR	src/libtfhe-superaic-acc/accs/QEMU-V0/acc_qemu_v0.cpp	/^void QEMU_ACC_V0::torusPolynomialAddMulR(TorusPolynomial* result, const IntPolynomial* poly1, co/;"	f	class:tfhe_superaic::QEMU_ACC_V0	typeref:typename:void
torusPolynomialAddMulR	src/libtfhe-superaic-acc/tfhe_acc.cpp	/^void TFHE_ACC::torusPolynomialAddMulR(TorusPolynomial* result, const IntPolynomial* poly1, const/;"	f	class:tfhe_superaic::TFHE_ACC	typeref:typename:void
torusPolynomialAddMulR	src/libtfhe-superaic-core/include/polynomials_arithmetic.h	/^#define torusPolynomialAddMulR torusPolynomialAddMulRF/;"	d
torusPolynomialAddMulR	src/libtfhe-superaic-core/include/polynomials_arithmetic.h	/^#define torusPolynomialAddMulR torusPolynomialAddMulRK/;"	d
torusPolynomialAddMulR	src/libtfhe-superaic-core/multiplication.cpp	/^function<void(TorusPolynomial* , const IntPolynomial* , const TorusPolynomial* poly2)> torusPoly/;"	v	typeref:typename:function<void (TorusPolynomial *,const IntPolynomial *,const TorusPolynomial * poly2)>
torusPolynomialAddMulRFFT	src/libtfhe-superaic-core/polynomials.cpp	/^EXPORT void torusPolynomialAddMulRFFT(TorusPolynomial* result, const IntPolynomial* poly1, const/;"	f	typeref:typename:EXPORT void
torusPolynomialAddMulRKaratsuba	src/libtfhe-superaic-core/multiplication.cpp	/^EXPORT void torusPolynomialAddMulRKaratsuba(TorusPolynomial* result, const IntPolynomial* poly1,/;"	f	typeref:typename:EXPORT void
torusPolynomialAddMulRNaive	src/libtfhe-superaic-core/multiplication.cpp	/^EXPORT void torusPolynomialAddMulRNaive(TorusPolynomial* result, const IntPolynomial* poly1, con/;"	f	typeref:typename:EXPORT void
torusPolynomialAddMulR_mtx	src/libtfhe-superaic-core/multiplication.cpp	/^mutex torusPolynomialAddMulR_mtx;$/;"	v	typeref:typename:mutex
torusPolynomialAddMulZ	src/libtfhe-superaic-core/toruspolynomial-functions.cpp	/^torusPolynomialAddMulZ(TorusPolynomial *result, const TorusPolynomial *poly1, int32_t p, const T/;"	f	typeref:typename:EXPORT void
torusPolynomialAddMulZTo	src/libtfhe-superaic-core/toruspolynomial-functions.cpp	/^EXPORT void torusPolynomialAddMulZTo(TorusPolynomial *result, const int32_t p, const TorusPolyno/;"	f	typeref:typename:EXPORT void
torusPolynomialAddTo	src/libtfhe-superaic-core/toruspolynomial-functions.cpp	/^EXPORT void torusPolynomialAddTo(TorusPolynomial *result, const TorusPolynomial *poly2) {$/;"	f	typeref:typename:EXPORT void
torusPolynomialClear	src/libtfhe-superaic-core/toruspolynomial-functions.cpp	/^EXPORT void torusPolynomialClear(TorusPolynomial *result) {$/;"	f	typeref:typename:EXPORT void
torusPolynomialCopy	src/libtfhe-superaic-core/toruspolynomial-functions.cpp	/^EXPORT void torusPolynomialCopy($/;"	f	typeref:typename:EXPORT void
torusPolynomialMulByXai	src/libtfhe-superaic-core/toruspolynomial-functions.cpp	/^EXPORT void torusPolynomialMulByXai(TorusPolynomial *result, int32_t a, const TorusPolynomial *s/;"	f	typeref:typename:EXPORT void
torusPolynomialMulByXaiMinusOne	src/libtfhe-superaic-core/toruspolynomial-functions.cpp	/^EXPORT void torusPolynomialMulByXaiMinusOne(TorusPolynomial *result, int32_t a, const TorusPolyn/;"	f	typeref:typename:EXPORT void
torusPolynomialMulR	src/libtfhe-superaic-core/include/polynomials_arithmetic.h	/^#define torusPolynomialMulR /;"	d
torusPolynomialMultFFT	src/libtfhe-superaic-core/polynomials.cpp	/^EXPORT void torusPolynomialMultFFT(TorusPolynomial* result, const IntPolynomial* poly1, const To/;"	f	typeref:typename:EXPORT void
torusPolynomialMultFFT	src/tests/FPGA_ACC_test.cpp	/^        void torusPolynomialMultFFT(TorusPolynomial* result, const IntPolynomial* poly1, const T/;"	f	class:__anon88d438720111::ACCTest	typeref:typename:void	file:
torusPolynomialMultFPGA	src/libtfhe-superaic-acc/accs/FPGA-V0/acc_fpga_v0.cpp	/^ACC_RESULT FPGA_ACC_V0::torusPolynomialMultFPGA(Torus32* __restrict result, const Torus32* __res/;"	f	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:ACC_RESULT
torusPolynomialMultKaratsuba	src/libtfhe-superaic-core/multiplication.cpp	/^EXPORT void torusPolynomialMultKaratsuba(TorusPolynomial* result, const IntPolynomial* poly1, co/;"	f	typeref:typename:EXPORT void
torusPolynomialMultNaive	src/libtfhe-superaic-core/multiplication.cpp	/^EXPORT void torusPolynomialMultNaive(TorusPolynomial* result, const IntPolynomial* poly1, const /;"	f	typeref:typename:EXPORT void
torusPolynomialMultNaive_aux	src/libtfhe-superaic-acc/accs/FPGA-V0/acc_fpga_v0.cpp	/^void FPGA_ACC_V0::torusPolynomialMultNaive_aux(Torus32* __restrict result, const int32_t* __rest/;"	f	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:void
torusPolynomialMultNaive_aux	src/libtfhe-superaic-acc/accs/QEMU-V0/acc_qemu_v0.cpp	/^void QEMU_ACC_V0::torusPolynomialMultNaive_aux(Torus32* __restrict result, const int32_t* __rest/;"	f	class:tfhe_superaic::QEMU_ACC_V0	typeref:typename:void
torusPolynomialMultNaive_aux	src/libtfhe-superaic-acc/tfhe_acc.cpp	/^void TFHE_ACC::torusPolynomialMultNaive_aux(Torus32* __restrict result, const int32_t* __restric/;"	f	class:tfhe_superaic::TFHE_ACC	typeref:typename:void
torusPolynomialMultNaive_aux	src/libtfhe-superaic-core/multiplication.cpp	/^void torusPolynomialMultNaive_aux(Torus32* __restrict result, const int32_t* __restrict poly1, c/;"	f	typeref:typename:void
torusPolynomialMultNaive_aux	src/tests/FPGA_ACC_test.cpp	/^    void torusPolynomialMultNaive_aux(Torus32* __restrict result, const int32_t* __restrict poly/;"	f	class:__anon88d438720111::ACCTest	typeref:typename:void	file:
torusPolynomialMultNaive_plain_aux	src/libtfhe-superaic-core/multiplication.cpp	/^void torusPolynomialMultNaive_plain_aux(Torus32* __restrict result, const int32_t* __restrict po/;"	f	typeref:typename:void
torusPolynomialNormInftyDist	src/libtfhe-superaic-core/toruspolynomial-functions.cpp	/^EXPORT double torusPolynomialNormInftyDist(const TorusPolynomial *poly1, const TorusPolynomial */;"	f	typeref:typename:EXPORT double
torusPolynomialSub	src/libtfhe-superaic-core/toruspolynomial-functions.cpp	/^EXPORT void torusPolynomialSub(TorusPolynomial *result, const TorusPolynomial *poly1, const Toru/;"	f	typeref:typename:EXPORT void
torusPolynomialSubMulR	src/libtfhe-superaic-core/include/polynomials_arithmetic.h	/^#define torusPolynomialSubMulR torusPolynomialSubMulRF/;"	d
torusPolynomialSubMulR	src/libtfhe-superaic-core/include/polynomials_arithmetic.h	/^#define torusPolynomialSubMulR torusPolynomialSubMulRK/;"	d
torusPolynomialSubMulR	src/libtfhe-superaic-core/include/polynomials_arithmetic.h	/^#define torusPolynomialSubMulR torusPolynomialSubMulRN/;"	d
torusPolynomialSubMulRFFT	src/libtfhe-superaic-core/polynomials.cpp	/^EXPORT void torusPolynomialSubMulRFFT(TorusPolynomial* result, const IntPolynomial* poly1, const/;"	f	typeref:typename:EXPORT void
torusPolynomialSubMulRKaratsuba	src/libtfhe-superaic-core/multiplication.cpp	/^EXPORT void torusPolynomialSubMulRKaratsuba(TorusPolynomial* result, const IntPolynomial* poly1,/;"	f	typeref:typename:EXPORT void
torusPolynomialSubMulRNaive	src/libtfhe-superaic-core/multiplication.cpp	/^EXPORT void torusPolynomialSubMulRNaive(TorusPolynomial* result, const IntPolynomial* poly1, con/;"	f	typeref:typename:EXPORT void
torusPolynomialSubMulZ	src/libtfhe-superaic-core/toruspolynomial-functions.cpp	/^EXPORT void torusPolynomialSubMulZ(TorusPolynomial *result, const TorusPolynomial *poly1, const /;"	f	typeref:typename:EXPORT void
torusPolynomialSubMulZTo	src/libtfhe-superaic-core/toruspolynomial-functions.cpp	/^EXPORT void torusPolynomialSubMulZTo(TorusPolynomial *result, int32_t p, const TorusPolynomial */;"	f	typeref:typename:EXPORT void
torusPolynomialSubTo	src/libtfhe-superaic-core/toruspolynomial-functions.cpp	/^EXPORT void torusPolynomialSubTo(TorusPolynomial *result, const TorusPolynomial *poly2) {$/;"	f	typeref:typename:EXPORT void
torusPolynomialUniform	src/libtfhe-superaic-core/toruspolynomial-functions.cpp	/^EXPORT void torusPolynomialUniform(TorusPolynomial *result) {$/;"	f	typeref:typename:EXPORT void
toruspolynomial-functions.cpp.i	buildotests/libtfhe-superaic-core/Makefile	/^toruspolynomial-functions.cpp.i:$/;"	t
toruspolynomial-functions.cpp.o	buildotests/libtfhe-superaic-core/Makefile	/^toruspolynomial-functions.cpp.o:$/;"	t
toruspolynomial-functions.cpp.s	buildotests/libtfhe-superaic-core/Makefile	/^toruspolynomial-functions.cpp.s:$/;"	t
toruspolynomial-functions.i	buildotests/libtfhe-superaic-core/Makefile	/^toruspolynomial-functions.i: toruspolynomial-functions.cpp.i$/;"	t
toruspolynomial-functions.o	buildotests/libtfhe-superaic-core/Makefile	/^toruspolynomial-functions.o: toruspolynomial-functions.cpp.o$/;"	t
toruspolynomial-functions.s	buildotests/libtfhe-superaic-core/Makefile	/^toruspolynomial-functions.s: toruspolynomial-functions.cpp.s$/;"	t
total	src/muduo/examples/cdns/dns.cc	/^int total = 0;$/;"	v	typeref:typename:int
total	src/muduo/muduo/base/ProcessInfo.h	/^    double total() const { return userSeconds + systemSeconds; }$/;"	f	struct:muduo::ProcessInfo::CpuTime	typeref:typename:double
totalLatency_	src/muduo/examples/sudoku/stat.h	/^  int64_t totalRequests_, totalResponses_, totalSolved_, badRequests_, droppedRequests_, totalLa/;"	m	class:SudokuStat	typeref:typename:int64_t
totalLen	src/muduo/examples/memcached/server/Item.h	/^  int totalLen() const { return keylen_ + valuelen_; }$/;"	f	class:Item	typeref:typename:int
totalRequests_	src/muduo/examples/sudoku/stat.h	/^  int64_t totalRequests_, totalResponses_, totalSolved_, badRequests_, droppedRequests_, totalLa/;"	m	class:SudokuStat	typeref:typename:int64_t
totalResponses_	src/muduo/examples/sudoku/stat.h	/^  int64_t totalRequests_, totalResponses_, totalSolved_, badRequests_, droppedRequests_, totalLa/;"	m	class:SudokuStat	typeref:typename:int64_t
totalSeconds_	src/muduo/examples/procmon/plot.h	/^  const int totalSeconds_;$/;"	m	class:Plot	typeref:typename:const int
totalSolved_	src/muduo/examples/sudoku/stat.h	/^  int64_t totalRequests_, totalResponses_, totalSolved_, badRequests_, droppedRequests_, totalLa/;"	m	class:SudokuStat	typeref:typename:int64_t
total_	src/muduo/examples/protobuf/resolver/client.cc	/^  int total_;$/;"	m	class:RpcClient	typeref:typename:int	file:
total_part_count	src/tests/googletest/googletest/src/gtest.cc	/^int TestResult::total_part_count() const {$/;"	f	class:testing::TestResult	typeref:typename:int
total_size	src/muduo/examples/wordcount/slowsink.py	/^total_size = 0$/;"	v
total_test_case_count	src/tests/googletest/googletest/src/gtest.cc	/^int UnitTest::total_test_case_count() const {$/;"	f	class:testing::UnitTest	typeref:typename:int
total_test_case_count	src/tests/googletest/googletest/src/gtest.cc	/^int UnitTestImpl::total_test_case_count() const {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:int
total_test_count	src/tests/googletest/googletest/src/gtest.cc	/^int TestCase::total_test_count() const {$/;"	f	class:testing::TestCase	typeref:typename:int
total_test_count	src/tests/googletest/googletest/src/gtest.cc	/^int UnitTest::total_test_count() const { return impl()->total_test_count(); }$/;"	f	class:testing::UnitTest	typeref:typename:int
total_test_count	src/tests/googletest/googletest/src/gtest.cc	/^int UnitTestImpl::total_test_count() const {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:int
total_var_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  const char* total_var_;$/;"	m	class:__anonf780395f0111::ShouldShardTest	typeref:typename:const char *	file:
tpgid	src/muduo/examples/procmon/procmon.cc	/^  int tpgid;$/;"	m	struct:StatData	typeref:typename:int	file:
tr1	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^namespace tr1 {$/;"	n	namespace:std
tr1	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^namespace tr1 {$/;"	n	namespace:std
trans	src/muduo/examples/ace/ttcp/ttcp.cc	/^namespace trans$/;"	n	file:
transferredBytes_	src/muduo/examples/netty/echo/server2.cc	/^  AtomicInt64 transferredBytes_;$/;"	m	class:EchoServer	typeref:typename:AtomicInt64	file:
transferred_	src/muduo/examples/multiplexer/multiplexer.cc	/^  AtomicInt64 transferred_;$/;"	m	class:MultiplexServer	typeref:typename:AtomicInt64	file:
transferred_	src/muduo/examples/netty/discard/server.cc	/^  AtomicInt64 transferred_;$/;"	m	class:DiscardServer	typeref:typename:AtomicInt64	file:
transferred_	src/muduo/examples/netty/echo/server.cc	/^  AtomicInt64 transferred_;$/;"	m	class:EchoServer	typeref:typename:AtomicInt64	file:
transferred_	src/muduo/examples/simple/chargen/chargen.h	/^  int64_t transferred_;$/;"	m	class:ChargenServer	typeref:typename:int64_t
transitions	src/muduo/muduo/base/TimeZone.cc	/^  std::vector<Transition> transitions;$/;"	m	struct:TimeZone::Data	typeref:typename:std::vector<Transition>	file:
transmit	src/muduo/examples/ace/ttcp/common.h	/^  bool transmit, receive, nodelay;$/;"	m	struct:Options	typeref:typename:bool
transmit	src/muduo/examples/ace/ttcp/ttcp.cc	/^void transmit(const Options& opt)$/;"	f	typeref:typename:void
transmit	src/muduo/examples/ace/ttcp/ttcp_asio_async.cc	/^void transmit(const Options& opt)$/;"	f	typeref:typename:void
transmit	src/muduo/examples/ace/ttcp/ttcp_asio_sync.cc	/^void transmit(const Options& opt)$/;"	f	typeref:typename:void
transmit	src/muduo/examples/ace/ttcp/ttcp_blocking.cc	/^void transmit(const Options& opt)$/;"	f	typeref:typename:void
trig_tables	src/libtfhe-superaic-core/fft_processors/nayuki/fft-model-of-x8664-avx.c	/^	double *trig_tables;$/;"	m	struct:FftTables	typeref:typename:double *	file:
trig_tables	src/libtfhe-superaic-core/fft_processors/nayuki/fft-x8664-avx-aux.c	/^	double *trig_tables;$/;"	m	struct:FftTables	typeref:typename:double *	file:
true_type	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^typedef bool_constant<true> true_type;$/;"	t	namespace:testing::internal	typeref:typename:bool_constant<true>
ttcp_asio_async	src/muduo/examples/ace/ttcp/CMakeLists.txt	/^    add_executable(ttcp_asio_async ttcp_asio_async.cc common.cc main.cc)$/;"	t
ttcp_asio_sync	src/muduo/examples/ace/ttcp/CMakeLists.txt	/^    add_executable(ttcp_asio_sync ttcp_asio_sync.cc common.cc main.cc)$/;"	t
ttcp_blocking	src/muduo/examples/ace/ttcp/CMakeLists.txt	/^  add_executable(ttcp_blocking ttcp_blocking.cc common.cc main.cc)$/;"	t
ttcp_muduo	src/muduo/examples/ace/ttcp/CMakeLists.txt	/^  add_executable(ttcp_muduo ttcp.cc common.cc main.cc)$/;"	t
tty_nr	src/muduo/examples/procmon/procmon.cc	/^  int tty_nr;$/;"	m	struct:StatData	typeref:typename:int	file:
tuple	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^  tuple() {}$/;"	f	class:std::tr1::tuple
tuple	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^  tuple(const tuple& \/* t *\/)  {}$/;"	f	class:std::tr1::tuple
tuple	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^class tuple<> {$/;"	c	namespace:std::tr1
tuple2_matcher_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const Tuple2Matcher tuple2_matcher_;$/;"	m	class:testing::internal::BoundSecondMatcher	typeref:typename:const Tuple2Matcher
tuple_element	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^  struct tuple_element : ::std::tr1::tuple_element<I, Tuple> {};$/;"	s	struct:testing::internal::TuplePolicy
tuple_element	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^  struct tuple_element : ::std::tuple_element<I, Tuple> {};$/;"	s	struct:testing::internal::TuplePolicy
tuple_matcher_	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  const TupleMatcher tuple_matcher_;$/;"	m	class:testing::internal::PointwiseMatcher	typeref:typename:const TupleMatcher
tuple_size	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^  static const size_t tuple_size = ::std::tr1::tuple_size<Tuple>::value;$/;"	m	struct:testing::internal::TuplePolicy	typeref:typename:const size_t
tuple_size	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^  static const size_t tuple_size = ::std::tuple_size<Tuple>::value;$/;"	m	struct:testing::internal::TuplePolicy	typeref:typename:const size_t
tuple_size	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^const size_t TuplePolicy< ::std::tuple<Types...> >::tuple_size;$/;"	m	class:testing::internal::TuplePolicy< ::std::tuple<Types...> >	typeref:typename:const size_t
tuple_size	src/tests/googletest/googletest/include/gtest/gtest-printers.h	/^const size_t TuplePolicy<TupleT>::tuple_size;$/;"	m	class:testing::internal::TuplePolicy<TupleT>	typeref:typename:const size_t
twisted_finger01	src/muduo/examples/twisted/finger/CMakeLists.txt	/^add_executable(twisted_finger01 finger01.cc)$/;"	t
twisted_finger02	src/muduo/examples/twisted/finger/CMakeLists.txt	/^add_executable(twisted_finger02 finger02.cc)$/;"	t
twisted_finger03	src/muduo/examples/twisted/finger/CMakeLists.txt	/^add_executable(twisted_finger03 finger03.cc)$/;"	t
twisted_finger04	src/muduo/examples/twisted/finger/CMakeLists.txt	/^add_executable(twisted_finger04 finger04.cc)$/;"	t
twisted_finger05	src/muduo/examples/twisted/finger/CMakeLists.txt	/^add_executable(twisted_finger05 finger05.cc)$/;"	t
twisted_finger06	src/muduo/examples/twisted/finger/CMakeLists.txt	/^add_executable(twisted_finger06 finger06.cc)$/;"	t
twisted_finger07	src/muduo/examples/twisted/finger/CMakeLists.txt	/^add_executable(twisted_finger07 finger07.cc)$/;"	t
type	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    ACC_TYPE type = ACC_UNKONW;$/;"	m	class:tfhe_superaic::TFHE_ACC	typeref:typename:ACC_TYPE
type	src/muduo/examples/fastcgi/fastcgi.cc	/^  uint8_t type;$/;"	m	struct:FastCgiCodec::RecordHeader	typeref:typename:uint8_t	file:
type	src/muduo/muduo/net/protorpc/rpc.proto	/^  required MessageType type = 1;$/;"	f	message:muduo.net.RpcMessage	typeref:typename:MessageType
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^  typedef Result type();$/;"	t	class:testing::internal::SelectArgs	typeref:typename:Result ()()
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^  typedef Result type(GMOCK_FIELD_(ArgumentTuple, k1));$/;"	t	class:testing::internal::SelectArgs	typeref:typename:Result ()(GMOCK_FIELD_ (ArgumentTuple,k1))
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^  typedef Result type(GMOCK_FIELD_(ArgumentTuple, k1),$/;"	t	class:testing::internal::SelectArgs	typeref:typename:Result ()(GMOCK_FIELD_ (ArgumentTuple,k1),GMOCK_FIELD_ (ArgumentTuple,k2))
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^  typedef Result type(GMOCK_FIELD_(ArgumentTuple, k1),$/;"	t	class:testing::internal::SelectArgs	typeref:typename:Result ()(GMOCK_FIELD_ (ArgumentTuple,k1),GMOCK_FIELD_ (ArgumentTuple,k2),GMOCK_FIELD_ (ArgumentTuple,k3))
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^  typedef Result type(GMOCK_FIELD_(ArgumentTuple, k1),$/;"	t	class:testing::internal::SelectArgs	typeref:typename:Result ()(GMOCK_FIELD_ (ArgumentTuple,k1),GMOCK_FIELD_ (ArgumentTuple,k2),GMOCK_FIELD_ (ArgumentTuple,k3),GMOCK_FIELD_ (ArgumentTuple,k4))
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^  typedef Result type(GMOCK_FIELD_(ArgumentTuple, k1),$/;"	t	class:testing::internal::SelectArgs	typeref:typename:Result ()(GMOCK_FIELD_ (ArgumentTuple,k1),GMOCK_FIELD_ (ArgumentTuple,k2),GMOCK_FIELD_ (ArgumentTuple,k3),GMOCK_FIELD_ (ArgumentTuple,k4),GMOCK_FIELD_ (ArgumentTuple,k5))
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^  typedef Result type(GMOCK_FIELD_(ArgumentTuple, k1),$/;"	t	class:testing::internal::SelectArgs	typeref:typename:Result ()(GMOCK_FIELD_ (ArgumentTuple,k1),GMOCK_FIELD_ (ArgumentTuple,k2),GMOCK_FIELD_ (ArgumentTuple,k3),GMOCK_FIELD_ (ArgumentTuple,k4),GMOCK_FIELD_ (ArgumentTuple,k5),GMOCK_FIELD_ (ArgumentTuple,k6))
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^  typedef Result type(GMOCK_FIELD_(ArgumentTuple, k1),$/;"	t	class:testing::internal::SelectArgs	typeref:typename:Result ()(GMOCK_FIELD_ (ArgumentTuple,k1),GMOCK_FIELD_ (ArgumentTuple,k2),GMOCK_FIELD_ (ArgumentTuple,k3),GMOCK_FIELD_ (ArgumentTuple,k4),GMOCK_FIELD_ (ArgumentTuple,k5),GMOCK_FIELD_ (ArgumentTuple,k6),GMOCK_FIELD_ (ArgumentTuple,k7))
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^  typedef Result type(GMOCK_FIELD_(ArgumentTuple, k1),$/;"	t	class:testing::internal::SelectArgs	typeref:typename:Result ()(GMOCK_FIELD_ (ArgumentTuple,k1),GMOCK_FIELD_ (ArgumentTuple,k2),GMOCK_FIELD_ (ArgumentTuple,k3),GMOCK_FIELD_ (ArgumentTuple,k4),GMOCK_FIELD_ (ArgumentTuple,k5),GMOCK_FIELD_ (ArgumentTuple,k6),GMOCK_FIELD_ (ArgumentTuple,k7),GMOCK_FIELD_ (ArgumentTuple,k8))
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^  typedef Result type(GMOCK_FIELD_(ArgumentTuple, k1),$/;"	t	class:testing::internal::SelectArgs	typeref:typename:Result ()(GMOCK_FIELD_ (ArgumentTuple,k1),GMOCK_FIELD_ (ArgumentTuple,k2),GMOCK_FIELD_ (ArgumentTuple,k3),GMOCK_FIELD_ (ArgumentTuple,k4),GMOCK_FIELD_ (ArgumentTuple,k5),GMOCK_FIELD_ (ArgumentTuple,k6),GMOCK_FIELD_ (ArgumentTuple,k7),GMOCK_FIELD_ (ArgumentTuple,k8),GMOCK_FIELD_ (ArgumentTuple,k9))
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-actions.h	/^  typedef Result type(GMOCK_FIELD_(ArgumentTuple, k1),$/;"	t	class:testing::internal::SelectArgs	typeref:typename:Result ()(GMOCK_FIELD_ (ArgumentTuple,k1),GMOCK_FIELD_ (ArgumentTuple,k2),GMOCK_FIELD_ (ArgumentTuple,k3),GMOCK_FIELD_ (ArgumentTuple,k4),GMOCK_FIELD_ (ArgumentTuple,k5),GMOCK_FIELD_ (ArgumentTuple,k6),GMOCK_FIELD_ (ArgumentTuple,k7),GMOCK_FIELD_ (ArgumentTuple,k8),GMOCK_FIELD_ (ArgumentTuple,k9),GMOCK_FIELD_ (ArgumentTuple,k10))
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^      GMOCK_FIELD_TYPE_(Tuple, k1), GMOCK_FIELD_TYPE_(Tuple, k2)> type;$/;"	t	class:testing::internal::TupleFields
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^      GMOCK_FIELD_TYPE_(Tuple, k1)> type;$/;"	t	class:testing::internal::TupleFields
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^      GMOCK_FIELD_TYPE_(Tuple, k3), GMOCK_FIELD_TYPE_(Tuple, k4)> type;$/;"	t	class:testing::internal::TupleFields
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^      GMOCK_FIELD_TYPE_(Tuple, k3)> type;$/;"	t	class:testing::internal::TupleFields
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^      GMOCK_FIELD_TYPE_(Tuple, k5), GMOCK_FIELD_TYPE_(Tuple, k6)> type;$/;"	t	class:testing::internal::TupleFields
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^      GMOCK_FIELD_TYPE_(Tuple, k5)> type;$/;"	t	class:testing::internal::TupleFields
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^      GMOCK_FIELD_TYPE_(Tuple, k7), GMOCK_FIELD_TYPE_(Tuple, k8)> type;$/;"	t	class:testing::internal::TupleFields
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^      GMOCK_FIELD_TYPE_(Tuple, k7)> type;$/;"	t	class:testing::internal::TupleFields
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^      GMOCK_FIELD_TYPE_(Tuple, k9)> type;$/;"	t	class:testing::internal::TupleFields
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^  > type;$/;"	t	struct:testing::internal::AllOfResult10
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^  > type;$/;"	t	struct:testing::internal::AllOfResult2	typeref:typename:BothOfMatcher<typename AllOfResult1<M1>::type,typename AllOfResult1<M2>::type>
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^  > type;$/;"	t	struct:testing::internal::AllOfResult3	typeref:typename:BothOfMatcher<typename AllOfResult1<M1>::type,typename AllOfResult2<M2,M3>::type>
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^  > type;$/;"	t	struct:testing::internal::AllOfResult4	typeref:typename:BothOfMatcher<typename AllOfResult2<M1,M2>::type,typename AllOfResult2<M3,M4>::type>
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^  > type;$/;"	t	struct:testing::internal::AllOfResult5	typeref:typename:BothOfMatcher<typename AllOfResult2<M1,M2>::type,typename AllOfResult3<M3,M4,M5>::type>
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^  > type;$/;"	t	struct:testing::internal::AllOfResult6	typeref:typename:BothOfMatcher<typename AllOfResult3<M1,M2,M3>::type,typename AllOfResult3<M4,M5,M6>::type>
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^  > type;$/;"	t	struct:testing::internal::AllOfResult7	typeref:typename:BothOfMatcher<typename AllOfResult3<M1,M2,M3>::type,typename AllOfResult4<M4,M5,M6,M7>::type>
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^  > type;$/;"	t	struct:testing::internal::AllOfResult8	typeref:typename:BothOfMatcher<typename AllOfResult4<M1,M2,M3,M4>::type,typename AllOfResult4<M5,M6,M7,M8>::type>
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^  > type;$/;"	t	struct:testing::internal::AllOfResult9
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^  > type;$/;"	t	struct:testing::internal::AnyOfResult10
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^  > type;$/;"	t	struct:testing::internal::AnyOfResult2	typeref:typename:EitherOfMatcher<typename AnyOfResult1<M1>::type,typename AnyOfResult1<M2>::type>
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^  > type;$/;"	t	struct:testing::internal::AnyOfResult3	typeref:typename:EitherOfMatcher<typename AnyOfResult1<M1>::type,typename AnyOfResult2<M2,M3>::type>
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^  > type;$/;"	t	struct:testing::internal::AnyOfResult4	typeref:typename:EitherOfMatcher<typename AnyOfResult2<M1,M2>::type,typename AnyOfResult2<M3,M4>::type>
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^  > type;$/;"	t	struct:testing::internal::AnyOfResult5	typeref:typename:EitherOfMatcher<typename AnyOfResult2<M1,M2>::type,typename AnyOfResult3<M3,M4,M5>::type>
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^  > type;$/;"	t	struct:testing::internal::AnyOfResult6	typeref:typename:EitherOfMatcher<typename AnyOfResult3<M1,M2,M3>::type,typename AnyOfResult3<M4,M5,M6>::type>
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^  > type;$/;"	t	struct:testing::internal::AnyOfResult7	typeref:typename:EitherOfMatcher<typename AnyOfResult3<M1,M2,M3>::type,typename AnyOfResult4<M4,M5,M6,M7>::type>
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^  > type;$/;"	t	struct:testing::internal::AnyOfResult8	typeref:typename:EitherOfMatcher<typename AnyOfResult4<M1,M2,M3,M4>::type,typename AnyOfResult4<M5,M6,M7,M8>::type>
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^  > type;$/;"	t	struct:testing::internal::AnyOfResult9
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^  typedef ::testing::tuple<> type;$/;"	t	class:testing::internal::TupleFields	typeref:typename:::testing::tuple<>
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^  typedef ::testing::tuple<GMOCK_FIELD_TYPE_(Tuple, k0)> type;$/;"	t	class:testing::internal::TupleFields
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^  typedef M1 type;$/;"	t	struct:testing::internal::AllOfResult1	typeref:typename:M1
type	src/tests/googletest/googlemock/include/gmock/gmock-generated-matchers.h	/^  typedef M1 type;$/;"	t	struct:testing::internal::AnyOfResult1	typeref:typename:M1
type	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^      Matcher<A10> > type;$/;"	t	struct:testing::internal::MatcherTuple
type	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^      Matcher<A4> > type;$/;"	t	struct:testing::internal::MatcherTuple	typeref:typename:::testing::tuple<Matcher<A1>,Matcher<A2>,Matcher<A3>,Matcher<A4>>
type	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^      Matcher<A5> > type;$/;"	t	struct:testing::internal::MatcherTuple	typeref:typename:::testing::tuple<Matcher<A1>,Matcher<A2>,Matcher<A3>,Matcher<A4>,Matcher<A5>>
type	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^      Matcher<A5>, Matcher<A6> > type;$/;"	t	struct:testing::internal::MatcherTuple
type	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^      Matcher<A5>, Matcher<A6>, Matcher<A7> > type;$/;"	t	struct:testing::internal::MatcherTuple
type	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^      Matcher<A5>, Matcher<A6>, Matcher<A7>, Matcher<A8> > type;$/;"	t	struct:testing::internal::MatcherTuple
type	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^      Matcher<A5>, Matcher<A6>, Matcher<A7>, Matcher<A8>, Matcher<A9> > type;$/;"	t	struct:testing::internal::MatcherTuple
type	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef ::testing::tuple<Matcher<A1> > type;$/;"	t	struct:testing::internal::MatcherTuple	typeref:typename:::testing::tuple<Matcher<A1>>
type	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef ::testing::tuple<Matcher<A1>, Matcher<A2> > type;$/;"	t	struct:testing::internal::MatcherTuple	typeref:typename:::testing::tuple<Matcher<A1>,Matcher<A2>>
type	src/tests/googletest/googlemock/include/gmock/internal/gmock-generated-internal-utils.h	/^  typedef ::testing::tuple<Matcher<A1>, Matcher<A2>, Matcher<A3> > type;$/;"	t	struct:testing::internal::MatcherTuple	typeref:typename:::testing::tuple<Matcher<A1>,Matcher<A2>,Matcher<A3>>
type	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^  typedef RawContainer type;$/;"	t	class:testing::internal::StlContainerView	typeref:typename:RawContainer
type	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^  typedef T type;$/;"	t	struct:testing::internal::RemoveConstFromKey	typeref:typename:T
type	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^  typedef const T* type;$/;"	t	struct:testing::internal::DecayArray	typeref:typename:const T *
type	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^  typedef internal::NativeArray<RawElement> type;$/;"	t	class:testing::internal::StlContainerView	typeref:typename:internal::NativeArray<RawElement>
type	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^  typedef std::pair<K, V> type;$/;"	t	struct:testing::internal::RemoveConstFromKey	typeref:typename:std::pair<K,V>
type	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^  typedef typename Pointer::element_type type;$/;"	t	struct:testing::internal::PointeeOf	typeref:typename:Pointer::element_type
type	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^struct PointeeOf<T*> { typedef T type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::PointeeOf	typeref:typename:T
type	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^template <typename T> struct DecayArray { typedef T type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::DecayArray	typeref:typename:T
type	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^template <typename T> struct remove_reference { typedef T type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::remove_reference	typeref:typename:T
type	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^template <typename T> struct remove_reference<T&> { typedef T type; }; \/\/ NOLINT$/;"	t	struct:testing::internal::remove_reference	typeref:typename:T
type	src/tests/googletest/googletest/include/gtest/gtest-test-part.h	/^  Type type() const { return type_; }$/;"	f	class:testing::TestPartResult	typeref:typename:Type
type	src/tests/googletest/googletest/include/gtest/gtest.h	/^    TestPartResult::Type const type;$/;"	m	struct:testing::internal::AssertHelper::AssertHelperData	typeref:typename:TestPartResult::Type const
type	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  typedef typename RemoveConst<T>::type type[N];$/;"	t	struct:testing::internal::RemoveConst	typeref:typename:RemoveConst<T>::type[N]
type	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^struct AddReference { typedef T& type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::AddReference	typeref:typename:T &
type	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^struct AddReference<T&> { typedef T& type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::AddReference	typeref:typename:T &
type	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^struct RemoveConst { typedef T type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::RemoveConst	typeref:typename:T
type	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^struct RemoveConst<const T> { typedef T type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::RemoveConst	typeref:typename:T
type	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^struct RemoveReference { typedef T type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::RemoveReference	typeref:typename:T
type	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^struct RemoveReference<T&> { typedef T type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::RemoveReference	typeref:typename:T
type	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^template<> struct EnableIf<true> { typedef void type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::EnableIf	typeref:typename:void
type	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  typedef bool_constant<bool_value> type;$/;"	t	struct:testing::internal::bool_constant	typeref:typename:bool_constant<bool_value>
type	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^  typedef T0 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement	typeref:typename:T0
type	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^  typedef T1 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement	typeref:typename:T1
type	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^  typedef T2 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement	typeref:typename:T2
type	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^  typedef T3 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement	typeref:typename:T3
type	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^  typedef T4 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement	typeref:typename:T4
type	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^  typedef T5 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement	typeref:typename:T5
type	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^  typedef T6 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement	typeref:typename:T6
type	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^  typedef T7 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement	typeref:typename:T7
type	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^  typedef T8 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement	typeref:typename:T8
type	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^  typedef T9 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement	typeref:typename:T9
type	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^struct AddRef { typedef T& type; };  \/\/ NOLINT$/;"	t	struct:std::tr1::gtest_internal::AddRef	typeref:typename:T &
type	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^struct AddRef<T&> { typedef T& type; };  \/\/ NOLINT$/;"	t	struct:std::tr1::gtest_internal::AddRef	typeref:typename:T &
type	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^struct ByRef { typedef const T& type; };  \/\/ NOLINT$/;"	t	struct:std::tr1::gtest_internal::ByRef	typeref:typename:const T &
type	src/tests/googletest/googletest/include/gtest/internal/gtest-tuple.h	/^struct ByRef<T&> { typedef T& type; };  \/\/ NOLINT$/;"	t	struct:std::tr1::gtest_internal::ByRef	typeref:typename:T &
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T12> type;$/;"	t	struct:testing::Types	typeref:typename:internal::Types12<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12>
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> type;$/;"	t	struct:testing::Types
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> type;$/;"	t	struct:testing::Types
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> type;$/;"	t	struct:testing::Types
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> type;$/;"	t	struct:testing::Types
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T13, T14, T15, T16, T17, T18, T19, T20, T21> type;$/;"	t	struct:testing::Types
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T13, T14, T15, T16, T17, T18, T19, T20> type;$/;"	t	struct:testing::Types
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T13, T14, T15, T16, T17, T18, T19> type;$/;"	t	struct:testing::Types
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T13, T14, T15, T16, T17, T18> type;$/;"	t	struct:testing::Types
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T13, T14, T15, T16, T17> type;$/;"	t	struct:testing::Types
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T13, T14, T15, T16> type;$/;"	t	struct:testing::Types
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T13, T14, T15> type;$/;"	t	struct:testing::Types
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T13, T14> type;$/;"	t	struct:testing::Types
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T13> type;$/;"	t	struct:testing::Types	typeref:typename:internal::Types13<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13>
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T13> type;$/;"	t	struct:testing::internal::Templates	typeref:typename:Templates13<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13>
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> type;$/;"	t	struct:testing::internal::Templates
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> type;$/;"	t	struct:testing::internal::Templates
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> type;$/;"	t	struct:testing::internal::Templates
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> type;$/;"	t	struct:testing::internal::Templates
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T14, T15, T16, T17, T18, T19, T20, T21, T22> type;$/;"	t	struct:testing::internal::Templates
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T14, T15, T16, T17, T18, T19, T20, T21> type;$/;"	t	struct:testing::internal::Templates
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T14, T15, T16, T17, T18, T19, T20> type;$/;"	t	struct:testing::internal::Templates
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T14, T15, T16, T17, T18, T19> type;$/;"	t	struct:testing::internal::Templates
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T14, T15, T16, T17, T18> type;$/;"	t	struct:testing::internal::Templates
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T14, T15, T16, T17> type;$/;"	t	struct:testing::internal::Templates
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T14, T15, T16> type;$/;"	t	struct:testing::internal::Templates
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T14, T15> type;$/;"	t	struct:testing::internal::Templates
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T14> type;$/;"	t	struct:testing::internal::Templates	typeref:typename:Templates14<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14>
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T26> type;$/;"	t	struct:testing::Types
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39> type;$/;"	t	struct:testing::Types
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38> type;$/;"	t	struct:testing::Types
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37> type;$/;"	t	struct:testing::Types
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T27, T28, T29, T30, T31, T32, T33, T34, T35, T36> type;$/;"	t	struct:testing::Types
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T27, T28, T29, T30, T31, T32, T33, T34, T35> type;$/;"	t	struct:testing::Types
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T27, T28, T29, T30, T31, T32, T33, T34> type;$/;"	t	struct:testing::Types
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T27, T28, T29, T30, T31, T32, T33> type;$/;"	t	struct:testing::Types
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T27, T28, T29, T30, T31, T32> type;$/;"	t	struct:testing::Types
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T27, T28, T29, T30, T31> type;$/;"	t	struct:testing::Types
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T27, T28, T29, T30> type;$/;"	t	struct:testing::Types
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T27, T28, T29> type;$/;"	t	struct:testing::Types
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T27, T28> type;$/;"	t	struct:testing::Types
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T27> type;$/;"	t	struct:testing::Types
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T27> type;$/;"	t	struct:testing::internal::Templates
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40> type;$/;"	t	struct:testing::internal::Templates
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39> type;$/;"	t	struct:testing::internal::Templates
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38> type;$/;"	t	struct:testing::internal::Templates
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T28, T29, T30, T31, T32, T33, T34, T35, T36, T37> type;$/;"	t	struct:testing::internal::Templates
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T28, T29, T30, T31, T32, T33, T34, T35, T36> type;$/;"	t	struct:testing::internal::Templates
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T28, T29, T30, T31, T32, T33, T34, T35> type;$/;"	t	struct:testing::internal::Templates
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T28, T29, T30, T31, T32, T33, T34> type;$/;"	t	struct:testing::internal::Templates
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T28, T29, T30, T31, T32, T33> type;$/;"	t	struct:testing::internal::Templates
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T28, T29, T30, T31, T32> type;$/;"	t	struct:testing::internal::Templates
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T28, T29, T30, T31> type;$/;"	t	struct:testing::internal::Templates
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T28, T29, T30> type;$/;"	t	struct:testing::internal::Templates
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T28, T29> type;$/;"	t	struct:testing::internal::Templates
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T28> type;$/;"	t	struct:testing::internal::Templates
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T40> type;$/;"	t	struct:testing::Types
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T41, T42, T43, T44, T45, T46, T47, T48, T49, T50> type;$/;"	t	struct:testing::Types
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>::type type;$/;"	t	struct:testing::internal::TypeList
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T41, T42, T43, T44, T45, T46, T47, T48, T49> type;$/;"	t	struct:testing::Types
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T41, T42, T43, T44, T45, T46, T47, T48> type;$/;"	t	struct:testing::Types
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T41, T42, T43, T44, T45, T46, T47> type;$/;"	t	struct:testing::Types
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T41, T42, T43, T44, T45, T46> type;$/;"	t	struct:testing::Types
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T41, T42, T43, T44, T45> type;$/;"	t	struct:testing::Types
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T41, T42, T43, T44> type;$/;"	t	struct:testing::Types
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T41, T42, T43> type;$/;"	t	struct:testing::Types
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T41, T42> type;$/;"	t	struct:testing::Types
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T41> type;$/;"	t	struct:testing::Types
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T41> type;$/;"	t	struct:testing::internal::Templates
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T42, T43, T44, T45, T46, T47, T48, T49, T50> type;$/;"	t	struct:testing::internal::Templates
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T42, T43, T44, T45, T46, T47, T48, T49> type;$/;"	t	struct:testing::internal::Templates
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T42, T43, T44, T45, T46, T47, T48> type;$/;"	t	struct:testing::internal::Templates
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T42, T43, T44, T45, T46, T47> type;$/;"	t	struct:testing::internal::Templates
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T42, T43, T44, T45, T46> type;$/;"	t	struct:testing::internal::Templates
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T42, T43, T44, T45> type;$/;"	t	struct:testing::internal::Templates
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T42, T43, T44> type;$/;"	t	struct:testing::internal::Templates
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T42, T43> type;$/;"	t	struct:testing::internal::Templates
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^      T42> type;$/;"	t	struct:testing::internal::Templates
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^    typedef Tmpl<T> type;$/;"	t	struct:testing::internal::TemplateSel::Bind	typeref:typename:Tmpl<T>
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates0 type;$/;"	t	struct:testing::internal::Templates	typeref:typename:Templates0
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> type;$/;"	t	struct:testing::internal::Templates	typeref:typename:Templates10<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10>
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> type;$/;"	t	struct:testing::internal::Templates	typeref:typename:Templates11<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11>
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> type;$/;"	t	struct:testing::internal::Templates	typeref:typename:Templates12<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12>
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates1<T1> type;$/;"	t	struct:testing::internal::Templates	typeref:typename:Templates1<T1>
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates2<T1, T2> type;$/;"	t	struct:testing::internal::Templates	typeref:typename:Templates2<T1,T2>
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates3<T1, T2, T3> type;$/;"	t	struct:testing::internal::Templates	typeref:typename:Templates3<T1,T2,T3>
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates4<T1, T2, T3, T4> type;$/;"	t	struct:testing::internal::Templates	typeref:typename:Templates4<T1,T2,T3,T4>
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates5<T1, T2, T3, T4, T5> type;$/;"	t	struct:testing::internal::Templates	typeref:typename:Templates5<T1,T2,T3,T4,T5>
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates6<T1, T2, T3, T4, T5, T6> type;$/;"	t	struct:testing::internal::Templates	typeref:typename:Templates6<T1,T2,T3,T4,T5,T6>
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates7<T1, T2, T3, T4, T5, T6, T7> type;$/;"	t	struct:testing::internal::Templates	typeref:typename:Templates7<T1,T2,T3,T4,T5,T6,T7>
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates8<T1, T2, T3, T4, T5, T6, T7, T8> type;$/;"	t	struct:testing::internal::Templates	typeref:typename:Templates8<T1,T2,T3,T4,T5,T6,T7,T8>
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates9<T1, T2, T3, T4, T5, T6, T7, T8, T9> type;$/;"	t	struct:testing::internal::Templates	typeref:typename:Templates9<T1,T2,T3,T4,T5,T6,T7,T8,T9>
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef Types1<T> type;$/;"	t	struct:testing::internal::TypeList	typeref:typename:Types1<T>
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef bool type;$/;"	t	struct:testing::internal::AssertTypeEq	typeref:typename:bool
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef internal::Types0 type;$/;"	t	struct:testing::Types	typeref:typename:internal::Types0
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef internal::Types10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> type;$/;"	t	struct:testing::Types	typeref:typename:internal::Types10<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10>
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef internal::Types11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> type;$/;"	t	struct:testing::Types	typeref:typename:internal::Types11<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11>
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef internal::Types1<T1> type;$/;"	t	struct:testing::Types	typeref:typename:internal::Types1<T1>
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef internal::Types2<T1, T2> type;$/;"	t	struct:testing::Types	typeref:typename:internal::Types2<T1,T2>
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef internal::Types3<T1, T2, T3> type;$/;"	t	struct:testing::Types	typeref:typename:internal::Types3<T1,T2,T3>
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef internal::Types4<T1, T2, T3, T4> type;$/;"	t	struct:testing::Types	typeref:typename:internal::Types4<T1,T2,T3,T4>
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef internal::Types5<T1, T2, T3, T4, T5> type;$/;"	t	struct:testing::Types	typeref:typename:internal::Types5<T1,T2,T3,T4,T5>
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef internal::Types6<T1, T2, T3, T4, T5, T6> type;$/;"	t	struct:testing::Types	typeref:typename:internal::Types6<T1,T2,T3,T4,T5,T6>
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef internal::Types7<T1, T2, T3, T4, T5, T6, T7> type;$/;"	t	struct:testing::Types	typeref:typename:internal::Types7<T1,T2,T3,T4,T5,T6,T7>
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef internal::Types8<T1, T2, T3, T4, T5, T6, T7, T8> type;$/;"	t	struct:testing::Types	typeref:typename:internal::Types8<T1,T2,T3,T4,T5,T6,T7,T8>
type	src/tests/googletest/googletest/include/gtest/internal/gtest-type-util.h	/^  typedef internal::Types9<T1, T2, T3, T4, T5, T6, T7, T8, T9> type;$/;"	t	struct:testing::Types	typeref:typename:internal::Types9<T1,T2,T3,T4,T5,T6,T7,T8,T9>
type_	src/tests/googletest/googletest/include/gtest/gtest-spi.h	/^  const TestPartResult::Type type_;$/;"	m	class:testing::internal::SingleFailureChecker	typeref:typename:const TestPartResult::Type
type_	src/tests/googletest/googletest/include/gtest/gtest-test-part.h	/^  Type type_;$/;"	m	class:testing::TestPartResult	typeref:typename:Type
type_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  MutexType type_;$/;"	m	class:testing::internal::Mutex	typeref:typename:MutexType
type_equals	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^template <typename T1, typename T2> struct type_equals : public false_type {};$/;"	s	namespace:testing::internal
type_equals	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^template <typename T> struct type_equals<T, T> : public true_type {};$/;"	s	namespace:testing::internal
type_param	src/tests/googletest/googletest/include/gtest/gtest.h	/^  const char* type_param() const {$/;"	f	class:testing::TestCase	typeref:typename:const char *
type_param	src/tests/googletest/googletest/include/gtest/gtest.h	/^  const char* type_param() const {$/;"	f	class:testing::TestInfo	typeref:typename:const char *
type_param_	src/tests/googletest/googletest/include/gtest/gtest.h	/^  const internal::scoped_ptr<const ::std::string> type_param_;$/;"	m	class:testing::TestCase	typeref:typename:const internal::scoped_ptr<const::std::string>
type_param_	src/tests/googletest/googletest/include/gtest/gtest.h	/^  const internal::scoped_ptr<const ::std::string> type_param_;$/;"	m	class:testing::TestInfo	typeref:typename:const internal::scoped_ptr<const::std::string>
tzstring	src/muduo/muduo/base/TimeZone.cc	/^  string tzstring;$/;"	m	struct:TimeZone::Data	typeref:typename:string	file:
u_	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  FloatingPointUnion u_;$/;"	m	class:testing::internal::FloatingPoint	typeref:typename:FloatingPointUnion
udpport	src/muduo/examples/memcached/server/MemcacheServer.h	/^    uint16_t udpport;$/;"	m	struct:MemcacheServer::Options	typeref:typename:uint16_t
uid	src/muduo/muduo/base/ProcessInfo.cc	/^uid_t ProcessInfo::uid()$/;"	f	class:ProcessInfo	typeref:typename:uid_t
unassignHolder	src/muduo/muduo/base/Mutex.h	/^  void unassignHolder()$/;"	f	class:muduo::MutexLock	typeref:typename:void
uncaptured_fd_	src/tests/googletest/googletest/src/gtest-port.cc	/^  int uncaptured_fd_;$/;"	m	class:testing::internal::CapturedStream	typeref:typename:int	file:
uncover	src/muduo/examples/sudoku/sudoku.cc	/^    void uncover(Column* c)$/;"	f	class:SudokuSolver	typeref:typename:void	file:
unique_file0_	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^  FilePath unique_file0_;  \/\/ "\/tmp\/directory_creation\/test\/unique.txt"$/;"	m	class:testing::internal::__anon077d0c590111::DirectoryCreationTest	typeref:typename:FilePath	file:
unique_file1_	src/tests/googletest/googletest/test/gtest-filepath_test.cc	/^  FilePath unique_file1_;  \/\/ "\/tmp\/directory_creation\/test\/unique_1.txt"$/;"	m	class:testing::internal::__anon077d0c590111::DirectoryCreationTest	typeref:typename:FilePath	file:
unit_test_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  UnitTestImpl* const unit_test_;$/;"	m	class:testing::internal::DefaultGlobalTestPartResultReporter	typeref:typename:UnitTestImpl * const
unit_test_	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  UnitTestImpl* const unit_test_;$/;"	m	class:testing::internal::DefaultPerThreadTestPartResultReporter	typeref:typename:UnitTestImpl * const
unit_test_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  UnitTest unit_test_;$/;"	m	class:testing::internal::StreamingListenerTest	typeref:typename:UnitTest	file:
unit_test_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  UnitTest unit_test_;$/;"	m	class:testing::internal::UnitTestRecordPropertyTestHelper	typeref:typename:UnitTest	file:
unit_test_impl_	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  UnitTestImpl* unit_test_impl_;$/;"	m	class:testing::internal::ReplaceDeathTestFactory	typeref:typename:UnitTestImpl *	file:
unlock	src/muduo/muduo/base/Mutex.h	/^  void unlock() RELEASE()$/;"	f	class:muduo::MutexLock	typeref:typename:void
unsubscribe	src/muduo/examples/hub/pubsub.cc	/^void PubSubClient::unsubscribe(const string& topic)$/;"	f	class:PubSubClient	typeref:typename:void
untyped_actions_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  UntypedActions untyped_actions_;$/;"	m	class:testing::internal::ExpectationBase	typeref:typename:UntypedActions
untyped_expectations_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  UntypedExpectations untyped_expectations_;$/;"	m	class:testing::internal::UntypedFunctionMockerBase	typeref:typename:UntypedExpectations
untyped_on_call_specs_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  UntypedOnCallSpecs untyped_on_call_specs_;$/;"	m	class:testing::internal::UntypedFunctionMockerBase	typeref:typename:UntypedOnCallSpecs
unused	src/muduo/examples/fastcgi/fastcgi.cc	/^  uint8_t unused;$/;"	m	struct:FastCgiCodec::RecordHeader	typeref:typename:uint8_t	file:
unused_padding	src/tests/fakes/lwe-keyswitch.h	/^        char unused_padding[sizeof(LweKeySwitchKey) - sizeof(int64_t) - 4 * sizeof(int32_t) - si/;"	m	struct:__anonbf4a421d0111::FakeLweKeySwitchKey	typeref:typename:char[]
unused_padding	src/tests/fakes/lwe.h	/^    char unused_padding[sizeof(LweSample) - sizeof(int32_t) - sizeof(Torus32) - sizeof(double)];$/;"	m	struct:FakeLwe	typeref:typename:char[]
unused_padding	src/tests/fakes/tgsw-fft.h	/^        char unused_padding[sizeof(TGswSampleFFT) - sizeof(int64_t) - sizeof(IntPolynomial *) - /;"	m	struct:__anonee999a9f0111::FakeTGswFFT	typeref:typename:char[]
unused_padding	src/tests/fakes/tgsw.h	/^        char unused_padding[sizeof(TGswSample) - sizeof(int64_t) - sizeof(IntPolynomial *) - siz/;"	m	struct:__anond844f8d20111::FakeTGsw	typeref:typename:char[]
unused_padding	src/tests/fakes/tlwe-fft.h	/^        char unused_padding[sizeof(TLweSampleFFT) - sizeof(int64_t) - sizeof(TorusPolynomial *) /;"	m	struct:__anon7c76dd960111::FakeTLweFFT	typeref:typename:char[]
unused_padding	src/tests/fakes/tlwe.h	/^        char unused_padding[sizeof(TLweSample) - sizeof(int64_t) - sizeof(TorusPolynomial *) - s/;"	m	struct:__anond8a158490111::FakeTLwe	typeref:typename:char[]
unwrite	src/muduo/muduo/net/Buffer.h	/^  void unwrite(size_t len)$/;"	f	class:muduo::net::Buffer	typeref:typename:void
up	src/muduo/examples/sudoku/sudoku.cc	/^    Node* up;$/;"	m	struct:Node	typeref:typename:Node *	file:
update	src/muduo/muduo/net/Channel.cc	/^void Channel::update()$/;"	f	class:Channel	typeref:typename:void
update	src/muduo/muduo/net/poller/EPollPoller.cc	/^void EPollPoller::update(int operation, Channel* channel)$/;"	f	class:EPollPoller	typeref:typename:void
updateChannel	src/muduo/muduo/net/EventLoop.cc	/^void EventLoop::updateChannel(Channel* channel)$/;"	f	class:EventLoop	typeref:typename:void
updateChannel	src/muduo/muduo/net/poller/EPollPoller.cc	/^void EPollPoller::updateChannel(Channel* channel)$/;"	f	class:EPollPoller	typeref:typename:void
updateChannel	src/muduo/muduo/net/poller/PollPoller.cc	/^void PollPoller::updateChannel(Channel* channel)$/;"	f	class:PollPoller	typeref:typename:void
updateId	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^  void updateId()$/;"	f	struct:RawMessage	typeref:typename:void	file:
updateLogRecord	src/muduo/examples/ace/logging/client.cc	/^  void updateLogRecord(const StringPiece& message) REQUIRES(mutex_)$/;"	f	class:logging::LogClient	typeref:typename:void	file:
update_last_use_time	src/libtfhe-superaic-core/tfhe_session.cpp	/^void Session::update_last_use_time()$/;"	f	class:tfhe_superaic::Session	typeref:typename:void
uptime	src/muduo/muduo/net/inspect/ProcessInspector.cc	/^string uptime(Timestamp now, Timestamp start, bool showMicroseconds)$/;"	f	namespace:muduo::inspect	typeref:typename:string
url_	src/muduo/examples/curl/download.cc	/^  string url_;$/;"	m	class:Downloader	typeref:typename:string	file:
use_shell	src/tests/googletest/googlemock/scripts/upload.py	/^use_shell = sys.platform.startswith("win")$/;"	v
use_shell	src/tests/googletest/googletest/scripts/upload.py	/^use_shell = sys.platform.startswith("win")$/;"	v
userSeconds	src/muduo/muduo/base/ProcessInfo.h	/^    double userSeconds;$/;"	m	struct:muduo::ProcessInfo::CpuTime	typeref:typename:double
userTime_	src/muduo/examples/procmon/procmon.cc	/^    int userTime_;$/;"	m	struct:Procmon::CpuTime	typeref:typename:int	file:
user_fp	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    int user_fp = 0;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:int
user_map_base	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    void * user_map_base = nullptr;$/;"	m	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:void *
username	src/muduo/examples/ace/logging/logrecord.proto	/^    required string username = 5;$/;"	f	message:logging.LogRecord.Heartbeat	typeref:typename:string
username	src/muduo/muduo/base/ProcessInfo.cc	/^string ProcessInfo::username()$/;"	f	class:ProcessInfo	typeref:typename:string
username_	src/muduo/muduo/net/inspect/ProcessInspector.cc	/^string ProcessInspector::username_ = ProcessInfo::username();$/;"	m	class:ProcessInspector	typeref:typename:string
username_	src/muduo/muduo/net/inspect/ProcessInspector.h	/^  static string username_;$/;"	m	class:muduo::net::ProcessInspector	typeref:typename:string
users	src/muduo/examples/twisted/finger/finger06.cc	/^UserMap users;$/;"	v	typeref:typename:UserMap
users	src/muduo/examples/twisted/finger/finger07.cc	/^UserMap users;$/;"	v	typeref:typename:UserMap
utcOffset	src/muduo/muduo/base/TimeZone.cc	/^    int32_t utcOffset;  \/\/ East of UTC$/;"	m	struct:TimeZone::Data::LocalTime	typeref:typename:int32_t	file:
utctime	src/muduo/muduo/base/TimeZone.cc	/^    int64_t utctime;$/;"	m	struct:TimeZone::Data::Transition	typeref:typename:int64_t	file:
utime	src/muduo/examples/procmon/procmon.cc	/^  long utime;$/;"	m	struct:StatData	typeref:typename:long	file:
v	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^  std::vector<int> * v;$/;"	m	struct:__anon550198f10111::IntegerVectorWrapper	typeref:typename:std::vector<int> *	file:
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray10	typeref:typename:const T10
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray11	typeref:typename:const T10
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray12	typeref:typename:const T10
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray13	typeref:typename:const T10
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray14	typeref:typename:const T10
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray15	typeref:typename:const T10
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray16	typeref:typename:const T10
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray17	typeref:typename:const T10
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray18	typeref:typename:const T10
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray19	typeref:typename:const T10
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray20	typeref:typename:const T10
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray21	typeref:typename:const T10
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray22	typeref:typename:const T10
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray23	typeref:typename:const T10
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray24	typeref:typename:const T10
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray25	typeref:typename:const T10
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray26	typeref:typename:const T10
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray27	typeref:typename:const T10
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray28	typeref:typename:const T10
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray29	typeref:typename:const T10
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray30	typeref:typename:const T10
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray31	typeref:typename:const T10
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray32	typeref:typename:const T10
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray33	typeref:typename:const T10
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray34	typeref:typename:const T10
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray35	typeref:typename:const T10
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray36	typeref:typename:const T10
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray37	typeref:typename:const T10
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray38	typeref:typename:const T10
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray39	typeref:typename:const T10
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray40	typeref:typename:const T10
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T10
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T10
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T10
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T10
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T10
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T10
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T10
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T10
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T10
v10_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T10
v11_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray11	typeref:typename:const T11
v11_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray12	typeref:typename:const T11
v11_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray13	typeref:typename:const T11
v11_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray14	typeref:typename:const T11
v11_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray15	typeref:typename:const T11
v11_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray16	typeref:typename:const T11
v11_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray17	typeref:typename:const T11
v11_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray18	typeref:typename:const T11
v11_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray19	typeref:typename:const T11
v11_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray20	typeref:typename:const T11
v11_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray21	typeref:typename:const T11
v11_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray22	typeref:typename:const T11
v11_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray23	typeref:typename:const T11
v11_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray24	typeref:typename:const T11
v11_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray25	typeref:typename:const T11
v11_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray26	typeref:typename:const T11
v11_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray27	typeref:typename:const T11
v11_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray28	typeref:typename:const T11
v11_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray29	typeref:typename:const T11
v11_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray30	typeref:typename:const T11
v11_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray31	typeref:typename:const T11
v11_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray32	typeref:typename:const T11
v11_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray33	typeref:typename:const T11
v11_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray34	typeref:typename:const T11
v11_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray35	typeref:typename:const T11
v11_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray36	typeref:typename:const T11
v11_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray37	typeref:typename:const T11
v11_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray38	typeref:typename:const T11
v11_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray39	typeref:typename:const T11
v11_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray40	typeref:typename:const T11
v11_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T11
v11_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T11
v11_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T11
v11_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T11
v11_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T11
v11_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T11
v11_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T11
v11_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T11
v11_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T11
v11_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T11
v12_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray12	typeref:typename:const T12
v12_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray13	typeref:typename:const T12
v12_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray14	typeref:typename:const T12
v12_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray15	typeref:typename:const T12
v12_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray16	typeref:typename:const T12
v12_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray17	typeref:typename:const T12
v12_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray18	typeref:typename:const T12
v12_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray19	typeref:typename:const T12
v12_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray20	typeref:typename:const T12
v12_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray21	typeref:typename:const T12
v12_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray22	typeref:typename:const T12
v12_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray23	typeref:typename:const T12
v12_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray24	typeref:typename:const T12
v12_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray25	typeref:typename:const T12
v12_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray26	typeref:typename:const T12
v12_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray27	typeref:typename:const T12
v12_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray28	typeref:typename:const T12
v12_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray29	typeref:typename:const T12
v12_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray30	typeref:typename:const T12
v12_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray31	typeref:typename:const T12
v12_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray32	typeref:typename:const T12
v12_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray33	typeref:typename:const T12
v12_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray34	typeref:typename:const T12
v12_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray35	typeref:typename:const T12
v12_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray36	typeref:typename:const T12
v12_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray37	typeref:typename:const T12
v12_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray38	typeref:typename:const T12
v12_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray39	typeref:typename:const T12
v12_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray40	typeref:typename:const T12
v12_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T12
v12_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T12
v12_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T12
v12_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T12
v12_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T12
v12_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T12
v12_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T12
v12_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T12
v12_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T12
v12_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T12
v13_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray13	typeref:typename:const T13
v13_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray14	typeref:typename:const T13
v13_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray15	typeref:typename:const T13
v13_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray16	typeref:typename:const T13
v13_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray17	typeref:typename:const T13
v13_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray18	typeref:typename:const T13
v13_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray19	typeref:typename:const T13
v13_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray20	typeref:typename:const T13
v13_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray21	typeref:typename:const T13
v13_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray22	typeref:typename:const T13
v13_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray23	typeref:typename:const T13
v13_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray24	typeref:typename:const T13
v13_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray25	typeref:typename:const T13
v13_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray26	typeref:typename:const T13
v13_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray27	typeref:typename:const T13
v13_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray28	typeref:typename:const T13
v13_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray29	typeref:typename:const T13
v13_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray30	typeref:typename:const T13
v13_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray31	typeref:typename:const T13
v13_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray32	typeref:typename:const T13
v13_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray33	typeref:typename:const T13
v13_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray34	typeref:typename:const T13
v13_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray35	typeref:typename:const T13
v13_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray36	typeref:typename:const T13
v13_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray37	typeref:typename:const T13
v13_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray38	typeref:typename:const T13
v13_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray39	typeref:typename:const T13
v13_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray40	typeref:typename:const T13
v13_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T13
v13_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T13
v13_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T13
v13_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T13
v13_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T13
v13_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T13
v13_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T13
v13_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T13
v13_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T13
v13_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T13
v14_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray14	typeref:typename:const T14
v14_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray15	typeref:typename:const T14
v14_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray16	typeref:typename:const T14
v14_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray17	typeref:typename:const T14
v14_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray18	typeref:typename:const T14
v14_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray19	typeref:typename:const T14
v14_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray20	typeref:typename:const T14
v14_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray21	typeref:typename:const T14
v14_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray22	typeref:typename:const T14
v14_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray23	typeref:typename:const T14
v14_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray24	typeref:typename:const T14
v14_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray25	typeref:typename:const T14
v14_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray26	typeref:typename:const T14
v14_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray27	typeref:typename:const T14
v14_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray28	typeref:typename:const T14
v14_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray29	typeref:typename:const T14
v14_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray30	typeref:typename:const T14
v14_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray31	typeref:typename:const T14
v14_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray32	typeref:typename:const T14
v14_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray33	typeref:typename:const T14
v14_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray34	typeref:typename:const T14
v14_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray35	typeref:typename:const T14
v14_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray36	typeref:typename:const T14
v14_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray37	typeref:typename:const T14
v14_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray38	typeref:typename:const T14
v14_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray39	typeref:typename:const T14
v14_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray40	typeref:typename:const T14
v14_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T14
v14_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T14
v14_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T14
v14_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T14
v14_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T14
v14_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T14
v14_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T14
v14_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T14
v14_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T14
v14_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T14
v15_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray15	typeref:typename:const T15
v15_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray16	typeref:typename:const T15
v15_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray17	typeref:typename:const T15
v15_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray18	typeref:typename:const T15
v15_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray19	typeref:typename:const T15
v15_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray20	typeref:typename:const T15
v15_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray21	typeref:typename:const T15
v15_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray22	typeref:typename:const T15
v15_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray23	typeref:typename:const T15
v15_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray24	typeref:typename:const T15
v15_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray25	typeref:typename:const T15
v15_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray26	typeref:typename:const T15
v15_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray27	typeref:typename:const T15
v15_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray28	typeref:typename:const T15
v15_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray29	typeref:typename:const T15
v15_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray30	typeref:typename:const T15
v15_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray31	typeref:typename:const T15
v15_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray32	typeref:typename:const T15
v15_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray33	typeref:typename:const T15
v15_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray34	typeref:typename:const T15
v15_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray35	typeref:typename:const T15
v15_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray36	typeref:typename:const T15
v15_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray37	typeref:typename:const T15
v15_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray38	typeref:typename:const T15
v15_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray39	typeref:typename:const T15
v15_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray40	typeref:typename:const T15
v15_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T15
v15_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T15
v15_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T15
v15_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T15
v15_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T15
v15_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T15
v15_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T15
v15_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T15
v15_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T15
v15_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T15
v16_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray16	typeref:typename:const T16
v16_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray17	typeref:typename:const T16
v16_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray18	typeref:typename:const T16
v16_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray19	typeref:typename:const T16
v16_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray20	typeref:typename:const T16
v16_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray21	typeref:typename:const T16
v16_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray22	typeref:typename:const T16
v16_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray23	typeref:typename:const T16
v16_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray24	typeref:typename:const T16
v16_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray25	typeref:typename:const T16
v16_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray26	typeref:typename:const T16
v16_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray27	typeref:typename:const T16
v16_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray28	typeref:typename:const T16
v16_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray29	typeref:typename:const T16
v16_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray30	typeref:typename:const T16
v16_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray31	typeref:typename:const T16
v16_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray32	typeref:typename:const T16
v16_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray33	typeref:typename:const T16
v16_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray34	typeref:typename:const T16
v16_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray35	typeref:typename:const T16
v16_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray36	typeref:typename:const T16
v16_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray37	typeref:typename:const T16
v16_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray38	typeref:typename:const T16
v16_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray39	typeref:typename:const T16
v16_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray40	typeref:typename:const T16
v16_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T16
v16_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T16
v16_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T16
v16_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T16
v16_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T16
v16_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T16
v16_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T16
v16_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T16
v16_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T16
v16_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T16
v17_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray17	typeref:typename:const T17
v17_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray18	typeref:typename:const T17
v17_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray19	typeref:typename:const T17
v17_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray20	typeref:typename:const T17
v17_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray21	typeref:typename:const T17
v17_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray22	typeref:typename:const T17
v17_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray23	typeref:typename:const T17
v17_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray24	typeref:typename:const T17
v17_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray25	typeref:typename:const T17
v17_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray26	typeref:typename:const T17
v17_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray27	typeref:typename:const T17
v17_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray28	typeref:typename:const T17
v17_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray29	typeref:typename:const T17
v17_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray30	typeref:typename:const T17
v17_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray31	typeref:typename:const T17
v17_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray32	typeref:typename:const T17
v17_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray33	typeref:typename:const T17
v17_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray34	typeref:typename:const T17
v17_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray35	typeref:typename:const T17
v17_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray36	typeref:typename:const T17
v17_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray37	typeref:typename:const T17
v17_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray38	typeref:typename:const T17
v17_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray39	typeref:typename:const T17
v17_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray40	typeref:typename:const T17
v17_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T17
v17_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T17
v17_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T17
v17_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T17
v17_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T17
v17_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T17
v17_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T17
v17_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T17
v17_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T17
v17_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T17
v18_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray18	typeref:typename:const T18
v18_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray19	typeref:typename:const T18
v18_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray20	typeref:typename:const T18
v18_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray21	typeref:typename:const T18
v18_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray22	typeref:typename:const T18
v18_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray23	typeref:typename:const T18
v18_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray24	typeref:typename:const T18
v18_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray25	typeref:typename:const T18
v18_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray26	typeref:typename:const T18
v18_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray27	typeref:typename:const T18
v18_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray28	typeref:typename:const T18
v18_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray29	typeref:typename:const T18
v18_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray30	typeref:typename:const T18
v18_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray31	typeref:typename:const T18
v18_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray32	typeref:typename:const T18
v18_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray33	typeref:typename:const T18
v18_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray34	typeref:typename:const T18
v18_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray35	typeref:typename:const T18
v18_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray36	typeref:typename:const T18
v18_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray37	typeref:typename:const T18
v18_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray38	typeref:typename:const T18
v18_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray39	typeref:typename:const T18
v18_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray40	typeref:typename:const T18
v18_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T18
v18_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T18
v18_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T18
v18_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T18
v18_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T18
v18_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T18
v18_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T18
v18_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T18
v18_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T18
v18_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T18
v19_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray19	typeref:typename:const T19
v19_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray20	typeref:typename:const T19
v19_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray21	typeref:typename:const T19
v19_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray22	typeref:typename:const T19
v19_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray23	typeref:typename:const T19
v19_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray24	typeref:typename:const T19
v19_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray25	typeref:typename:const T19
v19_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray26	typeref:typename:const T19
v19_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray27	typeref:typename:const T19
v19_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray28	typeref:typename:const T19
v19_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray29	typeref:typename:const T19
v19_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray30	typeref:typename:const T19
v19_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray31	typeref:typename:const T19
v19_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray32	typeref:typename:const T19
v19_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray33	typeref:typename:const T19
v19_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray34	typeref:typename:const T19
v19_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray35	typeref:typename:const T19
v19_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray36	typeref:typename:const T19
v19_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray37	typeref:typename:const T19
v19_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray38	typeref:typename:const T19
v19_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray39	typeref:typename:const T19
v19_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray40	typeref:typename:const T19
v19_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T19
v19_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T19
v19_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T19
v19_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T19
v19_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T19
v19_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T19
v19_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T19
v19_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T19
v19_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T19
v19_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T19
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray1	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray10	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray11	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray12	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray13	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray14	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray15	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray16	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray17	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray18	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray19	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray2	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray20	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray21	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray22	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray23	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray24	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray25	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray26	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray27	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray28	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray29	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray3	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray30	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray31	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray32	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray33	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray34	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray35	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray36	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray37	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray38	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray39	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray4	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray40	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray5	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray6	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray7	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray8	typeref:typename:const T1
v1_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray9	typeref:typename:const T1
v20_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray20	typeref:typename:const T20
v20_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray21	typeref:typename:const T20
v20_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray22	typeref:typename:const T20
v20_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray23	typeref:typename:const T20
v20_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray24	typeref:typename:const T20
v20_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray25	typeref:typename:const T20
v20_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray26	typeref:typename:const T20
v20_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray27	typeref:typename:const T20
v20_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray28	typeref:typename:const T20
v20_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray29	typeref:typename:const T20
v20_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray30	typeref:typename:const T20
v20_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray31	typeref:typename:const T20
v20_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray32	typeref:typename:const T20
v20_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray33	typeref:typename:const T20
v20_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray34	typeref:typename:const T20
v20_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray35	typeref:typename:const T20
v20_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray36	typeref:typename:const T20
v20_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray37	typeref:typename:const T20
v20_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray38	typeref:typename:const T20
v20_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray39	typeref:typename:const T20
v20_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray40	typeref:typename:const T20
v20_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T20
v20_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T20
v20_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T20
v20_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T20
v20_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T20
v20_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T20
v20_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T20
v20_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T20
v20_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T20
v20_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T20
v21_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray21	typeref:typename:const T21
v21_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray22	typeref:typename:const T21
v21_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray23	typeref:typename:const T21
v21_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray24	typeref:typename:const T21
v21_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray25	typeref:typename:const T21
v21_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray26	typeref:typename:const T21
v21_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray27	typeref:typename:const T21
v21_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray28	typeref:typename:const T21
v21_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray29	typeref:typename:const T21
v21_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray30	typeref:typename:const T21
v21_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray31	typeref:typename:const T21
v21_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray32	typeref:typename:const T21
v21_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray33	typeref:typename:const T21
v21_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray34	typeref:typename:const T21
v21_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray35	typeref:typename:const T21
v21_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray36	typeref:typename:const T21
v21_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray37	typeref:typename:const T21
v21_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray38	typeref:typename:const T21
v21_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray39	typeref:typename:const T21
v21_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray40	typeref:typename:const T21
v21_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T21
v21_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T21
v21_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T21
v21_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T21
v21_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T21
v21_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T21
v21_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T21
v21_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T21
v21_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T21
v21_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T21
v22_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray22	typeref:typename:const T22
v22_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray23	typeref:typename:const T22
v22_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray24	typeref:typename:const T22
v22_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray25	typeref:typename:const T22
v22_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray26	typeref:typename:const T22
v22_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray27	typeref:typename:const T22
v22_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray28	typeref:typename:const T22
v22_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray29	typeref:typename:const T22
v22_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray30	typeref:typename:const T22
v22_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray31	typeref:typename:const T22
v22_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray32	typeref:typename:const T22
v22_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray33	typeref:typename:const T22
v22_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray34	typeref:typename:const T22
v22_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray35	typeref:typename:const T22
v22_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray36	typeref:typename:const T22
v22_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray37	typeref:typename:const T22
v22_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray38	typeref:typename:const T22
v22_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray39	typeref:typename:const T22
v22_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray40	typeref:typename:const T22
v22_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T22
v22_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T22
v22_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T22
v22_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T22
v22_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T22
v22_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T22
v22_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T22
v22_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T22
v22_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T22
v22_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T22
v23_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray23	typeref:typename:const T23
v23_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray24	typeref:typename:const T23
v23_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray25	typeref:typename:const T23
v23_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray26	typeref:typename:const T23
v23_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray27	typeref:typename:const T23
v23_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray28	typeref:typename:const T23
v23_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray29	typeref:typename:const T23
v23_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray30	typeref:typename:const T23
v23_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray31	typeref:typename:const T23
v23_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray32	typeref:typename:const T23
v23_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray33	typeref:typename:const T23
v23_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray34	typeref:typename:const T23
v23_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray35	typeref:typename:const T23
v23_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray36	typeref:typename:const T23
v23_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray37	typeref:typename:const T23
v23_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray38	typeref:typename:const T23
v23_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray39	typeref:typename:const T23
v23_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray40	typeref:typename:const T23
v23_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T23
v23_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T23
v23_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T23
v23_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T23
v23_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T23
v23_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T23
v23_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T23
v23_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T23
v23_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T23
v23_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T23
v24_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray24	typeref:typename:const T24
v24_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray25	typeref:typename:const T24
v24_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray26	typeref:typename:const T24
v24_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray27	typeref:typename:const T24
v24_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray28	typeref:typename:const T24
v24_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray29	typeref:typename:const T24
v24_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray30	typeref:typename:const T24
v24_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray31	typeref:typename:const T24
v24_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray32	typeref:typename:const T24
v24_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray33	typeref:typename:const T24
v24_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray34	typeref:typename:const T24
v24_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray35	typeref:typename:const T24
v24_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray36	typeref:typename:const T24
v24_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray37	typeref:typename:const T24
v24_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray38	typeref:typename:const T24
v24_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray39	typeref:typename:const T24
v24_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray40	typeref:typename:const T24
v24_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T24
v24_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T24
v24_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T24
v24_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T24
v24_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T24
v24_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T24
v24_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T24
v24_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T24
v24_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T24
v24_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T24
v25_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray25	typeref:typename:const T25
v25_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray26	typeref:typename:const T25
v25_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray27	typeref:typename:const T25
v25_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray28	typeref:typename:const T25
v25_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray29	typeref:typename:const T25
v25_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray30	typeref:typename:const T25
v25_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray31	typeref:typename:const T25
v25_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray32	typeref:typename:const T25
v25_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray33	typeref:typename:const T25
v25_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray34	typeref:typename:const T25
v25_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray35	typeref:typename:const T25
v25_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray36	typeref:typename:const T25
v25_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray37	typeref:typename:const T25
v25_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray38	typeref:typename:const T25
v25_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray39	typeref:typename:const T25
v25_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray40	typeref:typename:const T25
v25_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T25
v25_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T25
v25_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T25
v25_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T25
v25_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T25
v25_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T25
v25_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T25
v25_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T25
v25_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T25
v25_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T25
v26_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray26	typeref:typename:const T26
v26_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray27	typeref:typename:const T26
v26_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray28	typeref:typename:const T26
v26_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray29	typeref:typename:const T26
v26_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray30	typeref:typename:const T26
v26_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray31	typeref:typename:const T26
v26_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray32	typeref:typename:const T26
v26_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray33	typeref:typename:const T26
v26_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray34	typeref:typename:const T26
v26_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray35	typeref:typename:const T26
v26_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray36	typeref:typename:const T26
v26_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray37	typeref:typename:const T26
v26_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray38	typeref:typename:const T26
v26_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray39	typeref:typename:const T26
v26_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray40	typeref:typename:const T26
v26_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T26
v26_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T26
v26_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T26
v26_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T26
v26_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T26
v26_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T26
v26_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T26
v26_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T26
v26_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T26
v26_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T26
v27_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray27	typeref:typename:const T27
v27_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray28	typeref:typename:const T27
v27_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray29	typeref:typename:const T27
v27_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray30	typeref:typename:const T27
v27_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray31	typeref:typename:const T27
v27_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray32	typeref:typename:const T27
v27_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray33	typeref:typename:const T27
v27_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray34	typeref:typename:const T27
v27_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray35	typeref:typename:const T27
v27_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray36	typeref:typename:const T27
v27_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray37	typeref:typename:const T27
v27_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray38	typeref:typename:const T27
v27_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray39	typeref:typename:const T27
v27_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray40	typeref:typename:const T27
v27_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T27
v27_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T27
v27_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T27
v27_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T27
v27_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T27
v27_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T27
v27_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T27
v27_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T27
v27_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T27
v27_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T27
v28_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray28	typeref:typename:const T28
v28_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray29	typeref:typename:const T28
v28_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray30	typeref:typename:const T28
v28_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray31	typeref:typename:const T28
v28_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray32	typeref:typename:const T28
v28_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray33	typeref:typename:const T28
v28_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray34	typeref:typename:const T28
v28_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray35	typeref:typename:const T28
v28_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray36	typeref:typename:const T28
v28_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray37	typeref:typename:const T28
v28_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray38	typeref:typename:const T28
v28_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray39	typeref:typename:const T28
v28_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray40	typeref:typename:const T28
v28_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T28
v28_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T28
v28_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T28
v28_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T28
v28_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T28
v28_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T28
v28_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T28
v28_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T28
v28_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T28
v28_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T28
v29_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray29	typeref:typename:const T29
v29_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray30	typeref:typename:const T29
v29_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray31	typeref:typename:const T29
v29_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray32	typeref:typename:const T29
v29_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray33	typeref:typename:const T29
v29_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray34	typeref:typename:const T29
v29_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray35	typeref:typename:const T29
v29_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray36	typeref:typename:const T29
v29_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray37	typeref:typename:const T29
v29_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray38	typeref:typename:const T29
v29_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray39	typeref:typename:const T29
v29_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray40	typeref:typename:const T29
v29_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T29
v29_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T29
v29_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T29
v29_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T29
v29_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T29
v29_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T29
v29_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T29
v29_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T29
v29_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T29
v29_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T29
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray10	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray11	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray12	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray13	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray14	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray15	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray16	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray17	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray18	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray19	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray2	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray20	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray21	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray22	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray23	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray24	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray25	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray26	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray27	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray28	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray29	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray3	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray30	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray31	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray32	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray33	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray34	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray35	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray36	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray37	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray38	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray39	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray4	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray40	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray5	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray6	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray7	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray8	typeref:typename:const T2
v2_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray9	typeref:typename:const T2
v30_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray30	typeref:typename:const T30
v30_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray31	typeref:typename:const T30
v30_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray32	typeref:typename:const T30
v30_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray33	typeref:typename:const T30
v30_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray34	typeref:typename:const T30
v30_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray35	typeref:typename:const T30
v30_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray36	typeref:typename:const T30
v30_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray37	typeref:typename:const T30
v30_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray38	typeref:typename:const T30
v30_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray39	typeref:typename:const T30
v30_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray40	typeref:typename:const T30
v30_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T30
v30_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T30
v30_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T30
v30_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T30
v30_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T30
v30_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T30
v30_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T30
v30_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T30
v30_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T30
v30_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T30
v31_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray31	typeref:typename:const T31
v31_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray32	typeref:typename:const T31
v31_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray33	typeref:typename:const T31
v31_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray34	typeref:typename:const T31
v31_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray35	typeref:typename:const T31
v31_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray36	typeref:typename:const T31
v31_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray37	typeref:typename:const T31
v31_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray38	typeref:typename:const T31
v31_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray39	typeref:typename:const T31
v31_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray40	typeref:typename:const T31
v31_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T31
v31_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T31
v31_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T31
v31_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T31
v31_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T31
v31_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T31
v31_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T31
v31_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T31
v31_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T31
v31_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T31
v32_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray32	typeref:typename:const T32
v32_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray33	typeref:typename:const T32
v32_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray34	typeref:typename:const T32
v32_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray35	typeref:typename:const T32
v32_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray36	typeref:typename:const T32
v32_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray37	typeref:typename:const T32
v32_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray38	typeref:typename:const T32
v32_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray39	typeref:typename:const T32
v32_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray40	typeref:typename:const T32
v32_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T32
v32_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T32
v32_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T32
v32_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T32
v32_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T32
v32_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T32
v32_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T32
v32_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T32
v32_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T32
v32_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T32
v33_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray33	typeref:typename:const T33
v33_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray34	typeref:typename:const T33
v33_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray35	typeref:typename:const T33
v33_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray36	typeref:typename:const T33
v33_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray37	typeref:typename:const T33
v33_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray38	typeref:typename:const T33
v33_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray39	typeref:typename:const T33
v33_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray40	typeref:typename:const T33
v33_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T33
v33_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T33
v33_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T33
v33_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T33
v33_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T33
v33_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T33
v33_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T33
v33_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T33
v33_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T33
v33_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T33
v34_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray34	typeref:typename:const T34
v34_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray35	typeref:typename:const T34
v34_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray36	typeref:typename:const T34
v34_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray37	typeref:typename:const T34
v34_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray38	typeref:typename:const T34
v34_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray39	typeref:typename:const T34
v34_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray40	typeref:typename:const T34
v34_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T34
v34_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T34
v34_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T34
v34_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T34
v34_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T34
v34_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T34
v34_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T34
v34_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T34
v34_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T34
v34_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T34
v35_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray35	typeref:typename:const T35
v35_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray36	typeref:typename:const T35
v35_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray37	typeref:typename:const T35
v35_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray38	typeref:typename:const T35
v35_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray39	typeref:typename:const T35
v35_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray40	typeref:typename:const T35
v35_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T35
v35_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T35
v35_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T35
v35_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T35
v35_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T35
v35_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T35
v35_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T35
v35_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T35
v35_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T35
v35_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T35
v36_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray36	typeref:typename:const T36
v36_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray37	typeref:typename:const T36
v36_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray38	typeref:typename:const T36
v36_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray39	typeref:typename:const T36
v36_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray40	typeref:typename:const T36
v36_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T36
v36_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T36
v36_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T36
v36_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T36
v36_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T36
v36_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T36
v36_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T36
v36_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T36
v36_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T36
v36_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T36
v37_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray37	typeref:typename:const T37
v37_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray38	typeref:typename:const T37
v37_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray39	typeref:typename:const T37
v37_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray40	typeref:typename:const T37
v37_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T37
v37_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T37
v37_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T37
v37_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T37
v37_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T37
v37_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T37
v37_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T37
v37_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T37
v37_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T37
v37_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T37
v38_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray38	typeref:typename:const T38
v38_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray39	typeref:typename:const T38
v38_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray40	typeref:typename:const T38
v38_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T38
v38_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T38
v38_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T38
v38_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T38
v38_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T38
v38_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T38
v38_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T38
v38_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T38
v38_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T38
v38_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T38
v39_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray39	typeref:typename:const T39
v39_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray40	typeref:typename:const T39
v39_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T39
v39_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T39
v39_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T39
v39_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T39
v39_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T39
v39_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T39
v39_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T39
v39_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T39
v39_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T39
v39_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T39
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray10	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray11	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray12	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray13	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray14	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray15	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray16	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray17	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray18	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray19	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray20	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray21	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray22	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray23	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray24	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray25	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray26	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray27	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray28	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray29	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray3	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray30	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray31	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray32	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray33	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray34	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray35	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray36	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray37	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray38	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray39	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray4	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray40	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray5	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray6	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray7	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray8	typeref:typename:const T3
v3_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray9	typeref:typename:const T3
v40_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray40	typeref:typename:const T40
v40_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T40
v40_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T40
v40_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T40
v40_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T40
v40_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T40
v40_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T40
v40_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T40
v40_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T40
v40_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T40
v40_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T40
v41_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T41
v41_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T41
v41_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T41
v41_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T41
v41_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T41
v41_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T41
v41_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T41
v41_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T41
v41_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T41
v41_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T41
v42_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T42
v42_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T42
v42_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T42
v42_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T42
v42_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T42
v42_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T42
v42_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T42
v42_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T42
v42_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T42
v43_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T43 v43_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T43
v43_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T43 v43_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T43
v43_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T43 v43_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T43
v43_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T43 v43_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T43
v43_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T43 v43_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T43
v43_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T43 v43_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T43
v43_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T43 v43_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T43
v43_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T43 v43_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T43
v44_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T44 v44_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T44
v44_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T44 v44_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T44
v44_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T44 v44_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T44
v44_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T44 v44_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T44
v44_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T44 v44_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T44
v44_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T44 v44_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T44
v44_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T44 v44_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T44
v45_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T45 v45_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T45
v45_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T45 v45_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T45
v45_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T45 v45_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T45
v45_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T45 v45_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T45
v45_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T45 v45_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T45
v45_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T45 v45_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T45
v46_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T46 v46_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T46
v46_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T46 v46_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T46
v46_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T46 v46_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T46
v46_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T46 v46_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T46
v46_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T46 v46_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T46
v47_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T47 v47_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T47
v47_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T47 v47_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T47
v47_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T47 v47_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T47
v47_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T47 v47_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T47
v48_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T48 v48_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T48
v48_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T48 v48_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T48
v48_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T48 v48_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T48
v49_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T49 v49_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T49
v49_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T49 v49_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T49
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray10	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray11	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray12	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray13	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray14	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray15	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray16	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray17	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray18	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray19	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray20	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray21	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray22	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray23	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray24	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray25	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray26	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray27	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray28	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray29	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray30	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray31	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray32	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray33	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray34	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray35	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray36	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray37	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray38	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray39	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray4	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray40	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray5	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray6	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray7	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray8	typeref:typename:const T4
v4_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray9	typeref:typename:const T4
v50_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T50 v50_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T50
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray10	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray11	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray12	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray13	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray14	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray15	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray16	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray17	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray18	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray19	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray20	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray21	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray22	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray23	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray24	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray25	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray26	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray27	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray28	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray29	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray30	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray31	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray32	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray33	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray34	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray35	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray36	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray37	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray38	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray39	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray40	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray5	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray6	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray7	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray8	typeref:typename:const T5
v5_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray9	typeref:typename:const T5
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray10	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray11	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray12	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray13	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray14	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray15	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray16	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray17	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray18	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray19	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray20	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray21	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray22	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray23	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray24	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray25	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray26	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray27	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray28	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray29	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray30	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray31	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray32	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray33	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray34	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray35	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray36	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray37	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray38	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray39	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray40	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray6	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray7	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray8	typeref:typename:const T6
v6_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray9	typeref:typename:const T6
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray10	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray11	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray12	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray13	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray14	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray15	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray16	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray17	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray18	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray19	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray20	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray21	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray22	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray23	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray24	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray25	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray26	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray27	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray28	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray29	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray30	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray31	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray32	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray33	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray34	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray35	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray36	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray37	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray38	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray39	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray40	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray7	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray8	typeref:typename:const T7
v7_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray9	typeref:typename:const T7
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray10	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray11	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray12	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray13	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray14	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray15	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray16	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray17	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray18	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray19	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray20	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray21	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray22	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray23	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray24	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray25	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray26	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray27	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray28	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray29	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray30	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray31	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray32	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray33	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray34	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray35	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray36	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray37	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray38	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray39	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray40	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray8	typeref:typename:const T8
v8_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray9	typeref:typename:const T8
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray10	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray11	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray12	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray13	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray14	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray15	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray16	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray17	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray18	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray19	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray20	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray21	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray22	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray23	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray24	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray25	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray26	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray27	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray28	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray29	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray30	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray31	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray32	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray33	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray34	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray35	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray36	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray37	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray38	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray39	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray40	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray41	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray42	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray43	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray44	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray45	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray46	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray47	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray48	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray49	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray50	typeref:typename:const T9
v9_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray9	typeref:typename:const T9
val_	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  T* val_;$/;"	m	class:testing::gmock_matchers_test::ConstPropagatingPtr	typeref:typename:T *	file:
valid	src/muduo/muduo/base/Date.h	/^  bool valid() const { return julianDayNumber_ > 0; }$/;"	f	class:muduo::Date	typeref:typename:bool
valid	src/muduo/muduo/base/GzipFile.h	/^  bool valid() const { return file_ != NULL; }$/;"	f	class:muduo::GzipFile	typeref:typename:bool
valid	src/muduo/muduo/base/TimeZone.cc	/^  bool valid() const { return fp_; }$/;"	f	class:muduo::detail::File	typeref:typename:bool	file:
valid	src/muduo/muduo/base/TimeZone.h	/^  bool valid() const$/;"	f	class:muduo::TimeZone	typeref:typename:bool
valid	src/muduo/muduo/base/Timestamp.h	/^  bool valid() const { return microSecondsSinceEpoch_ > 0; }$/;"	f	class:muduo::Timestamp	typeref:typename:bool
validateChecksum	src/muduo/muduo/net/protobuf/ProtobufCodecLite.cc	/^bool ProtobufCodecLite::validateChecksum(const char* buf, int len)$/;"	f	class:ProtobufCodecLite	typeref:typename:bool
value	src/muduo/examples/memcached/server/Item.h	/^  const char* value() const$/;"	f	class:Item	typeref:typename:const char *
value	src/muduo/muduo/base/Singleton.h	/^  const static bool value = sizeof(test<T>(0)) == 1;$/;"	m	struct:muduo::detail::has_no_destroy	typeref:typename:const bool
value	src/muduo/muduo/base/ThreadLocal.h	/^  T& value()$/;"	f	class:muduo::ThreadLocal	typeref:typename:T &
value	src/tests/fakes/lagrangehalfc.h	/^        innerPolynomial value;$/;"	m	struct:__anonb49ff32c0111::FakeLagrangeHalfCPolynomial	typeref:typename:innerPolynomial
value	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^  enum { value = kOther };  \/\/ The default kind.$/;"	e	enum:testing::internal::KindOf::__anon31245b4e0103
value	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^  int value() const { return value_; }$/;"	f	class:__anon550198f10111::MyDefaultConstructible	typeref:typename:int	file:
value	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^  int value() const { return value_; }$/;"	f	class:__anon550198f10111::MyNonDefaultConstructible	typeref:typename:int	file:
value	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^  int value;$/;"	m	struct:testing::gmock_generated_actions_test::GiantTemplate	typeref:typename:int	file:
value	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  const int* value;$/;"	m	struct:testing::gmock_matchers_test::IntReferenceWrapper	typeref:typename:const int *	file:
value	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  int value() const { return value_; }$/;"	f	class:testing::gmock_matchers_test::IntValue	typeref:typename:int	file:
value	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  int value() const { return value_; }$/;"	f	class:testing::gmock_matchers_test::NotCopyable	typeref:typename:int	file:
value	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  int value() const { return value_; }$/;"	f	class:testing::gmock_matchers_test::Uncopyable	typeref:typename:int	file:
value	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  int value;$/;"	m	struct:testing::gmock_matchers_test::ConvertibleFromAny	typeref:typename:int	file:
value	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^  int value;$/;"	m	struct:__anon6b6cf3b20111::Unprintable	typeref:typename:int	file:
value	src/tests/googletest/googletest/include/gtest/gtest.h	/^  const char* value() const {$/;"	f	class:testing::TestProperty	typeref:typename:const char *
value	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  const char* value;$/;"	m	struct:testing::internal::ConstCharPtr	typeref:typename:const char *
value	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  static const bool value = __is_convertible(From, To);$/;"	m	class:testing::internal::ImplicitlyConvertible	typeref:typename:const bool
value	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^const bool ImplicitlyConvertible<From, To>::value;$/;"	m	class:testing::internal::ImplicitlyConvertible<From, To>	typeref:typename:const bool
value	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  enum { value = true };$/;"	e	enum:testing::internal::StaticAssertTypeEqHelper::__anondac0f39a0103
value	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  static const bool value = bool_value;$/;"	m	struct:testing::internal::bool_constant	typeref:typename:const bool
value	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^template <bool bool_value> const bool bool_constant<bool_value>::value;$/;"	m	class:testing::internal::bool_constant<bool_value>	typeref:typename:const bool
value	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  const std::string& value() const { return value_; }$/;"	f	class:DogAdder	typeref:typename:const std::string &	file:
value	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  int value() const { return value_; }$/;"	f	class:IntWrapper	typeref:typename:int	file:
value	src/tests/googletest/googletest/test/gtest-port_test.cc	/^  int value() const { return value_; }$/;"	f	class:testing::internal::AtomicCounterWithMutex	typeref:typename:int	file:
value	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^  const T& value() const { return value_; }$/;"	f	class:foo::PrintableViaPrintToTemplate	typeref:typename:const T &	file:
value	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^  const T& value() const { return value_; }$/;"	f	class:foo::StreamableTemplateInFoo	typeref:typename:const T &	file:
value	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^  int value;$/;"	m	struct:foo::PrintableViaPrintTo	typeref:typename:int	file:
value	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^  int value;$/;"	m	struct:testing::gtest_printers_test::Foo	typeref:typename:int	file:
value	src/tests/googletest/googletest/test/gtest_list_tests_unittest_.cc	/^  const std::string& value() const { return value_; }$/;"	f	class:MyType	typeref:typename:const std::string &	file:
value	src/tests/googletest/googletest/test/gtest_pred_impl_unittest.cc	/^  bool value;$/;"	m	struct:Bool	typeref:typename:bool	file:
value	src/tests/googletest/googletest/test/gtest_unittest.cc	/^    bool value;$/;"	m	struct:TEST::ExplicitlyConvertibleToBool	typeref:typename:bool	file:
value	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  int value() const { return value_; }$/;"	f	class:__anonf780395f0111::Uncopyable	typeref:typename:int	file:
valueLength	src/muduo/examples/memcached/server/Item.h	/^  size_t valueLength() const$/;"	f	class:Item	typeref:typename:size_t
value_	src/muduo/examples/memcached/client/bench.cc	/^  string value_;$/;"	m	class:Client	typeref:typename:string	file:
value_	src/muduo/muduo/base/Atomic.h	/^  volatile T value_;$/;"	m	class:muduo::detail::AtomicIntegerT	typeref:typename:volatile T
value_	src/muduo/muduo/base/Singleton.h	/^  static T*             value_;$/;"	m	class:muduo::Singleton	typeref:typename:T *
value_	src/muduo/muduo/base/Singleton.h	/^T* Singleton<T>::value_ = NULL;$/;"	m	class:muduo::Singleton<T>	typeref:typename:T *
value_	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    Result value_;$/;"	m	class:testing::internal::ReturnAction::Impl	typeref:typename:Result
value_	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    T value_;$/;"	m	class:testing::internal::ReturnRefOfCopyAction::Impl	typeref:typename:T
value_	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    const T value_;$/;"	m	class:testing::DefaultValue::FixedValueProducer	typeref:typename:const T
value_	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  const A value_;$/;"	m	class:testing::internal::SetArgumentPointeeAction	typeref:typename:const A
value_	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  const T value_;$/;"	m	class:testing::internal::ReturnRefOfCopyAction	typeref:typename:const T
value_	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  const T2 value_;$/;"	m	class:testing::internal::AssignAction	typeref:typename:const T2
value_	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  const linked_ptr<R> value_;$/;"	m	class:testing::internal::ReturnAction	typeref:typename:const linked_ptr<R>
value_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  T value_;$/;"	m	class:testing::internal::ReferenceOrValueWrapper	typeref:typename:T
value_	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^  int value_;$/;"	m	class:__anon550198f10111::Foo	typeref:typename:int	file:
value_	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^  int value_;$/;"	m	class:__anon550198f10111::MyDefaultConstructible	typeref:typename:int	file:
value_	src/tests/googletest/googlemock/test/gmock-actions_test.cc	/^  int value_;$/;"	m	class:__anon550198f10111::MyNonDefaultConstructible	typeref:typename:int	file:
value_	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^  bool* value_;$/;"	m	class:testing::gmock_generated_actions_test::BoolResetter	typeref:typename:bool *	file:
value_	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^  int value_;$/;"	m	class:testing::gmock_generated_actions_test::NullaryConstructorClass	typeref:typename:int	file:
value_	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^  int value_;$/;"	m	class:testing::gmock_generated_actions_test::TenArgConstructorClass	typeref:typename:int	file:
value_	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^  int value_;$/;"	m	class:testing::gmock_generated_actions_test::UnaryConstructorClass	typeref:typename:int	file:
value_	src/tests/googletest/googlemock/test/gmock-generated-matchers_test.cc	/^  char value_;$/;"	m	class:__anoncaf4ae130111::UncopyableFoo	typeref:typename:char	file:
value_	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^      value_type value_;$/;"	m	class:testing::gmock_matchers_test::Streamlike::ConstIter::PostIncrProxy	typeref:typename:value_type	file:
value_	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  int value_;$/;"	m	class:testing::gmock_matchers_test::IntValue	typeref:typename:int	file:
value_	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  int value_;$/;"	m	class:testing::gmock_matchers_test::NotCopyable	typeref:typename:int	file:
value_	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  int value_;$/;"	m	class:testing::gmock_matchers_test::Uncopyable	typeref:typename:int	file:
value_	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^  int value_;$/;"	m	class:testing::gmock_more_actions_test::Foo	typeref:typename:int	file:
value_	src/tests/googletest/googletest/include/gtest/gtest.h	/^  std::string value_;$/;"	m	class:testing::TestProperty	typeref:typename:std::string
value_	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^    RawType value_;  \/\/ The raw floating-point number.$/;"	m	union:testing::internal::FloatingPoint::FloatingPointUnion	typeref:typename:RawType
value_	src/tests/googletest/googletest/include/gtest/internal/gtest-linked_ptr.h	/^  T* value_;$/;"	m	class:testing::internal::linked_ptr	typeref:typename:T *
value_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^    T value_;$/;"	m	class:testing::internal::RangeGenerator::Iterator	typeref:typename:T
value_	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^    mutable scoped_ptr<const T> value_;$/;"	m	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator	typeref:typename:scoped_ptr<const T>
value_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^    T value_;$/;"	m	class:testing::internal::ThreadLocal::ValueHolder	typeref:typename:T
value_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^    const T value_;  \/\/ The value for each thread.$/;"	m	class:testing::internal::ThreadLocal::InstanceValueHolderFactory	typeref:typename:const T
value_	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  T value_;$/;"	m	class:testing::internal::ThreadLocal	typeref:typename:T
value_	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  int value_;$/;"	m	class:IntWrapper	typeref:typename:int	file:
value_	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  int value_;$/;"	m	class:Unstreamable	typeref:typename:int	file:
value_	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  std::string value_;$/;"	m	class:DogAdder	typeref:typename:std::string	file:
value_	src/tests/googletest/googletest/test/gtest-port_test.cc	/^  volatile int value_;$/;"	m	class:testing::internal::AtomicCounterWithMutex	typeref:typename:volatile int	file:
value_	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^  T value_;$/;"	m	class:UnprintableTemplateInGlobal	typeref:typename:T	file:
value_	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^  T value_;$/;"	m	class:foo::PrintableViaPrintToTemplate	typeref:typename:T	file:
value_	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^  T value_;$/;"	m	class:foo::StreamableTemplateInFoo	typeref:typename:T	file:
value_	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^  T value_;$/;"	m	class:CommonTest	typeref:typename:T	file:
value_	src/tests/googletest/googletest/test/gtest_list_tests_unittest_.cc	/^  std::string value_;$/;"	m	class:MyType	typeref:typename:std::string	file:
value_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  int value_;$/;"	m	class:__anonf780395f0111::Uncopyable	typeref:typename:int	file:
value_before_cast_	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    R value_before_cast_;$/;"	m	class:testing::internal::ReturnAction::Impl	typeref:typename:R
value_param	src/tests/googletest/googletest/include/gtest/gtest.h	/^  const char* value_param() const {$/;"	f	class:testing::TestInfo	typeref:typename:const char *
value_param_	src/tests/googletest/googletest/include/gtest/gtest.h	/^  const internal::scoped_ptr<const ::std::string> value_param_;$/;"	m	class:testing::TestInfo	typeref:typename:const internal::scoped_ptr<const::std::string>
value_ptr_	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  T* value_ptr_;$/;"	m	class:testing::internal::ReferenceOrValueWrapper	typeref:typename:T *
value_type	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  typedef Expectation::Set::value_type value_type;$/;"	t	class:testing::ExpectationSet	typeref:typename:Expectation::Set::value_type
value_type	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  typedef T value_type;$/;"	t	class:testing::gmock_matchers_test::Streamlike	typeref:typename:T	file:
value_type	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  typedef Element value_type;$/;"	t	class:testing::internal::NativeArray	typeref:typename:Element
value_type	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  typedef T value_type;$/;"	t	class:testing::internal::ParamIterator	typeref:typename:T
value_type	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  typedef T value_type;$/;"	t	struct:testing::internal::IteratorTraits	typeref:typename:T
value_type	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  typedef typename Iterator::value_type value_type;$/;"	t	struct:testing::internal::IteratorTraits	typeref:typename:Iterator::value_type
valuelen_	src/muduo/examples/memcached/client/bench.cc	/^  const int valuelen_;$/;"	m	class:Client	typeref:typename:const int	file:
valuelen_	src/muduo/examples/memcached/server/Item.h	/^  const int      valuelen_;$/;"	m	class:Item	typeref:typename:const int
values_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^    FloatingPointTest<RawType>::values_;$/;"	m	class:__anonf780395f0111::FloatingPointTest<RawType>	typeref:typename:FloatingPointTest<RawType>::TestValues
values_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  static TestValues values_;$/;"	m	class:__anonf780395f0111::FloatingPointTest	typeref:typename:TestValues	file:
variance_overhead	src/tests/fakes/lwe-keyswitch.h	/^        double variance_overhead;$/;"	m	struct:__anonbf4a421d0111::FakeLweKeySwitchKey	typeref:typename:double
vector_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  TestingVector vector_;$/;"	m	class:__anonf780395f0111::VectorShuffleTest	typeref:typename:TestingVector	file:
vector_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  std::vector<std::string>* vector_;$/;"	m	class:SequenceTestingListener	typeref:typename:std::vector<std::string> *	file:
ver	src/libtfhe-superaic-core/include/tfhe_package.h	/^    uint16_t ver;$/;"	m	struct:TFHE_Comm_Pack	typeref:typename:uint16_t
verbose_	src/muduo/muduo/base/tests/BlockingQueue_bench2.cc	/^  const bool verbose_ = true;$/;"	m	class:Bench	typeref:typename:const bool	file:
verbosity	src/tests/googletest/googlemock/scripts/upload.py	/^verbosity = 1$/;"	v
verbosity	src/tests/googletest/googletest/scripts/upload.py	/^verbosity = 1$/;"	v
verify	src/muduo/examples/sudoku/batch.cc	/^bool verify(const string& result)$/;"	f	typeref:typename:bool
verify	src/muduo/examples/sudoku/loadtest.cc	/^  bool verify(const string& response, Timestamp recvTime)$/;"	f	class:SudokuClient	typeref:typename:bool	file:
verify	src/muduo/examples/sudoku/pipeline.cc	/^  bool verify(const string& response, Timestamp recvTime)$/;"	f	class:SudokuClient	typeref:typename:bool	file:
version	src/muduo/examples/fastcgi/fastcgi.cc	/^  uint8_t version;$/;"	m	struct:FastCgiCodec::RecordHeader	typeref:typename:uint8_t	file:
version	src/muduo/muduo/net/inspect/SystemInspector.cc	/^string SystemInspector::version(HttpRequest::Method, const Inspector::ArgList&)$/;"	f	class:SystemInspector	typeref:typename:string
version_	src/muduo/muduo/net/http/HttpRequest.h	/^  Version version_;$/;"	m	class:muduo::net::HttpRequest	typeref:typename:Version
version_expression	src/tests/googletest/googletest/xcode/Scripts/versiongenerate.py	/^version_expression = re.compile(r"AC_INIT\\(.*?\\[(\\d+)\\.(\\d+)\\.(\\d+)\\].*?\\)",$/;"	v
version_file	src/tests/googletest/googletest/xcode/Scripts/versiongenerate.py	/^version_file = open("%s\/Version.h" % output_dir, 'w')$/;"	v
version_values	src/tests/googletest/googletest/xcode/Scripts/versiongenerate.py	/^version_values = version_expression.search(opening_string)$/;"	v
volatile	buildotests/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^# define volatile$/;"	d	file:
vsizeKb	src/muduo/examples/procmon/procmon.cc	/^  long vsizeKb;$/;"	m	struct:StatData	typeref:typename:long	file:
vsnprintf	src/tests/googletest/googletest/src/gtest.cc	/^# define vsnprintf _vsnprintf$/;"	d	file:
wait	src/muduo/muduo/base/Condition.h	/^  void wait()$/;"	f	class:muduo::Condition	typeref:typename:void
wait	src/muduo/muduo/base/CountDownLatch.cc	/^void CountDownLatch::wait()$/;"	f	class:CountDownLatch	typeref:typename:void
waitForSeconds	src/muduo/muduo/base/Condition.cc	/^bool muduo::Condition::waitForSeconds(double seconds)$/;"	f	class:muduo::Condition	typeref:typename:bool
wait_calls_	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  int wait_calls_;$/;"	m	class:MockDeathTestFactory	typeref:typename:int	file:
wait_event_	src/tests/googletest/googletest/test/gtest-port_test.cc	/^  AutoHandle wait_event_;$/;"	m	class:testing::internal::DestructorCall	typeref:typename:AutoHandle	file:
wait_event_timeout	src/libtfhe-superaic-acc/accs/FPGA-V0/acc_fpga_v0.cpp	/^bool FPGA_ACC_V0::wait_event_timeout(void) {$/;"	f	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:bool
wakeup	src/muduo/muduo/net/EventLoop.cc	/^void EventLoop::wakeup()$/;"	f	class:EventLoop	typeref:typename:void
wakeupChannel_	src/muduo/muduo/net/EventLoop.h	/^  std::unique_ptr<Channel> wakeupChannel_;$/;"	m	class:muduo::net::EventLoop	typeref:typename:std::unique_ptr<Channel>
wakeupFd_	src/muduo/muduo/net/EventLoop.h	/^  int wakeupFd_;$/;"	m	class:muduo::net::EventLoop	typeref:typename:int
weakConn_	src/muduo/examples/idleconnection/echo.h	/^    WeakTcpConnectionPtr weakConn_;$/;"	m	struct:EchoServer::Entry	typeref:typename:WeakTcpConnectionPtr
weekDay	src/muduo/muduo/base/Date.h	/^  int weekDay() const$/;"	f	class:muduo::Date	typeref:typename:int
what	src/muduo/muduo/base/Exception.h	/^  const char* what() const noexcept override$/;"	f	class:muduo::Exception	typeref:typename:const char *
what	src/tests/googletest/googletest/test/gtest-death-test_ex_test.cc	/^  virtual const char* what() const throw() { return "exceptional message"; }$/;"	f	class:TestException	typeref:typename:const char *	file:
whichClient	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/DataEvent.java	/^    public final int whichClient;$/;"	f	class:DataEvent
width_	src/muduo/examples/procmon/plot.h	/^  const int width_;$/;"	m	class:Plot	typeref:typename:const int
word	src/muduo/examples/wordcount/gen.py	/^	word = ''.join(arr)$/;"	v
word_len	src/muduo/examples/wordcount/gen.py	/^word_len = 5$/;"	v
wordcount_hasher	src/muduo/examples/wordcount/CMakeLists.txt	/^add_executable(wordcount_hasher hasher.cc)$/;"	t
wordcount_receiver	src/muduo/examples/wordcount/CMakeLists.txt	/^add_executable(wordcount_receiver receiver.cc)$/;"	t
wordcounts_	src/muduo/examples/wordcount/receiver.cc	/^  WordCountMap wordcounts_;$/;"	m	class:WordCountReceiver	typeref:typename:WordCountMap	file:
words	src/muduo/examples/wordcount/gen.py	/^words = 1000000$/;"	v
worker	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockBackendServer.java	/^    private final Executor worker;$/;"	f	class:MockBackendServer	file:
worker	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MockClient.java	/^    private final Executor worker;$/;"	f	class:MockClient	file:
worker	src/muduo/examples/multiplexer/harness/src/com/chenshuo/muduo/example/multiplexer/MultiplexerTest.java	/^    private final ExecutorService worker;$/;"	f	class:MultiplexerTest	file:
workerThreadPool	src/muduo/contrib/thrift/ThriftServer.h	/^  muduo::ThreadPool& workerThreadPool()$/;"	f	class:ThriftServer	typeref:typename:muduo::ThreadPool &
workerThreadPool_	src/muduo/contrib/thrift/ThriftServer.h	/^  muduo::ThreadPool workerThreadPool_;$/;"	m	class:ThriftServer	typeref:typename:muduo::ThreadPool
wrapper_	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    const linked_ptr<R> wrapper_;$/;"	m	class:testing::internal::ReturnAction::Impl	typeref:typename:const linked_ptr<R>
writableBytes	src/muduo/muduo/net/Buffer.h	/^  size_t writableBytes() const$/;"	f	class:muduo::net::Buffer	typeref:typename:size_t
write	src/muduo/examples/ace/logging/client.cc	/^  void write(const StringPiece& message)$/;"	f	class:logging::LogClient	typeref:typename:void	file:
write	src/muduo/examples/asio/chat/client.cc	/^  void write(const StringPiece& message)$/;"	f	class:ChatClient	typeref:typename:void	file:
write	src/muduo/muduo/base/FileUtil.cc	/^size_t FileUtil::AppendFile::write(const char* logline, size_t len)$/;"	f	class:FileUtil::AppendFile	typeref:typename:size_t
write	src/muduo/muduo/base/GzipFile.h	/^  int write(StringPiece buf) { return ::gzwrite(file_, buf.data(), buf.size()); }$/;"	f	class:muduo::GzipFile	typeref:typename:int
write	src/muduo/muduo/net/SocketsOps.cc	/^ssize_t sockets::write(int sockfd, const void *buf, size_t count)$/;"	f	class:sockets	typeref:typename:ssize_t
write	src/muduo/muduo/net/ZlibStream.h	/^  bool write(Buffer* input)$/;"	f	class:muduo::net::ZlibOutputStream	typeref:typename:bool
write	src/muduo/muduo/net/ZlibStream.h	/^  bool write(StringPiece buf)$/;"	f	class:muduo::net::ZlibOutputStream	typeref:typename:bool
writeCallback_	src/muduo/muduo/net/Channel.h	/^  EventCallback writeCallback_;$/;"	m	class:muduo::net::Channel	typeref:typename:EventCallback
writeComplete	src/muduo/examples/sudoku/server_prod.cc	/^  void writeComplete(const TcpConnectionPtr& conn)$/;"	f	class:SudokuServer	typeref:typename:void	file:
writeCompleteCallback_	src/muduo/muduo/net/TcpClient.h	/^  WriteCompleteCallback writeCompleteCallback_;$/;"	m	class:muduo::net::TcpClient	typeref:typename:WriteCompleteCallback
writeCompleteCallback_	src/muduo/muduo/net/TcpConnection.h	/^  WriteCompleteCallback writeCompleteCallback_;$/;"	m	class:muduo::net::TcpConnection	typeref:typename:WriteCompleteCallback
writeCompleteCallback_	src/muduo/muduo/net/TcpServer.h	/^  WriteCompleteCallback writeCompleteCallback_;$/;"	m	class:muduo::net::TcpServer	typeref:typename:WriteCompleteCallback
writeData	src/muduo/examples/curl/Curl.cc	/^size_t Request::writeData(char* buffer, size_t size, size_t nmemb, void* userp)$/;"	f	class:Request	typeref:typename:size_t
write_LweBootstrappingKey_content	src/libtfhe-superaic-core/tfhe_io.cpp	/^void write_LweBootstrappingKey_content(const Ostream &F, const LweBootstrappingKey *bk) {$/;"	f	typeref:typename:void
write_LweKeySwitchKey_content	src/libtfhe-superaic-core/tfhe_io.cpp	/^void write_LweKeySwitchKey_content(const Ostream &F, const LweKeySwitchKey *ks) {$/;"	f	typeref:typename:void
write_LweKeySwitchParameters_section	src/libtfhe-superaic-core/tfhe_io.cpp	/^void write_LweKeySwitchParameters_section(const Ostream &F, const LweKeySwitchKey *ks) {$/;"	f	typeref:typename:void
write_fd	src/tests/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h	/^  int write_fd() const { return write_fd_; }$/;"	f	class:testing::internal::InternalRunDeathTestFlag	typeref:typename:int
write_fd	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  int write_fd() const { return write_fd_; }$/;"	f	class:testing::internal::DeathTestImpl	typeref:typename:int	file:
write_fd_	src/tests/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h	/^  int write_fd_;$/;"	m	class:testing::internal::InternalRunDeathTestFlag	typeref:typename:int
write_fd_	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  int write_fd_;$/;"	m	class:testing::internal::DeathTestImpl	typeref:typename:int	file:
write_handle_	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  AutoHandle write_handle_;$/;"	m	class:testing::internal::WindowsDeathTest	typeref:typename:AutoHandle	file:
write_lweBootstrappingKey	src/libtfhe-superaic-core/tfhe_io.cpp	/^void write_lweBootstrappingKey(const Ostream &F, const LweBootstrappingKey *bk, bool write_inout/;"	f	typeref:typename:void
write_lweKey	src/libtfhe-superaic-core/tfhe_io.cpp	/^void write_lweKey(const Ostream &F, const LweKey *key, bool output_params = true) {$/;"	f	typeref:typename:void
write_lweKeySwitchKey	src/libtfhe-superaic-core/tfhe_io.cpp	/^void write_lweKeySwitchKey(const Ostream &F, const LweKeySwitchKey *ks, bool output_LweParams = /;"	f	typeref:typename:void
write_lweKey_content	src/libtfhe-superaic-core/tfhe_io.cpp	/^void write_lweKey_content(const Ostream &F, const LweKey *key) {$/;"	f	typeref:typename:void
write_lweParams	src/libtfhe-superaic-core/tfhe_io.cpp	/^void write_lweParams(const Ostream &F, const LweParams *lweparams) {$/;"	f	typeref:typename:void
write_lweSample	src/libtfhe-superaic-core/tfhe_io.cpp	/^void write_lweSample(const Ostream &F, const LweSample *sample, const LweParams *params) {$/;"	f	typeref:typename:void
write_n	src/muduo/examples/ace/ttcp/ttcp_blocking.cc	/^static int write_n(int sockfd, const void* buf, int length)$/;"	f	typeref:typename:int	file:
write_tGswKey	src/libtfhe-superaic-core/tfhe_io.cpp	/^void write_tGswKey(const Ostream &F, const TGswKey *key, bool output_params = true) {$/;"	f	typeref:typename:void
write_tGswKey_content	src/libtfhe-superaic-core/tfhe_io.cpp	/^void write_tGswKey_content(const Ostream &F, const TGswKey *key) {$/;"	f	typeref:typename:void
write_tGswParams	src/libtfhe-superaic-core/tfhe_io.cpp	/^void write_tGswParams(const Ostream &F, const TGswParams *tgswparams) {$/;"	f	typeref:typename:void
write_tGswParams_section	src/libtfhe-superaic-core/tfhe_io.cpp	/^void write_tGswParams_section(const Ostream &F, const TGswParams *tgswparams) {$/;"	f	typeref:typename:void
write_tGswSample	src/libtfhe-superaic-core/tfhe_io.cpp	/^void write_tGswSample(const Ostream &F, const TGswSample *sample, const TGswParams *params) {$/;"	f	typeref:typename:void
write_tLweKey	src/libtfhe-superaic-core/tfhe_io.cpp	/^void write_tLweKey(const Ostream &F, const TLweKey *key) {$/;"	f	typeref:typename:void
write_tLweKey_content	src/libtfhe-superaic-core/tfhe_io.cpp	/^void write_tLweKey_content(const Ostream &F, const TLweKey *key) {$/;"	f	typeref:typename:void
write_tLweParams	src/libtfhe-superaic-core/tfhe_io.cpp	/^void write_tLweParams(const Ostream &F, const TLweParams *tlweparams) {$/;"	f	typeref:typename:void
write_tLweSample	src/libtfhe-superaic-core/tfhe_io.cpp	/^void write_tLweSample(const Ostream &F, const TLweSample *sample, const TLweParams *params) {$/;"	f	typeref:typename:void
write_tfheGateBootstrappingCloudKeySet	src/libtfhe-superaic-core/tfhe_io.cpp	/^void write_tfheGateBootstrappingCloudKeySet(const Ostream &F, const TFheGateBootstrappingCloudKe/;"	f	typeref:typename:void
write_tfheGateBootstrappingParameters	src/libtfhe-superaic-core/tfhe_io.cpp	/^void write_tfheGateBootstrappingParameters(const Ostream &F, const TFheGateBootstrappingParamete/;"	f	typeref:typename:void
write_tfheGateBootstrappingProperParameters_section	src/libtfhe-superaic-core/tfhe_io.cpp	/^write_tfheGateBootstrappingProperParameters_section(const Ostream &F, const TFheGateBootstrappin/;"	f	typeref:typename:void
write_tfheGateBootstrappingSecretKeySet	src/libtfhe-superaic-core/tfhe_io.cpp	/^void write_tfheGateBootstrappingSecretKeySet(const Ostream &F, const TFheGateBootstrappingSecret/;"	f	typeref:typename:void
write_word_lite	src/libtfhe-superaic-acc/accs/FPGA-V0/acc_fpga_v0.cpp	/^ACC_RESULT FPGA_ACC_V0::write_word_lite(uint32_t address, uint32_t value) {$/;"	f	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:ACC_RESULT
write_word_mask_lite	src/libtfhe-superaic-acc/accs/FPGA-V0/acc_fpga_v0.cpp	/^ACC_RESULT FPGA_ACC_V0::write_word_mask_lite(uint32_t address, uint32_t value, uint32_t mask) {$/;"	f	class:tfhe_superaic::FPGA_ACC_V0	typeref:typename:ACC_RESULT
writerIndex_	src/muduo/muduo/net/Buffer.h	/^  size_t writerIndex_;$/;"	m	class:muduo::net::Buffer	typeref:typename:size_t
writtenBytes	src/muduo/muduo/base/FileUtil.h	/^  off_t writtenBytes() const { return writtenBytes_; }$/;"	f	class:muduo::FileUtil::AppendFile	typeref:typename:off_t
writtenBytes_	src/muduo/muduo/base/FileUtil.h	/^  off_t writtenBytes_;$/;"	m	class:muduo::FileUtil::AppendFile	typeref:typename:off_t
wstring	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^typedef ::std::wstring wstring;$/;"	t	namespace:testing::internal	typeref:typename:::std::wstring
wstring	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^typedef ::wstring wstring;$/;"	t	namespace:testing::internal	typeref:typename:::wstring
x	src/muduo/muduo/base/tests/Fork_test.cc	/^__thread int x = 0;$/;"	v	namespace:__anonf7fdcc1f0111	typeref:typename:int
x	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  double& x() const { return x_; }$/;"	f	class:testing::gmock_matchers_test::AClass	typeref:typename:double &	file:
x	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  int x;           \/\/ A non-const field.$/;"	m	struct:testing::gmock_matchers_test::AStruct	typeref:typename:int	file:
x	src/tests/googletest/googlemock/test/gmock_stress_test.cc	/^  int x() const { return x_; }$/;"	f	class:testing::__anonc83180760111::Base	typeref:typename:int	file:
x	src/tests/googletest/googletest/test/gtest-param-test_test.cc	/^  int x;$/;"	m	struct:CustomStruct	typeref:typename:int	file:
x	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^  char x;$/;"	m	struct:testing::gtest_printers_test::const_iterator	typeref:typename:char	file:
x	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^  char x;$/;"	m	struct:testing::gtest_printers_test::iterator	typeref:typename:char	file:
x	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  int x() const { return x_; }$/;"	f	class:Base	typeref:typename:int	file:
x	src/tests/googletest/googletest/test/production.h	/^  int x() const { return x_; }$/;"	f	class:PrivateCode	typeref:typename:int
x_	src/muduo/muduo/base/tests/Thread_test.cc	/^  double x_;$/;"	m	class:Foo	typeref:typename:double	file:
x_	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  static double x_;$/;"	m	class:testing::gmock_matchers_test::AClass	typeref:typename:double	file:
x_	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^double AClass::x_ = 0.0;$/;"	m	class:testing::gmock_matchers_test::AClass	typeref:typename:double
x_	src/tests/googletest/googlemock/test/gmock_stress_test.cc	/^  int x_;$/;"	m	class:testing::__anonc83180760111::Base	typeref:typename:int	file:
x_	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  int x_;$/;"	m	class:Base	typeref:typename:int	file:
x_	src/tests/googletest/googletest/test/production.h	/^  int x_;$/;"	m	class:PrivateCode	typeref:typename:int
xy_	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^  char xy_[8];$/;"	m	class:foo::UnprintableInFoo	typeref:typename:char[8]	file:
y	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  const double y;  \/\/ A const field.$/;"	m	struct:testing::gmock_matchers_test::AStruct	typeref:typename:const double	file:
y	src/tests/googletest/googlemock/test/gmock_stress_test.cc	/^  int y() const { return y_; }$/;"	f	class:testing::__anonc83180760111::Derived1	typeref:typename:int	file:
y_	src/tests/googletest/googlemock/test/gmock_stress_test.cc	/^  int y_;$/;"	m	class:testing::__anonc83180760111::Derived1	typeref:typename:int	file:
year	src/muduo/muduo/base/Date.h	/^    int year; \/\/ [1900..2500]$/;"	m	struct:muduo::Date::YearMonthDay	typeref:typename:int
year	src/muduo/muduo/base/Date.h	/^  int year() const$/;"	f	class:muduo::Date	typeref:typename:int
year	src/muduo/muduo/base/TimeZone.h	/^  int year = 0;     \/\/ [1900, 2500]$/;"	m	struct:muduo::DateTime	typeref:typename:int
yearMonthDay	src/muduo/muduo/base/Date.cc	/^Date::YearMonthDay Date::yearMonthDay() const$/;"	f	class:Date	typeref:typename:Date::YearMonthDay
z	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  Uncopyable z;    \/\/ An uncopyable field.$/;"	m	struct:testing::gmock_matchers_test::AStruct	typeref:typename:Uncopyable	file:
z	src/tests/googletest/googlemock/test/gmock_stress_test.cc	/^  int z() const { return z_; }$/;"	f	class:testing::__anonc83180760111::Derived2	typeref:typename:int	file:
z	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^  double z() const { return z_; }$/;"	f	class:foo::UnprintableInFoo	typeref:typename:double	file:
z_	src/tests/googletest/googlemock/test/gmock_stress_test.cc	/^  int z_;$/;"	m	class:testing::__anonc83180760111::Derived2	typeref:typename:int	file:
z_	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^  double z_;$/;"	m	class:foo::UnprintableInFoo	typeref:typename:double	file:
zero	src/muduo/muduo/base/LogStream.cc	/^const char* zero = digits + 9;$/;"	v	namespace:muduo::detail	typeref:typename:const char *
zero_bits_	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  const Bits zero_bits_;  \/\/ The bits that represent 0.0.$/;"	m	class:testing::gmock_matchers_test::FloatingPointTest	typeref:typename:const Bits	file:
zeromq_local_lat	src/muduo/examples/zeromq/CMakeLists.txt	/^add_executable(zeromq_local_lat local_lat.cc)$/;"	t
zeromq_remote_lat	src/muduo/examples/zeromq/CMakeLists.txt	/^add_executable(zeromq_remote_lat remote_lat.cc)$/;"	t
zerror_	src/muduo/muduo/net/ZlibStream.h	/^  int zerror_;$/;"	m	class:muduo::net::ZlibInputStream	typeref:typename:int
zerror_	src/muduo/muduo/net/ZlibStream.h	/^  int zerror_;$/;"	m	class:muduo::net::ZlibOutputStream	typeref:typename:int
zlibErrorCode	src/muduo/muduo/net/ZlibStream.h	/^  int zlibErrorCode() const { return zerror_; }$/;"	f	class:muduo::net::ZlibOutputStream	typeref:typename:int
zlibErrorMessage	src/muduo/muduo/net/ZlibStream.h	/^  const char* zlibErrorMessage() const { return zstream_.msg; }$/;"	f	class:muduo::net::ZlibOutputStream	typeref:typename:const char *
zlibstream_unittest	src/muduo/muduo/net/tests/CMakeLists.txt	/^  add_executable(zlibstream_unittest ZlibStream_unittest.cc)$/;"	t
zstream_	src/muduo/muduo/net/ZlibStream.h	/^  z_stream zstream_;$/;"	m	class:muduo::net::ZlibInputStream	typeref:typename:z_stream
zstream_	src/muduo/muduo/net/ZlibStream.h	/^  z_stream zstream_;$/;"	m	class:muduo::net::ZlibOutputStream	typeref:typename:z_stream
~A	src/tests/googletest/googletest/test/gtest-linked_ptr_test.cc	/^  virtual ~A() { *history << "A" << mynum << " dtor\\n"; }$/;"	f	class:__anonf616d1f80111::A	file:
~AbstractSocketWriter	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^    virtual ~AbstractSocketWriter() {}$/;"	f	class:testing::internal::StreamingListener::AbstractSocketWriter
~Acceptor	src/muduo/muduo/net/Acceptor.cc	/^Acceptor::~Acceptor()$/;"	f	class:Acceptor
~ActionInterface	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^  virtual ~ActionInterface() {}$/;"	f	class:testing::ActionInterface
~AppendFile	src/muduo/muduo/base/FileUtil.cc	/^FileUtil::AppendFile::~AppendFile()$/;"	f	class:FileUtil::AppendFile
~Arguments	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  ~Arguments() {$/;"	f	class:testing::internal::Arguments	file:
~AssertHelper	src/tests/googletest/googletest/src/gtest.cc	/^AssertHelper::~AssertHelper() {$/;"	f	class:testing::internal::AssertHelper
~AsyncLogging	src/muduo/muduo/base/AsyncLogging.h	/^  ~AsyncLogging()$/;"	f	class:muduo::AsyncLogging
~AutoHandle	src/tests/googletest/googletest/src/gtest-port.cc	/^AutoHandle::~AutoHandle() {$/;"	f	class:testing::internal::AutoHandle
~B	src/tests/googletest/googletest/test/gtest-linked_ptr_test.cc	/^  ~B() { *history << "B" << mynum << " dtor\\n"; }$/;"	f	class:__anonf616d1f80111::B	file:
~Balancer	src/muduo/examples/protobuf/rpcbalancer/balancer.cc	/^  ~Balancer()$/;"	f	class:Balancer	file:
~Balancer	src/muduo/examples/protobuf/rpcbalancer/balancer_raw.cc	/^  ~Balancer()$/;"	f	class:Balancer	file:
~Base	src/tests/googletest/googlemock/test/gmock-matchers_test.cc	/^  virtual ~Base() {}$/;"	f	class:testing::gmock_matchers_test::Base	file:
~Base	src/tests/googletest/googlemock/test/gmock_stress_test.cc	/^  virtual ~Base() {}$/;"	f	class:testing::__anonc83180760111::Base	file:
~Base	src/tests/googletest/googletest/test/gtest-port_test.cc	/^  virtual ~Base() {}$/;"	f	class:testing::internal::Base	file:
~BoolResetter	src/tests/googletest/googlemock/test/gmock-generated-actions_test.cc	/^  ~BoolResetter() { *value_ = false; }$/;"	f	class:testing::gmock_generated_actions_test::BoolResetter	file:
~CC	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^  virtual ~CC() {}$/;"	f	class:__anon6b6cf3b20111::CC	file:
~CIstream	src/libtfhe-superaic-core/include/tfhe_generic_streams.h	/^    virtual ~CIstream() {};$/;"	f	class:CIstream
~COstream	src/libtfhe-superaic-core/include/tfhe_generic_streams.h	/^    virtual ~COstream() {};$/;"	f	class:COstream
~CapturedStream	src/tests/googletest/googletest/src/gtest-port.cc	/^  ~CapturedStream() {$/;"	f	class:testing::internal::CapturedStream	file:
~CardinalityInterface	src/tests/googletest/googlemock/include/gmock/gmock-cardinalities.h	/^  virtual ~CardinalityInterface() {}$/;"	f	class:testing::CardinalityInterface
~CartesianProductGenerator10	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ~CartesianProductGenerator10() {}$/;"	f	class:testing::internal::CartesianProductGenerator10
~CartesianProductGenerator2	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ~CartesianProductGenerator2() {}$/;"	f	class:testing::internal::CartesianProductGenerator2
~CartesianProductGenerator3	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ~CartesianProductGenerator3() {}$/;"	f	class:testing::internal::CartesianProductGenerator3
~CartesianProductGenerator4	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ~CartesianProductGenerator4() {}$/;"	f	class:testing::internal::CartesianProductGenerator4
~CartesianProductGenerator5	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ~CartesianProductGenerator5() {}$/;"	f	class:testing::internal::CartesianProductGenerator5
~CartesianProductGenerator6	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ~CartesianProductGenerator6() {}$/;"	f	class:testing::internal::CartesianProductGenerator6
~CartesianProductGenerator7	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ~CartesianProductGenerator7() {}$/;"	f	class:testing::internal::CartesianProductGenerator7
~CartesianProductGenerator8	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ~CartesianProductGenerator8() {}$/;"	f	class:testing::internal::CartesianProductGenerator8
~CartesianProductGenerator9	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ~CartesianProductGenerator9() {}$/;"	f	class:testing::internal::CartesianProductGenerator9
~Channel	src/muduo/muduo/net/Channel.cc	/^Channel::~Channel()$/;"	f	class:Channel
~ClientKey	src/tests/classic_PBS_parameters.cpp	/^ClientKey::~ClientKey(){$/;"	f	class:ClientKey
~CommonTest	src/tests/googletest/googletest/test/gtest-typed-test_test.cc	/^  virtual ~CommonTest() { EXPECT_EQ(3, value_); }$/;"	f	class:CommonTest	file:
~Condition	src/muduo/muduo/base/Condition.h	/^  ~Condition()$/;"	f	class:muduo::Condition
~Connector	src/muduo/muduo/net/Connector.cc	/^Connector::~Connector()$/;"	f	class:Connector
~Curl	src/muduo/examples/curl/Curl.cc	/^Curl::~Curl()$/;"	f	class:Curl
~CxxExceptionInConstructorTest	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^  ~CxxExceptionInConstructorTest() {$/;"	f	class:CxxExceptionInConstructorTest	file:
~CxxExceptionInDestructorTest	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^  ~CxxExceptionInDestructorTest() {$/;"	f	class:CxxExceptionInDestructorTest	file:
~CxxExceptionInSetUpTest	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^  ~CxxExceptionInSetUpTest() {$/;"	f	class:CxxExceptionInSetUpTest	file:
~CxxExceptionInSetUpTestCaseTest	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^  ~CxxExceptionInSetUpTestCaseTest() {$/;"	f	class:CxxExceptionInSetUpTestCaseTest	file:
~CxxExceptionInTearDownTest	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^  ~CxxExceptionInTearDownTest() {$/;"	f	class:CxxExceptionInTearDownTest	file:
~CxxExceptionInTestBodyTest	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^  ~CxxExceptionInTestBodyTest() {$/;"	f	class:CxxExceptionInTestBodyTest	file:
~DeathTest	src/tests/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h	/^  virtual ~DeathTest() { }$/;"	f	class:testing::internal::DeathTest
~DeathTestFactory	src/tests/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h	/^  virtual ~DeathTestFactory() { }$/;"	f	class:testing::internal::DeathTestFactory
~DeathTestImpl	src/tests/googletest/googletest/src/gtest-death-test.cc	/^  ~DeathTestImpl() { GTEST_DEATH_TEST_CHECK_(read_fd_ == -1); }$/;"	f	class:testing::internal::DeathTestImpl	file:
~Deleter	src/muduo/muduo/base/ThreadLocalSingleton.h	/^    ~Deleter()$/;"	f	class:muduo::ThreadLocalSingleton::Deleter
~DeletionTester	src/tests/googletest/googlemock/test/gmock-more-actions_test.cc	/^  ~DeletionTester() {$/;"	f	class:testing::gmock_more_actions_test::DeletionTester	file:
~DestructorTracker	src/tests/googletest/googletest/test/gtest-port_test.cc	/^  ~DestructorTracker() {$/;"	f	class:testing::internal::DestructorTracker	file:
~EPollPoller	src/muduo/muduo/net/poller/EPollPoller.cc	/^EPollPoller::~EPollPoller()$/;"	f	class:EPollPoller
~Entry	src/muduo/examples/idleconnection/echo.h	/^    ~Entry()$/;"	f	struct:EchoServer::Entry
~Environment	src/tests/googletest/googletest/include/gtest/gtest.h	/^  virtual ~Environment() {}$/;"	f	class:testing::Environment
~EventLoop	src/muduo/muduo/net/EventLoop.cc	/^EventLoop::~EventLoop()$/;"	f	class:EventLoop
~EventLoopThread	src/muduo/muduo/net/EventLoopThread.cc	/^EventLoopThread::~EventLoopThread()$/;"	f	class:EventLoopThread
~EventLoopThreadPool	src/muduo/muduo/net/EventLoopThreadPool.cc	/^EventLoopThreadPool::~EventLoopThreadPool()$/;"	f	class:EventLoopThreadPool
~Executor_List	src/libtfhe-superaic-acc/accs/executor.cpp	/^Executor_List::~Executor_List() {$/;"	f	class:tfhe_superaic::Executor_List
~Expectation	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^Expectation::~Expectation() {}$/;"	f	class:testing::Expectation
~ExpectationBase	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^ExpectationBase::~ExpectationBase() {}$/;"	f	class:testing::internal::ExpectationBase
~FFT_Processor_nayuki	src/libtfhe-superaic-core/fft_processors/nayuki/fft_processor_nayuki.cpp	/^FFT_Processor_nayuki::~FFT_Processor_nayuki() {$/;"	f	class:FFT_Processor_nayuki
~FPGA_ACC_V0	src/libtfhe-superaic-acc/accs/FPGA-V0/acc_fpga_v0.cpp	/^FPGA_ACC_V0::~FPGA_ACC_V0() {$/;"	f	class:tfhe_superaic::FPGA_ACC_V0
~FailureReporterInterface	src/tests/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h	/^  virtual ~FailureReporterInterface() {}$/;"	f	class:testing::internal::FailureReporterInterface
~FakeLagrangeHalfCPolynomial	src/tests/fakes/lagrangehalfc.h	/^        ~FakeLagrangeHalfCPolynomial() {$/;"	f	struct:__anonb49ff32c0111::FakeLagrangeHalfCPolynomial
~FakeLwe	src/tests/fakes/lwe.h	/^    ~FakeLwe() {$/;"	f	struct:FakeLwe
~FakeLweBootstrappingKey	src/tests/fakes/lwe-bootstrapping.h	/^        ~FakeLweBootstrappingKey() {$/;"	f	struct:__anon027fcd4e0111::FakeLweBootstrappingKey
~FakeLweBootstrappingKeyFFT	src/tests/fakes/lwe-bootstrapping-fft.h	/^        ~FakeLweBootstrappingKeyFFT() {$/;"	f	struct:__anonaae24d1b0111::FakeLweBootstrappingKeyFFT
~FakeLweKeySwitchKey	src/tests/fakes/lwe-keyswitch.h	/^        ~FakeLweKeySwitchKey() {$/;"	f	struct:__anonbf4a421d0111::FakeLweKeySwitchKey
~FakeTGsw	src/tests/fakes/tgsw.h	/^        ~FakeTGsw() {$/;"	f	struct:__anond844f8d20111::FakeTGsw
~FakeTGswFFT	src/tests/fakes/tgsw-fft.h	/^        ~FakeTGswFFT() {$/;"	f	struct:__anonee999a9f0111::FakeTGswFFT
~FakeTLwe	src/tests/fakes/tlwe.h	/^        ~FakeTLwe() {$/;"	f	struct:__anond8a158490111::FakeTLwe
~FakeTLweFFT	src/tests/fakes/tlwe-fft.h	/^        ~FakeTLweFFT() {$/;"	f	struct:__anon7c76dd960111::FakeTLweFFT
~FatalFailureInFixtureConstructorTest	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^  ~FatalFailureInFixtureConstructorTest() {$/;"	f	class:FatalFailureInFixtureConstructorTest	file:
~FatalFailureInSetUpTest	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^  virtual ~FatalFailureInSetUpTest() {$/;"	f	class:FatalFailureInSetUpTest	file:
~File	src/muduo/muduo/base/TimeZone.cc	/^  ~File()$/;"	f	class:muduo::detail::File	file:
~FixedBuffer	src/muduo/muduo/base/LogStream.h	/^  ~FixedBuffer()$/;"	f	class:muduo::detail::FixedBuffer
~Foo	src/tests/googletest/googlemock/test/gmock-nice-strict_test.cc	/^  virtual ~Foo() {}$/;"	f	class:testing::gmock_nice_strict_test::Foo	file:
~Foo	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^  virtual ~Foo() {}$/;"	f	struct:testing::gtest_printers_test::Foo	file:
~FooInterface	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^  virtual ~FooInterface() {}$/;"	f	class:testing::gmock_generated_function_mockers_test::FooInterface	file:
~FooInterface	src/tests/googletest/googlemock/test/gmock_leak_test_.cc	/^  virtual ~FooInterface() {}$/;"	f	class:__anon357885ae0111::FooInterface	file:
~GTestFlagSaver	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  ~GTestFlagSaver() {$/;"	f	class:testing::internal::GTestFlagSaver
~GTestLog	src/tests/googletest/googletest/src/gtest-port.cc	/^GTestLog::~GTestLog() {$/;"	f	class:testing::internal::GTestLog
~GTestMutexLock	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  ~GTestMutexLock() { mutex_->Unlock(); }$/;"	f	class:testing::internal::GTestMutexLock
~GzipFile	src/muduo/muduo/base/GzipFile.h	/^  ~GzipFile()$/;"	f	class:muduo::GzipFile
~HasNewFatalFailureHelper	src/tests/googletest/googletest/src/gtest-test-part.cc	/^HasNewFatalFailureHelper::~HasNewFatalFailureHelper() {$/;"	f	class:testing::internal::HasNewFatalFailureHelper
~Hiredis	src/muduo/contrib/hiredis/Hiredis.cc	/^Hiredis::~Hiredis()$/;"	f	class:Hiredis
~HybridPrimeTable	src/tests/googletest/googletest/samples/sample8_unittest.cc	/^  virtual ~HybridPrimeTable() {$/;"	f	class:HybridPrimeTable	file:
~InSequence	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^InSequence::~InSequence() {$/;"	f	class:testing::InSequence
~Inspector	src/muduo/muduo/net/inspect/Inspector.cc	/^Inspector::~Inspector()$/;"	f	class:Inspector
~IntPolynomial	src/libtfhe-superaic-core/multiplication.cpp	/^IntPolynomial::~IntPolynomial() {$/;"	f	class:IntPolynomial
~Interface	src/tests/googletest/googlemock/test/gmock_link_test.h	/^  virtual ~Interface() {}$/;"	f	class:Interface
~InternalRunDeathTestFlag	src/tests/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h	/^  ~InternalRunDeathTestFlag() {$/;"	f	class:testing::internal::InternalRunDeathTestFlag
~Istream	src/libtfhe-superaic-core/include/tfhe_generic_streams.h	/^    virtual ~Istream() {};$/;"	f	class:Istream
~Item	src/muduo/examples/memcached/server/Item.h	/^  ~Item()$/;"	f	class:Item
~Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
~Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
~Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
~Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
~Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
~Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
~Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
~Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
~Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
~Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::RangeGenerator::Iterator
~Iterator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
~LagrangeHalfCPolynomial_IMPL	src/libtfhe-superaic-core/fft_processors/nayuki/lagrangehalfc_impl.cpp	/^LagrangeHalfCPolynomial_IMPL::~LagrangeHalfCPolynomial_IMPL() {$/;"	f	class:LagrangeHalfCPolynomial_IMPL
~LinkedPtrTest	src/tests/googletest/googletest/test/gtest-linked_ptr_test.cc	/^  virtual ~LinkedPtrTest() {$/;"	f	class:__anonf616d1f80111::LinkedPtrTest	file:
~Logger	src/muduo/muduo/base/Logging.cc	/^Logger::~Logger()$/;"	f	class:Logger
~LweBootstrappingKey	src/libtfhe-superaic-core/lwebootstrappingkey.cpp	/^LweBootstrappingKey::~LweBootstrappingKey() {}$/;"	f	class:LweBootstrappingKey
~LweBootstrappingKeyFFT	src/libtfhe-superaic-core/lwebootstrappingkey.cpp	/^LweBootstrappingKeyFFT::~LweBootstrappingKeyFFT() {}$/;"	f	class:LweBootstrappingKeyFFT
~LweBootstrappingKey_Wrap	src/libtfhe-superaic-core/include/tfhe_session.h	/^    ~LweBootstrappingKey_Wrap(){$/;"	f	class:tfhe_superaic::LweBootstrappingKey_Wrap
~LweKey	src/libtfhe-superaic-core/lwekey.cpp	/^LweKey::~LweKey() {$/;"	f	class:LweKey
~LweKeySwitchKey	src/libtfhe-superaic-core/lwekeyswitch.cpp	/^LweKeySwitchKey::~LweKeySwitchKey() {$/;"	f	class:LweKeySwitchKey
~LweParams	src/libtfhe-superaic-core/lweparams.cpp	/^LweParams::~LweParams() {}$/;"	f	class:LweParams
~LweSample	src/libtfhe-superaic-core/lwesamples.cpp	/^LweSample::~LweSample() {$/;"	f	class:LweSample
~MapTextModeProperties	src/libtfhe-superaic-core/tfhe_generic_streams.cpp	/^    virtual ~MapTextModeProperties() {}$/;"	f	class:MapTextModeProperties	file:
~MatchResultListener	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^inline MatchResultListener::~MatchResultListener() {$/;"	f	class:testing::MatchResultListener
~MatcherBase	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  virtual ~MatcherBase() {}$/;"	f	class:testing::internal::MatcherBase
~MatcherDescriberInterface	src/tests/googletest/googlemock/include/gmock/gmock-matchers.h	/^  virtual ~MatcherDescriberInterface() {}$/;"	f	class:testing::MatcherDescriberInterface
~MockBar	src/tests/googletest/googlemock/test/gmock-nice-strict_test.cc	/^  virtual ~MockBar() {}$/;"	f	class:testing::gmock_nice_strict_test::MockBar	file:
~MockDeathTest	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  virtual ~MockDeathTest() {$/;"	f	class:MockDeathTest	file:
~MockObjectRegistry	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^  ~MockObjectRegistry() {$/;"	f	class:testing::__anonc1446e5b0111::MockObjectRegistry	file:
~Mutex	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  ~Mutex() {$/;"	f	class:testing::internal::Mutex
~Mutex	src/tests/googletest/googletest/src/gtest-port.cc	/^Mutex::~Mutex() {$/;"	f	class:testing::internal::Mutex
~MutexLock	src/muduo/muduo/base/Mutex.h	/^  ~MutexLock()$/;"	f	class:muduo::MutexLock
~MyString	src/tests/googletest/googletest/samples/sample2.h	/^  ~MyString() { delete[] c_string_; }$/;"	f	class:MyString
~NaggyMock	src/tests/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h	/^  virtual ~NaggyMock() {$/;"	f	class:testing::NaggyMock
~NativeArray	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  ~NativeArray() {$/;"	f	class:testing::internal::NativeArray
~NiceMock	src/tests/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h	/^  virtual ~NiceMock() {$/;"	f	class:testing::NiceMock
~NonFatalFailureInFixtureConstructorTest	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^  ~NonFatalFailureInFixtureConstructorTest() {$/;"	f	class:NonFatalFailureInFixtureConstructorTest	file:
~NonFatalFailureInSetUpTest	src/tests/googletest/googletest/test/gtest_output_test_.cc	/^  virtual ~NonFatalFailureInSetUpTest() {$/;"	f	class:NonFatalFailureInSetUpTest	file:
~Notification	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  ~Notification() {$/;"	f	class:testing::internal::Notification
~OsStackTraceGetterInterface	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^  virtual ~OsStackTraceGetterInterface() {}$/;"	f	class:testing::internal::OsStackTraceGetterInterface
~Ostream	src/libtfhe-superaic-core/include/tfhe_generic_streams.h	/^    virtual ~Ostream() {};$/;"	f	class:Ostream
~ParamGeneratorInterface	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  virtual ~ParamGeneratorInterface() {}$/;"	f	class:testing::internal::ParamGeneratorInterface
~ParamIteratorInterface	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  virtual ~ParamIteratorInterface() {}$/;"	f	class:testing::internal::ParamIteratorInterface
~ParameterizedTestCaseInfoBase	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  virtual ~ParameterizedTestCaseInfoBase() {}$/;"	f	class:testing::internal::ParameterizedTestCaseInfoBase
~ParameterizedTestCaseRegistry	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  ~ParameterizedTestCaseRegistry() {$/;"	f	class:testing::internal::ParameterizedTestCaseRegistry
~PeriodicTimer	src/muduo/muduo/net/tests/Channel_test.cc	/^  ~PeriodicTimer()$/;"	f	class:PeriodicTimer	file:
~Plot	src/muduo/examples/procmon/plot.cc	/^Plot::~Plot()$/;"	f	class:Plot
~PreCalculatedPrimeTable	src/tests/googletest/googletest/samples/prime_tables.h	/^  virtual ~PreCalculatedPrimeTable() { delete[] is_prime_; }$/;"	f	class:PreCalculatedPrimeTable
~PrimeTable	src/tests/googletest/googletest/samples/prime_tables.h	/^  virtual ~PrimeTable() {}$/;"	f	class:PrimeTable
~PrimeTableTest	src/tests/googletest/googletest/samples/sample6_unittest.cc	/^  virtual ~PrimeTableTest() { delete table_; }$/;"	f	class:PrimeTableTest	file:
~PrimeTableTest	src/tests/googletest/googletest/samples/sample7_unittest.cc	/^  virtual ~PrimeTableTest() { delete table_; }$/;"	f	class:PrimeTableTest	file:
~Printer	src/muduo/examples/asio/tutorial/timer4/timer.cc	/^  ~Printer()$/;"	f	class:Printer	file:
~Printer	src/muduo/examples/asio/tutorial/timer5/timer.cc	/^  ~Printer()$/;"	f	class:Printer	file:
~Printer	src/muduo/examples/asio/tutorial/timer6/timer.cc	/^  ~Printer()$/;"	f	class:Printer	file:
~Queue	src/tests/googletest/googletest/samples/sample3-inl.h	/^  ~Queue() { Clear(); }$/;"	f	class:Queue
~RE	src/tests/googletest/googletest/src/gtest-port.cc	/^RE::~RE() {$/;"	f	class:testing::internal::RE
~RangeGenerator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  virtual ~RangeGenerator() {}$/;"	f	class:testing::internal::RangeGenerator
~ReadSmallFile	src/muduo/muduo/base/FileUtil.cc	/^FileUtil::ReadSmallFile::~ReadSmallFile()$/;"	f	class:FileUtil::ReadSmallFile
~ReplaceDeathTestFactory	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  ~ReplaceDeathTestFactory() {$/;"	f	class:testing::internal::ReplaceDeathTestFactory	file:
~Request	src/muduo/examples/curl/Curl.cc	/^Request::~Request()$/;"	f	class:Request
~Resolver	src/muduo/examples/cdns/Resolver.cc	/^Resolver::~Resolver()$/;"	f	class:Resolver
~ReturnSentinel	src/tests/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h	/^    ~ReturnSentinel() { test_->Abort(TEST_ENCOUNTERED_RETURN_STATEMENT); }$/;"	f	class:testing::internal::DeathTest::ReturnSentinel
~RpcChannel	src/muduo/muduo/net/protorpc/RpcChannel.cc	/^RpcChannel::~RpcChannel()$/;"	f	class:RpcChannel
~Runnable	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^    virtual ~Runnable() {}$/;"	f	class:testing::internal::ThreadWithParamBase::Runnable
~RunnableImpl	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^    virtual ~RunnableImpl() {}$/;"	f	class:testing::internal::ThreadWithParam::RunnableImpl
~ScopedFakeTestPartResultReporter	src/tests/googletest/googletest/src/gtest.cc	/^ScopedFakeTestPartResultReporter::~ScopedFakeTestPartResultReporter() {$/;"	f	class:testing::ScopedFakeTestPartResultReporter
~ScopedPrematureExitFile	src/tests/googletest/googletest/src/gtest.cc	/^  ~ScopedPrematureExitFile() {$/;"	f	class:testing::internal::ScopedPrematureExitFile	file:
~ScopedTrace	src/tests/googletest/googletest/src/gtest.cc	/^ScopedTrace::~ScopedTrace()$/;"	f	class:testing::internal::ScopedTrace
~SehExceptionInDestructorTest	src/tests/googletest/googletest/test/gtest_catch_exceptions_test_.cc	/^  ~SehExceptionInDestructorTest() { RaiseException(42, 0, 0, NULL); }$/;"	f	class:SehExceptionInDestructorTest	file:
~Session	src/muduo/examples/memcached/server/Session.h	/^  ~Session()$/;"	f	class:Session
~SingleFailureChecker	src/tests/googletest/googletest/src/gtest.cc	/^SingleFailureChecker::~SingleFailureChecker() {$/;"	f	class:testing::internal::SingleFailureChecker
~Socket	src/muduo/muduo/net/Socket.cc	/^Socket::~Socket()$/;"	f	class:Socket
~SocketWriter	src/tests/googletest/googletest/src/gtest-internal-inl.h	/^    virtual ~SocketWriter() {$/;"	f	class:testing::internal::StreamingListener::SocketWriter
~StackInterface	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^  virtual ~StackInterface() {}$/;"	f	class:testing::gmock_generated_function_mockers_test::StackInterface	file:
~StackInterfaceWithCallType	src/tests/googletest/googlemock/test/gmock-generated-function-mockers_test.cc	/^  virtual ~StackInterfaceWithCallType() {}$/;"	f	class:testing::gmock_generated_function_mockers_test::StackInterfaceWithCallType	file:
~StdIstream	src/libtfhe-superaic-core/include/tfhe_generic_streams.h	/^    virtual ~StdIstream() {};$/;"	f	class:StdIstream
~StdOstream	src/libtfhe-superaic-core/include/tfhe_generic_streams.h	/^    virtual ~StdOstream() {};$/;"	f	class:StdOstream
~StreamableInGlobal	src/tests/googletest/googletest/test/gtest-printers_test.cc	/^  virtual ~StreamableInGlobal() {}$/;"	f	class:StreamableInGlobal	file:
~StrictMock	src/tests/googletest/googlemock/include/gmock/gmock-generated-nice-strict.h	/^  virtual ~StrictMock() {$/;"	f	class:testing::StrictMock
~TFHE_ACC	src/libtfhe-superaic-acc/include/tfhe_acc.h	/^    virtual ~TFHE_ACC(){};$/;"	f	class:tfhe_superaic::TFHE_ACC
~TGswKey	src/libtfhe-superaic-core/tgsw.cpp	/^TGswKey::~TGswKey() {$/;"	f	class:TGswKey
~TGswParams	src/libtfhe-superaic-core/tgsw.cpp	/^TGswParams::~TGswParams() {$/;"	f	class:TGswParams
~TGswSample	src/libtfhe-superaic-core/include/tgsw.h	/^    inline ~TGswSample() {}$/;"	f	struct:TGswSample
~TGswSampleFFT	src/libtfhe-superaic-core/tgsw.cpp	/^TGswSampleFFT::~TGswSampleFFT() {$/;"	f	class:TGswSampleFFT
~TLweKey	src/libtfhe-superaic-core/tlwe.cpp	/^TLweKey::~TLweKey() {$/;"	f	class:TLweKey
~TLweParams	src/libtfhe-superaic-core/tlwe.cpp	/^TLweParams::~TLweParams() {}$/;"	f	class:TLweParams
~TLweSample	src/libtfhe-superaic-core/tlwe.cpp	/^TLweSample::~TLweSample() {$/;"	f	class:TLweSample
~TLweSampleFFT	src/libtfhe-superaic-core/tlwe.cpp	/^TLweSampleFFT::~TLweSampleFFT() {$/;"	f	class:TLweSampleFFT
~TcpClient	src/muduo/muduo/net/TcpClient.cc	/^TcpClient::~TcpClient()$/;"	f	class:TcpClient
~TcpConnection	src/muduo/muduo/net/TcpConnection.cc	/^TcpConnection::~TcpConnection()$/;"	f	class:TcpConnection
~TcpServer	src/muduo/muduo/net/TcpServer.cc	/^TcpServer::~TcpServer()$/;"	f	class:TcpServer
~Test	src/muduo/muduo/base/tests/SingletonThreadLocal_test.cc	/^  ~Test()$/;"	f	class:Test	file:
~Test	src/muduo/muduo/base/tests/Singleton_test.cc	/^  ~Test()$/;"	f	class:Test	file:
~Test	src/muduo/muduo/base/tests/ThreadLocalSingleton_test.cc	/^  ~Test()$/;"	f	class:Test	file:
~Test	src/muduo/muduo/base/tests/ThreadLocal_test.cc	/^  ~Test()$/;"	f	class:Test	file:
~Test	src/tests/googletest/googletest/src/gtest.cc	/^Test::~Test() {$/;"	f	class:testing::Test
~TestCase	src/tests/googletest/googletest/src/gtest.cc	/^TestCase::~TestCase() {$/;"	f	class:testing::TestCase
~TestEventListener	src/tests/googletest/googletest/include/gtest/gtest.h	/^  virtual ~TestEventListener() {}$/;"	f	class:testing::TestEventListener
~TestEventListeners	src/tests/googletest/googletest/src/gtest.cc	/^TestEventListeners::~TestEventListeners() { delete repeater_; }$/;"	f	class:testing::TestEventListeners
~TestEventRepeater	src/tests/googletest/googletest/src/gtest.cc	/^TestEventRepeater::~TestEventRepeater() {$/;"	f	class:testing::internal::TestEventRepeater
~TestFactoryBase	src/tests/googletest/googletest/include/gtest/internal/gtest-internal.h	/^  virtual ~TestFactoryBase() {}$/;"	f	class:testing::internal::TestFactoryBase
~TestForDeathTest	src/tests/googletest/googletest/test/gtest-death-test_test.cc	/^  virtual ~TestForDeathTest() {$/;"	f	class:TestForDeathTest	file:
~TestInfo	src/tests/googletest/googletest/src/gtest.cc	/^TestInfo::~TestInfo() { delete factory_; }$/;"	f	class:testing::TestInfo
~TestLifeCycleTest	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  ~TestLifeCycleTest() { count_--; }$/;"	f	class:__anonf780395f0311::TestLifeCycleTest	file:
~TestListener	src/tests/googletest/googletest/test/gtest_unittest.cc	/^  virtual ~TestListener() {$/;"	f	class:TestListener	file:
~TestMetaFactoryBase	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  virtual ~TestMetaFactoryBase() {}$/;"	f	class:testing::internal::TestMetaFactoryBase
~TestNoDestroy	src/muduo/muduo/base/tests/Singleton_test.cc	/^  ~TestNoDestroy()$/;"	f	class:TestNoDestroy	file:
~TestPartResultReporterInterface	src/tests/googletest/googletest/include/gtest/gtest-test-part.h	/^  virtual ~TestPartResultReporterInterface() {}$/;"	f	class:testing::TestPartResultReporterInterface
~TestResult	src/tests/googletest/googletest/src/gtest.cc	/^TestResult::~TestResult() {$/;"	f	class:testing::TestResult
~TextModeProperties	src/libtfhe-superaic-core/include/tfhe_generic_streams.h	/^    virtual ~TextModeProperties() {}$/;"	f	class:TextModeProperties
~TfheGarbageCollector	src/libtfhe-superaic-core/tfhe_garbage_collector.cpp	/^TfheGarbageCollector::~TfheGarbageCollector() {$/;"	f	class:TfheGarbageCollector
~Thread	src/muduo/muduo/base/Thread.cc	/^Thread::~Thread()$/;"	f	class:muduo::Thread
~ThreadLocal	src/muduo/muduo/base/ThreadLocal.h	/^  ~ThreadLocal()$/;"	f	class:muduo::ThreadLocal
~ThreadLocal	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  ~ThreadLocal() { ThreadLocalRegistry::OnThreadLocalDestroyed(this); }$/;"	f	class:testing::internal::ThreadLocal
~ThreadLocal	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  ~ThreadLocal() {$/;"	f	class:testing::internal::ThreadLocal
~ThreadLocalBase	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  virtual ~ThreadLocalBase() {}$/;"	f	class:testing::internal::ThreadLocalBase
~ThreadLocalValueHolderBase	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  virtual ~ThreadLocalValueHolderBase() {}$/;"	f	class:testing::internal::ThreadLocalValueHolderBase
~ThreadPool	src/muduo/muduo/base/ThreadPool.cc	/^ThreadPool::~ThreadPool()$/;"	f	class:ThreadPool
~ThreadWithParam	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  virtual ~ThreadWithParam() {}$/;"	f	class:testing::internal::ThreadWithParam
~ThreadWithParam	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  ~ThreadWithParam() { Join(); }$/;"	f	class:testing::internal::ThreadWithParam
~ThreadWithParamBase	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  virtual ~ThreadWithParamBase() {}$/;"	f	class:testing::internal::ThreadWithParamBase
~ThreadWithParamBase	src/tests/googletest/googletest/src/gtest-port.cc	/^ThreadWithParamBase::~ThreadWithParamBase() {$/;"	f	class:testing::internal::ThreadWithParamBase
~TimerQueue	src/muduo/muduo/net/TimerQueue.cc	/^TimerQueue::~TimerQueue()$/;"	f	class:TimerQueue
~TorusPolynomial	src/libtfhe-superaic-core/multiplication.cpp	/^TorusPolynomial::~TorusPolynomial() {$/;"	f	class:TorusPolynomial
~TtcpServerConnection	src/muduo/examples/ace/ttcp/ttcp_asio_async.cc	/^  ~TtcpServerConnection()$/;"	f	class:TtcpServerConnection	file:
~Tunnel	src/muduo/examples/socks4a/tunnel.h	/^  ~Tunnel()$/;"	f	class:Tunnel
~TypedExpectation	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  virtual ~TypedExpectation() {$/;"	f	class:testing::internal::TypedExpectation
~UnassignGuard	src/muduo/muduo/base/Mutex.h	/^    ~UnassignGuard()$/;"	f	class:muduo::MutexLock::UnassignGuard
~UnitTest	src/tests/googletest/googletest/src/gtest.cc	/^UnitTest::~UnitTest() {$/;"	f	class:testing::UnitTest
~UnitTestImpl	src/tests/googletest/googletest/src/gtest.cc	/^UnitTestImpl::~UnitTestImpl() {$/;"	f	class:testing::internal::UnitTestImpl
~UntypedActionResultHolderBase	src/tests/googletest/googlemock/include/gmock/gmock-spec-builders.h	/^  virtual ~UntypedActionResultHolderBase() {}$/;"	f	class:testing::internal::UntypedActionResultHolderBase
~UntypedFunctionMockerBase	src/tests/googletest/googlemock/src/gmock-spec-builders.cc	/^UntypedFunctionMockerBase::~UntypedFunctionMockerBase() {}$/;"	f	class:testing::internal::UntypedFunctionMockerBase
~ValueHolderFactory	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^    virtual ~ValueHolderFactory() {}$/;"	f	class:testing::internal::ThreadLocal::ValueHolderFactory
~ValueProducer	src/tests/googletest/googlemock/include/gmock/gmock-actions.h	/^    virtual ~ValueProducer() {}$/;"	f	class:testing::DefaultValue::ValueProducer
~ValuesInIteratorRangeGenerator	src/tests/googletest/googletest/include/gtest/internal/gtest-param-util.h	/^  virtual ~ValuesInIteratorRangeGenerator() {}$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator
~VerboseFlagPreservingFixture	src/tests/googletest/googlemock/test/gmock-spec-builders_test.cc	/^  ~VerboseFlagPreservingFixture() { GMOCK_FLAG(verbose) = saved_verbose_flag_; }$/;"	f	class:__anon6b6cf3b20111::VerboseFlagPreservingFixture	file:
~Widget	src/tests/googletest/googletest/xcode/Samples/FrameworkSample/widget.cc	/^Widget::~Widget() {}$/;"	f	class:Widget
~WithParamInterface	src/tests/googletest/googletest/include/gtest/gtest.h	/^  virtual ~WithParamInterface() {}$/;"	f	class:testing::WithParamInterface
~ZlibInputStream	src/muduo/muduo/net/ZlibStream.h	/^  ~ZlibInputStream()$/;"	f	class:muduo::net::ZlibInputStream
~ZlibOutputStream	src/muduo/muduo/net/ZlibStream.h	/^  ~ZlibOutputStream()$/;"	f	class:muduo::net::ZlibOutputStream
~linked_ptr	src/tests/googletest/googletest/include/gtest/internal/gtest-linked_ptr.h	/^  ~linked_ptr() { depart(); }$/;"	f	class:testing::internal::linked_ptr
~scoped_ptr	src/tests/googletest/googletest/include/gtest/internal/gtest-port.h	/^  ~scoped_ptr() { reset(); }$/;"	f	class:testing::internal::scoped_ptr
代码常用符号	docs/code_note.md	/^# 代码常用符号  $/;"	c
再回到`src/high_level_api/mod.rs`	docs/rustops/generic_integer_impl_operation.md	/^#### 再回到`src\/high_level_api\/mod.rs`$/;"	t	subsection:`generic_integer_impl_operation`""`let a = FheInt16::encrypt(23i16, &client_key);`""`FheInt16`
单项式 乘 多项式 以后 rounding	docs/code_note.md	/^## 单项式 乘 多项式 以后 rounding$/;"	s	chapter:多项式
多项式	docs/code_note.md	/^# 多项式 $/;"	c
小结	docs/rustops/generic_integer_impl_operation.md	/^### 小结$/;"	S	section:`generic_integer_impl_operation`""`/// let (client_key, server_key) = generate_keys(ConfigBuilder::default());`
小结	docs/rustops/generic_integer_impl_operation.md	/^### 小结$/;"	S	section:`generic_integer_impl_operation`""`set_server_key(server_key);`
小结，没有同态计算过的两个`ciphertext`相加并不需要`LUT`	docs/rustops/summary_of_ops_add.md	/^## 小结，没有同态计算过的两个`ciphertext`相加并不需要`LUT`$/;"	s	chapter:add
总结	docs/rustops/encrypt.md	/^### 总结$/;"	S	section:`encrypt`""`FheInt16::encrypt(23i16, &client_key);`
总结	docs/rustops/encrypt.md	/^##### 总结$/;"	T	subsubsection:`encrypt`""`FheInt16::encrypt(23i16, &client_key);`""`encrypt_signed_radix(value, Id::num_blocks(key.message_modulus()));`""`Id::num_blocks(key.message_modulus())`
总结	docs/rustops/encrypt.md	/^##### 总结$/;"	T	subsubsection:`encrypt`""`FheInt16::encrypt(23i16, &client_key);`""`try_encrypt(value: T, key: &Key) -> Result<Self, Self::Error>;`""`Self::new(ciphertext, key.tag.clone())`
总结	docs/rustops/encrypt.md	/^###### 总结$/;"	u	l4subsection:`encrypt`""`FheInt16::encrypt(23i16, &client_key);`""`encrypt_signed_radix(value, Id::num_blocks(key.message_modulus()));`""`Id::num_blocks(key.message_modulus())`""`key.message_modulus()`
总结	docs/rustops/generic_integer_impl_operation.md	/^#### 总结$/;"	t	subsection:`generic_integer_impl_operation`""`let a = FheInt16::encrypt(23i16, &client_key);`""`FheInt16`
总结	docs/rustops/lookup_table.md	/^## 总结$/;"	s	chapter:`lookup_table`
总结调用链	docs/rustops/lookup_table.md	/^### 总结调用链$/;"	S	section:`lookup_table`""`message_extract`
指定使用哪种方法进行多项式乘法	README.md	/^## 指定使用哪种方法进行多项式乘法$/;"	s	chapter:编译
测试	README.md	/^# 测试$/;"	c
编译	README.md	/^# 编译$/;"	c
访问设备文件没有权限	README.md	/^## 访问设备文件没有权限$/;"	s	chapter:测试
遗留	docs/rustops/key_and_config.md	/^## 遗留$/;"	s	chapter:generate key with default key
遗留	docs/rustops/lookup_table.md	/^## 遗留$/;"	s	chapter:`lookup_table`
问题遗留	docs/rustops/summary_of_ops_add.md	/^## 问题遗留$/;"	s	chapter:add
